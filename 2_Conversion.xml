<?xml version="1.0" encoding="utf-8"?>

<conversion>
  <properties src="C:\eSeries\eCourt\ConversionFiles\Scripts\Includes.xml"/>	
  <databases>
		<database name="${sql.migrated.db}" description="MiCourt - Source Data" type="SqlServer" version="2017">${migrated.string}</database>
		<database name="${sql.staging.db}" description="Staging - Source Data" type="SqlServer" version="2017">${staging.string}</database>
		<database name="${sql.ecourt.db}" description="eCourt - Destination" type="SqlServer" version="2017">${ecourt.string}</database>
		<database name="${sql.source.db}" description="Source" type="SqlServer" version="2017">${source.string}</database>
		<database name="${sql.master.db}" description="Master" type="SqlServer" version="2017">${master.string}</database>
	</databases>
  <pre>
		<actions>
			<action handler="Ecourt.SetVersionTables" progresslabel="get version list">
				<params>
					<param name="database">${sql.ecourt.db}</param>
					<param name="exclude" desc="remove these from the version process because I handled them manually">tCe_OtherNumber</param>
					<param name="include" desc="add these to the version process"></param>
				</params>
			</action> 
			
			
		</actions> 
  
  </pre>
  <stages>
		
		
		<stage num="0" mode="Serial" desc="Stop Tomcat and restart SQL" enabled="true">
			<actions>
			
				<action handler="DCU.TaskHost" progresslabel="delay" enabled="true">
					<source>
						<task handler="DCU.Wait">${delay.timer}</task>
					</source>
				</action>

				
				<action handler="DCU.TaskHost" desc="Restart SQL" progresslabel="Restart SQL" enabled="true">
					<source>
						<task handler="DCU.RestartService">
							<args service="${sql.service.name}" timeout="600"></args>
						</task>
					</source>
				</action>
				
				<action handler="DCU.TaskHost" progresslabel="30-second delay" enabled="true">
					<source>
						<task handler="DCU.Wait">30</task>
					</source>
				</action>
				
				<action handler="DCU.TaskHost" desc="Stopping Tomcat" progresslabel="Stopping Tomcat">
					<source>
						<task handler="DCU.StopService">
							<args service="${tomcat.service.name}"></args>
						</task>
					</source>
				</action>
				
				
				
				
				
			</actions>
		</stage>
		
		<stage num="3" mode="Serial" desc="Delete Logs/Past Final Back-ups">
			<actions>
				<action handler="Workspace.DeleteFiles" desc="Clear past Logs">
					<params>
						<param name="directory">${log.folder}</param>
						<param name="pattern">*.xml</param>
					</params>
				</action>
					
				<action handler="Workspace.DeleteFiles" desc="Clear past Final Backups" enabled="false">
					<params>
						<param name="directory">G:\SQL\Backups\3-Finish</param>
						<param name="pattern">*.bak</param>
					</params>
				</action>
				
			</actions>
		</stage>
		
		<stage num="4" mode="Serial" desc="Fix Orphaned Users" enabled="false">
		
		
			<actions>

				<action handler="SqlServer.Raw" desc="Fix Users" progresslabel="Fixing orphaned Users">
					<source database="${sql.master.db}" schema="dbo">
						<task handler="SqlServer.Script" desc="Fix Orphans">
						USE [${sql.ecourt.db}] EXEC sp_change_users_login 'Auto_Fix', 'ecourt';
						USE [${sql.staging.db}] EXEC sp_change_users_login 'Auto_Fix', 'ecourt';
						USE [${sql.migrated.db}] EXEC sp_change_users_login 'Auto_Fix', 'ecourt';
			
						</task>
					</source>
				</action>
				
				
				<action handler="SqlServer.TestConnection" desc="Verify connectivity - Master"  progresslabel="Verify connectivity - Master">
					<source database="${sql.master.db}" />
				</action>
				
				<action handler="SqlServer.TestConnection" desc="Verify connectivity - eCourt" progresslabel="Verify connectivity - eCourt">
					<source database="${sql.ecourt.db}" />
				</action>
				
				<action handler="SqlServer.TestConnection" desc="Verify connectivity - Source" progresslabel="Verify connectivity - Source">
					<source database="${sql.source.db}" />
				</action>
				
				<action handler="SqlServer.TestConnection" desc="Verify connectivity - Staging" progresslabel="Verify connectivity - Staging">
					<source database="${sql.staging.db}" />
				</action>
				
				
			</actions>
		</stage>
		
		<stage num="5" mode="Serial" desc="Verfiy Connectivity">
			<actions>
				<action handler="SqlServer.TestConnection" desc="Verify connectivity - Source" progresslabel="Verify connectivity - Migrated">
					<source database="${sql.migrated.db}" />
				</action>
				
				<action handler="SqlServer.TestConnection" desc="Verify connectivity - Source" progresslabel="Verify connectivity - eCourt">
					<source database="${sql.ecourt.db}" />
				</action>
				
				<action handler="SqlServer.TestConnection" desc="Verify connectivity - Source" progresslabel="Verify connectivity - Staging">
					<source database="${sql.staging.db}" />
				</action>
				
				<action handler="SqlServer.TestConnection" desc="Verify connectivity - Source" progresslabel="Verify connectivity - Source">
					<source database="${sql.source.db}" />
				</action>
				
				
				
			</actions>
		</stage>
		
		<stage num="7" mode="Serial" desc="Clean eCourt">
			<actions>
				<action handler = "Ecourt.ClearCaseData" desc="clear case data" verbose="true" progresslabel="Clear Cases" enabled="true">
					<source database="${sql.ecourt.db}"/>
					<params>
						<param name="excludeEmptyTables" desc="Optional: indicates to ignore empty tables in the process (default is false)">false</param>
						<param name="saveFilePath" desc="Optional: if a full filename is specified, it will write out the sql script"></param>
					<param name="scriptOnly" desc="Optional: indicates to not execute the generated sql (default is false)">false</param>
					</params>
				</action>
			</actions>
		</stage>
		
	
		<stage num="9" mode="Parallel" desc="Shrink and Set Recovery Mode to Simple">
			<actions>
				
				<action handler="SqlServer.Raw" desc="Setting Recovery Mode to Simple and Shrinking - eCourt" progresslabel="Setting Recovery Mode to Simple and Shrinking - eCourt">
					<source database="${sql.ecourt.db}" schema="ecourt">
						<task handler="SqlServer.DB.SetRecoveryMode">simple</task>
						<task handler="SqlServer.DB.Shrink">${sql.ecourt.db}</task> 
					</source>
				</action>
				
				<action handler="SqlServer.Raw" desc="Setting Recovery Mode - Staging" progresslabel="Setting Recovery Mode to Simple - Staging">
					<source database="${sql.staging.db}" schema="dbo">
						<task handler="SqlServer.DB.SetRecoveryMode">simple</task>
					</source>
				</action>
								
			</actions>
		</stage>
		
		<stage num="10" desc="Stop and Save Workflows/Timestands" mode="Serial">
			<actions>
		
			
				<action handler="Ecourt.DisableWorkFlowAndTimeStandards" progresslabel="disable workflow and timestandards">
					<source database="${sql.ecourt.db}" />
					<params>
						<param name="saveLocation">${log.folder}</param>
					</params>
				</action>
			
			</actions>

			
		</stage>

		<stage num="14" mode="Serial" desc="Build List for converted cases">
			<actions>
				
				<action handler="SqlServer.Raw" desc="Creating Table" progresslabel="Creating Table for different loads">
					<source database="${sql.staging.db}" schema="dbo">
						<task handler="SqlServer.Script" desc="Add Case List Table">
						IF OBJECT_ID('convertCases_conv', 'U') IS NOT NULL 
						DROP TABLE [dbo].[convertCases_conv];
						</task>
						<task handler="SqlServer.Script" desc="Add Case List Table">
							<![CDATA[
							CREATE TABLE [dbo].[convertCases_conv](
							[CaseNumber] VARCHAR(255) NOT NULL PRIMARY KEY,
							caseGroup VARCHAR(255),
							case_id NUMERIC(19,0)

							);
							]]>
						</task>			
						<task handler="SqlServer.Script" desc="Add Partial Build Cases" enabled="${partial.build}">
							<![CDATA[
								INSERT INTO convertCases_conv (caseNumber) SELECT 'XXFELYYYYY00';
								INSERT INTO convertCases_conv (caseNumbere) SELECT 'XXFELYYYYY02';
								INSERT INTO convertCases_conv (caseNumber) SELECT 'XXFELYYYYY03';
							]]>
						</task>
						<task handler="SqlServer.Script" desc="Add Full Build Cases" enabled="${full.build}">
						<![CDATA[
							INSERT INTO dbo.convertCases_conv
							SELECT LTRIM(RTRIM(cas.caseNumber)),
							caseGroup = 
								CASE
									WHEN cas.caseType IN  ('APPDU','APPOC', 'APPMU', 'APPMO', 'CRIMI', 'FELON', 'GM', 'SEARC', 'WRICR', 'JUVTR', 'APPDU', 'JVSAS', 'JVSTH', 'JVCIV', 'JVDMV', 'JVHRS', 'JUVOT', 'JVDV2', 'JUVPE', 'JUVPR','JUVDR', 'JUVPO', 'JUVDH', 'JUVDE') THEN 'CR'
								--	WHEN cas.caseType IN ('CS','CV','DM','FO','LR','MARSP','PO','PR','RS','SD','SP','WL') THEN 'CV'
									ELSE 'NA'
								END,
							cas.id as case_id 
							FROM ${sql.migrated.db}.ecourt.tCase cas;
							
						
						]]>	
						</task>
					</source>
				</action>
			</actions>
		</stage>
			
		<stage num="20" mode="Serial" desc="Transform Case" enabled="true">
			<actions>
			
				<action handler="SqlServer.Raw" desc="Creating Case_conv table" progresslabel="Creating Case Table" enabled="true">
					<source database="${sql.staging.db}" schema="dbo">
						<task handler="SqlServer.Script" desc="Create Case_conv table">
						IF OBJECT_ID('case_conv', 'U') IS NOT NULL 
						DROP TABLE [dbo].[case_conv];
						
						</task>
						
						<task handler="SqlServer.Script" desc="Create Case_Conv table">
						<![CDATA[
						
						CREATE TABLE [dbo].[case_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 
							[id] [numeric](19, 0),
							[accessLevel] [int] NULL,
							[createUserRealName] [varchar](255) NULL,
							[createUsername] [varchar](255) NULL,
							[dateCreated] [datetime] NULL,
							[lastUpdateUserRealName] [varchar](255) NULL,
							[lastUpdateUsername] [varchar](255) NULL,
							[lastUpdated] [datetime] NULL,
							[memo] [varchar](512) NULL,
							[optlock] [int] NOT NULL,
							[roaAccessLevel] [int] NULL,
							[sourceCaseNumber] [varchar](255) NULL,
							[updateReason] [varchar](255) NULL,
							[asbestos] [tinyint] NULL,
							[assignedTrack] [varchar](255) NULL,
							[caseJurisdiction] [varchar](255) NULL,
							[caseName] [varchar](255) NULL,
							[caseNumber] [varchar](255),
							[caseNumberSequence] [numeric](19, 0) NULL,
							[caseReason] [varchar](255) NULL,
							[caseShortName] [varchar](255) NULL,
							[caseSubType] [varchar](255) NULL,
							[caseType] [varchar](255) NULL,
							[category] [varchar](255) NULL,
							[ceqa] [tinyint] NULL,
							[classAction] [tinyint] NULL,
							[complexFeeAssessedAmountCents] [numeric](19, 0) NULL,
							[complexLitigation] [tinyint] NULL,
							[conditionallySealed] [tinyint] NULL,
							[consolidationType] [varchar](255) NULL,
							[county] [varchar](255) NULL,
							[demandAmount] [float] NULL,
							[demandAmountType] [varchar](255) NULL,
							[dispositionDate] [datetime] NULL,
							[dispositionManner] [varchar](255) NULL,
							[dispositionType] [varchar](255) NULL,
							[dmvDocketId] [varchar](255) NULL,
							[documentAccessLevel] [int] NULL,
							[eFileCitationDate] [datetime] NULL,
							[eFileCitationNumber] [varchar](255) NULL,
							[efmEFiled] [tinyint] NULL,
							[efmLegacyCase] [tinyint] NULL,
							[excludeFromEFiling] [tinyint] NULL,
							[filingAgency] [varchar](255) NULL,
							[filingDate] [datetime] NULL,
							[filingStatus] [varchar](255) NULL,
							[filingType] [varchar](255) NULL,
							[hearingRequestedDate] [datetime] NULL,
							[hearingRequestedTime] [varchar](255) NULL,
							[hearingRequestedType] [varchar](255) NULL,
							[incidentZip] [varchar](255) NULL,
							[ivrCaseNumber] [varchar](255) NULL,
							[ivrCitationNumber] [varchar](255) NULL,
							[ivrDLNumber] [varchar](255) NULL,
							[jccpCaseNumber] [varchar](255) NULL,
							[joined] [varchar](255) NULL,
							[judicialOfficer] [varchar](255) NULL,
							[jurisdictionalAmount] [varchar](255) NULL,
							[latitude] [varchar](255) NULL,
							[location] [varchar](255) NULL,
							[locationAddress1] [varchar](255) NULL,
							[locationAddress2] [varchar](255) NULL,
							[locationCity] [varchar](255) NULL,
							[locationDept] [varchar](255) NULL,
							[locationState] [varchar](255) NULL,
							[locationZip] [varchar](255) NULL,
							[longitude] [varchar](255) NULL,
							[memo2] [varchar](255) NULL,
							[noFeeCase] [tinyint] NULL,
							[noFeeCaseSection] [varchar](255) NULL,
							[noOfParcels] [float] NULL,
							[originalFiledDate] [datetime] NULL,
							[originalVerdictDate] [datetime] NULL,
							[receivedDate] [datetime] NULL,
							[referenceNumber] [varchar](255) NULL,
							[status] [varchar](255) NULL,
							[statusDate] [datetime] NULL,
							[statusUpdateReason] [varchar](255) NULL,
							[subJurisdiction] [varchar](255) NULL,
							[workflowCaseAttribute] [varchar](255) NULL,
							[workflowLocation] [varchar](255) NULL,
							[workflowLocation2] [varchar](255) NULL,
							[workflowLocation3] [varchar](255) NULL,
							[caseUnit] [varchar](255) NULL,
							[filingAgencyCaseNumber] [varchar](255) NULL,
							[convId] [varchar](13) NULL,
							[caseSealType] [varchar](16) NULL,
							[caseOrigination] [varchar](255) NULL,
							tCase_id NUMERIC(19,0),
							person_id NUMERIC(19,0),
							party_id NUMERIC(19,0),
							caseCategory varchar(255),
							parsedCategory VARCHAR(255),
							splitCase NUMERIC(19,0),
							caseGroup VARCHAR(255),
							tCaseJoinder_id NUMERIC(19,0),
							tCaseJoinedItem_id NUMERIC(19,0),
							caseType_ld VARCHAR(255),
							cfLotNum VARCHAR(7500),
							attachedIdLoad NUMERIC(19,0),
							caseSpecialStatus VARCHAR(255),
							tCaseSpecialStatus_id NUMERIC(19,0),
							tCaseNote_id NUMERIC(19,0),
							caseNoteFlag NUMERIC(19,0),
							origCaseStatus VARCHAR(255),
							origCaseType VARCHAR(255),
							caseNote VARCHAR(512),
							cfSubCategory VARCHAR(255),
							specialStatusFlag NUMERIC(19,0),
							specialStatusMemo VARCHAR(255),
							dispoisitionFlag NUMERIC(19,0),
							tCaseDispositionOther_id NUMERIC(19,0),
							tCaseDisposition_id NUMERIC(19,0)
										
					
							);				
						]]>
						
						</task>
						
					</source>
				</action>
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform General Case">
					<source database="${sql.migrated.db}" schema="dbo"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							
						SELECT  [id]
						,[accessLevel]
						,[createUserRealName]
						,[createUsername]
						,[dateCreated]
						,[lastUpdateUserRealName]
						,[lastUpdateUsername]
						,[lastUpdated]
						,[memo]
						,[optlock]
						,[roaAccessLevel]
						,cc.caseNumber as sourceCaseNumber
						,[updateReason]
						,[asbestos]
						,[assignedTrack]
						,caseJurisdictionLd = 'C'
						,[caseName]
						,COALESCE(cn.caseOtherNum, cc.caseNumber) as caseNumber
						,[caseNumberSequence]
						,[caseReason]
						,[caseShortName]
						,[caseSubType]
						,[caseType] =
						CASE
							WHEN caseType = '432CA' THEN '311110'
							WHEN caseType = 'ADOPT' THEN '251110'
							WHEN caseType = 'ADPTA' THEN '251110'
							WHEN caseType = 'ADPTM' THEN '251110'
							WHEN caseType = 'ANNUL' THEN '211110'
							WHEN caseType = 'APPCV' THEN '411110'
							WHEN caseType = 'APPDU' THEN '911110'
							WHEN caseType = 'APPOC' THEN '911110'
							WHEN caseType = 'APPMU' THEN '911110'
							WHEN caseType = 'APPMO' THEN '911110'
							WHEN caseType = 'BREGU' THEN '411110'
							WHEN caseType = 'BRESC' THEN '411110'
							WHEN caseType = 'CHGTX' THEN 'CONV'
							WHEN caseType = 'CIVOT' THEN '411110'
							WHEN caseType = 'COMPR' THEN '411110'
							WHEN caseType = 'CONDE' THEN '411110'
							WHEN caseType = 'CON40' THEN '411110'
							WHEN caseType = 'CONGE' THEN '411110'
							WHEN caseType = 'BREBC' THEN '411110'
							WHEN caseType = 'BRECA' THEN '411110'
							WHEN caseType = 'BRECI' THEN '411110'
							WHEN caseType = 'BREEC' THEN '411110'
							WHEN caseType = 'BREAC' THEN '411110'
							WHEN caseType = 'BREOT' THEN '411110'
							WHEN caseType = 'BREUC' THEN '411110'
							WHEN caseType = 'CONVE' THEN '411110'
							WHEN caseType = 'CRIMI' THEN '911110'
							WHEN caseType = 'CUSTO' THEN '411110'
							WHEN caseType = 'DAMAG' THEN '411110'
							WHEN caseType = 'DESTR' THEN 'CONV'
							WHEN caseType = 'DIVOR' THEN '211110'
							WHEN caseType = 'DIVWC' THEN '211110'
							WHEN caseType = 'DIVWO' THEN '211110'
							WHEN caseType = 'DOMOT' THEN '411110'
							WHEN caseType = 'EMPLT' THEN '411110'
							WHEN caseType = 'ENFOJ' THEN '411110'
							WHEN caseType = 'FELON' THEN '911110'
							WHEN caseType = 'FOREI' THEN '211110'
							WHEN caseType = 'FOREJ' THEN '411110'
							WHEN caseType = 'FORFE' THEN '411110'
							WHEN caseType = 'GM' THEN '911110'
							WHEN caseType = 'GUARD' THEN '441120'
							WHEN caseType = 'GUARA' THEN '441120'
							WHEN caseType = 'GUARM' THEN '441120'
							WHEN caseType = 'GUART' THEN '441120'
							WHEN caseType = 'INTEN' THEN '411110'
							WHEN caseType = 'INTER' THEN '411110'
							WHEN caseType = 'INTRA' THEN '221110'
							WHEN caseType = 'JNTWC' THEN '211110'
							WHEN caseType = 'JNTWO' THEN '211110'
							WHEN caseType = 'FOREC' THEN '411110'
							WHEN caseType = 'JRADL' THEN '411110'
							WHEN caseType = 'JRDMV' THEN '411110'
							WHEN caseType = 'JRFOR' THEN '411110'
							WHEN caseType = 'JRAPL' THEN '411110'
							WHEN caseType = 'JRMEN' THEN '411110'
							WHEN caseType = 'JROTH' THEN '411110'
							WHEN caseType = 'JROST' THEN '411110'
							WHEN caseType = 'JRSR' THEN '411110'
							WHEN caseType = 'JRWOR' THEN '411110'
							WHEN caseType = 'JUVDE' THEN '411110'
							WHEN caseType = 'JUVPE' THEN '311110'
							WHEN caseType = 'JUVPR' THEN '311110'
							WHEN caseType = 'JUVDR' THEN '311110'
							WHEN caseType = 'JUVPO' THEN '311110'
							WHEN caseType = 'JUVDH' THEN '311110'
							WHEN caseType = 'JVDV2' THEN '311110'
							WHEN caseType = 'JVEMA' THEN '411110'
							WHEN caseType = 'JUVOT' THEN '311110'
							WHEN caseType = 'JUVST' THEN '311110'
							WHEN caseType = 'JUVTR' THEN '311110'
							WHEN caseType = 'JVCIV' THEN '311110'
							WHEN caseType = 'JVDMV' THEN '311110'
							WHEN caseType = 'JVSAS' THEN '311110'
							WHEN caseType = 'JVSTH' THEN '311110'
							WHEN caseType = 'LANTE' THEN '411110'
							WHEN caseType = 'LIENS' THEN '411110'
							WHEN caseType = 'MALLE' THEN '411110'
							WHEN caseType = 'MALMD' THEN '411110'
							WHEN caseType = 'MLMD' THEN '411110'
							WHEN caseType = 'MALOT' THEN '411110'
							WHEN caseType = 'MENTA' THEN '411110'
							WHEN caseType = 'NAMEC' THEN '411110'
							WHEN caseType = 'NEGA' THEN '411110'
							WHEN caseType = 'NEGMD' THEN '411110'
							WHEN caseType = 'NEGMV' THEN '411110'
							WHEN caseType = 'NEGOT' THEN '411110'
							WHEN caseType = 'NEGPL' THEN '411110'
							WHEN caseType = 'OCFC' THEN '411110'
							WHEN caseType = 'OCFF' THEN '411110'
							WHEN caseType = 'OCCM' THEN '411110'
							WHEN caseType = 'OTTIT' THEN '411110'
							WHEN caseType = 'TOROT' THEN '411110'
							WHEN caseType = 'TORFR' THEN '411110'
							WHEN caseType = 'TORIN' THEN '411110'
							WHEN caseType = 'TORIM' THEN '411110'
							WHEN caseType = 'TORLT' THEN '411110'
							WHEN caseType = 'TORUC' THEN '411110'
							WHEN caseType = 'PATER' THEN '231110'
							WHEN caseType = 'PERMA' THEN '411110'
							WHEN caseType = 'PSEAL' THEN '411110'
							WHEN caseType = 'PLANN' THEN '411110'
							WHEN caseType = 'GENAD' THEN '441110'
							WHEN caseType = 'PROBA' THEN '441110'
							WHEN caseType = 'SETAS' THEN '441110'
							WHEN caseType = 'SPEAD' THEN '441110'
							WHEN caseType = 'SUMAD' THEN '441110'
							WHEN caseType = 'TRUCO' THEN '441110'
							WHEN caseType = 'PROMV' THEN '411110'
							WHEN caseType = 'PROOT' THEN '411110'
							WHEN caseType = 'TPDVO' THEN '211110'
							WHEN caseType = 'HRPRO' THEN '411110'
							WHEN caseType = 'PGI' THEN 'CONV'
							WHEN caseType = 'QUIET' THEN '411110'
							WHEN caseType = 'RPCE' THEN '411110'
							WHEN caseType = 'RPJF' THEN '411110'
							WHEN caseType = 'REALP' THEN '411110'
							WHEN caseType = 'RPOLT' THEN '411110'
							WHEN caseType = 'RPOP' THEN '411110'
							WHEN caseType = 'RPOT' THEN '411110'
							WHEN caseType = 'RPUD' THEN '411110'
							WHEN caseType = 'RECOV' THEN '411110'
							WHEN caseType = 'FMHMN' THEN '411110'
							WHEN caseType = 'SEALE' THEN 'CONV'
							WHEN caseType = 'SRCHR' THEN 'SRCHR'
							WHEN caseType = 'SEARC' THEN '991110'
							WHEN caseType = 'SEPMT' THEN '211110'
							WHEN caseType = 'SKIP' THEN 'CONV'
							WHEN caseType = 'SPEPE' THEN 'CONV'
							WHEN caseType = 'STOCS' THEN '411110'
							WHEN caseType = 'OTHSP' THEN '221110'
							WHEN caseType = 'SP/CC' THEN '411110'
							WHEN caseType = 'TPORQ' THEN '211110'
							WHEN caseType = 'TERMI' THEN '411110'
							WHEN caseType = 'TPR43' THEN '411110'
							WHEN caseType = 'TPROT' THEN '411110'
							WHEN caseType = 'TEST' THEN 'CONV'
							WHEN caseType = 'TOEM' THEN '411110'
							WHEN caseType = 'TOIN' THEN '411110'
							WHEN caseType = 'TOIM' THEN '411110'
							WHEN caseType = 'TOOT' THEN '411110'
							WHEN caseType = 'TOPL' THEN '411110'
							WHEN caseType = 'TORTD' THEN '411110'
							WHEN caseType = 'UIFSA' THEN '221110'
							WHEN caseType = 'UNLAD' THEN '411110'
							WHEN caseType = 'VISIT' THEN '411110'
							WHEN caseType = 'WVFEE' THEN 'CONV'
							WHEN caseType = 'WRIOT' THEN '411110'
							WHEN caseType = 'WRICE' THEN '411110'
							WHEN caseType = 'WRICV' THEN '411110'
							WHEN caseType = 'WRICR' THEN '911110'
							WHEN caseType = 'WRTMD' THEN '411110'
							WHEN caseType = 'WRIMA' THEN '411110'
							WHEN caseType = 'WRIPR' THEN '411110'
							WHEN caseType = 'WRIQW' THEN '411110'
						END
						,[category] = 
						CASE
							WHEN caseType = '432CA' THEN 'JV08'
							WHEN caseType = 'ADOPT' THEN 'FAM10'
							WHEN caseType = 'ADPTA' THEN 'FAM10'
							WHEN caseType = 'ADPTM' THEN 'FAM10'
							WHEN caseType = 'ANNUL' THEN 'FAM01'
							WHEN caseType = 'APPCV' THEN 'CV40G'
							WHEN caseType = 'APPDU' THEN 'A90'
							WHEN caseType = 'APPOC' THEN 'A90'
							WHEN caseType = 'APPMU' THEN 'A90'
							WHEN caseType = 'APPMO' THEN 'A90'
							WHEN caseType = 'BREGU' THEN 'CV33G'
							WHEN caseType = 'BRESC' THEN 'CV33G'
							WHEN caseType = 'CHGTX' THEN 'CHGTX'
							WHEN caseType = 'CIVOT' THEN 'CV49G'
							WHEN caseType = 'COMPR' THEN 'CV47G'
							WHEN caseType = 'CONDE' THEN 'CV05G'
							WHEN caseType = 'CON40' THEN 'CV25G'
							WHEN caseType = 'CONGE' THEN 'CV26G'
							WHEN caseType = 'BREBC' THEN 'CV28G'
							WHEN caseType = 'BRECA' THEN 'CV31G'
							WHEN caseType = 'BRECI' THEN 'CV30G'
							WHEN caseType = 'BREEC' THEN 'CV32G'
							WHEN caseType = 'BREAC' THEN 'CV29G'
							WHEN caseType = 'BREOT' THEN 'CV33G'
							WHEN caseType = 'BREUC' THEN 'CV27G'
							WHEN caseType = 'CONVE' THEN 'CV06G'
							WHEN caseType = 'CRIMI' THEN 'F13'
							WHEN caseType = 'CUSTO' THEN 'FAM03'
							WHEN caseType = 'DAMAG' THEN 'CV06G'
							WHEN caseType = 'DESTR' THEN 'DESTR'
							WHEN caseType = 'DIVOR' THEN 'FAM01'
							WHEN caseType = 'DIVWC' THEN 'FAM01'
							WHEN caseType = 'DIVWO' THEN 'FAM01'
							WHEN caseType = 'DOMOT' THEN 'FAM12'
							WHEN caseType = 'EMPLT' THEN 'CV16G'
							WHEN caseType = 'ENFOJ' THEN 'CV49G'
							WHEN caseType = 'FELON' THEN 'F13'
							WHEN caseType = 'FOREI' THEN 'FAM01'
							WHEN caseType = 'FOREJ' THEN 'CV48G'
							WHEN caseType = 'FORFE' THEN 'CV49G'	
							WHEN caseType = 'GM' THEN 'G40'
							WHEN caseType = 'GUARD' THEN 'FAM14'
							WHEN caseType = 'GUARA' THEN 'FAM14'
							WHEN caseType = 'GUARM' THEN 'FAM15'
							WHEN caseType = 'GUART' THEN 'FAM16'
							WHEN caseType = 'INTEN' THEN 'CV15G'
							WHEN caseType = 'INTER' THEN 'CV33G'
							WHEN caseType = 'INTRA' THEN 'FAM05'
							WHEN caseType = 'JNTWC' THEN 'FAM01'
							WHEN caseType = 'JNTWO' THEN 'FAM01'
							WHEN caseType = 'FOREC' THEN 'CV03G'
							WHEN caseType = 'JRADL' THEN 'CV49G'
							WHEN caseType = 'JRDMV' THEN 'CV37G'
							WHEN caseType = 'JRFOR' THEN 'CV03G'
							WHEN caseType = 'JRAPL' THEN 'CV40G'
							WHEN caseType = 'JRMEN' THEN 'CV36G'
							WHEN caseType = 'JROTH' THEN 'CV41G'
							WHEN caseType = 'JROST' THEN 'CV39G'
							WHEN caseType = 'JRSR' THEN 'CV35G'
							WHEN caseType = 'JRWOR' THEN 'CV38G'
							WHEN caseType = 'JUVDE' THEN 'JV11'
							WHEN caseType = 'JUVPE' THEN 'JV01'
							WHEN caseType = 'JUVPR' THEN 'JV02'
							WHEN caseType = 'JUVDR' THEN 'JV03'
							WHEN caseType = 'JUVPO' THEN 'JV04'
							WHEN caseType = 'JUVDH' THEN 'JUVDET'
							WHEN caseType = 'JVDV2' THEN 'DIV'
							WHEN caseType = 'JVEMA' THEN 'JV11'
							WHEN caseType = 'JUVOT' THEN 'JV05'
							WHEN caseType = 'JUVST' THEN 'JV07'
							WHEN caseType = 'JUVTR' THEN '322110'
							WHEN caseType = 'JVCIV' THEN 'C80'
							WHEN caseType = 'JVDMV' THEN 'JV12'
							WHEN caseType = 'JVSAS' THEN 'JV12'
							WHEN caseType = 'JVSTH' THEN 'JV12'
							WHEN caseType = 'LANTE' THEN 'CV02G'
							WHEN caseType = 'LIENS' THEN 'CV49G'
							WHEN caseType = 'MALLE' THEN 'CV49G'
							WHEN caseType = 'MALMD' THEN 'CV10G'
							WHEN caseType = 'MLMD' THEN 'CV10G'
							WHEN caseType = 'MALOT' THEN 'CV13G'
							WHEN caseType = 'MENTA' THEN 'FAM13'
							WHEN caseType = 'NAMEC' THEN 'FAM12'
							WHEN caseType = 'NEGA' THEN 'CV07G'
							WHEN caseType = 'NEGMD' THEN 'CV10G'
							WHEN caseType = 'NEGMV' THEN 'CV07G'
							WHEN caseType = 'NEGOT' THEN 'CV09G'
							WHEN caseType = 'NEGPL' THEN 'CV08G'
							WHEN caseType = 'OCFC' THEN 'CV47G'
							WHEN caseType = 'OCFF' THEN 'CV48G'
							WHEN caseType = 'OCCM' THEN 'CV49G'
							WHEN caseType = 'OTTIT' THEN 'CV04G'
							WHEN caseType = 'TOROT' THEN 'CV18G'
							WHEN caseType = 'TORFR' THEN 'CV18G'
							WHEN caseType = 'TORIN' THEN 'CV17G'
							WHEN caseType = 'TORIM' THEN 'CV15G'
							WHEN caseType = 'TORLT' THEN 'CV11G'
							WHEN caseType = 'TORUC' THEN 'CV18G'
							WHEN caseType = 'PATER' THEN 'FAM02'
							WHEN caseType = 'PERMA' THEN 'FAM12'
							WHEN caseType = 'PSEAL' THEN 'CV35G'
							WHEN caseType = 'PLANN' THEN 'CV49G'
							WHEN caseType = 'GENAD' THEN 'CV20G'
							WHEN caseType = 'PROBA' THEN 'CV24G'
							WHEN caseType = 'SETAS' THEN 'CV22G'
							WHEN caseType = 'SPEAD' THEN 'CV21G'
							WHEN caseType = 'SUMAD' THEN 'CV19G'
							WHEN caseType = 'TRUCO' THEN 'CV23G'
							WHEN caseType = 'PROMV' THEN 'CV07G'
							WHEN caseType = 'PROOT' THEN 'CV18G'
							WHEN caseType = 'TPDVO' THEN 'FAM11'
							WHEN caseType = 'HRPRO' THEN 'HRPO'
							WHEN caseType = 'PGI' THEN 'PGI'
							WHEN caseType = 'QUIET' THEN 'CV04G'
							WHEN caseType = 'RPCE' THEN 'CV05G'
							WHEN caseType = 'RPJF' THEN 'CV03G'
							WHEN caseType = 'REALP' THEN 'CV06G'
							WHEN caseType = 'RPOLT' THEN 'CV02G'
							WHEN caseType = 'RPOP' THEN 'CV06G'
							WHEN caseType = 'RPOT' THEN 'CV04G'
							WHEN caseType = 'RPUD' THEN 'CV01G'
							WHEN caseType = 'RECOV' THEN 'CV06G'
							WHEN caseType = 'FMHMN' THEN 'CV03G'
							WHEN caseType = 'SEALE' THEN 'SEALE'
							WHEN caseType = 'SRCHR' THEN 'SRCHR'
							WHEN caseType = 'SEPMT' THEN 'FAM01'
							WHEN caseType = 'SKIP' THEN 'SKIP'
							WHEN caseType = 'SPEPE' THEN 'SPEPE'
							WHEN caseType = 'STOCS' THEN 'CV49G'
							WHEN caseType = 'OTHSP' THEN 'FAM05'
							WHEN caseType = 'SP/CC' THEN 'FAM06'
							WHEN caseType = 'TPORQ' THEN 'FAM11'
							WHEN caseType = 'TERMI' THEN 'FAM09'
							WHEN caseType = 'TPR43' THEN 'FAM08'
							WHEN caseType = 'TPROT' THEN 'FAM09'
							WHEN caseType = 'TEST' THEN 'TEST'
							WHEN caseType = 'TOEM' THEN 'CV16G'
							WHEN caseType = 'TOIN' THEN 'CV17G'
							WHEN caseType = 'TOIM' THEN 'CV15G'
							WHEN caseType = 'TOOT' THEN 'CV18G'
							WHEN caseType = 'TOPL' THEN 'CV14G'
							WHEN caseType = 'TORTD' THEN 'CV18G'
							WHEN caseType = 'UIFSA' THEN 'FAM04'
							WHEN caseType = 'VISIT' THEN 'FAM07'
							WHEN caseType = 'WVFEE' THEN 'WVFEE'
							WHEN caseType = 'WRIOT' THEN 'CV46G'
							WHEN caseType = 'WRICE' THEN 'CV46G'
							WHEN caseType = 'WRICV' THEN 'CV42G'
							WHEN caseType = 'WRICR' THEN 'F13'
							WHEN caseType = 'WRTMD' THEN 'CV43G'
							WHEN caseType = 'WRIMA' THEN 'CV43G'
							WHEN caseType = 'WRIPR' THEN 'CV45G'
							WHEN caseType = 'WRIQW' THEN 'CV44G'
							WHEN caseType = 'UNLAD' THEN 'CV01G'
							WHEN caseType = 'SEARC' THEN '991120'
						END
						,[ceqa]
						,[classAction]
						,[complexFeeAssessedAmountCents]
						,[complexLitigation]
						,[conditionallySealed]
						,[consolidationType]
						,[county]
						,[demandAmount]
						,[demandAmountType]
						,[dispositionDate]
						,[dispositionManner]
						,[dispositionType] = 
						CASE
							WHEN status = 'ADJEH' THEN 'AAEH'
							WHEN status = 'ADJDE' THEN 'AJD'
							WHEN status = 'ADJPL' THEN 'APAS'
							WHEN status = 'AFFSP' THEN 'TRAN'
							WHEN status = 'AFFMD' THEN 'TRAN'
							WHEN status = 'MAJOR' THEN 'MAJOR'
							WHEN status = 'APPL' THEN 'TRAN'
							WHEN status = 'BAILF' THEN 'BAIL'
							WHEN status = 'CVTOT' THEN 'TRAN'
							WHEN status = 'CVTCF' THEN 'TRAN'
							WHEN status = 'CICOM' THEN 'CICDC'
							WHEN status = 'CIDIS' THEN 'CIDDC'
							WHEN status = 'DEACT' THEN 'OTHER'
							WHEN status = 'DEATH' THEN 'DEATH'
							WHEN status = 'DWAH' THEN 'PDWH'
							WHEN status = 'DWOH' THEN 'PDWOH'
							WHEN status = 'DISIN' THEN 'INVOLDIS'
							WHEN status = 'DISSU' THEN 'MTD'
							WHEN status = 'DISST' THEN 'STIPD'
							WHEN status = 'DISVO' THEN 'VOLDIS'
							WHEN status = 'DNADJ' THEN 'DNA'
							WHEN status = 'DSJDV' THEN 'DISAD'
							WHEN status = 'DISAF' THEN 'DISAD'
							WHEN status = 'DISTR' THEN 'DISBT'
							WHEN status = 'DSSCT' THEN 'TRAN'
							WHEN status = 'EXPWA' THEN 'OTHER'
							WHEN status = 'CIDFJ' THEN 'FTADJDC'
							WHEN status = 'FURTH' THEN 'OTHER'
							WHEN status = 'GAWH' THEN 'PGWH'
							WHEN status = 'GWOH' THEN 'PGWOH'
							WHEN status = 'JUDAA' THEN 'JOA'
							WHEN status = 'JUDDE' AND caseType IN ('JVCIV') THEN 'DJDC'  --'case.category = , C81, C82 then use DJDC else use DEFJUDG'
							WHEN status = 'JUDDE' and caseType NOT IN ('JVCIC') THEN 'DEFJUDG'
							WHEN status = 'JUDPD' THEN 'OTHER'
							WHEN status = 'JUDST' THEN 'STIPJ'
							WHEN status = 'JUDSU' THEN 'SUMJUD'
							WHEN status = 'JOC' THEN 'GP'
							WHEN status = 'LACKP' THEN 'NPBT'
							WHEN status = 'ORDFU' THEN 'OTHER'
							WHEN status = 'GUARO' THEN 'OTHER'
							WHEN status = 'TERGU' THEN 'TERM'
							WHEN status = 'OTHER' THEN 'OTHER'
							WHEN status = 'PREIN' THEN 'OTHER'
							WHEN status = 'PREVO' THEN 'OTHER'
							WHEN status = 'RECDE' THEN 'OTHER'
							WHEN status = 'REMAN' THEN 'TRAN'
							WHEN status = 'COMPE' THEN 'COMP'
							WHEN status = 'SWRET' THEN 'OTHER'
							WHEN status = 'PVHRG' THEN 'OTHER'
							WHEN status = 'ST/WJ' THEN 'SWWJC'
							WHEN status = 'STW/O' THEN 'SWWOJC'
							WHEN status = 'TIMEX' THEN 'OTHER'
							WHEN status = 'TRANS' THEN 'TRAN'
							WHEN status = 'TRAJV' THEN 'TRAN'
							WHEN status = 'TRIBH' THEN 'OTHER'
							WHEN status = 'BTDIS' THEN 'DISDBT'
							WHEN status = 'BTGPS' THEN 'GPDBT'
							WHEN status = 'BTJOC' THEN 'CONVBT'
							WHEN status = 'BTACT' THEN 'ACQBT'
							WHEN status = 'TRIJU' THEN 'JUDRBT'
							WHEN status = 'TRISE' THEN 'JUDRBT'
							WHEN status = 'TRIJR' THEN 'OTHER'
							WHEN status = 'JTDIS' THEN 'DISDJT'
							WHEN status = 'JTGUI' THEN 'GPDJT'
							WHEN status = 'JTJOC' THEN 'JUDRBT'
							WHEN status = 'JTJOA' THEN 'ACQJT'
							WHEN status = 'JTVER' THEN 'VERDBT'
							WHEN status = 'UNCCV' THEN 'UCVDC'
							WHEN status = 'WAIVE' THEN 'WCTAC'
						END
						,[dmvDocketId]
						,[documentAccessLevel]
						,[eFileCitationDate]
						,[eFileCitationNumber]
						,[efmEFiled]
						,[efmLegacyCase]
						,[excludeFromEFiling]
						,[filingAgency]
						,receivedDate as filingDate
						,[filingStatus]
						,[filingType]
						,[hearingRequestedDate]
						,[hearingRequestedTime]
						,[hearingRequestedType]
						,[incidentZip]
						,[ivrCaseNumber]
						,[ivrCitationNumber]
						,[ivrDLNumber]
						,[jccpCaseNumber]
						,[joined]
						,[judicialOfficer]
						,[jurisdictionalAmount]
						,[latitude]
						,[location]
						,[locationAddress1]
						,[locationAddress2]
						,[locationCity]
						,[locationDept]
						,[locationState]
						,[locationZip]
						,[longitude]
						,[memo2]
						,[noFeeCase]
						,[noFeeCaseSection]
						,[noOfParcels]
						,[originalFiledDate]
						,[originalVerdictDate]
						,[receivedDate]
						,rn.caseOtherNum as ReferenceNumberLd
						,[status] = 
						CASE
							WHEN status = 'ACTIV' THEN 'ACT'
							WHEN status = 'ADJEH' THEN 'DISP'	
							WHEN status = 'ADJPL' THEN 'DISP'
							WHEN status = 'AFFSP' THEN 'DISP'
							WHEN status = 'AFFMD' THEN 'DISP'
							WHEN status = 'MAJOR' THEN 'DISP'	
							WHEN status = 'APPL' THEN 'DISP'
							WHEN status = 'CVTOT' THEN 'DISP'
							WHEN status = 'CVTCF' THEN 'DISP'
							WHEN status = 'CICOM' THEN 'DISP'
							WHEN status = 'CIDIS' THEN 'DISP'
							WHEN status = 'CLOSE' THEN 'DISP'
							WHEN status = 'DEACT' THEN 'DISP'
							WHEN status = 'DEATH' THEN 'DISP'
							WHEN status = 'DWAH' THEN 'DISP'
							WHEN status = 'DWOH' THEN 'DISP'
							WHEN status = 'DISIN' THEN 'DISP'
							WHEN status = 'DISSU' THEN 'DISP'
							WHEN status = 'DISST' THEN 'DISP'
							WHEN status = 'DISVO' THEN 'DISP'
							WHEN status = 'DNADJ' THEN 'DISP'
							WHEN status = 'DSJDV' THEN 'DISP'
							WHEN status = 'DISAF' THEN 'DISP'
							WHEN status = 'DISTR' THEN 'DISP'
							WHEN status = 'DSSCT' THEN 'DISP'
							WHEN status = 'EXPWA' THEN 'DISP'
							WHEN status = 'CIDFJ' THEN 'DISP'
							WHEN status = 'FURTH' THEN 'DISP'
							WHEN status = 'GAWH' THEN 'DISP'
							WHEN status = 'GWOH' THEN 'DISP'
							WHEN status = 'HELD' THEN 'INACT'
							WHEN status = 'JUDAA' THEN 'DISP'
							WHEN status = 'JUDDE' THEN 'DISP'
							WHEN status = 'JUDPD' THEN 'DISP'
							WHEN status = 'JUDST' THEN 'DISP'
							WHEN status = 'JUDSU' THEN 'DISP'
							WHEN status = 'JOC' THEN 'DISP'
							WHEN status = 'DIV' THEN 'DISP'
							WHEN status = 'DIVF' THEN 'DISP'
							WHEN status = 'DIVS' THEN 'DISP'
							WHEN status = 'DVACT' THEN 'DISP'
							WHEN status = 'JVDVO' THEN 'DISP'
							WHEN status = 'LACKP' THEN 'DISP'
							WHEN status = 'ORDFU' THEN 'DISP'
							WHEN status = 'GUARO' THEN 'DISP'
							WHEN status = 'TERGU' THEN 'DISP'
							WHEN status = 'OTHER' THEN 'DISP'
							WHEN status = 'PGACT' THEN 'non-case case'
							WHEN status = 'PGID' THEN 'non-case case'
							WHEN status = 'PGIO' THEN 'non-case case'
							WHEN status = 'PREIN' THEN 'DISP'
							WHEN status = 'PREVO' THEN 'DISP'
							WHEN status = 'REACT' THEN 'REACT'
							WHEN status = 'RECDE' THEN 'DISP'
							WHEN status = 'REMAN' THEN 'DISP'
							WHEN status = 'REOPE' THEN 'REOPEN'
							WHEN status = 'SWRET' THEN 'DISP'
							WHEN status = 'PVHRG' THEN 'REOPEN'
							WHEN status = 'ST/WJ' THEN 'DISP'
							WHEN status = 'STW/O' THEN 'DISP'
							WHEN status = 'STAYE' THEN 'INACT'
							WHEN status = 'TIMEX' THEN 'DISP'
							WHEN status = 'TRANS' THEN 'DISP'
							WHEN status = 'TRAJV' THEN 'DISP'
							WHEN status = 'TRIBH' THEN 'DISP'
							WHEN status = 'BTDIS' THEN 'DISP'
							WHEN status = 'BTGPS' THEN 'DISP'
							WHEN status = 'BTJOC' THEN 'DISP'
							WHEN status = 'BTACT' THEN 'DISP'
							WHEN status = 'TRIJU' THEN 'DISP'
							WHEN status = 'TRISE' THEN 'DISP'
							WHEN status = 'TRIJR' THEN 'DISP'
							WHEN status = 'JTDIS' THEN 'DISP'
							WHEN status = 'JTGUI' THEN 'DISP'
							WHEN status = 'JTJOC' THEN 'DISP'
							WHEN status = 'JTJOA' THEN 'DISP'
							WHEN status = 'JTVER' THEN 'DISP'
							WHEN status = 'UNCCV' THEN 'DISP'
							WHEN status = 'WFDND' THEN 'DISP'
							WHEN status = 'WAIVE' THEN 'DISP'
							WHEN status = 'WARRA' THEN 'INACT'
							WHEN status = 'WARCL' THEN 'REACT'
							WHEN status = 'WARCR' THEN 'INACT'
							WHEN status = 'WARJV' THEN 'INACT'
						END
						,[statusDate]
						,[statusUpdateReason]
						,caseJurisdiction as subJurisdiction
						,[workflowCaseAttribute]
						,[workflowLocation]
						,[workflowLocation2]
						,[workflowLocation3]
						,[caseUnit]
						,[filingAgencyCaseNumber]
						,[convId]
						,[caseSealType]
						,[caseOrigination]
						, splitCase = 0,
						cc.caseGroup,
						status as origCaseStatus,
						caseNoteFlag =
						CASE
							WHEN status IN ('AFFSP','AFFMD','APPL','CVTOT','CVTCF','CLOSE','DEACT','DSSCT','FURTH','HELD','JUDPD','DIV','DIVF','DIVS','DVACT','JVDVO','ORDFU','GUARO','PGACT','PGID','PGIO','PREIN','PREVO','RECDE','REMAN','SWRET','TIMEX','TRIBH','TRISE','TRIJR','JTJOC','WFDND','WARRA','WARCL','WARCR','WARJV') THEN 1
							ELSE 0
						END,
						cfSubCategory=
						CASE
							WHEN caseType = '45117.6487453704' THEN '200170'
							WHEN caseType = 'ADPTA' THEN '200170'
							WHEN caseType = 'ADPTM' THEN '200180'
							WHEN caseType = 'ANNUL' THEN '200100'
							WHEN caseType = 'DIVWC' THEN '200110'
							WHEN caseType = 'DIVWO' THEN '200120'
							WHEN caseType = 'DOMOT' THEN '200210'
							WHEN caseType = 'FOREI' THEN '200130'
							WHEN caseType = 'JNTWC' THEN '200140'
							WHEN caseType = 'JNTWO' THEN '200150'
							WHEN caseType = 'JVEMA' THEN '300100'
							WHEN caseType = 'NAMEC' THEN '200190'
							WHEN caseType = 'PERMA' THEN '200200'
							WHEN caseType = 'FMHMN' THEN '400100'
							WHEN caseType = 'SEPMT' THEN '200160'
						END,
						specialStatusFlag =
						case
							WHEN caseType IN ('BREGU','BRESC','CONVE','DAMAG','EMPLT','ENFOJ','FORFE','JRADL','JVDMV','JVSAS','JVSTH','LIENS','MALLE','TORFR','TORUC','PLANN','PROMV','PROOT','QUIET','RECOV','STOCS','SP/CC','WRICE') THEN 1
							ELSE 0
						END,
						origCaseType = caseType,
						dispoisitionFlag =
						CASE
							WHEN cs.status IN ('MAJOR', 'DEATH', 'TERGU', 'COMPE') THEN 1 
							ELSE 0
						END
						FROM ${sql.migrated.db}.[ecourt].[tCase] cs
						INNER JOIN ${sql.staging.db}.dbo.convertCases_conv cc
						ON cs.caseNumber = cc.caseNumber 
						LEFT JOIN (SELECT case_id, number as caseOtherNum, ROW_NUMBER() OVER(PARTITION BY case_id ORDER BY lead DESC) rnk1 FROM ${sql.migrated.db}.ecourt.tCaseOtherNumber cn WHERE type = 'CRT' and active = 1 ) cn
						ON cs.id = cn.case_id AND cn.rnk1 = 1
						LEFT JOIN (SELECT case_id, MAX(number) caseOtherNum FROM ${sql.migrated.db}.ecourt.tCaseOtherNumber cn WHERE type = 'LAW'  GROUP BY case_id) rn
						ON cs.id = rn.case_id
						WHERE caseGroup <> 'CR' 
					
							
						]]>
							
							
					

						</param>				
					</params>
					<mappings>
						<mapping source="id" dest="id"/>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="asbestos" dest="asbestos"/>
						<mapping source="assignedTrack" dest="assignedTrack"/>
						<mapping source="caseJurisdictionLd" dest="caseJurisdiction"/>
						<mapping source="caseName" dest="caseName"/>
						<mapping source="caseNumber" dest="caseNumber"/>
						<mapping source="caseNumberSequence" dest="caseNumberSequence"/>
						<mapping source="caseReason" dest="caseReason"/>
						<mapping source="caseShortName" dest="caseShortName"/>
						<mapping source="caseSubType" dest="caseSubType"/>
						<mapping source="caseType" dest="caseType"/>
						<mapping source="category" dest="category"/>
						<mapping source="ceqa" dest="ceqa"/>
						<mapping source="classAction" dest="classAction"/>
						<mapping source="complexFeeAssessedAmountCents" dest="complexFeeAssessedAmountCents"/>
						<mapping source="complexLitigation" dest="complexLitigation"/>
						<mapping source="conditionallySealed" dest="conditionallySealed"/>
						<mapping source="consolidationType" dest="consolidationType"/>
						<mapping source="county" dest="county"/>
						<mapping source="demandAmount" dest="demandAmount"/>
						<mapping source="demandAmountType" dest="demandAmountType"/>
						<mapping source="dispositionDate" dest="dispositionDate"/>
						<mapping source="dispositionManner" dest="dispositionManner"/>
						<mapping source="dispositionType" dest="dispositionType"/>
						<mapping source="dmvDocketId" dest="dmvDocketId"/>
						<mapping source="documentAccessLevel" dest="documentAccessLevel"/>
						<mapping source="eFileCitationDate" dest="eFileCitationDate"/>
						<mapping source="eFileCitationNumber" dest="eFileCitationNumber"/>
						<mapping source="efmEFiled" dest="efmEFiled"/>
						<mapping source="efmLegacyCase" dest="efmLegacyCase"/>
						<mapping source="excludeFromEFiling" dest="excludeFromEFiling"/>
						<mapping source="filingAgency" dest="filingAgency"/>
						<mapping source="filingDate" dest="filingDate"/>
						<mapping source="filingStatus" dest="filingStatus"/>
						<mapping source="filingType" dest="filingType"/>
						<mapping source="hearingRequestedDate" dest="hearingRequestedDate"/>
						<mapping source="hearingRequestedTime" dest="hearingRequestedTime"/>
						<mapping source="hearingRequestedType" dest="hearingRequestedType"/>
						<mapping source="incidentZip" dest="incidentZip"/>
						<mapping source="ivrCaseNumber" dest="ivrCaseNumber"/>
						<mapping source="ivrCitationNumber" dest="ivrCitationNumber"/>
						<mapping source="ivrDLNumber" dest="ivrDLNumber"/>
						<mapping source="jccpCaseNumber" dest="jccpCaseNumber"/>
						<mapping source="joined" dest="joined"/>
						<mapping source="judicialOfficer" dest="judicialOfficer"/>
						<mapping source="jurisdictionalAmount" dest="jurisdictionalAmount"/>
						<mapping source="latitude" dest="latitude"/>
						<mapping source="location" dest="location"/>
						<mapping source="locationAddress1" dest="locationAddress1"/>
						<mapping source="locationAddress2" dest="locationAddress2"/>
						<mapping source="locationCity" dest="locationCity"/>
						<mapping source="locationDept" dest="locationDept"/>
						<mapping source="locationState" dest="locationState"/>
						<mapping source="locationZip" dest="locationZip"/>
						<mapping source="longitude" dest="longitude"/>
						<mapping source="memo2" dest="memo2"/>
						<mapping source="noFeeCase" dest="noFeeCase"/>
						<mapping source="noFeeCaseSection" dest="noFeeCaseSection"/>
						<mapping source="noOfParcels" dest="noOfParcels"/>
						<mapping source="originalFiledDate" dest="originalFiledDate"/>
						<mapping source="originalVerdictDate" dest="originalVerdictDate"/>
						<mapping source="receivedDate" dest="receivedDate"/>
						<mapping source="ReferenceNumberLd" dest="referenceNumber"/>
						<mapping source="status" dest="status"/>
						<mapping source="statusDate" dest="statusDate"/>
						<mapping source="statusUpdateReason" dest="statusUpdateReason"/>
						<mapping source="subJurisdiction" dest="subJurisdiction"/>
						<mapping source="workflowCaseAttribute" dest="workflowCaseAttribute"/>
						<mapping source="workflowLocation" dest="workflowLocation"/>
						<mapping source="workflowLocation2" dest="workflowLocation2"/>
						<mapping source="workflowLocation3" dest="workflowLocation3"/>
						<mapping source="caseUnit" dest="caseUnit"/>
						<mapping source="filingAgencyCaseNumber" dest="filingAgencyCaseNumber"/>
						<mapping source="convId" dest="convId"/>
						<mapping source="caseSealType" dest="caseSealType"/>
						<mapping source="caseOrigination" dest="caseOrigination"/>
						<mapping source="splitCase" dest="splitCase"/>
						<mapping source="caseGroup" dest="caseGroup"/>
						<mapping source="origCaseStatus" dest="origCaseStatus"/>
						<mapping source="caseNoteFlag" dest="caseNoteFlag"/>
						<mapping source="cfSubCategory" dest="cfSubCategory"/>
						<mapping source="specialStatusFlag" dest="specialStatusFlag"/>
						<mapping source="origCaseType" dest="origCaseType"/>
						<mapping source="dispoisitionFlag" dest="dispoisitionFlag"/>
		
					</mappings>
					<destination database="${sql.staging.db}" schema="dbo" table="case_conv"/>
				</action>

						
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform CR Case">
					<source database="${sql.migrated.db}" schema="dbo"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							
						SELECT  [id]
						,[accessLevel]
						,[createUserRealName]
						,[createUsername]
						,[dateCreated]
						,[lastUpdateUserRealName]
						,[lastUpdateUsername]
						,[lastUpdated]
						,[memo]
						,[optlock]
						,[roaAccessLevel]
						,cc.caseNumber as sourceCaseNumber
						,[updateReason]
						,[asbestos]
						,[assignedTrack]
						,caseJurisdiction = 'C'
						,[caseName],
						caseNumber =
						CASE
							WHEN t1.rnk = 1 THEN COALESCE(cn.caseOtherNum, cc.caseNumber)
							WHEN t1.rnk > 1 THEN CONCAT(COALESCE(cn.caseOtherNum, cc.caseNumber), '-',(rnk-1))
							ELSE COALESCE(cn.caseOtherNum, cc.caseNumber)
						END
						,[caseNumberSequence]
						,[caseReason]
						,[caseShortName]
						,[caseSubType]
						,[caseType] =
						CASE
							WHEN caseType = '432CA' THEN '311110'
							WHEN caseType = 'ADOPT' THEN '251110'
							WHEN caseType = 'ADPTA' THEN '251110'
							WHEN caseType = 'ADPTM' THEN '251110'
							WHEN caseType = 'ANNUL' THEN '211110'
							WHEN caseType = 'APPCV' THEN '411110'
							WHEN caseType = 'APPDU' THEN '911110'
							WHEN caseType = 'APPOC' THEN '911110'
							WHEN caseType = 'APPMU' THEN '911110'
							WHEN caseType = 'APPMO' THEN '911110'
							WHEN caseType = 'BREGU' THEN '411110'
							WHEN caseType = 'BRESC' THEN '411110'
							WHEN caseType = 'CHGTX' THEN 'CONV'
							WHEN caseType = 'CIVOT' THEN '411110'
							WHEN caseType = 'COMPR' THEN '411110'
							WHEN caseType = 'CONDE' THEN '411110'
							WHEN caseType = 'CON40' THEN '411110'
							WHEN caseType = 'CONGE' THEN '411110'
							WHEN caseType = 'BREBC' THEN '411110'
							WHEN caseType = 'BRECA' THEN '411110'
							WHEN caseType = 'BRECI' THEN '411110'
							WHEN caseType = 'BREEC' THEN '411110'
							WHEN caseType = 'BREAC' THEN '411110'
							WHEN caseType = 'BREOT' THEN '411110'
							WHEN caseType = 'BREUC' THEN '411110'
							WHEN caseType = 'CONVE' THEN '411110'
							WHEN caseType = 'CRIMI' THEN '911110'
							WHEN caseType = 'CUSTO' THEN '411110'
							WHEN caseType = 'DAMAG' THEN '411110'
							WHEN caseType = 'DESTR' THEN 'CONV'
							WHEN caseType = 'DIVOR' THEN '211110'
							WHEN caseType = 'DIVWC' THEN '211110'
							WHEN caseType = 'DIVWO' THEN '211110'
							WHEN caseType = 'DOMOT' THEN '411110'
							WHEN caseType = 'EMPLT' THEN '411110'
							WHEN caseType = 'ENFOJ' THEN '411110'
							WHEN caseType = 'FELON' THEN '911110'
							WHEN caseType = 'FOREI' THEN '211110'
							WHEN caseType = 'FOREJ' THEN '411110'
							WHEN caseType = 'FORFE' THEN '411110'
							WHEN caseType = 'GM' THEN '911110'
							WHEN caseType = 'GUARD' THEN '441120'
							WHEN caseType = 'GUARA' THEN '441120'
							WHEN caseType = 'GUARM' THEN '441120'
							WHEN caseType = 'GUART' THEN '441120'
							WHEN caseType = 'INTEN' THEN '411110'
							WHEN caseType = 'INTER' THEN '411110'
							WHEN caseType = 'INTRA' THEN '221110'
							WHEN caseType = 'JNTWC' THEN '211110'
							WHEN caseType = 'JNTWO' THEN '211110'
							WHEN caseType = 'FOREC' THEN '411110'
							WHEN caseType = 'JRADL' THEN '411110'
							WHEN caseType = 'JRDMV' THEN '411110'
							WHEN caseType = 'JRFOR' THEN '411110'
							WHEN caseType = 'JRAPL' THEN '411110'
							WHEN caseType = 'JRMEN' THEN '411110'
							WHEN caseType = 'JROTH' THEN '411110'
							WHEN caseType = 'JROST' THEN '411110'
							WHEN caseType = 'JRSR' THEN '411110'
							WHEN caseType = 'JRWOR' THEN '411110'
							WHEN caseType = 'JUVDE' THEN '411110'
							WHEN caseType = 'JUVPE' THEN '311110'
							WHEN caseType = 'JUVPR' THEN '311110'
							WHEN caseType = 'JUVDR' THEN '311110'
							WHEN caseType = 'JUVPO' THEN '311110'
							WHEN caseType = 'JUVDH' THEN '311110'
							WHEN caseType = 'JVDV2' THEN '311110'
							WHEN caseType = 'JVEMA' THEN '411110'
							WHEN caseType = 'JUVOT' THEN '311110'
							WHEN caseType = 'JUVST' THEN '311110'
							WHEN caseType = 'JUVTR' THEN '311110'
							WHEN caseType = 'JVCIV' THEN '311110'
							WHEN caseType = 'JVDMV' THEN '311110'
							WHEN caseType = 'JVSAS' THEN '311110'
							WHEN caseType = 'JVSTH' THEN '311110'
							WHEN caseType = 'LANTE' THEN '411110'
							WHEN caseType = 'LIENS' THEN '411110'
							WHEN caseType = 'MALLE' THEN '411110'
							WHEN caseType = 'MALMD' THEN '411110'
							WHEN caseType = 'MLMD' THEN '411110'
							WHEN caseType = 'MALOT' THEN '411110'
							WHEN caseType = 'MENTA' THEN '411110'
							WHEN caseType = 'NAMEC' THEN '411110'
							WHEN caseType = 'NEGA' THEN '411110'
							WHEN caseType = 'NEGMD' THEN '411110'
							WHEN caseType = 'NEGMV' THEN '411110'
							WHEN caseType = 'NEGOT' THEN '411110'
							WHEN caseType = 'NEGPL' THEN '411110'
							WHEN caseType = 'OCFC' THEN '411110'
							WHEN caseType = 'OCFF' THEN '411110'
							WHEN caseType = 'OCCM' THEN '411110'
							WHEN caseType = 'OTTIT' THEN '411110'
							WHEN caseType = 'TOROT' THEN '411110'
							WHEN caseType = 'TORFR' THEN '411110'
							WHEN caseType = 'TORIN' THEN '411110'
							WHEN caseType = 'TORIM' THEN '411110'
							WHEN caseType = 'TORLT' THEN '411110'
							WHEN caseType = 'TORUC' THEN '411110'
							WHEN caseType = 'PATER' THEN '231110'
							WHEN caseType = 'PERMA' THEN '411110'
							WHEN caseType = 'PSEAL' THEN '411110'
							WHEN caseType = 'PLANN' THEN '411110'
							WHEN caseType = 'GENAD' THEN '441110'
							WHEN caseType = 'PROBA' THEN '441110'
							WHEN caseType = 'SETAS' THEN '441110'
							WHEN caseType = 'SPEAD' THEN '441110'
							WHEN caseType = 'SUMAD' THEN '441110'
							WHEN caseType = 'TRUCO' THEN '441110'
							WHEN caseType = 'PROMV' THEN '411110'
							WHEN caseType = 'PROOT' THEN '411110'
							WHEN caseType = 'TPDVO' THEN '211110'
							WHEN caseType = 'HRPRO' THEN '411110'
							WHEN caseType = 'PGI' THEN 'CONV'
							WHEN caseType = 'QUIET' THEN '411110'
							WHEN caseType = 'RPCE' THEN '411110'
							WHEN caseType = 'RPJF' THEN '411110'
							WHEN caseType = 'REALP' THEN '411110'
							WHEN caseType = 'RPOLT' THEN '411110'
							WHEN caseType = 'RPOP' THEN '411110'
							WHEN caseType = 'RPOT' THEN '411110'
							WHEN caseType = 'RPUD' THEN '411110'
							WHEN caseType = 'RECOV' THEN '411110'
							WHEN caseType = 'FMHMN' THEN '411110'
							WHEN caseType = 'SEALE' THEN 'CONV'
							WHEN caseType = 'SRCHR' THEN 'SRCHR'
							WHEN caseType = 'SEARC' THEN '991110'
							WHEN caseType = 'SEPMT' THEN '211110'
							WHEN caseType = 'SKIP' THEN 'CONV'
							WHEN caseType = 'SPEPE' THEN 'CONV'
							WHEN caseType = 'STOCS' THEN '411110'
							WHEN caseType = 'OTHSP' THEN '221110'
							WHEN caseType = 'SP/CC' THEN '411110'
							WHEN caseType = 'TPORQ' THEN '211110'
							WHEN caseType = 'TERMI' THEN '411110'
							WHEN caseType = 'TPR43' THEN '411110'
							WHEN caseType = 'TPROT' THEN '411110'
							WHEN caseType = 'TEST' THEN 'CONV'
							WHEN caseType = 'TOEM' THEN '411110'
							WHEN caseType = 'TOIN' THEN '411110'
							WHEN caseType = 'TOIM' THEN '411110'
							WHEN caseType = 'TOOT' THEN '411110'
							WHEN caseType = 'TOPL' THEN '411110'
							WHEN caseType = 'TORTD' THEN '411110'
							WHEN caseType = 'UIFSA' THEN '221110'
							WHEN caseType = 'UNLAD' THEN '411110'
							WHEN caseType = 'VISIT' THEN '411110'
							WHEN caseType = 'WVFEE' THEN 'CONV'
							WHEN caseType = 'WRIOT' THEN '411110'
							WHEN caseType = 'WRICE' THEN '411110'
							WHEN caseType = 'WRICV' THEN '411110'
							WHEN caseType = 'WRICR' THEN '911110'
							WHEN caseType = 'WRTMD' THEN '411110'
							WHEN caseType = 'WRIMA' THEN '411110'
							WHEN caseType = 'WRIPR' THEN '411110'
							WHEN caseType = 'WRIQW' THEN '411110'
						END
						,[category] = 
						CASE
							WHEN caseType = '432CA' THEN 'JV08'
							WHEN caseType = 'ADOPT' THEN 'FAM10'
							WHEN caseType = 'ADPTA' THEN 'FAM10'
							WHEN caseType = 'ADPTM' THEN 'FAM10'
							WHEN caseType = 'ANNUL' THEN 'FAM01'
							WHEN caseType = 'APPCV' THEN 'CV40G'
							WHEN caseType = 'APPDU' THEN 'A90'
							WHEN caseType = 'APPOC' THEN 'A90'
							WHEN caseType = 'APPMU' THEN 'A90'
							WHEN caseType = 'APPMO' THEN 'A90'
							WHEN caseType = 'BREGU' THEN 'CV33G'
							WHEN caseType = 'BRESC' THEN 'CV33G'
							WHEN caseType = 'CHGTX' THEN 'CHGTX'
							WHEN caseType = 'CIVOT' THEN 'CV49G'
							WHEN caseType = 'COMPR' THEN 'CV47G'
							WHEN caseType = 'CONDE' THEN 'CV05G'
							WHEN caseType = 'CON40' THEN 'CV25G'
							WHEN caseType = 'CONGE' THEN 'CV26G'
							WHEN caseType = 'BREBC' THEN 'CV28G'
							WHEN caseType = 'BRECA' THEN 'CV31G'
							WHEN caseType = 'BRECI' THEN 'CV30G'
							WHEN caseType = 'BREEC' THEN 'CV32G'
							WHEN caseType = 'BREAC' THEN 'CV29G'
							WHEN caseType = 'BREOT' THEN 'CV33G'
							WHEN caseType = 'BREUC' THEN 'CV27G'
							WHEN caseType = 'CONVE' THEN 'CV06G'
							WHEN caseType = 'CRIMI' THEN 'F13'
							WHEN caseType = 'CUSTO' THEN 'FAM03'
							WHEN caseType = 'DAMAG' THEN 'CV06G'
							WHEN caseType = 'DESTR' THEN 'DESTR'
							WHEN caseType = 'DIVOR' THEN 'FAM01'
							WHEN caseType = 'DIVWC' THEN 'FAM01'
							WHEN caseType = 'DIVWO' THEN 'FAM01'
							WHEN caseType = 'DOMOT' THEN 'FAM12'
							WHEN caseType = 'EMPLT' THEN 'CV16G'
							WHEN caseType = 'ENFOJ' THEN 'CV49G'
							WHEN caseType = 'FELON' THEN 'F13'
							WHEN caseType = 'FOREI' THEN 'FAM01'
							WHEN caseType = 'FOREJ' THEN 'CV48G'
							WHEN caseType = 'FORFE' THEN 'CV49G'	
							WHEN caseType = 'GM' THEN 'G40'
							WHEN caseType = 'GUARD' THEN 'FAM14'
							WHEN caseType = 'GUARA' THEN 'FAM14'
							WHEN caseType = 'GUARM' THEN 'FAM15'
							WHEN caseType = 'GUART' THEN 'FAM16'
							WHEN caseType = 'INTEN' THEN 'CV15G'
							WHEN caseType = 'INTER' THEN 'CV33G'
							WHEN caseType = 'INTRA' THEN 'FAM05'
							WHEN caseType = 'JNTWC' THEN 'FAM01'
							WHEN caseType = 'JNTWO' THEN 'FAM01'
							WHEN caseType = 'FOREC' THEN 'CV03G'
							WHEN caseType = 'JRADL' THEN 'CV49G'
							WHEN caseType = 'JRDMV' THEN 'CV37G'
							WHEN caseType = 'JRFOR' THEN 'CV03G'
							WHEN caseType = 'JRAPL' THEN 'CV40G'
							WHEN caseType = 'JRMEN' THEN 'CV36G'
							WHEN caseType = 'JROTH' THEN 'CV41G'
							WHEN caseType = 'JROST' THEN 'CV39G'
							WHEN caseType = 'JRSR' THEN 'CV35G'
							WHEN caseType = 'JRWOR' THEN 'CV38G'
							WHEN caseType = 'JUVDE' THEN 'JV11'
							WHEN caseType = 'JUVPE' THEN 'JV01'
							WHEN caseType = 'JUVPR' THEN 'JV02'
							WHEN caseType = 'JUVDR' THEN 'JV03'
							WHEN caseType = 'JUVPO' THEN 'JV04'
							WHEN caseType = 'JUVDH' THEN 'JUVDET'
							WHEN caseType = 'JVDV2' THEN 'DIV'
							WHEN caseType = 'JVEMA' THEN 'JV11'
							WHEN caseType = 'JUVOT' THEN 'JV05'
							WHEN caseType = 'JUVST' THEN 'JV07'
							WHEN caseType = 'JUVTR' THEN '322110'
							WHEN caseType = 'JVCIV' THEN 'C80'
							WHEN caseType = 'JVDMV' THEN 'JV12'
							WHEN caseType = 'JVSAS' THEN 'JV12'
							WHEN caseType = 'JVSTH' THEN 'JV12'
							WHEN caseType = 'LANTE' THEN 'CV02G'
							WHEN caseType = 'LIENS' THEN 'CV49G'
							WHEN caseType = 'MALLE' THEN 'CV49G'
							WHEN caseType = 'MALMD' THEN 'CV10G'
							WHEN caseType = 'MLMD' THEN 'CV10G'
							WHEN caseType = 'MALOT' THEN 'CV13G'
							WHEN caseType = 'MENTA' THEN 'FAM13'
							WHEN caseType = 'NAMEC' THEN 'FAM12'
							WHEN caseType = 'NEGA' THEN 'CV07G'
							WHEN caseType = 'NEGMD' THEN 'CV10G'
							WHEN caseType = 'NEGMV' THEN 'CV07G'
							WHEN caseType = 'NEGOT' THEN 'CV09G'
							WHEN caseType = 'NEGPL' THEN 'CV08G'
							WHEN caseType = 'OCFC' THEN 'CV47G'
							WHEN caseType = 'OCFF' THEN 'CV48G'
							WHEN caseType = 'OCCM' THEN 'CV49G'
							WHEN caseType = 'OTTIT' THEN 'CV04G'
							WHEN caseType = 'TOROT' THEN 'CV18G'
							WHEN caseType = 'TORFR' THEN 'CV18G'
							WHEN caseType = 'TORIN' THEN 'CV17G'
							WHEN caseType = 'TORIM' THEN 'CV15G'
							WHEN caseType = 'TORLT' THEN 'CV11G'
							WHEN caseType = 'TORUC' THEN 'CV18G'
							WHEN caseType = 'PATER' THEN 'FAM02'
							WHEN caseType = 'PERMA' THEN 'FAM12'
							WHEN caseType = 'PSEAL' THEN 'CV35G'
							WHEN caseType = 'PLANN' THEN 'CV49G'
							WHEN caseType = 'GENAD' THEN 'CV20G'
							WHEN caseType = 'PROBA' THEN 'CV24G'
							WHEN caseType = 'SETAS' THEN 'CV22G'
							WHEN caseType = 'SPEAD' THEN 'CV21G'
							WHEN caseType = 'SUMAD' THEN 'CV19G'
							WHEN caseType = 'TRUCO' THEN 'CV23G'
							WHEN caseType = 'PROMV' THEN 'CV07G'
							WHEN caseType = 'PROOT' THEN 'CV18G'
							WHEN caseType = 'TPDVO' THEN 'FAM11'
							WHEN caseType = 'HRPRO' THEN 'HRPO'
							WHEN caseType = 'PGI' THEN 'PGI'
							WHEN caseType = 'QUIET' THEN 'CV04G'
							WHEN caseType = 'RPCE' THEN 'CV05G'
							WHEN caseType = 'RPJF' THEN 'CV03G'
							WHEN caseType = 'REALP' THEN 'CV06G'
							WHEN caseType = 'RPOLT' THEN 'CV02G'
							WHEN caseType = 'RPOP' THEN 'CV06G'
							WHEN caseType = 'RPOT' THEN 'CV04G'
							WHEN caseType = 'RPUD' THEN 'CV01G'
							WHEN caseType = 'RECOV' THEN 'CV06G'
							WHEN caseType = 'FMHMN' THEN 'CV03G'
							WHEN caseType = 'SEALE' THEN 'SEALE'
							WHEN caseType = 'SRCHR' THEN 'SRCHR'
							WHEN caseType = 'SEPMT' THEN 'FAM01'
							WHEN caseType = 'SKIP' THEN 'SKIP'
							WHEN caseType = 'SPEPE' THEN 'SPEPE'
							WHEN caseType = 'STOCS' THEN 'CV49G'
							WHEN caseType = 'OTHSP' THEN 'FAM05'
							WHEN caseType = 'SP/CC' THEN 'FAM06'
							WHEN caseType = 'TPORQ' THEN 'FAM11'
							WHEN caseType = 'TERMI' THEN 'FAM09'
							WHEN caseType = 'TPR43' THEN 'FAM08'
							WHEN caseType = 'TPROT' THEN 'FAM09'
							WHEN caseType = 'TEST' THEN 'TEST'
							WHEN caseType = 'TOEM' THEN 'CV16G'
							WHEN caseType = 'TOIN' THEN 'CV17G'
							WHEN caseType = 'TOIM' THEN 'CV15G'
							WHEN caseType = 'TOOT' THEN 'CV18G'
							WHEN caseType = 'TOPL' THEN 'CV14G'
							WHEN caseType = 'TORTD' THEN 'CV18G'
							WHEN caseType = 'UIFSA' THEN 'FAM04'
							WHEN caseType = 'VISIT' THEN 'FAM07'
							WHEN caseType = 'WVFEE' THEN 'WVFEE'
							WHEN caseType = 'WRIOT' THEN 'CV46G'
							WHEN caseType = 'WRICE' THEN 'CV46G'
							WHEN caseType = 'WRICV' THEN 'CV42G'
							WHEN caseType = 'WRICR' THEN 'F13'
							WHEN caseType = 'WRTMD' THEN 'CV43G'
							WHEN caseType = 'WRIMA' THEN 'CV43G'
							WHEN caseType = 'WRIPR' THEN 'CV45G'
							WHEN caseType = 'WRIQW' THEN 'CV44G'
							WHEN caseType = 'UNLAD' THEN 'CV01G'
							WHEN caseType = 'SEARC' THEN '991120'
						END
						,[ceqa]
						,[classAction]
						,[complexFeeAssessedAmountCents]
						,[complexLitigation]
						,[conditionallySealed]
						,[consolidationType]
						,[county]
						,[demandAmount]
						,[demandAmountType]
						,[dispositionDate]
						,[dispositionManner]
						,[dispositionType] = 
						CASE
							WHEN status = 'ADJEH' THEN 'AAEH'
							WHEN status = 'ADJDE' THEN 'AJD'
							WHEN status = 'ADJPL' THEN 'APAS'
							WHEN status = 'AFFSP' THEN 'TRAN'
							WHEN status = 'AFFMD' THEN 'TRAN'
							WHEN status = 'MAJOR' THEN 'MAJOR'
							WHEN status = 'APPL' THEN 'TRAN'
							WHEN status = 'BAILF' THEN 'BAIL'
							WHEN status = 'CVTOT' THEN 'TRAN'
							WHEN status = 'CVTCF' THEN 'TRAN'
							WHEN status = 'CICOM' THEN 'CICDC'
							WHEN status = 'CIDIS' THEN 'CIDDC'
							WHEN status = 'DEACT' THEN 'OTHER'
							WHEN status = 'DEATH' THEN 'DEATH'
							WHEN status = 'DWAH' THEN 'PDWH'
							WHEN status = 'DWOH' THEN 'PDWOH'
							WHEN status = 'DISIN' THEN 'INVOLDIS'
							WHEN status = 'DISSU' THEN 'MTD'
							WHEN status = 'DISST' THEN 'STIPD'
							WHEN status = 'DISVO' THEN 'VOLDIS'
							WHEN status = 'DNADJ' THEN 'DNA'
							WHEN status = 'DSJDV' THEN 'DISAD'
							WHEN status = 'DISAF' THEN 'DISAD'
							WHEN status = 'DISTR' THEN 'DISBT'
							WHEN status = 'DSSCT' THEN 'TRAN'
							WHEN status = 'EXPWA' THEN 'OTHER'
							WHEN status = 'CIDFJ' THEN 'FTADJDC'
							WHEN status = 'FURTH' THEN 'OTHER'
							WHEN status = 'GAWH' THEN 'PGWH'
							WHEN status = 'GWOH' THEN 'PGWOH'
							WHEN status = 'JUDAA' THEN 'JOA'
							WHEN status = 'JUDDE' AND caseType IN ('JVCIV') THEN 'DJDC'  --'case.category = , C81, C82 then use DJDC else use DEFJUDG'
							WHEN status = 'JUDDE' and caseType NOT IN ('JVCIC') THEN 'DEFJUDG'
							WHEN status = 'JUDPD' THEN 'OTHER'
							WHEN status = 'JUDST' THEN 'STIPJ'
							WHEN status = 'JUDSU' THEN 'SUMJUD'
							WHEN status = 'JOC' THEN 'GP'
							WHEN status = 'LACKP' THEN 'NPBT'
							WHEN status = 'ORDFU' THEN 'OTHER'
							WHEN status = 'GUARO' THEN 'OTHER'
							WHEN status = 'TERGU' THEN 'TERM'
							WHEN status = 'OTHER' THEN 'OTHER'
							WHEN status = 'PREIN' THEN 'OTHER'
							WHEN status = 'PREVO' THEN 'OTHER'
							WHEN status = 'RECDE' THEN 'OTHER'
							WHEN status = 'REMAN' THEN 'TRAN'
							WHEN status = 'COMPE' THEN 'COMP'
							WHEN status = 'SWRET' THEN 'OTHER'
							WHEN status = 'PVHRG' THEN 'OTHER'
							WHEN status = 'ST/WJ' THEN 'SWWJC'
							WHEN status = 'STW/O' THEN 'SWWOJC'
							WHEN status = 'TIMEX' THEN 'OTHER'
							WHEN status = 'TRANS' THEN 'TRAN'
							WHEN status = 'TRAJV' THEN 'TRAN'
							WHEN status = 'TRIBH' THEN 'OTHER'
							WHEN status = 'BTDIS' THEN 'DISDBT'
							WHEN status = 'BTGPS' THEN 'GPDBT'
							WHEN status = 'BTJOC' THEN 'CONVBT'
							WHEN status = 'BTACT' THEN 'ACQBT'
							WHEN status = 'TRIJU' THEN 'JUDRBT'
							WHEN status = 'TRISE' THEN 'JUDRBT'
							WHEN status = 'TRIJR' THEN 'OTHER'
							WHEN status = 'JTDIS' THEN 'DISDJT'
							WHEN status = 'JTGUI' THEN 'GPDJT'
							WHEN status = 'JTJOC' THEN 'JUDRBT'
							WHEN status = 'JTJOA' THEN 'ACQJT'
							WHEN status = 'JTVER' THEN 'VERDBT'
							WHEN status = 'UNCCV' THEN 'UCVDC'
							WHEN status = 'WAIVE' THEN 'WCTAC'
						END
						,[dmvDocketId]
						,[documentAccessLevel]
						,[eFileCitationDate]
						,[eFileCitationNumber]
						,[efmEFiled]
						,[efmLegacyCase]
						,[excludeFromEFiling]
						,[filingAgency]
						,receivedDate as filingDate
						,[filingStatus]
						,[filingType]
						,[hearingRequestedDate]
						,[hearingRequestedTime]
						,[hearingRequestedType]
						,[incidentZip]
						,[ivrCaseNumber]
						,[ivrCitationNumber]
						,[ivrDLNumber]
						,[jccpCaseNumber]
						,[joined]
						,[judicialOfficer]
						,[jurisdictionalAmount]
						,[latitude]
						,[location]
						,[locationAddress1]
						,[locationAddress2]
						,[locationCity]
						,[locationDept]
						,[locationState]
						,[locationZip]
						,[longitude]
						,[memo2]
						,[noFeeCase]
						,[noFeeCaseSection]
						,[noOfParcels]
						,[originalFiledDate]
						,[originalVerdictDate]
						,[receivedDate]
						,rn.caseOtherNum as ReferenceNumberLd
						,[status] = 
						CASE
							WHEN status = 'ACTIV' THEN 'ACT'
							WHEN status = 'ADJEH' THEN 'DISP'	
							WHEN status = 'ADJPL' THEN 'DISP'
							WHEN status = 'AFFSP' THEN 'DISP'
							WHEN status = 'AFFMD' THEN 'DISP'
							WHEN status = 'MAJOR' THEN 'DISP'	
							WHEN status = 'APPL' THEN 'DISP'
							WHEN status = 'CVTOT' THEN 'DISP'
							WHEN status = 'CVTCF' THEN 'DISP'
							WHEN status = 'CICOM' THEN 'DISP'
							WHEN status = 'CIDIS' THEN 'DISP'
							WHEN status = 'CLOSE' THEN 'DISP'
							WHEN status = 'DEACT' THEN 'DISP'
							WHEN status = 'DEATH' THEN 'DISP'
							WHEN status = 'DWAH' THEN 'DISP'
							WHEN status = 'DWOH' THEN 'DISP'
							WHEN status = 'DISIN' THEN 'DISP'
							WHEN status = 'DISSU' THEN 'DISP'
							WHEN status = 'DISST' THEN 'DISP'
							WHEN status = 'DISVO' THEN 'DISP'
							WHEN status = 'DNADJ' THEN 'DISP'
							WHEN status = 'DSJDV' THEN 'DISP'
							WHEN status = 'DISAF' THEN 'DISP'
							WHEN status = 'DISTR' THEN 'DISP'
							WHEN status = 'DSSCT' THEN 'DISP'
							WHEN status = 'EXPWA' THEN 'DISP'
							WHEN status = 'CIDFJ' THEN 'DISP'
							WHEN status = 'FURTH' THEN 'DISP'
							WHEN status = 'GAWH' THEN 'DISP'
							WHEN status = 'GWOH' THEN 'DISP'
							WHEN status = 'HELD' THEN 'INACT'
							WHEN status = 'JUDAA' THEN 'DISP'
							WHEN status = 'JUDDE' THEN 'DISP'
							WHEN status = 'JUDPD' THEN 'DISP'
							WHEN status = 'JUDST' THEN 'DISP'
							WHEN status = 'JUDSU' THEN 'DISP'
							WHEN status = 'JOC' THEN 'DISP'
							WHEN status = 'DIV' THEN 'DISP'
							WHEN status = 'DIVF' THEN 'DISP'
							WHEN status = 'DIVS' THEN 'DISP'
							WHEN status = 'DVACT' THEN 'DISP'
							WHEN status = 'JVDVO' THEN 'DISP'
							WHEN status = 'LACKP' THEN 'DISP'
							WHEN status = 'ORDFU' THEN 'DISP'
							WHEN status = 'GUARO' THEN 'DISP'
							WHEN status = 'TERGU' THEN 'DISP'
							WHEN status = 'OTHER' THEN 'DISP'
							WHEN status = 'PGACT' THEN 'non-case case'
							WHEN status = 'PGID' THEN 'non-case case'
							WHEN status = 'PGIO' THEN 'non-case case'
							WHEN status = 'PREIN' THEN 'DISP'
							WHEN status = 'PREVO' THEN 'DISP'
							WHEN status = 'REACT' THEN 'REACT'
							WHEN status = 'RECDE' THEN 'DISP'
							WHEN status = 'REMAN' THEN 'DISP'
							WHEN status = 'REOPE' THEN 'REOPEN'
							WHEN status = 'SWRET' THEN 'DISP'
							WHEN status = 'PVHRG' THEN 'REOPEN'
							WHEN status = 'ST/WJ' THEN 'DISP'
							WHEN status = 'STW/O' THEN 'DISP'
							WHEN status = 'STAYE' THEN 'INACT'
							WHEN status = 'TIMEX' THEN 'DISP'
							WHEN status = 'TRANS' THEN 'DISP'
							WHEN status = 'TRAJV' THEN 'DISP'
							WHEN status = 'TRIBH' THEN 'DISP'
							WHEN status = 'BTDIS' THEN 'DISP'
							WHEN status = 'BTGPS' THEN 'DISP'
							WHEN status = 'BTJOC' THEN 'DISP'
							WHEN status = 'BTACT' THEN 'DISP'
							WHEN status = 'TRIJU' THEN 'DISP'
							WHEN status = 'TRISE' THEN 'DISP'
							WHEN status = 'TRIJR' THEN 'DISP'
							WHEN status = 'JTDIS' THEN 'DISP'
							WHEN status = 'JTGUI' THEN 'DISP'
							WHEN status = 'JTJOC' THEN 'DISP'
							WHEN status = 'JTJOA' THEN 'DISP'
							WHEN status = 'JTVER' THEN 'DISP'
							WHEN status = 'UNCCV' THEN 'DISP'
							WHEN status = 'WFDND' THEN 'DISP'
							WHEN status = 'WAIVE' THEN 'DISP'
							WHEN status = 'WARRA' THEN 'INACT'
							WHEN status = 'WARCL' THEN 'REACT'
							WHEN status = 'WARCR' THEN 'INACT'
							WHEN status = 'WARJV' THEN 'INACT'
						END
						,[statusDate]
						,[statusUpdateReason]
						,caseJurisdiction as subJurisdiction
						,[workflowCaseAttribute]
						,[workflowLocation]
						,[workflowLocation2]
						,[workflowLocation3]
						,[caseUnit]
						,[filingAgencyCaseNumber]
						,[convId]
						,[caseSealType]
						,[caseOrigination]
						,t1.person_id
						,t1.party_id,
						cc.caseGroup,
						status as origCaseStatus,
						caseNoteFlag =
						CASE
							WHEN status IN ('AFFSP','AFFMD','APPL','CVTOT','CVTCF','CLOSE','DEACT','DSSCT','FURTH','HELD','JUDPD','DIV','DIVF','DIVS','DVACT','JVDVO','ORDFU','GUARO','PGACT','PGID','PGIO','PREIN','PREVO','RECDE','REMAN','SWRET','TIMEX','TRIBH','TRISE','TRIJR','JTJOC','WFDND','WARRA','WARCL','WARCR','WARJV') THEN 1
							ELSE 0
						END,
						cfSubCategory =
						CASE
							WHEN caseType = '45117.6487453704' THEN '200170'
							WHEN caseType = 'ADPTA' THEN '200170'
							WHEN caseType = 'ADPTM' THEN '200180'
							WHEN caseType = 'ANNUL' THEN '200100'
							WHEN caseType = 'DIVWC' THEN '200110'
							WHEN caseType = 'DIVWO' THEN '200120'
							WHEN caseType = 'DOMOT' THEN '200210'
							WHEN caseType = 'FOREI' THEN '200130'
							WHEN caseType = 'JNTWC' THEN '200140'
							WHEN caseType = 'JNTWO' THEN '200150'
							WHEN caseType = 'JVEMA' THEN '300100'
							WHEN caseType = 'NAMEC' THEN '200190'
							WHEN caseType = 'PERMA' THEN '200200'
							WHEN caseType = 'FMHMN' THEN '400100'
							WHEN caseType = 'SEPMT' THEN '200160'
						END,
						specialStatusFlag =
						case
							WHEN caseType IN ('BREGU','BRESC','CONVE','DAMAG','EMPLT','ENFOJ','FORFE','JRADL','JVDMV','JVSAS','JVSTH','LIENS','MALLE','TORFR','TORUC','PLANN','PROMV','PROOT','QUIET','RECOV','STOCS','SP/CC','WRICE') THEN 1
							ELSE 0
						END,
						origCaseType = caseType,
						dispoisitionFlag =
						CASE
							WHEN cs.status IN ('MAJOR', 'DEATH', 'TERGU', 'COMPE') THEN 1 
							ELSE 0
						END
						FROM ${sql.migrated.db}.ecourt.tCase cs
						INNER JOIN ${sql.staging.db}.dbo.convertCases_conv cc
						ON cs.caseNumber = cc.CaseNumber
						LEFT JOIN (SELECT case_id, person_id, pty.id as party_id, ROW_NUMBER() OVER(PARTITION BY case_id ORDER BY pty.id) rnk, charges  FROM ${sql.migrated.db}.ecourt.tParty pty INNER JOIN (SELECT associatedParty_id, STRING_AGG(id,',') as charges FROM ${sql.migrated.db}.ecourt.tCharge GROUP BY associatedParty_id) chg  on  pty.id = chg.associatedParty_id) t1
						ON cs.id = t1.case_id
						LEFT JOIN (SELECT case_id, number as caseOtherNum, ROW_NUMBER() OVER(PARTITION BY case_id ORDER BY lead DESC) rnk1 FROM ${sql.migrated.db}.ecourt.tCaseOtherNumber cn WHERE type = 'CRT' and active = 1 ) cn
						ON cs.id = cn.case_id AND cn.rnk1 = 1
						LEFT JOIN (SELECT case_id, MAX(number) caseOtherNum FROM ${sql.migrated.db}.ecourt.tCaseOtherNumber cn WHERE type = 'LAW' AND lead = 1 GROUP BY case_id) rn
						ON cs.id = rn.case_id
						WHERE caseGroup = 'CR'
						
					
					
					
							
						]]>
							
							
					

						</param>				
					</params>
					<mappings>
						<mapping source="id" dest="id"/>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="asbestos" dest="asbestos"/>
						<mapping source="assignedTrack" dest="assignedTrack"/>
						<mapping source="caseJurisdiction" dest="caseJurisdiction"/>
						<mapping source="caseName" dest="caseName"/>
						<mapping source="caseNumber" dest="caseNumber"/>
						<mapping source="caseNumberSequence" dest="caseNumberSequence"/>
						<mapping source="caseReason" dest="caseReason"/>
						<mapping source="caseShortName" dest="caseShortName"/>
						<mapping source="caseSubType" dest="caseSubType"/>
						<mapping source="caseType" dest="caseType"/>
						<mapping source="category" dest="category"/>
						<mapping source="ceqa" dest="ceqa"/>
						<mapping source="classAction" dest="classAction"/>
						<mapping source="complexFeeAssessedAmountCents" dest="complexFeeAssessedAmountCents"/>
						<mapping source="complexLitigation" dest="complexLitigation"/>
						<mapping source="conditionallySealed" dest="conditionallySealed"/>
						<mapping source="consolidationType" dest="consolidationType"/>
						<mapping source="county" dest="county"/>
						<mapping source="demandAmount" dest="demandAmount"/>
						<mapping source="demandAmountType" dest="demandAmountType"/>
						<mapping source="dispositionDate" dest="dispositionDate"/>
						<mapping source="dispositionManner" dest="dispositionManner"/>
						<mapping source="dispositionType" dest="dispositionType"/>
						<mapping source="dmvDocketId" dest="dmvDocketId"/>
						<mapping source="documentAccessLevel" dest="documentAccessLevel"/>
						<mapping source="eFileCitationDate" dest="eFileCitationDate"/>
						<mapping source="eFileCitationNumber" dest="eFileCitationNumber"/>
						<mapping source="efmEFiled" dest="efmEFiled"/>
						<mapping source="efmLegacyCase" dest="efmLegacyCase"/>
						<mapping source="excludeFromEFiling" dest="excludeFromEFiling"/>
						<mapping source="filingAgency" dest="filingAgency"/>
						<mapping source="filingDate" dest="filingDate"/>
						<mapping source="filingStatus" dest="filingStatus"/>
						<mapping source="filingType" dest="filingType"/>
						<mapping source="hearingRequestedDate" dest="hearingRequestedDate"/>
						<mapping source="hearingRequestedTime" dest="hearingRequestedTime"/>
						<mapping source="hearingRequestedType" dest="hearingRequestedType"/>
						<mapping source="incidentZip" dest="incidentZip"/>
						<mapping source="ivrCaseNumber" dest="ivrCaseNumber"/>
						<mapping source="ivrCitationNumber" dest="ivrCitationNumber"/>
						<mapping source="ivrDLNumber" dest="ivrDLNumber"/>
						<mapping source="jccpCaseNumber" dest="jccpCaseNumber"/>
						<mapping source="joined" dest="joined"/>
						<mapping source="judicialOfficer" dest="judicialOfficer"/>
						<mapping source="jurisdictionalAmount" dest="jurisdictionalAmount"/>
						<mapping source="latitude" dest="latitude"/>
						<mapping source="location" dest="location"/>
						<mapping source="locationAddress1" dest="locationAddress1"/>
						<mapping source="locationAddress2" dest="locationAddress2"/>
						<mapping source="locationCity" dest="locationCity"/>
						<mapping source="locationDept" dest="locationDept"/>
						<mapping source="locationState" dest="locationState"/>
						<mapping source="locationZip" dest="locationZip"/>
						<mapping source="longitude" dest="longitude"/>
						<mapping source="memo2" dest="memo2"/>
						<mapping source="noFeeCase" dest="noFeeCase"/>
						<mapping source="noFeeCaseSection" dest="noFeeCaseSection"/>
						<mapping source="noOfParcels" dest="noOfParcels"/>
						<mapping source="originalFiledDate" dest="originalFiledDate"/>
						<mapping source="originalVerdictDate" dest="originalVerdictDate"/>
						<mapping source="receivedDate" dest="receivedDate"/>
						<mapping source="ReferenceNumberLd" dest="referenceNumber"/>
						<mapping source="status" dest="status"/>
						<mapping source="statusDate" dest="statusDate"/>
						<mapping source="statusUpdateReason" dest="statusUpdateReason"/>
						<mapping source="subJurisdiction" dest="subJurisdiction"/>
						<mapping source="workflowCaseAttribute" dest="workflowCaseAttribute"/>
						<mapping source="workflowLocation" dest="workflowLocation"/>
						<mapping source="workflowLocation2" dest="workflowLocation2"/>
						<mapping source="workflowLocation3" dest="workflowLocation3"/>
						<mapping source="caseUnit" dest="caseUnit"/>
						<mapping source="filingAgencyCaseNumber" dest="filingAgencyCaseNumber"/>
						<mapping source="convId" dest="convId"/>
						<mapping source="caseSealType" dest="caseSealType"/>
						<mapping source="caseOrigination" dest="caseOrigination"/>
						<mapping source="person_id" dest="person_id"/>
						<mapping source="party_id" dest="party_id"/>
						<mapping source="caseGroup" dest="caseGroup"/>
						<mapping source="origCaseStatus" dest="origCaseStatus"/>
						<mapping source="caseNoteFlag" dest="caseNoteFlag"/>
						<mapping source="cfSubCategory" dest="cfSubCategory"/>
						<mapping source="specialStatusFlag" dest="specialStatusFlag"/>
						<mapping source="origCaseType" dest="origCaseType"/>
						<mapping source="dispoisitionFlag" dest="dispoisitionFlag"/>
					</mappings>
					<destination database="${sql.staging.db}" schema="dbo" table="case_conv"/>
				</action>

	
					
				<action handler="SqlServer.Raw" desc="Update CaseNumber" progresslabel="Update CaseNumber" enabled="true">
					<source database="${sql.staging.db}" schema="dbo">
						
						
						<task handler="SqlServer.Script" desc="Update CaseNumber">
						<![CDATA[
						
						UPDATE ${sql.staging.db}.dbo.case_conv
						SET caseNumber = sourceCaseNumber 
						FROM ${sql.staging.db}.dbo.case_conv cc
						INNER JOIN 
						(SELECT caseNumber FROM ${sql.staging.db}.dbo.case_conv GROUP BY caseNumber HAVING count(1) > 1) t1
						ON cc.caseNumber = t1.caseNumber
						WHERE cc.caseGroup <> 'CR';
						
						UPDATE ${sql.staging.db}.dbo.Case_Conv
						SET dispositionDate = statusDate
						WHERe dispositionType IS NOT NULL;
						
						UPDATE ${sql.staging.db}.dbo.Case_Conv
						SET caseNote = CONCAT('Converted Case Status: ', ll.label)
						FROM ${sql.staging.db}.dbo.Case_Conv cc
						LEFT JOIN (
						SELECT li.code, li.label FROM ${sql.migrated.db}.ecourt.tLookupItem li
						INNER JOIN  ${sql.migrated.db}.ecourt.tLookupList ll
						ON li.lookupList_id = ll.id 
						WHERE ll.name = 'CASE_STATUS') ll
						ON cc.origCaseStatus = ll.code
						WHERE caseNoteFlag = 1;
						
						UPDATE ${sql.staging.db}.dbo.Case_Conv
						SET specialStatusMemo = ll.label
						FROM ${sql.staging.db}.dbo.Case_Conv cc
						LEFT JOIN (
						SELECT li.code, li.label FROM ${sql.migrated.db}.ecourt.tLookupItem li
						INNER JOIN  ${sql.migrated.db}.ecourt.tLookupList ll
						ON li.lookupList_id = ll.id 
						WHERE ll.name = 'CASE_TYPE') ll
						ON cc.origCaseType = ll.code
						WHERE specialStatusFlag = 1;
						
							
						]]>
						
						</task>
						
					</source>
				</action>
			
	
			</actions>
		</stage>
		
		<stage num="22" mode="Serial" desc="Transform SubCase" enabled="true">
			<actions>
			
				<action handler="SqlServer.Raw" desc="Creating subcase_conv table" progresslabel="Creating subcase_conv Table" enabled="true">
					<source database="${sql.staging.db}" schema="dbo">
						<task handler="SqlServer.Script" desc="Create subcase_conv table">
						IF OBJECT_ID('subcase_conv', 'U') IS NOT NULL 
						DROP TABLE [dbo].[subcase_conv];
						
						</task>
						
						<task handler="SqlServer.Script" desc="Create subcase_conv table">
						<![CDATA[
						
						CREATE TABLE [subcase_conv](
						idKey [NUMERIC] (19,0) IDENTITY, 
						[id] [numeric](19, 0)  NULL,
						[accessLevel] [int] NULL,
						[createUserRealName] [varchar](255) NULL,
						[createUsername] [varchar](255) NULL,
						[dateCreated] [datetime] NULL,
						[lastUpdateUserRealName] [varchar](255) NULL,
						[lastUpdateUsername] [varchar](255) NULL,
						[lastUpdated] [datetime] NULL,
						[memo] [varchar](7500) NULL,
						[optlock] [int] NOT NULL,
						[roaAccessLevel] [int] NULL,
						[sourceCaseNumber] [varchar](255) NULL,
						[updateReason] [varchar](255) NULL,
						[caseUnit] [varchar](255) NULL,
						[category] [varchar](255) NULL,
						[dateIncurred] [datetime] NULL,
						[dateOfMarriage] [datetime] NULL,
						[dateOfSeparation] [datetime] NULL,
						[demandAmount] [float] NULL,
						[demandAmountType] [varchar](255) NULL,
						[dispositionDate] [datetime] NULL,
						[dispositionManner] [varchar](255) NULL,
						[dispositionType] [varchar](255) NULL,
						[dmvDocketId] [varchar](255) NULL,
						[documentAccessLevel] [int] NULL,
						[does] [varchar](255) NULL,
						[efmReferenceId] [varchar](255) NULL,
						[exemption] [varchar](255) NULL,
						[filingAgency] [varchar](255) NULL,
						[filingDate] [datetime] NULL,
						[filingType] [varchar](255) NULL,
						[hearingRequestedDate] [datetime] NULL,
						[heldToAnswerDate] [datetime] NULL,
						[indianChildWelfare] [varchar](255) NULL,
						[interstateCompact] [varchar](255) NULL,
						[jurisdictionalAmount] [varchar](255) NULL,
						[location] [varchar](255) NULL,
						[locationAddress1] [varchar](255) NULL,
						[locationAddress2] [varchar](255) NULL,
						[locationCity] [varchar](255) NULL,
						[locationState] [varchar](255) NULL,
						[locationZip] [varchar](255) NULL,
						[otherCaseNumber] [varchar](255) NULL,
						[otherCaseNumberType] [varchar](255) NULL,
						[ownersResponsibility] [varchar](255) NULL,
						[paternityFiling] [varchar](255) NULL,
						[referenceNumber] [varchar](255) NULL,
						[roes] [varchar](255) NULL,
						[shortName] [varchar](255) NULL,
						[status] [varchar](255) NULL,
						[statusDate] [datetime] NULL,
						[subCaseName] [varchar](255) NULL,
						[subCaseNumber] [varchar](255) NULL,
						[subCaseReason] [varchar](255) NULL,
						[subCaseSource] [varchar](255) NULL,
						[subCaseType] [varchar](255) NULL,
						[terminationDate] [datetime] NULL,
						[terminationType] [varchar](255) NULL,
						[violationDate] [datetime] NULL,
						[case_id] [numeric](19, 0) NOT NULL,
						[receivedDate] [datetime] NULL,
						[efmMoreThan12Claims] [tinyint] NULL,
						[originalVerdictDate] [datetime] NULL,
						tSubCase_id NUMERIC(19,0),
						convSubCaseType VARCHAR(255),
						caseNumber VARCHAR(255),
						caseGroup VARCHAR(255)
						
							);				
						]]>
						
						</task>
						
					</source>
				</action>
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform SubCase">
					<source database="${sql.migrated.db}" schema="dbo"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	

							SELECT  sc.[id]
						,sc.[accessLevel]
						,sc.[createUserRealName]
						,sc.[createUsername]
						,sc.[dateCreated]
						,sc.[lastUpdateUserRealName]
						,sc.[lastUpdateUsername]
						,sc.[lastUpdated]
						,sc.[memo]
						,sc.[optlock]
						,sc.[roaAccessLevel]
						,sc.[sourceCaseNumber]
						,sc.[updateReason]
						,sc.[caseUnit]
						,sc.[category]
						,sc.[dateIncurred]
						,sc.[dateOfMarriage]
						,sc.[dateOfSeparation]
						,sc.[demandAmount]
						,sc.[demandAmountType]
						,sc.[dispositionDate]
						,sc.[dispositionManner]
						,sc.[dispositionType]
						,sc.[dmvDocketId]
						,sc.[documentAccessLevel]
						,sc.[does]
						,sc.[efmReferenceId]
						,sc.[exemption]
						,sc.[filingAgency]
						,sc.[filingDate]
						,sc.[filingType]
						,sc.[hearingRequestedDate]
						,sc.[heldToAnswerDate]
						,sc.[indianChildWelfare]
						,sc.[interstateCompact]
						,sc.[jurisdictionalAmount]
						,sc.[location]
						,sc.[locationAddress1]
						,sc.[locationAddress2]
						,sc.[locationCity]
						,sc.[locationState]
						,sc.[locationZip]
						,sc.[otherCaseNumber]
						,sc.[otherCaseNumberType]
						,sc.[ownersResponsibility]
						,sc.[paternityFiling]
						,sc.[referenceNumber]
						,sc.[roes]
						,sc.[shortName]
						,sc.[status]
						,sc.[statusDate]
						,sc.[subCaseName]
						,sc.[subCaseNumber]
						,sc.[subCaseReason]
						,sc.[subCaseSource]
						,sc.[subCaseType]
						,sc.[terminationDate]
						,sc.[terminationType]
						,sc.[violationDate]
						,sc.[case_id]
						,sc.[receivedDate]
						,sc.[efmMoreThan12Claims]
						,sc.[originalVerdictDate]
						,convSubCaseType = 'MAIN'
						,cs.caseNumber 
						FROM [ecourt].[tSubCase] sc
						INNER JOIN ${sql.staging.db}.dbo.convertCases_conv cc
						ON sc.case_id = cc.case_id
						INNER JOIN
						(SELECT MIN(id) id  FROM ecourt.tSubCase sc GROUP BY case_id) t1
						ON sc.id = t1.id
						LEFT JOIN ${sql.staging.db}.dbo.case_conv CS
						ON sc.case_id = cs.id
						
							
						]]>
						</param>
					</params>
					<mappings>
						<mapping source="id" dest="id"/>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="caseUnit" dest="caseUnit"/>
						<mapping source="category" dest="category"/>
						<mapping source="dateIncurred" dest="dateIncurred"/>
						<mapping source="dateOfMarriage" dest="dateOfMarriage"/>
						<mapping source="dateOfSeparation" dest="dateOfSeparation"/>
						<mapping source="demandAmount" dest="demandAmount"/>
						<mapping source="demandAmountType" dest="demandAmountType"/>
						<mapping source="dispositionDate" dest="dispositionDate"/>
						<mapping source="dispositionManner" dest="dispositionManner"/>
						<mapping source="dispositionType" dest="dispositionType"/>
						<mapping source="dmvDocketId" dest="dmvDocketId"/>
						<mapping source="documentAccessLevel" dest="documentAccessLevel"/>
						<mapping source="does" dest="does"/>
						<mapping source="efmReferenceId" dest="efmReferenceId"/>
						<mapping source="exemption" dest="exemption"/>
						<mapping source="filingAgency" dest="filingAgency"/>
						<mapping source="filingDate" dest="filingDate"/>
						<mapping source="filingType" dest="filingType"/>
						<mapping source="hearingRequestedDate" dest="hearingRequestedDate"/>
						<mapping source="heldToAnswerDate" dest="heldToAnswerDate"/>
						<mapping source="indianChildWelfare" dest="indianChildWelfare"/>
						<mapping source="interstateCompact" dest="interstateCompact"/>
						<mapping source="jurisdictionalAmount" dest="jurisdictionalAmount"/>
						<mapping source="location" dest="location"/>
						<mapping source="locationAddress1" dest="locationAddress1"/>
						<mapping source="locationAddress2" dest="locationAddress2"/>
						<mapping source="locationCity" dest="locationCity"/>
						<mapping source="locationState" dest="locationState"/>
						<mapping source="locationZip" dest="locationZip"/>
						<mapping source="otherCaseNumber" dest="otherCaseNumber"/>
						<mapping source="otherCaseNumberType" dest="otherCaseNumberType"/>
						<mapping source="ownersResponsibility" dest="ownersResponsibility"/>
						<mapping source="paternityFiling" dest="paternityFiling"/>
						<mapping source="referenceNumber" dest="referenceNumber"/>
						<mapping source="roes" dest="roes"/>
						<mapping source="shortName" dest="shortName"/>
						<mapping source="status" dest="status"/>
						<mapping source="statusDate" dest="statusDate"/>
						<mapping source="subCaseName" dest="subCaseName"/>
						<mapping source="subCaseNumber" dest="subCaseNumber"/>
						<mapping source="subCaseReason" dest="subCaseReason"/>
						<mapping source="subCaseSource" dest="subCaseSource"/>
						<mapping source="subCaseType" dest="subCaseType"/>
						<mapping source="terminationDate" dest="terminationDate"/>
						<mapping source="terminationType" dest="terminationType"/>
						<mapping source="violationDate" dest="violationDate"/>
						<mapping source="case_id" dest="case_id"/>
						<mapping source="receivedDate" dest="receivedDate"/>
						<mapping source="efmMoreThan12Claims" dest="efmMoreThan12Claims"/>
						<mapping source="originalVerdictDate" dest="originalVerdictDate"/>
						<mapping source="convSubCaseType" dest="convSubCaseType"/>
						<mapping source="caseNumber" dest="caseNumber"/>
					</mappings>
					<destination database="${sql.staging.db}" schema="dbo" table="subCase_conv"/>
				</action>

				
				
				
		
			
				

			</actions>
		</stage>
	
					
		<stage num="24" mode="Serial" desc="Transform Person/Party" enabled="true">
			<actions>
			
				<action handler="SqlServer.Raw" desc="Creating subcase_conv table" progresslabel="Creating person_conv Table" enabled="true">
					<source database="${sql.staging.db}" schema="dbo">
						<task handler="SqlServer.Script" desc="Create subcase_conv table">
						IF OBJECT_ID('person_conv', 'U') IS NOT NULL 
						DROP TABLE [dbo].[person_conv];
						
						IF OBJECT_ID('party_conv', 'U') IS NOT NULL 
						DROP TABLE [dbo].[party_conv];
						</task>
						
						<task handler="SqlServer.Script" desc="Create subcase_conv table">
						<![CDATA[
						
						CREATE TABLE [person_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 
							id NUMERIC(19,0),
							[accessLevel] [int] NULL,
							[createUserRealName] [varchar](255) NULL,
							[createUsername] [varchar](255) NULL,
							[dateCreated] [datetime] NULL,
							[lastUpdateUserRealName] [varchar](255) NULL,
							[lastUpdateUsername] [varchar](255) NULL,
							[lastUpdated] [datetime] NULL,
							[memo] [varchar](512) NULL,
							[optlock] [int] NOT NULL,
							[roaAccessLevel] [int] NULL,
							[sourceCaseNumber] [varchar](255) NULL,
							[updateReason] [varchar](255) NULL,
							[addressAccessLevel] [int] NULL,
							[collectionAssignedDate] [datetime] NULL,
							[efmErroneouslySued] [tinyint] NULL,
							[efmExemptionType] [varchar](255) NULL,
							[efmFeeExemptionRequestType] [varchar](255) NULL,
							[efmFeeExemptionType] [varchar](255) NULL,
							[efmInterpreterLanguage] [varchar](255) NULL,
							[efmTrueName] [varchar](255) NULL,
							[efspFeeWaiverFiled] [tinyint] NULL,
							[efspFirstAppearancePaid] [tinyint] NULL,
							[efspGovernmentExempt] [tinyint] NULL,
							[electronicPinNumber] [varchar](255) NULL,
							[email] [varchar](255) NULL,
							[firstAppearancePaid] [tinyint] NULL,
							[firstName] [varchar](255) NULL,
							[governmentAgency] [tinyint] NULL,
							[jobTitle] [varchar](255) NULL,
							[lastName] [varchar](255) NULL,
							[lastName2] [varchar](255) NULL,
							[legalName] [varchar](255) NULL,
							[middleName] [varchar](255) NULL,
							[nameExact] [varchar](255) NULL,
							[nameExtension] [varchar](255) NULL,
							[namePrefix] [varchar](255) NULL,
							[nameSuffix] [varchar](255) NULL,
							[organization] [tinyint] NULL,
							[organizationName] [varchar](255) NULL,
							[organizationSuffix] [varchar](255) NULL,
							[personCode] [varchar](255) NULL,
							[personId] [numeric](19, 0) NULL,
							[personSource] [varchar](255) NULL,
							[personSubType] [varchar](255) NULL,
							[personType] [varchar](255) NULL,
							[pinNumber] [varchar](255) NULL,
							[searchableInitials] [varchar](255) NULL,
							[status] [varchar](255) NULL,
							[statusDate] [datetime] NULL,
							[collectionAgency_id] [numeric](19, 0) NULL,
							[mergedToPerson_id] [numeric](19, 0) NULL,
							[personIdentifier_id] [numeric](19, 0)  NULL,
							[convId] [int] NULL,
							[efspEService] [tinyint] NULL,
							[efspEmail] [varchar](255) NULL,
							[electronicService] [tinyint] NULL,
							[eftAccountName] [varchar](255) NULL,
							[eftAccountNo] [varchar](255) NULL,
							[eftRoutingNo] [varchar](255) NULL,
							tPID NUMERIC(19,0),
							tPerson_id NUMERIC(19,0),
							case_id NUMERIC(19,0),
							caseNumber VARCHAR(255),
							partyTypeFlg NUMERIC(19,0),
							caseNumberTR VARCHAR(255),
							tCaseTR_id NUMERIC(19,0),
							tSubCaseTR_id NUMERIC(19,0),
							tPartyTR_id NUMERIC(19,0),
							caseNameTR VARCHAR(255),
							filingDateTR datetime,
							caseTypeTR VARCHAR(255),
							fileNames VARCHAR(5000)
							
							);				
							
							CREATE TABLE [party_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 
							[id] [numeric](19, 0) NULL,
							[accessLevel] [int] NULL,
							[createUserRealName] [varchar](255) NULL,
							[createUsername] [varchar](255) NULL,
							[dateCreated] [datetime] NULL,
							[lastUpdateUserRealName] [varchar](255) NULL,
							[lastUpdateUsername] [varchar](255) NULL,
							[lastUpdated] [datetime] NULL,
							[memo] [varchar](512) NULL,
							[optlock] [int] NOT NULL,
							[roaAccessLevel] [int] NULL,
							[sourceCaseNumber] [varchar](255) NULL,
							[updateReason] [varchar](255) NULL,
							[allowPublicAccess] [tinyint] NULL,
							[cmsReferenceId] [varchar](255) NULL,
							[crsExemptOverride] [tinyint] NULL,
							[dispositionDate] [datetime] NULL,
							[dispositionManner] [varchar](255) NULL,
							[dispositionType] [varchar](255) NULL,
							[efmReferenceId] [varchar](255) NULL,
							[endDate] [datetime] NULL,
							[exemptEligible] [varchar](255) NULL,
							[formerRepresentationText] [varchar](255) NULL,
							[nonMonApplication] [varchar](255) NOT NULL,
							[partyDesignationType] [varchar](255) NULL,
							[partyNumber] [varchar](255) NULL,
							[partySource] [varchar](255) NULL,
							[partySubType] [varchar](255) NULL,
							[partyType] [varchar](255) NULL,
							[representationText] [varchar](255) NULL,
							[representingPartyType] [varchar](255) NULL,
							[selfRepresented] [varchar](255) NULL,
							[startDate] [datetime] NULL,
							[status] [varchar](255) NULL,
							[statusDate] [datetime] NULL,
							[stayDate] [datetime] NULL,
							[stayEndDate] [datetime] NULL,
							[stayStatus] [varchar](255) NULL,
							[case_id] [numeric](19, 0) NOT NULL,
							[exportBatch_id] [numeric](19, 0) NULL,
							[exportCompletedBatch_id] [numeric](19, 0) NULL,
							[exportFailedBatch_id] [numeric](19, 0) NULL,
							[person_id] [numeric](19, 0) NOT NULL,
							[subCase_id] [numeric](19, 0) NULL,
							[convId] [int] NULL,
							[flag1] [tinyint] NULL,
							[flag2] [tinyint] NULL,
							[flag3] [tinyint] NULL,
							[flag4] [tinyint] NULL,
							[flag5] [tinyint] NULL,
							[notes] [varchar](7500) NULL,
							[notification] [tinyint] NULL,
							[dirOrgUnit_id] [numeric](19, 0) NULL,
							[eventInvPersConvId] [int] NULL,
							tParty_id NUMERIC(19,0),
							charges VARCHAR(255),
							caseNumber VARCHAR(255),
							caseKey NUMERIC(19,0)
							);
							
						]]>
						
						</task>
						
					</source>
				</action>
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Person">
					<source database="${sql.migrated.db}" schema="dbo"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	

						SELECT pr.*, pty.case_id, cc.caseNumber,
						partyTypeFlg =
						CASE
							WHEN partyType LIKE ('%AMDMI%') THEN 1
							WHEN partyType LIKE ('%APCA%') THEN 1
							WHEN partyType LIKE ('%APCAT%') THEN 1
							WHEN partyType LIKE ('%ATPT%') THEN 1
							WHEN partyType LIKE ('%ATRP%') THEN 1
							WHEN partyType LIKE ('%ATRPI%') THEN 1
							WHEN partyType LIKE ('%ATTY%') THEN 1
							WHEN partyType LIKE ('%ETHPR%') THEN 1
							WHEN partyType LIKE ('%EventAssignment%') THEN 1
							WHEN partyType LIKE ('%PA%') THEN 1
							ELSE 0
						END
						FROM ecourt.tPerson pr
						LEFT JOIN (SELECT pty.case_id, pty.person_id, STRING_AGG(chg.id,',') as charges, STRING_AGG(partyType,',') partyType FROM ecourt.tParty pty 
									LEFT JOIN ecourt.tCharge chg 
									ON pty.id = chg.associatedParty_id
									GROUP BY pty.case_id, pty.person_id ) pty
						ON pr.id = pty.person_id
						LEFT JOIN ${sql.staging.db}.dbo.case_conv cc
						ON pty.case_id = cc.id
						WHERE charges IS NULL or cc.person_id IS NULL
						



						
							
						]]>

						</param>				
					</params>
					<mappings>
						<mapping source="id" dest="id"/>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="addressAccessLevel" dest="addressAccessLevel"/>
						<mapping source="collectionAssignedDate" dest="collectionAssignedDate"/>
						<mapping source="efmErroneouslySued" dest="efmErroneouslySued"/>
						<mapping source="efmExemptionType" dest="efmExemptionType"/>
						<mapping source="efmFeeExemptionRequestType" dest="efmFeeExemptionRequestType"/>
						<mapping source="efmFeeExemptionType" dest="efmFeeExemptionType"/>
						<mapping source="efmInterpreterLanguage" dest="efmInterpreterLanguage"/>
						<mapping source="efmTrueName" dest="efmTrueName"/>
						<mapping source="efspFeeWaiverFiled" dest="efspFeeWaiverFiled"/>
						<mapping source="efspFirstAppearancePaid" dest="efspFirstAppearancePaid"/>
						<mapping source="efspGovernmentExempt" dest="efspGovernmentExempt"/>
						<mapping source="electronicPinNumber" dest="electronicPinNumber"/>
						<mapping source="email" dest="email"/>
						<mapping source="firstAppearancePaid" dest="firstAppearancePaid"/>
						<mapping source="firstName" dest="firstName"/>
						<mapping source="governmentAgency" dest="governmentAgency"/>
						<mapping source="jobTitle" dest="jobTitle"/>
						<mapping source="lastName" dest="lastName"/>
						<mapping source="lastName2" dest="lastName2"/>
						<mapping source="legalName" dest="legalName"/>
						<mapping source="middleName" dest="middleName"/>
						<mapping source="nameExact" dest="nameExact"/>
						<mapping source="nameExtension" dest="nameExtension"/>
						<mapping source="namePrefix" dest="namePrefix"/>
						<mapping source="nameSuffix" dest="nameSuffix"/>
						<mapping source="organization" dest="organization"/>
						<mapping source="organizationName" dest="organizationName"/>
						<mapping source="organizationSuffix" dest="organizationSuffix"/>
						<mapping source="personCode" dest="personCode"/>
						<mapping source="personId" dest="personId"/>
						<mapping source="personSource" dest="personSource"/>
						<mapping source="personSubType" dest="personSubType"/>
						<mapping source="personType" dest="personType"/>
						<mapping source="pinNumber" dest="pinNumber"/>
						<mapping source="searchableInitials" dest="searchableInitials"/>
						<mapping source="status" dest="status"/>
						<mapping source="statusDate" dest="statusDate"/>
						<mapping source="collectionAgency_id" dest="collectionAgency_id"/>
						<mapping source="mergedToPerson_id" dest="mergedToPerson_id"/>
						<mapping source="personIdentifier_id" dest="personIdentifier_id"/>
						<mapping source="convId" dest="convId"/>
						<mapping source="efspEService" dest="efspEService"/>
						<mapping source="efspEmail" dest="efspEmail"/>
						<mapping source="electronicService" dest="electronicService"/>
						<mapping source="eftAccountName" dest="eftAccountName"/>
						<mapping source="eftAccountNo" dest="eftAccountNo"/>
						<mapping source="eftRoutingNo" dest="eftRoutingNo"/>						
						<mapping source="case_id" dest="case_id"/>						
						<mapping source="caseNumber" dest="caseNumber"/>
						<mapping source="partyTypeFlg" dest="partyTypeFlg"/>								
					</mappings>
					<destination database="${sql.staging.db}" schema="dbo" table="person_conv"/>
				</action>
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Person" enabled="true">
					<source database="${sql.migrated.db}" schema="dbo"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	

						SELECT pr.*, pty.case_id, cc.caseNumber,
						partyTypeFlg =
						CASE
							WHEN partyType LIKE ('%AMDMI%') THEN 1
							WHEN partyType LIKE ('%APCA%') THEN 1
							WHEN partyType LIKE ('%APCAT%') THEN 1
							WHEN partyType LIKE ('%ATPT%') THEN 1
							WHEN partyType LIKE ('%ATRP%') THEN 1
							WHEN partyType LIKE ('%ATRPI%') THEN 1
							WHEN partyType LIKE ('%ATTY%') THEN 1
							WHEN partyType LIKE ('%ETHPR%') THEN 1
							WHEN partyType LIKE ('%EventAssignment%') THEN 1
							WHEN partyType LIKE ('%PA%') THEN 1
							ELSE 0
						END
						FROM ecourt.tPerson pr
						INNER JOIN (SELECT pty.case_id, pty.person_id, STRING_AGG(partyType,',') partyType FROM ecourt.tParty pty 
									INNER JOIN ecourt.tCharge chg 
									ON pty.id = associatedParty_id
									GROUP BY pty.case_id, pty.person_id ) pty
						ON pr.id = pty.person_id
						LEFT JOIN ${sql.staging.db}.dbo.case_conv cc
						ON pty.case_id = cc.id AND cc.person_id = pr.id
						WHERE cc.person_id IS NOT NULL
						



						
							
						]]>

						</param>				
					</params>
					<mappings>
						<mapping source="id" dest="id"/>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="addressAccessLevel" dest="addressAccessLevel"/>
						<mapping source="collectionAssignedDate" dest="collectionAssignedDate"/>
						<mapping source="efmErroneouslySued" dest="efmErroneouslySued"/>
						<mapping source="efmExemptionType" dest="efmExemptionType"/>
						<mapping source="efmFeeExemptionRequestType" dest="efmFeeExemptionRequestType"/>
						<mapping source="efmFeeExemptionType" dest="efmFeeExemptionType"/>
						<mapping source="efmInterpreterLanguage" dest="efmInterpreterLanguage"/>
						<mapping source="efmTrueName" dest="efmTrueName"/>
						<mapping source="efspFeeWaiverFiled" dest="efspFeeWaiverFiled"/>
						<mapping source="efspFirstAppearancePaid" dest="efspFirstAppearancePaid"/>
						<mapping source="efspGovernmentExempt" dest="efspGovernmentExempt"/>
						<mapping source="electronicPinNumber" dest="electronicPinNumber"/>
						<mapping source="email" dest="email"/>
						<mapping source="firstAppearancePaid" dest="firstAppearancePaid"/>
						<mapping source="firstName" dest="firstName"/>
						<mapping source="governmentAgency" dest="governmentAgency"/>
						<mapping source="jobTitle" dest="jobTitle"/>
						<mapping source="lastName" dest="lastName"/>
						<mapping source="lastName2" dest="lastName2"/>
						<mapping source="legalName" dest="legalName"/>
						<mapping source="middleName" dest="middleName"/>
						<mapping source="nameExact" dest="nameExact"/>
						<mapping source="nameExtension" dest="nameExtension"/>
						<mapping source="namePrefix" dest="namePrefix"/>
						<mapping source="nameSuffix" dest="nameSuffix"/>
						<mapping source="organization" dest="organization"/>
						<mapping source="organizationName" dest="organizationName"/>
						<mapping source="organizationSuffix" dest="organizationSuffix"/>
						<mapping source="personCode" dest="personCode"/>
						<mapping source="personId" dest="personId"/>
						<mapping source="personSource" dest="personSource"/>
						<mapping source="personSubType" dest="personSubType"/>
						<mapping source="personType" dest="personType"/>
						<mapping source="pinNumber" dest="pinNumber"/>
						<mapping source="searchableInitials" dest="searchableInitials"/>
						<mapping source="status" dest="status"/>
						<mapping source="statusDate" dest="statusDate"/>
						<mapping source="collectionAgency_id" dest="collectionAgency_id"/>
						<mapping source="mergedToPerson_id" dest="mergedToPerson_id"/>
						<mapping source="personIdentifier_id" dest="personIdentifier_id"/>
						<mapping source="convId" dest="convId"/>
						<mapping source="efspEService" dest="efspEService"/>
						<mapping source="efspEmail" dest="efspEmail"/>
						<mapping source="electronicService" dest="electronicService"/>
						<mapping source="eftAccountName" dest="eftAccountName"/>
						<mapping source="eftAccountNo" dest="eftAccountNo"/>
						<mapping source="eftRoutingNo" dest="eftRoutingNo"/>						
						<mapping source="case_id" dest="case_id"/>						
						<mapping source="caseNumber" dest="caseNumber"/>						
						<mapping source="partyTypeFlg" dest="partyTypeFlg"/>						
					</mappings>
					<destination database="${sql.staging.db}" schema="dbo" table="person_conv"/>
				</action>
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Party" enabled="true">
					<source database="${sql.migrated.db}" schema="dbo"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	

						SELECT pty.*, cc.CaseNumber, cc.idKey as caseKey,
						partyTypeLd =
						case
							WHEN partyType = 'THRD' THEN '3RDDEF'
							WHEN partyType = 'THRP' THEN '3RDPLF'
							WHEN partyType = 'ADTAD' THEN 'ADOPT'
							WHEN partyType = 'ADTMN' THEN 'ADOPT'
							--WHEN partyType = 'ADVRS' THEN ''
							WHEN partyType = 'APPEL' THEN 'APLNT'
							WHEN partyType = 'APLIC' THEN 'APP'
							WHEN partyType = 'COPET' THEN 'COD'
							WHEN partyType = 'COUNT' THEN 'COUNTERCLAIM'
							WHEN partyType = 'CTDEF' THEN 'COUNTERDEF'
							WHEN partyType = 'DECEA' THEN 'DEC'
							WHEN partyType = 'DEF' THEN 'DEF'
							WHEN partyType = 'ADOPD' THEN 'FATH'
							WHEN partyType = 'FATHE' THEN ''
							WHEN partyType = 'GUARD' THEN 'GRD'
							WHEN partyType = 'GADLI' THEN 'GRDAD'
							WHEN partyType = 'INTPT' THEN 'IP'
							WHEN partyType = 'JUV' THEN 'MINOR'
							WHEN partyType = 'MINOR' THEN 'MINOR'
							WHEN partyType = 'ADOPM' THEN 'MOTH'
							WHEN partyType = 'MOTHE' THEN 'MOTH'
							WHEN partyType = 'OBLGR' THEN 'OBLGE'
							WHEN partyType = 'OBLIG' THEN 'OBLGR'
							WHEN partyType = 'PUBAD' THEN 'PADMIN'
							WHEN partyType = 'JUVPT' THEN 'PARENT'
							WHEN partyType = 'PET' THEN 'PET'
							WHEN partyType = 'PETIT' THEN 'PET'
							WHEN partyType = 'PLAIN' THEN 'PLAIN'
							WHEN partyType = 'PPTPO' THEN 'PROTPERS'
							WHEN partyType = 'PROTP' THEN 'PROTPERS'
							WHEN partyType = 'RESPO' THEN 'RES'
							WHEN partyType = 'RPI' THEN 'RPI'
							WHEN partyType = 'TRUST' THEN 'TRUST'
							WHEN partyType = 'VIC' THEN 'VICTIM'
							WHEN partyType = 'WIT' THEN 'WIT'
							WHEN partyType = 'JVCOD' THEN 'JVCOD'
							WHEN partyType = 'CONVE' THEN 'CONVE'
							WHEN partyType = 'BBMAN' THEN 'BBMAN'
							WHEN partyType = 'SEIZP' THEN 'SEIZP'
							WHEN partyType = 'RELP' THEN 'RELP'
							WHEN partyType = 'MWARD' THEN 'MWARD'
							WHEN partyType = 'AWARD' THEN 'AWARD'
							WHEN partyType = 'EventAssignment' THEN 'EventAssignment'
							WHEN partyType = 'SUBJ' THEN 'SUBJ'
							WHEN partyType = 'COD' THEN 'COD'
							WHEN partyType = 'CHILD' THEN 'CHILD'
							WHEN partyType = 'MINPS' THEN 'MINPS'
							WHEN partyType = 'OTREL' THEN 'OTREL'
							WHEN partyType = 'MNNNM' THEN 'MNNNM'
							WHEN partyType = 'NONCA' THEN 'NONCA'
							WHEN partyType = 'PGIPT' THEN 'PGIPT'
							WHEN partyType = 'PUBGD' THEN 'PUBGD'
							WHEN partyType = 'SWAP' THEN 'SWAP'
							WHEN partyType = 'PROTM' THEN 'PROTM'
							WHEN partyType = 'ADVJV' THEN 'ADVJV'
							WHEN partyType = 'SWSUB' THEN 'SWSUB'
							WHEN partyType = 'JUROR' THEN 'JUROR'
							WHEN partyType = 'CONFL' THEN 'CONFL'
							WHEN partyType = 'CMPEV' THEN 'CMPEV'
							WHEN partyType = 'MNOGN' THEN 'MNOGN'
							WHEN partyType = 'LEGAL' THEN 'LEGAL'
							WHEN partyType = 'LWFRM' THEN 'LWFRM'
							WHEN partyType = 'PETOR' THEN 'PETOR'
							WHEN partyType = 'PETNW' THEN 'PETNW'
						END
						FROM
						ecourt.tParty pty
						LEFT JOIN ${sql.staging.db}.dbo.case_conv cc
						ON pty.case_id = cc.id
						LEFT JOIN (SELECT associatedParty_id, STRING_AGG(statute_id, ',') charges FROM ecourt.tCharge chg GROUP BY associatedParty_id) chg
						ON pty.id = chg.associatedParty_id
						WHERE --partyType NOT IN ('AMDMI', 'APCA', 'APCAT', 'ATPT', 'ATRP', 'ATRPI', 'ATTY', 'ETHPR', 'EventAssignment', 'PA')
						 (charges IS NULL or cc.person_id IS NULL)
						
							
						]]>

						</param>				
					</params>
					<mappings>
						<mapping source="id" dest="id"/>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="allowPublicAccess" dest="allowPublicAccess"/>
						<mapping source="cmsReferenceId" dest="cmsReferenceId"/>
						<mapping source="crsExemptOverride" dest="crsExemptOverride"/>
						<mapping source="dispositionDate" dest="dispositionDate"/>
						<mapping source="dispositionManner" dest="dispositionManner"/>
						<mapping source="dispositionType" dest="dispositionType"/>
						<mapping source="efmReferenceId" dest="efmReferenceId"/>
						<mapping source="endDate" dest="endDate"/>
						<mapping source="exemptEligible" dest="exemptEligible"/>
						<mapping source="formerRepresentationText" dest="formerRepresentationText"/>
						<mapping source="nonMonApplication" dest="nonMonApplication"/>
						<mapping source="partyDesignationType" dest="partyDesignationType"/>
						<mapping source="partyNumber" dest="partyNumber"/>
						<mapping source="partySource" dest="partySource"/>
						<mapping source="partySubType" dest="partySubType"/>
						<mapping source="partyTypeLd" dest="partyType"/>
						<mapping source="representationText" dest="representationText"/>
						<mapping source="representingPartyType" dest="representingPartyType"/>
						<mapping source="selfRepresented" dest="selfRepresented"/>
						<mapping source="startDate" dest="startDate"/>
						<mapping source="status" dest="status"/>
						<mapping source="statusDate" dest="statusDate"/>
						<mapping source="stayDate" dest="stayDate"/>
						<mapping source="stayEndDate" dest="stayEndDate"/>
						<mapping source="stayStatus" dest="stayStatus"/>
						<mapping source="case_id" dest="case_id"/>
						<mapping source="exportBatch_id" dest="exportBatch_id"/>
						<mapping source="exportCompletedBatch_id" dest="exportCompletedBatch_id"/>
						<mapping source="exportFailedBatch_id" dest="exportFailedBatch_id"/>
						<mapping source="person_id" dest="person_id"/>
						<mapping source="subCase_id" dest="subCase_id"/>
						<mapping source="convId" dest="convId"/>
						<mapping source="flag1" dest="flag1"/>
						<mapping source="flag2" dest="flag2"/>
						<mapping source="flag3" dest="flag3"/>
						<mapping source="flag4" dest="flag4"/>
						<mapping source="flag5" dest="flag5"/>
						<mapping source="notes" dest="notes"/>
						<mapping source="notification" dest="notification"/>
						<mapping source="dirOrgUnit_id" dest="dirOrgUnit_id"/>
						<mapping source="eventInvPersConvId" dest="eventInvPersConvId"/>
						<mapping source="caseNumber" dest="caseNumber"/>
						<mapping source="caseKey" dest="caseKey"/>
					</mappings>
					<destination database="${sql.staging.db}" schema="dbo" table="party_conv"/>
				</action>
				
					
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Party" enabled="true">
					<source database="${sql.migrated.db}" schema="dbo"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	

						SELECT pty.*, cc.CaseNumber, cc.idKey as caseKey,
						partyTypeLd =
						case
							WHEN partyType = 'THRD' THEN '3RDDEF'
							WHEN partyType = 'THRP' THEN '3RDPLF'
							WHEN partyType = 'ADTAD' THEN 'ADOPT'
							WHEN partyType = 'ADTMN' THEN 'ADOPT'
							--WHEN partyType = 'ADVRS' THEN ''
							WHEN partyType = 'APPEL' THEN 'APLNT'
							WHEN partyType = 'APLIC' THEN 'APP'
							WHEN partyType = 'COPET' THEN 'COD'
							WHEN partyType = 'COUNT' THEN 'COUNTERCLAIM'
							WHEN partyType = 'CTDEF' THEN 'COUNTERDEF'
							WHEN partyType = 'DECEA' THEN 'DEC'
							WHEN partyType = 'DEF' THEN 'DEF'
							WHEN partyType = 'ADOPD' THEN 'FATH'
							WHEN partyType = 'FATHE' THEN ''
							WHEN partyType = 'GUARD' THEN 'GRD'
							WHEN partyType = 'GADLI' THEN 'GRDAD'
							WHEN partyType = 'INTPT' THEN 'IP'
							WHEN partyType = 'JUV' THEN 'MINOR'
							WHEN partyType = 'MINOR' THEN 'MINOR'
							WHEN partyType = 'ADOPM' THEN 'MOTH'
							WHEN partyType = 'MOTHE' THEN 'MOTH'
							WHEN partyType = 'OBLGR' THEN 'OBLGE'
							WHEN partyType = 'OBLIG' THEN 'OBLGR'
							WHEN partyType = 'PUBAD' THEN 'PADMIN'
							WHEN partyType = 'JUVPT' THEN 'PARENT'
							WHEN partyType = 'PET' THEN 'PET'
							WHEN partyType = 'PETIT' THEN 'PET'
							WHEN partyType = 'PLAIN' THEN 'PLAIN'
							WHEN partyType = 'PPTPO' THEN 'PROTPERS'
							WHEN partyType = 'PROTP' THEN 'PROTPERS'
							WHEN partyType = 'RESPO' THEN 'RES'
							WHEN partyType = 'RPI' THEN 'RPI'
							WHEN partyType = 'TRUST' THEN 'TRUST'
							WHEN partyType = 'VIC' THEN 'VICTIM'
							WHEN partyType = 'WIT' THEN 'WIT'
							WHEN partyType = 'JVCOD' THEN 'JVCOD'
							WHEN partyType = 'CONVE' THEN 'CONVE'
							WHEN partyType = 'BBMAN' THEN 'BBMAN'
							WHEN partyType = 'SEIZP' THEN 'SEIZP'
							WHEN partyType = 'RELP' THEN 'RELP'
							WHEN partyType = 'MWARD' THEN 'MWARD'
							WHEN partyType = 'AWARD' THEN 'AWARD'
							WHEN partyType = 'EventAssignment' THEN 'EventAssignment'
							WHEN partyType = 'SUBJ' THEN 'SUBJ'
							WHEN partyType = 'COD' THEN 'COD'
							WHEN partyType = 'CHILD' THEN 'CHILD'
							WHEN partyType = 'MINPS' THEN 'MINPS'
							WHEN partyType = 'OTREL' THEN 'OTREL'
							WHEN partyType = 'MNNNM' THEN 'MNNNM'
							WHEN partyType = 'NONCA' THEN 'NONCA'
							WHEN partyType = 'PGIPT' THEN 'PGIPT'
							WHEN partyType = 'PUBGD' THEN 'PUBGD'
							WHEN partyType = 'SWAP' THEN 'SWAP'
							WHEN partyType = 'PROTM' THEN 'PROTM'
							WHEN partyType = 'ADVJV' THEN 'ADVJV'
							WHEN partyType = 'SWSUB' THEN 'SWSUB'
							WHEN partyType = 'JUROR' THEN 'JUROR'
							WHEN partyType = 'CONFL' THEN 'CONFL'
							WHEN partyType = 'CMPEV' THEN 'CMPEV'
							WHEN partyType = 'MNOGN' THEN 'MNOGN'
							WHEN partyType = 'LEGAL' THEN 'LEGAL'
							WHEN partyType = 'LWFRM' THEN 'LWFRM'
							WHEN partyType = 'PETOR' THEN 'PETOR'
							WHEN partyType = 'PETNW' THEN 'PETNW'
						END
						FROM
						ecourt.tParty pty
						LEFT JOIN ${sql.staging.db}.dbo.case_conv cc
						ON pty.case_id = cc.id AND cc.person_id = pty.person_id
						INNER JOIN (SELECT associatedParty_id, STRING_AGG(statute_id, ',') charges FROM ecourt.tCharge chg GROUP BY associatedParty_id) chg
						ON pty.id = chg.associatedParty_id
						WHERE 
						--partyType NOT IN ('AMDMI', 'APCA', 'APCAT', 'ATPT', 'ATRP', 'ATRPI', 'ATTY', 'ETHPR', 'EventAssignment', 'PA')
						 (charges IS NOT  NULL AND  cc.person_id IS NOT NULL)
						
							
						]]>

						</param>				
					</params>
					<mappings>
						<mapping source="id" dest="id"/>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="allowPublicAccess" dest="allowPublicAccess"/>
						<mapping source="cmsReferenceId" dest="cmsReferenceId"/>
						<mapping source="crsExemptOverride" dest="crsExemptOverride"/>
						<mapping source="dispositionDate" dest="dispositionDate"/>
						<mapping source="dispositionManner" dest="dispositionManner"/>
						<mapping source="dispositionType" dest="dispositionType"/>
						<mapping source="efmReferenceId" dest="efmReferenceId"/>
						<mapping source="endDate" dest="endDate"/>
						<mapping source="exemptEligible" dest="exemptEligible"/>
						<mapping source="formerRepresentationText" dest="formerRepresentationText"/>
						<mapping source="nonMonApplication" dest="nonMonApplication"/>
						<mapping source="partyDesignationType" dest="partyDesignationType"/>
						<mapping source="partyNumber" dest="partyNumber"/>
						<mapping source="partySource" dest="partySource"/>
						<mapping source="partySubType" dest="partySubType"/>
						<mapping source="partyTypeLd" dest="partyType"/>
						<mapping source="representationText" dest="representationText"/>
						<mapping source="representingPartyType" dest="representingPartyType"/>
						<mapping source="selfRepresented" dest="selfRepresented"/>
						<mapping source="startDate" dest="startDate"/>
						<mapping source="status" dest="status"/>
						<mapping source="statusDate" dest="statusDate"/>
						<mapping source="stayDate" dest="stayDate"/>
						<mapping source="stayEndDate" dest="stayEndDate"/>
						<mapping source="stayStatus" dest="stayStatus"/>
						<mapping source="case_id" dest="case_id"/>
						<mapping source="exportBatch_id" dest="exportBatch_id"/>
						<mapping source="exportCompletedBatch_id" dest="exportCompletedBatch_id"/>
						<mapping source="exportFailedBatch_id" dest="exportFailedBatch_id"/>
						<mapping source="person_id" dest="person_id"/>
						<mapping source="subCase_id" dest="subCase_id"/>
						<mapping source="convId" dest="convId"/>
						<mapping source="flag1" dest="flag1"/>
						<mapping source="flag2" dest="flag2"/>
						<mapping source="flag3" dest="flag3"/>
						<mapping source="flag4" dest="flag4"/>
						<mapping source="flag5" dest="flag5"/>
						<mapping source="notes" dest="notes"/>
						<mapping source="notification" dest="notification"/>
						<mapping source="dirOrgUnit_id" dest="dirOrgUnit_id"/>
						<mapping source="eventInvPersConvId" dest="eventInvPersConvId"/>
						<mapping source="caseNumber" dest="caseNumber"/>
						<mapping source="caseKey" dest="caseKey"/>
					</mappings>
					<destination database="${sql.staging.db}" schema="dbo" table="party_conv"/>
				</action>
				
				
				
				<action handler="SqlServer.Raw" desc="Charged Parties" progresslabel="Charged Parties" enabled="false">
					<source database="${sql.migrated.db}" schema="dbo">
						<task handler="SqlServer.Script" desc="Adjust Case Category">
						<![CDATA[
						
						UPDATE pty 
						set charges = 
						CASE 
							WHEN t1.associatedParty_id IS NOT NULL THEN 1 
							ELSE 0
						END
						FROM ${sql.staging.db}.dbo.party_conv pty
						INNER JOIN ${sql.staging.db}.dbo.convertCases_conv cc
						ON pty.case_id = cc.case_id
						LEFT JOIN (SELECT associatedParty_id FROM ${sql.migrated.db}.ecourt.tCharge chg GROUP BY associatedParty_id) t1
						ON pty.id = t1.associatedParty_id
						WHERE caseGroup = 'CR'
						
						
						
						]]>
						
						
						</task>
						
					</source>
				</action>
				
				<action handler="SqlServer.Raw" desc="Flag excessive PID" progresslabel="Flag excessive PID" enabled="true">
					<source database="${sql.migrated.db}" schema="dbo">
						<task handler="SqlServer.Script" desc="Flag excessive PID">
						<![CDATA[
						
						
						UPDATE pr
						SET partyTypeFlg = 1
						FROM ${sql.staging.db}.dbo.person_conv pr
						INNER JOIN (SELECT id FROM  ${sql.staging.db}.dbo.person_conv pr WHERE partyTypeFlg = 0 GROUP BY id having count(1) > 500) t1
						ON pr.id = t1.id;
						
						UPDATE ${sql.staging.db}.dbo.party_conv
						SET selfRepresented =
						CASE 
							WHEN flag1 = 1 THEN 'Y'
							WHEN partyType = 'SELFR' THEN 'Y'
							ELSE NULL
						END,
						status = 
						CASE 
							WHEN flag2 = 1 THEN 'TR'
							WHEN flag3 = 1 THEN 'DQ'
						END,
						statusDate = 
						CASE
							WHEN flag1 = 1 THEN GETDATE()
							WHEN flag2 = 1 THEN GETDATE()
							WHEN flag3 = 1 THEN GETDATE()
						END
						FROM ${sql.staging.db}.dbo.party_conv;
						
						
						]]>
						
						
						</task>
						
					</source>
				</action>
				
					
			
				
				
			</actions>
		</stage>
	
					
		<stage num="26" mode="Serial" desc="Transform Address" enabled="true">
			<actions>
			
				<action handler="SqlServer.Raw" desc="Index Creation" progresslabel="Index Creation" enabled="false">
					<source database="${sql.staging.db}" schema="dbo">
						
						
						<task handler="SqlServer.Script" desc="Index Creation">
						<![CDATA[
						
						
						]]>
						
						</task>
						
					</source>
				</action>
				
			
				<action handler="SqlServer.Raw" desc="Creating address_conv table" progresslabel="Creating address_conv Table" enabled="true">
					<source database="${sql.staging.db}" schema="dbo">
						<task handler="SqlServer.Script" desc="Create address_conv table">
						IF OBJECT_ID('address1_conv', 'U') IS NOT NULL 
						DROP TABLE [dbo].[address1_conv];
						
						IF OBJECT_ID('address2_conv', 'U') IS NOT NULL 
						DROP TABLE [dbo].[address2_conv];
						
						</task>
						
						<task handler="SqlServer.Script" desc="Create address_conv table">
						<![CDATA[
						
						CREATE TABLE [address1_conv](
						idKey [NUMERIC] (19,0) IDENTITY, 
						[id] [numeric](19, 0),
						[accessLevel] [int] NULL,
						[createUserRealName] [varchar](255) NULL,
						[createUsername] [varchar](255) NULL,
						[dateCreated] [datetime] NULL,
						[lastUpdateUserRealName] [varchar](255) NULL,
						[lastUpdateUsername] [varchar](255) NULL,
						[lastUpdated] [datetime] NULL,
						[memo] [varchar](512) NULL,
						[optlock] [int] NOT NULL,
						[roaAccessLevel] [int] NULL,
						[sourceCaseNumber] [varchar](255) NULL,
						[updateReason] [varchar](255) NULL,
						[address1] [varchar](255) NULL,
						[address2] [varchar](255) NULL,
						[addressType] [varchar](255) NULL,
						[city] [varchar](255) NULL,
						[country] [varchar](255) NULL,
						[county] [varchar](255) NULL,
						[effectiveFrom] [datetime] NULL,
						[effectiveTo] [datetime] NULL,
						[forNotification] [tinyint] NULL,
						[hundredBlock] [varchar](255) NULL,
						[intersection] [varchar](255) NULL,
						[intersectionAbbr] [varchar](255) NULL,
						[latitude] [varchar](255) NULL,
						[longitude] [varchar](255) NULL,
						[number] [varchar](255) NULL,
						[numberPrefix] [varchar](255) NULL,
						[numberSuffix] [varchar](255) NULL,
						[pin] [varchar](255) NULL,
						[preferred] [tinyint] NULL,
						[sourceId] [varchar](255) NULL,
						[state] [varchar](255) NULL,
						[status] [varchar](255) NULL,
						[statusDate] [datetime] NULL,
						[streetName] [varchar](255) NULL,
						[streetNamePostDirectional] [varchar](255) NULL,
						[streetNamePostType] [varchar](255) NULL,
						[streetNamePreDirectional] [varchar](255) NULL,
						[streetNamePreType] [varchar](255) NULL,
						[structure] [varchar](255) NULL,
						[subDivision] [varchar](255) NULL,
						[taxCode] [varchar](255) NULL,
						[township] [varchar](255) NULL,
						[verificationStatus] [varchar](255) NULL,
						[zip] [varchar](255) NULL,
						[zip4] [varchar](255) NULL,
						[zoning] [varchar](255) NULL,
						[addressIdentifier_id] [numeric](19, 0) NULL,
						[associatedPerson_id] [numeric](19, 0) NOT NULL,
						[notes] [varchar](7500) NULL,
						[convId] [int] NULL
							);			


						CREATE TABLE [address2_conv](
						idKey [NUMERIC] (19,0) IDENTITY, 
						[id] [numeric](19, 0),
						[accessLevel] [int] NULL,
						[createUserRealName] [varchar](255) NULL,
						[createUsername] [varchar](255) NULL,
						[dateCreated] [datetime] NULL,
						[lastUpdateUserRealName] [varchar](255) NULL,
						[lastUpdateUsername] [varchar](255) NULL,
						[lastUpdated] [datetime] NULL,
						[memo] [varchar](512) NULL,
						[optlock] [int] NOT NULL,
						[roaAccessLevel] [int] NULL,
						[sourceCaseNumber] [varchar](255) NULL,
						[updateReason] [varchar](255) NULL,
						[address1] [varchar](255) NULL,
						[address2] [varchar](255) NULL,
						[addressType] [varchar](255) NULL,
						[city] [varchar](255) NULL,
						[country] [varchar](255) NULL,
						[county] [varchar](255) NULL,
						[effectiveFrom] [datetime] NULL,
						[effectiveTo] [datetime] NULL,
						[forNotification] [tinyint] NULL,
						[hundredBlock] [varchar](255) NULL,
						[intersection] [varchar](255) NULL,
						[intersectionAbbr] [varchar](255) NULL,
						[latitude] [varchar](255) NULL,
						[longitude] [varchar](255) NULL,
						[number] [varchar](255) NULL,
						[numberPrefix] [varchar](255) NULL,
						[numberSuffix] [varchar](255) NULL,
						[pin] [varchar](255) NULL,
						[preferred] [tinyint] NULL,
						[sourceId] [varchar](255) NULL,
						[state] [varchar](255) NULL,
						[status] [varchar](255) NULL,
						[statusDate] [datetime] NULL,
						[streetName] [varchar](255) NULL,
						[streetNamePostDirectional] [varchar](255) NULL,
						[streetNamePostType] [varchar](255) NULL,
						[streetNamePreDirectional] [varchar](255) NULL,
						[streetNamePreType] [varchar](255) NULL,
						[structure] [varchar](255) NULL,
						[subDivision] [varchar](255) NULL,
						[taxCode] [varchar](255) NULL,
						[township] [varchar](255) NULL,
						[verificationStatus] [varchar](255) NULL,
						[zip] [varchar](255) NULL,
						[zip4] [varchar](255) NULL,
						[zoning] [varchar](255) NULL,
						[addressIdentifier_id] [numeric](19, 0) NULL,
						[associatedPerson_id] [numeric](19, 0) NOT NULL,
						[notes] [varchar](7500) NULL,
						[convId] [int] NULL,
						case_id NUMERIC(19,0)
							);					
						]]>
						
						</task>
						
					</source>
				</action>
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform address_conv">
					<source database="${sql.migrated.db}" schema="dbo"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	

						SELECT  
				
						ad.[accessLevel]
						,ad.[createUserRealName]
						,ad.[createUsername]
						,ad.[dateCreated]
						,ad.[lastUpdateUserRealName]
						,ad.[lastUpdateUsername]
						,ad.[lastUpdated]
						,ad.[memo]
						,ad.[optlock]
						,ad.[roaAccessLevel]
						,ad.[sourceCaseNumber]
						,ad.[updateReason]
						,ad.[address1]
						,ad.[address2]
						,addressType =
						CASE
							WHEN ad.addressType = 'BUS' THEN 'BUS'
							WHEN ad.addressType = 'ADD' THEN 'BUS'
							WHEN ad.addressType = 'CON' THEN 'CF'
							WHEN ad.addressType = 'PHY' THEN 'HM'
							WHEN ad.addressType = 'MAI' THEN 'ML'
							WHEN ad.addressType = 'CAD' THEN 'ML'
							WHEN ad.addressType = 'LKA' THEN 'UNK'
							WHEN ad.addressType = 'PAD' THEN 'UNK'
							WHEN ad.addressType = 'SRV' THEN 'UNK'
						END
						,ad.[city]
						,ad.[country]
						,ad.[county]
						,MIN(ad.[effectiveFrom]) as effectiveFrom
						,MAX(ad.[effectiveTo]) as effectiveTo
						,ad.[forNotification]
						,ad.[hundredBlock]
						,ad.[intersection]
						,ad.[intersectionAbbr]
						,ad.[latitude]
						,ad.[longitude]
						,ad.[number]
						,ad.[numberPrefix]
						,ad.[numberSuffix]
						,ad.[pin]
						,ad.[preferred]
						,ad.[sourceId]
						,ad.[state]
						,ad.[status]
						,ad.[statusDate]
						,ad.[streetName]
						,ad.[streetNamePostDirectional]
						,ad.[streetNamePostType]
						,ad.[streetNamePreDirectional]
						,ad.[streetNamePreType]
						,ad.[structure]
						,ad.[subDivision]
						,ad.[taxCode]
						,ad.[township]
						,ad.[verificationStatus]
						,ad.[zip]
						,ad.[zip4]
						,ad.[zoning]
						,ad.[addressIdentifier_id]
						,ad.[associatedPerson_id]
						,ad.[notes]

						FROM [ecourt].[tAddress] ad
						GROUP BY ad.[accessLevel],ad.[createUserRealName],ad.[createUsername],ad.[dateCreated],ad.[lastUpdateUserRealName],ad.[lastUpdateUsername]
						,ad.[lastUpdated],ad.[memo],ad.[optlock]
						,ad.[roaAccessLevel]
						,ad.[sourceCaseNumber]
						,ad.[updateReason]
						,ad.[address1]
						,ad.[address2]
						,ad.[addressType]
						,ad.[city]
						,ad.[country]
						,ad.[county]
						,ad.[forNotification]
						,ad.[hundredBlock]
						,ad.[intersection]
						,ad.[intersectionAbbr]
						,ad.[latitude]
						,ad.[longitude]
						,ad.[number]
						,ad.[numberPrefix]
						,ad.[numberSuffix]
						,ad.[pin]
						,ad.[preferred]
						,ad.[sourceId]
						,ad.[state]
						,ad.[status]
						,ad.[statusDate]
						,ad.[streetName]
						,ad.[streetNamePostDirectional]
						,ad.[streetNamePostType]
						,ad.[streetNamePreDirectional]
						,ad.[streetNamePreType]
						,ad.[structure]
						,ad.[subDivision]
						,ad.[taxCode]
						,ad.[township]
						,ad.[verificationStatus]
						,ad.[zip]
						,ad.[zip4]
						,ad.[zoning]
						,ad.[addressIdentifier_id]
						,ad.[associatedPerson_id]
						,ad.[notes]
				
						
							
						]]>
						</param>
					</params>
					<mappings>
			
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="address1" dest="address1"/>
						<mapping source="address2" dest="address2"/>
						<mapping source="addressType" dest="addressType"/>
						<mapping source="city" dest="city"/>
						<mapping source="country" dest="country"/>
						<mapping source="county" dest="county"/>
						<mapping source="effectiveFrom" dest="effectiveFrom"/>
						<mapping source="effectiveTo" dest="effectiveTo"/>
						<mapping source="forNotification" dest="forNotification"/>
						<mapping source="hundredBlock" dest="hundredBlock"/>
						<mapping source="intersection" dest="intersection"/>
						<mapping source="intersectionAbbr" dest="intersectionAbbr"/>
						<mapping source="latitude" dest="latitude"/>
						<mapping source="longitude" dest="longitude"/>
						<mapping source="number" dest="number"/>
						<mapping source="numberPrefix" dest="numberPrefix"/>
						<mapping source="numberSuffix" dest="numberSuffix"/>
						<mapping source="pin" dest="pin"/>
						<mapping source="preferred" dest="preferred"/>
						<mapping source="sourceId" dest="sourceId"/>
						<mapping source="state" dest="state"/>
						<mapping source="status" dest="status"/>
						<mapping source="statusDate" dest="statusDate"/>
						<mapping source="streetName" dest="streetName"/>
						<mapping source="streetNamePostDirectional" dest="streetNamePostDirectional"/>
						<mapping source="streetNamePostType" dest="streetNamePostType"/>
						<mapping source="streetNamePreDirectional" dest="streetNamePreDirectional"/>
						<mapping source="streetNamePreType" dest="streetNamePreType"/>
						<mapping source="structure" dest="structure"/>
						<mapping source="subDivision" dest="subDivision"/>
						<mapping source="taxCode" dest="taxCode"/>
						<mapping source="township" dest="township"/>
						<mapping source="verificationStatus" dest="verificationStatus"/>
						<mapping source="zip" dest="zip"/>
						<mapping source="zip4" dest="zip4"/>
						<mapping source="zoning" dest="zoning"/>
						<mapping source="addressIdentifier_id" dest="addressIdentifier_id"/>
						<mapping source="associatedPerson_id" dest="associatedPerson_id"/>
						<mapping source="notes" dest="notes"/>
	
					</mappings>
					<destination database="${sql.staging.db}" schema="dbo" table="address1_conv"/>
				</action>
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform address_conv">
					<source database="${sql.staging.db}" schema="dbo"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	

						SELECT ad.* FROM address1_conv ad
			
					
						
							
						]]>
						</param>
					</params>
					<mappings>
			
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="address1" dest="address1"/>
						<mapping source="address2" dest="address2"/>
						<mapping source="addressType" dest="addressType"/>
						<mapping source="city" dest="city"/>
						<mapping source="country" dest="country"/>
						<mapping source="county" dest="county"/>
						<mapping source="effectiveFrom" dest="effectiveFrom"/>
						<mapping source="effectiveTo" dest="effectiveTo"/>
						<mapping source="forNotification" dest="forNotification"/>
						<mapping source="hundredBlock" dest="hundredBlock"/>
						<mapping source="intersection" dest="intersection"/>
						<mapping source="intersectionAbbr" dest="intersectionAbbr"/>
						<mapping source="latitude" dest="latitude"/>
						<mapping source="longitude" dest="longitude"/>
						<mapping source="number" dest="number"/>
						<mapping source="numberPrefix" dest="numberPrefix"/>
						<mapping source="numberSuffix" dest="numberSuffix"/>
						<mapping source="pin" dest="pin"/>
						<mapping source="preferred" dest="preferred"/>
						<mapping source="sourceId" dest="sourceId"/>
						<mapping source="state" dest="state"/>
						<mapping source="status" dest="status"/>
						<mapping source="statusDate" dest="statusDate"/>
						<mapping source="streetName" dest="streetName"/>
						<mapping source="streetNamePostDirectional" dest="streetNamePostDirectional"/>
						<mapping source="streetNamePostType" dest="streetNamePostType"/>
						<mapping source="streetNamePreDirectional" dest="streetNamePreDirectional"/>
						<mapping source="streetNamePreType" dest="streetNamePreType"/>
						<mapping source="structure" dest="structure"/>
						<mapping source="subDivision" dest="subDivision"/>
						<mapping source="taxCode" dest="taxCode"/>
						<mapping source="township" dest="township"/>
						<mapping source="verificationStatus" dest="verificationStatus"/>
						<mapping source="zip" dest="zip"/>
						<mapping source="zip4" dest="zip4"/>
						<mapping source="zoning" dest="zoning"/>
						<mapping source="addressIdentifier_id" dest="addressIdentifier_id"/>
						<mapping source="associatedPerson_id" dest="associatedPerson_id"/>
						<mapping source="notes" dest="notes"/>

	
					</mappings>
					<destination database="${sql.staging.db}" schema="dbo" table="address2_conv"/>
				</action>

			</actions>
		</stage>
	
		<stage num="28" mode="Serial" desc="Transform Telephone" enabled="true">
			<actions>
			
				<action handler="SqlServer.Raw" desc="Creating address_conv table" progresslabel="Creating address_conv Table" enabled="true">
					<source database="${sql.staging.db}" schema="dbo">
						<task handler="SqlServer.Script" desc="Create address_conv table">
						IF OBJECT_ID('telephone1_conv', 'U') IS NOT NULL 
						DROP TABLE [dbo].[telephone1_conv];
						
						IF OBJECT_ID('telephone2_conv', 'U') IS NOT NULL 
						DROP TABLE [dbo].[telephone2_conv];
						
						</task>
						
						<task handler="SqlServer.Script" desc="Create address_conv table">
						<![CDATA[
						
						CREATE TABLE [telephone1_conv](
						idKey [NUMERIC] (19,0) IDENTITY, 
						[id] [numeric](19, 0),
						[accessLevel] [int] NULL,
						[createUserRealName] [varchar](255) NULL,
						[createUsername] [varchar](255) NULL,
						[dateCreated] [datetime] NULL,
						[lastUpdateUserRealName] [varchar](255) NULL,
						[lastUpdateUsername] [varchar](255) NULL,
						[lastUpdated] [datetime] NULL,
						[memo] [varchar](512) NULL,
						[optlock] [int] NOT NULL,
						[roaAccessLevel] [int] NULL,
						[sourceCaseNumber] [varchar](255) NULL,
						[updateReason] [varchar](255) NULL,
						[areaCode] [varchar](255) NULL,
						[countryCode] [varchar](255) NULL,
						[effectiveFrom] [datetime] NULL,
						[effectiveTo] [datetime] NULL,
						[extension] [varchar](255) NULL,
						[forNotification] [tinyint] NULL,
						[preferred] [tinyint] NULL,
						[telephoneNumber] [varchar](255) NULL,
						[telephoneType] [varchar](255) NULL,
						[associatedPerson_id] [numeric](19, 0) NOT NULL,
						[notes] [varchar](7500) NULL,
						[convId] [int] NULL
						
							);			


						CREATE TABLE [telephone2_conv](
						idKey [NUMERIC] (19,0) IDENTITY, 
						[id] [numeric](19, 0),
						[accessLevel] [int] NULL,
						[createUserRealName] [varchar](255) NULL,
						[createUsername] [varchar](255) NULL,
						[dateCreated] [datetime] NULL,
						[lastUpdateUserRealName] [varchar](255) NULL,
						[lastUpdateUsername] [varchar](255) NULL,
						[lastUpdated] [datetime] NULL,
						[memo] [varchar](512) NULL,
						[optlock] [int] NOT NULL,
						[roaAccessLevel] [int] NULL,
						[sourceCaseNumber] [varchar](255) NULL,
						[updateReason] [varchar](255) NULL,
						[areaCode] [varchar](255) NULL,
						[countryCode] [varchar](255) NULL,
						[effectiveFrom] [datetime] NULL,
						[effectiveTo] [datetime] NULL,
						[extension] [varchar](255) NULL,
						[forNotification] [tinyint] NULL,
						[preferred] [tinyint] NULL,
						[telephoneNumber] [varchar](255) NULL,
						[telephoneType] [varchar](255) NULL,
						[associatedPerson_id] [numeric](19, 0) NOT NULL,
						[notes] [varchar](7500) NULL,
						[convId] [int] NULL,
						
							);					
						]]>
						
						</task>
						
					</source>
				</action>
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Telephone">
					<source database="${sql.migrated.db}" schema="dbo"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	

						SELECT
						MIN(id) as id,
						'conv' as createUserRealName,
						'conv' as createUsername,
						GETDATE() as dateCreated,
						'conv' as lastUpdateUserRealName,
						'conv' as lastUpdateUsername,
						GETDATE() as lastUpdated
						,t.memo
						,t.optlock
						,t.roaAccessLevel
						,t.sourceCaseNumber
						,t.updateReason
						,t.areaCode
						,t.countryCode
						,MIN(t.effectiveFrom) effectiveFrom
						,MAX(t.effectiveTo) effectiveTo
						,t.extension
						,t.forNotification
						,t.preferred
						,t.telephoneNumber
						,telephoneType = 
						case
							WHEN telephoneType = 'WP' THEN 'BUS'
							WHEN telephoneType = 'CEL' THEN 'CELL'
							WHEN telephoneType = 'WFX' THEN 'FAX'
							WHEN telephoneType = 'HP' THEN 'HM'
						END
						,t.associatedPerson_id
						,STRING_AGG(t.notes,'|') as notes
						FROM ecourt.tTelephone t
						GROUP BY
						t.memo
						,t.optlock
						,t.roaAccessLevel
						,t.sourceCaseNumber
						,t.updateReason
						,t.areaCode
						,t.countryCode
						,t.extension
						,t.forNotification
						,t.preferred
						,t.telephoneNumber
						,t.telephoneType
						,t.associatedPerson_id,
						effectiveTo,
						effectiveFrom
	
						
							
						]]>
						</param>
					</params>
					<mappings>
			
						
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="areaCode" dest="areaCode"/>
						<mapping source="countryCode" dest="countryCode"/>
						<mapping source="effectiveFrom" dest="effectiveFrom"/>
						<mapping source="effectiveTo" dest="effectiveTo"/>
						<mapping source="extension" dest="extension"/>
						<mapping source="forNotification" dest="forNotification"/>
						<mapping source="preferred" dest="preferred"/>
						<mapping source="telephoneNumber" dest="telephoneNumber"/>
						<mapping source="telephoneType" dest="telephoneType"/>
						<mapping source="associatedPerson_id" dest="associatedPerson_id"/>
						<mapping source="notes" dest="notes"/>
			
					</mappings>
					<destination database="${sql.staging.db}" schema="dbo" table="telephone1_conv"/>
				</action>
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Telephone">
					<source database="${sql.staging.db}" schema="dbo"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	

						Select * FROM telephone1_conv
							
						]]>
						</param>
					</params>
					<mappings>
						<mapping source="id" dest="id"/>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="areaCode" dest="areaCode"/>
						<mapping source="countryCode" dest="countryCode"/>
						<mapping source="effectiveFrom" dest="effectiveFrom"/>
						<mapping source="effectiveTo" dest="effectiveTo"/>
						<mapping source="extension" dest="extension"/>
						<mapping source="forNotification" dest="forNotification"/>
						<mapping source="preferred" dest="preferred"/>
						<mapping source="telephoneNumber" dest="telephoneNumber"/>
						<mapping source="telephoneType" dest="telephoneType"/>
						<mapping source="associatedPerson_id" dest="associatedPerson_id"/>
						<mapping source="notes" dest="notes"/>
						<mapping source="convId" dest="convId"/>
					</mappings>
					<destination database="${sql.staging.db}" schema="dbo" table="telephone2_conv"/>
				</action>

			</actions>
		</stage>
	
			
		<stage num="30" mode="Serial" desc="Transform PersonProfile" enabled="true">
			<actions>
			
				<action handler="SqlServer.Raw" desc="Creating address_conv table" progresslabel="Creating address_conv Table" enabled="true">
					<source database="${sql.staging.db}" schema="dbo">
						<task handler="SqlServer.Script" desc="Create address_conv table">
						IF OBJECT_ID('personProfile_conv', 'U') IS NOT NULL 
						DROP TABLE [dbo].[personProfile_conv];
						
			
						</task>
						
						<task handler="SqlServer.Script" desc="Create address_conv table">
						<![CDATA[
						
						CREATE TABLE [personProfile_conv](
						idKey [NUMERIC] (19,0) IDENTITY, 	
						id NUMERIC(19,0),
						[accessLevel] [int] NULL,
						[createUserRealName] [varchar](255) NULL,
						[createUsername] [varchar](255) NULL,
						[dateCreated] [datetime] NULL,
						[lastUpdateUserRealName] [varchar](255) NULL,
						[lastUpdateUsername] [varchar](255) NULL,
						[lastUpdated] [datetime] NULL,
						[memo] [varchar](7500) NULL,
						[optlock] [int] NOT NULL,
						[roaAccessLevel] [int] NULL,
						[sourceCaseNumber] [varchar](255) NULL,
						[updateReason] [varchar](255) NULL,
						[canRead] [varchar](255) NULL,
						[canWrite] [varchar](255) NULL,
						[citizenship] [varchar](255) NULL,
						[dateOfBirth] [datetime] NULL,
						[dateOfBirth2] [datetime] NULL,
						[dateOfBirth3] [datetime] NULL,
						[dateOfDeath] [datetime] NULL,
						[dateOfMajority] [datetime] NULL,
						[ethnicity] [varchar](255) NULL,
						[eyeColor] [varchar](255) NULL,
						[gender] [varchar](255) NULL,
						[hairColor] [varchar](255) NULL,
						[hasIEP] [varchar](255) NULL,
						[height] [varchar](255) NULL,
						[maritalStatus] [varchar](255) NULL,
						[militaryStatus] [varchar](255) NULL,
						[occupation] [varchar](255) NULL,
						[placeOfBirth] [varchar](255) NULL,
						[placeOfDeath] [varchar](255) NULL,
						[primaryLanguage] [varchar](255) NULL,
						[profileType] [varchar](255) NULL,
						[religion] [varchar](255) NULL,
						[secondaryLanguage] [varchar](255) NULL,
						[weight] [int] NULL,
						[associatedPerson_id] [numeric](19, 0) NOT NULL,
						[convId] [int] NULL,
						[race] [varchar](255) NULL,
						[dateOfMarriage] [datetime] NULL,
						[dateOfSeparation] [datetime] NULL,
						[dateOfBirthStatus] [varchar](255) NULL,
						[dateOfDeathStatus] [varchar](255) NULL
						
							);			


						]]>
						
						</task>
						
					</source>
				</action>
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform PersonProfile">
					<source database="${sql.migrated.db}" schema="dbo"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	

						SELECT
						pp.*,
						ethnicityLd =
						CASE
							WHEN ethnicity = 'B' THEN 'B'
							WHEN ethnicity = 'H' THEN 'H'
							WHEN ethnicity = 'I' THEN 'I'
							WHEN ethnicity = 'W' THEN 'W'
							WHEN ethnicity = 'U' THEN 'X'
							WHEN ethnicity = 'A' THEN 'AP'
						END,
						eyeColorLd =
						CASE
							WHEN eyeColor= 'BLK' THEN 'BLK'
							WHEN eyeColor= 'BLU' THEN 'BLU'
							WHEN eyeColor= 'BRO' THEN 'BRO'
							WHEN eyeColor= 'GRN' THEN 'GRN'
							WHEN eyeColor= 'GRY' THEN 'GRY'
							WHEN eyeColor= 'HAZ' THEN 'HAZ'
							WHEN eyeColor= 'UNK' THEN 'XXX'
						END,
						genderLd =
						CASE
							WHEN gender = 'F' THEN 'F'
							WHEN gender = 'M' THEN 'M' 
							WHEN gender = 'U' THEN 'X'
						END,
						hairColorLd = 
						case
							WHEN hairColor = 'BLD' THEN 'BAL'
							WHEN hairColor = 'BLK' THEN 'BLK'
							WHEN hairColor = 'BLN' THEN 'BLN'
							WHEN hairColor = 'BRO' THEN 'BRO'
							WHEN hairColor = 'GRY' THEN 'GRY'
							WHEN hairColor = 'MUL' THEN 'MUL'
							WHEN hairColor = 'RED' THEN 'RED'
							WHEN hairColor = 'SDY' THEN 'SDY'
							WHEN hairColor = 'WHI' THEN 'WHI'
							WHEN hairColor = 'UNK' THEN 'XXX'
						END,
						languageLd = 
						case
							WHEN primaryLanguage = 'L-ARB' THEN '104'
							WHEN primaryLanguage = 'L-ARM' THEN '106'
							WHEN primaryLanguage = 'L-B' THEN '109'
							WHEN primaryLanguage = 'L-F' THEN '127'
							WHEN primaryLanguage = 'L-GRM' THEN '129'
							WHEN primaryLanguage = 'L-GR' THEN '130'
							WHEN primaryLanguage = 'L-GJ' THEN '131'
							WHEN primaryLanguage = 'L-HBR' THEN '133'
							WHEN primaryLanguage = 'L-HND' THEN '134'
							WHEN primaryLanguage = 'L-HM' THEN '135'
							WHEN primaryLanguage = 'L-I' THEN '144'
							WHEN primaryLanguage = 'L-J' THEN '146'
							WHEN primaryLanguage = 'L-K' THEN '149'
							WHEN primaryLanguage = 'L-PSN' THEN '164'
							WHEN primaryLanguage = 'L-PLSH' THEN '165'
							WHEN primaryLanguage = 'L-PNJ' THEN '166'
							WHEN primaryLanguage = 'L-R' THEN '169'
							WHEN primaryLanguage = 'L-ASL' THEN '174'
							WHEN primaryLanguage = 'L-S' THEN '179'
							WHEN primaryLanguage = 'L-TG' THEN '183'
							WHEN primaryLanguage = 'L-TL' THEN '186'
							WHEN primaryLanguage = 'L-U' THEN '193'
							WHEN primaryLanguage = 'L-V' THEN '194'
							WHEN primaryLanguage = 'L-PRT' THEN '201'
						END
						FROM ecourt.tPersonProfile pp
						WHERE NOT (weight IS NULL AND height IS NULL AND dateOfBirth IS NULL AND dateOfDeath IS NULL AND ethnicity IS NULL AND eyeColor IS NULL AND gender IS NULL AND hairColor IS NULL)
						
							
						]]>
						</param>
					</params>
					<mappings>
						<mapping source="id" dest="id"/>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="canRead" dest="canRead"/>
						<mapping source="canWrite" dest="canWrite"/>
						<mapping source="citizenship" dest="citizenship"/>
						<mapping source="dateOfBirth" dest="dateOfBirth"/>
						<mapping source="dateOfBirth2" dest="dateOfBirth2"/>
						<mapping source="dateOfBirth3" dest="dateOfBirth3"/>
						<mapping source="dateOfDeath" dest="dateOfDeath"/>
						<mapping source="dateOfMajority" dest="dateOfMajority"/>
						<mapping source="ethnicityLd" dest="ethnicity"/>
						<mapping source="eyeColorLd" dest="eyeColor"/>
						<mapping source="genderLd" dest="gender"/>
						<mapping source="hairColorLd" dest="hairColor"/>
						<mapping source="hasIEP" dest="hasIEP"/>
						<mapping source="height" dest="height"/>
						<mapping source="maritalStatus" dest="maritalStatus"/>
						<mapping source="militaryStatus" dest="militaryStatus"/>
						<mapping source="occupation" dest="occupation"/>
						<mapping source="placeOfBirth" dest="placeOfBirth"/>
						<mapping source="placeOfDeath" dest="placeOfDeath"/>
						<mapping source="languageLd" dest="primaryLanguage"/>
						<mapping source="profileType" dest="profileType"/>
						<mapping source="religion" dest="religion"/>
						<mapping source="secondaryLanguage" dest="secondaryLanguage"/>
						<mapping source="weight" dest="weight"/>
						<mapping source="associatedPerson_id" dest="associatedPerson_id"/>
						<mapping source="race" dest="race"/>
						<mapping source="dateOfMarriage" dest="dateOfMarriage"/>
						<mapping source="dateOfSeparation" dest="dateOfSeparation"/>
						<mapping source="dateOfBirthStatus" dest="dateOfBirthStatus"/>
						<mapping source="dateOfDeathStatus" dest="dateOfDeathStatus"/>
					</mappings>
					<destination database="${sql.staging.db}" schema="dbo" table="personProfile_conv"/>
				</action>
		
			</actions>
		</stage>
	
					
		<stage num="32" mode="Serial" desc="Transform Case Contact" enabled="true">
			<actions>
			
				<action handler="SqlServer.Raw" desc="Creating address_conv table" progresslabel="Creating address_conv Table" enabled="true">
					<source database="${sql.staging.db}" schema="dbo">
						<task handler="SqlServer.Script" desc="Create address_conv table">
						IF OBJECT_ID('caseContact_conv', 'U') IS NOT NULL 
						DROP TABLE [dbo].[caseContact_conv];
						
			
						</task>
						
						<task handler="SqlServer.Script" desc="Create address_conv table">
						<![CDATA[
						
						CREATE TABLE [caseContact_conv](
						idKey [NUMERIC] (19,0) IDENTITY, 	
						id NUMERIC(19,0),
						[accessLevel] [int] NULL,
						[createUserRealName] [varchar](255) NULL,
						[createUsername] [varchar](255) NULL,
						[dateCreated] [datetime] NULL,
						[lastUpdateUserRealName] [varchar](255) NULL,
						[lastUpdateUsername] [varchar](255) NULL,
						[lastUpdated] [datetime] NULL,
						[memo] [varchar](512) NULL,
						[optlock] [int] NOT NULL,
						[roaAccessLevel] [int] NULL,
						[sourceCaseNumber] [varchar](255) NULL,
						[updateReason] [varchar](255) NULL,
						[contact] [varchar](255) NULL,
						[effectiveFrom] [datetime] NULL,
						[effectiveTo] [datetime] NULL,
						[forNotification] [tinyint] NULL,
						[type] [varchar](255) NULL,
						[associatedPerson_id] [numeric](19, 0) NOT NULL,
						[notes] [varchar](7500) NULL,
						[convId] [int] NULL,
						[preferred] [tinyint] NULL
						
							);			


						]]>
						
						</task>
						
					</source>
				</action>
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Case Contact">
					<source database="${sql.migrated.db}" schema="dbo"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	

						SELECT
						c.*,
						typeLd = 'E'
						FROM ecourt.tCaseContact c

						
							
						]]>
						</param>
					</params>
					<mappings>
						<mapping source="id" dest="id"/>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="contact" dest="contact"/>
						<mapping source="effectiveFrom" dest="effectiveFrom"/>
						<mapping source="effectiveTo" dest="effectiveTo"/>
						<mapping source="forNotification" dest="forNotification"/>
						<mapping source="typeLd" dest="type"/>
						<mapping source="associatedPerson_id" dest="associatedPerson_id"/>
						<mapping source="notes" dest="notes"/>
						<mapping source="convId" dest="convId"/>
						<mapping source="preferred" dest="preferred"/>
					</mappings>
					<destination database="${sql.staging.db}" schema="dbo" table="caseContact_conv"/>
				</action>
		
			</actions>
		</stage>
	
		<stage num="34" mode="Serial" desc="Transform Identification" enabled="true">
			<actions>
			
				<action handler="SqlServer.Raw" desc="Creating address_conv table" progresslabel="Creating address_conv Table" enabled="true">
					<source database="${sql.staging.db}" schema="dbo">
						<task handler="SqlServer.Script" desc="Create address_conv table">
						IF OBJECT_ID('identification_conv', 'U') IS NOT NULL 
						DROP TABLE [dbo].[identification_conv];
						
			
						</task>
						
						<task handler="SqlServer.Script" desc="Create address_conv table">
						<![CDATA[
						
						CREATE TABLE [identification_conv](
						idKey [NUMERIC] (19,0) IDENTITY, 	
						id NUMERIC(19,0),
						[accessLevel] [int] NULL,
						[createUserRealName] [varchar](255) NULL,
						[createUsername] [varchar](255) NULL,
						[dateCreated] [datetime] NULL,
						[lastUpdateUserRealName] [varchar](255) NULL,
						[lastUpdateUsername] [varchar](255) NULL,
						[lastUpdated] [datetime] NULL,
						[memo] [varchar](512) NULL,
						[optlock] [int] NOT NULL,
						[roaAccessLevel] [int] NULL,
						[sourceCaseNumber] [varchar](255) NULL,
						[updateReason] [varchar](255) NULL,
						[effectiveFrom] [datetime] NULL,
						[effectiveTo] [datetime] NULL,
						[identificationClass] [varchar](255) NULL,
						[identificationNumber] [varchar](255) NULL,
						[identificationType] [varchar](255) NULL,
						[issuerCity] [varchar](255) NULL,
						[issuerCountry] [varchar](255) NULL,
						[issuerName] [varchar](255) NULL,
						[issuerState] [varchar](255) NULL,
						[ivrDlNumber] [numeric](19, 0) NULL,
						[status] [varchar](255) NULL,
						[statusDate] [datetime] NULL,
						[associatedPerson_id] [numeric](19, 0) NOT NULL,
						[notes] [varchar](7500) NULL,
						[convId] [int] NULL,
						tIdentification_id NUMERIC(19,0)
						
							);			


						]]>
						
						</task>
						
					</source>
				</action>
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Case Contact">
					<source database="${sql.migrated.db}" schema="dbo"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	

						SELECT
						i.*,
						identificationTypeLd = 
						case
							WHEN identificationType = 'ATBAR' THEN 'BAR'
							WHEN identificationType = 'FBIPN' THEN 'FBI'
							WHEN identificationType = 'INMAT' THEN 'IN'
							WHEN identificationType = 'DLN' THEN 'NCDL'
							WHEN identificationType = 'SSN' THEN 'SSN'
							WHEN identificationType = 'SID' THEN 'STID'
							WHEN identificationType = 'CNN1' THEN 'CNN1'
							WHEN identificationType = 'CNN2' THEN 'CNN2'
							WHEN identificationType = 'MNN' THEN 'MNN'
						END
						FROM ecourt.tIdentification i

						
							
						]]>
						</param>
					</params>
					<mappings>
						<mapping source="id" dest="id"/>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="effectiveFrom" dest="effectiveFrom"/>
						<mapping source="effectiveTo" dest="effectiveTo"/>
						<mapping source="identificationClass" dest="identificationClass"/>
						<mapping source="identificationNumber" dest="identificationNumber"/>
						<mapping source="identificationTypeLd" dest="identificationType"/>
						<mapping source="issuerCity" dest="issuerCity"/>
						<mapping source="issuerCountry" dest="issuerCountry"/>
						<mapping source="issuerName" dest="issuerName"/>
						<mapping source="issuerState" dest="issuerState"/>
						<mapping source="ivrDlNumber" dest="ivrDlNumber"/>
						<mapping source="status" dest="status"/>
						<mapping source="statusDate" dest="statusDate"/>
						<mapping source="associatedPerson_id" dest="associatedPerson_id"/>
						<mapping source="notes" dest="notes"/>
						<mapping source="convId" dest="convId"/>
					</mappings>
					<destination database="${sql.staging.db}" schema="dbo" table="identification_conv"/>
				</action>
		
			</actions>
		</stage>

		<stage num="36" mode="Serial" desc="Transform Scheduled Event" enabled="true">
			<actions>
			
				<action handler="SqlServer.Raw" desc="Creating Scheduled Event table" progresslabel="Creating Scheduled Event Table" enabled="true">
					<source database="${sql.staging.db}" schema="dbo">
						<task handler="SqlServer.Script" desc="Create Scheduled Event table">
						IF OBJECT_ID('scheduledEvent_conv', 'U') IS NOT NULL 
						DROP TABLE [dbo].[scheduledEvent_conv];
						
			
						</task>
						
						<task handler="SqlServer.Script" desc="Create Scheduled Event table">
						<![CDATA[
						
						CREATE TABLE [scheduledEvent_conv](
						idKey [NUMERIC] (19,0) IDENTITY, 	
						id NUMERIC(19,0),
						[accessLevel] [int] NULL,
						[createUserRealName] [varchar](255) NULL,
						[createUsername] [varchar](255) NULL,
						[dateCreated] [datetime] NULL,
						[lastUpdateUserRealName] [varchar](255) NULL,
						[lastUpdateUsername] [varchar](255) NULL,
						[lastUpdated] [datetime] NULL,
						[memo] [varchar](512) NULL,
						[optlock] [int] NOT NULL,
						[roaAccessLevel] [int] NULL,
						[sourceCaseNumber] [varchar](255) NULL,
						[updateReason] [varchar](255) NULL,
						[addOn] [tinyint] NULL,
						[addOnNumber] [int] NULL,
						[appearanceMethod] [varchar](255) NULL,
						[assigneeCode] [varchar](255) NULL,
						[assigneeName] [varchar](255) NULL,
						[calendarNote] [varchar](255) NULL,
						[caseUnit] [varchar](255) NULL,
						[checkedIn] [tinyint] NULL,
						[cmsReferenceId] [numeric](19, 0) NULL,
						[concurrentCase] [varchar](255) NULL,
						[concurrentEvent] [varchar](255) NULL,
						[consecutiveCase] [varchar](255) NULL,
						[consecutiveEvent] [varchar](255) NULL,
						[crsBalance] [float] NULL,
						[crsContactName] [varchar](255) NULL,
						[crsNumber] [varchar](255) NULL,
						[crsNumberOfMotions] [int] NULL,
						[crsPartyNames] [varchar](255) NULL,
						[csrContactEmail] [varchar](255) NULL,
						[csrContactSecondaryEmail] [varchar](255) NULL,
						[csrContactTelephone] [varchar](255) NULL,
						[daysExcluded] [int] NULL,
						[daysOut] [int] NULL,
						[daysToExpiry] [int] NULL,
						[description] [varchar](255) NULL,
						[displayColor] [varchar](255) NULL,
						[docketNumber] [int] NULL,
						[durationMinutes] [int] NULL,
						[efmNewEvent] [tinyint] NULL,
						[efmReferenceId] [numeric](19, 0) NULL,
						[endDateTime] [datetime] NULL,
						[estimatedDays] [int] NULL,
						[estimatedHours] [int] NULL,
						[estimatedMinutes] [int] NULL,
						[eventCategory] [varchar](255) NULL,
						[eventStatus] [varchar](255) NULL,
						[exParte] [tinyint] NULL,
						[exchangeId] [varchar](255) NULL,
						[exportToExchange] [tinyint] NULL,
						[languagesMemo] [varchar](255) NULL,
						[masterCalendar] [tinyint] NULL,
						[minutesLocked] [tinyint] NULL,
						[minutesMode] [varchar](255) NULL,
						[minutesReviewType] [varchar](255) NULL,
						[minutesStatus] [varchar](255) NOT NULL,
						[multiFilerCode] [varchar](255) NULL,
						[multiMotion] [tinyint] NOT NULL,
						[nameExtension] [varchar](255) NULL,
						[orderValue] [int] NULL,
						[partOfDocket] [tinyint] NULL,
						[publish] [varchar](255) NULL,
						[recurrenceKey] [varchar](255) NULL,
						[resultCausedBy] [varchar](255) NULL,
						[resultDate] [datetime] NULL,
						[resultMemo] [varchar](255) NULL,
						[resultReason] [varchar](255) NULL,
						[resultRequestedBy] [varchar](255) NULL,
						[resultType] [varchar](255) NULL,
						[standardDuration] [int] NULL,
						[startDateTime] [datetime] NULL,
						[subType] [varchar](255) NULL,
						[timeSlotCount] [int] NULL,
						[trialType] [varchar](255) NULL,
						[type] [varchar](255) NULL,
						[case_id] [numeric](19, 0) NOT NULL,
						[eventLocation_id] [numeric](19, 0) NULL,
						[lastMinutesOrder_id] [numeric](19, 0) NULL,
						[lastMinutesResult_id] [numeric](19, 0) NULL,
						[meeting_id] [numeric](19, 0) NULL,
						[minutesRelatedParent_id] [numeric](19, 0) NULL,
						[proceeding_id] [numeric](19, 0) NULL,
						[rescheduledTo_id] [numeric](19, 0) NULL,
						[subCase_id] [numeric](19, 0) NULL,
						[convId] [int] NULL,
						[notes] [varchar](7500) NULL,
						[slotCode] [varchar](255) NULL,
						[slotId] [numeric](19, 0) NULL,
						[joinStatus] [int] NULL,
						[tentativeAttached] [tinyint] NULL,
						[lastTentativeMinutesOrder_id] [numeric](19, 0) NULL,
						[source] [varchar](255) NULL,
						[isRecurringEvent] [tinyint] NULL,
						[tsTemplateCode] [varchar](255) NULL,
						[weight] [int] NULL,
						[task] [varchar](255) NULL,
						[cf_date] [datetime] NULL,
						[googleCalendarId] [varchar](255) NULL,
						[probateNotesAttached] [tinyint] NULL,
						[lastProbateNotes_id] [numeric](19, 0) NULL,
						[addOnType] [varchar](255) NULL,
						tScheduledEvent_id NUMERIC(19,0),
						dirLocation_Load NUMERIC(19,0),
						caseKey NUMERIC(19,0),
						origType VARCHAR(255),
						tDocument_id NUMERIC(19,0),
						docDef_id NUMERIC(19,0),
						cfAdditionalInfo VARCHAR(255),
						tCaseNote_id NUMERIC (19,0),
						caseNoteFlg NUMERIC(19,0),
						eventNotes VARCHAR(7500),
						locationCode VARCHAR(255)
							);			


						]]>
						
						</task>
						
					</source>
				</action>
			
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Scheduled Event">
					<source database="${sql.migrated.db}" schema="dbo"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	

						SELECT
						se.*, 
						eventTypeLd =
						case
							WHEN type = '3YRRW' THEN '3YRRW'
							WHEN type = 'ADOPT' THEN 'ADOPTHRG'
							WHEN type = 'ADJHG' THEN 'AJUDHEAR'
							WHEN type = 'ARR' THEN 'ARRAIGN'
							WHEN type = 'ARRCL' THEN 'ARRAIGN'
							WHEN type = 'JVARR' THEN 'ARRAIGN'
							WHEN type = 'JVARC' THEN 'ARRAIGN'
							WHEN type = 'BAILS' THEN 'BFHRG'
							WHEN type = 'BENCH' THEN 'BENTRI'
							WHEN type = 'CVBT' THEN 'BENTRI'
							WHEN type = 'CRBT' THEN 'BENTRI'
							WHEN type = 'JVBEC' THEN 'BENTRI'
							WHEN type = 'JUVBT' THEN 'BENTRI'
							WHEN type = 'COP' THEN 'COP'
							WHEN type = 'JVCPL' THEN 'COP'
							WHEN type = 'JVCPC' THEN 'COP'
							WHEN type = 'COMP' THEN 'COMPHRG'
							WHEN type = 'JVCMP' THEN 'COMPHRG'
							WHEN type = 'JVCOC' THEN 'COMPHRG'
							WHEN type = 'CNFCL' THEN 'CONF'
							WHEN type = 'CORON' THEN 'CORINQ'
							WHEN type = 'DETEN' THEN 'DETHRG'
							WHEN type = 'DISPO' THEN 'DISPHRG'
							WHEN type = 'DISPC' THEN 'DISPHRG'
							WHEN type = 'EVHRG' THEN 'EVIDHRG'
							WHEN type = 'EVICC' THEN 'EVIDHRG'
							WHEN type = 'EXHRG' THEN 'EXTRAHRG'
							WHEN type = 'GRAND' THEN 'GJHRG'
							WHEN type = 'GUAHR' THEN 'GUARDHRG'
							WHEN type = 'HEARI' THEN 'HEARING'
							WHEN type = 'JVHEA' THEN 'HEARING'
							WHEN type = 'JVHCC' THEN 'HEARING'
							WHEN type = 'JURYT' THEN 'JURYTRIAL'
							WHEN type = 'CVJT' THEN 'JURYTRIAL'
							WHEN type = 'CRJT' THEN 'JURYTRIAL'
							WHEN type = 'MEDHR' THEN 'MEDHRG'
							WHEN type = 'EXPAR' THEN 'MOTIOHRG'
							WHEN type = 'EXPRC' THEN 'MOTIOHRG'
							WHEN type = 'MOHR' THEN 'MOTIOHRG'
							WHEN type = 'MOTHC' THEN 'MOTIOHRG'
							WHEN type = 'NCHRG' THEN 'NAMECHANGE'
							WHEN type = 'OTSC' THEN 'OSC'
							WHEN type = 'OTSCC' THEN 'OSC'
							WHEN type = 'PETHC' THEN 'PETHRG'
							WHEN type = 'PETHR' THEN 'PETHRG'
							WHEN type = 'PRHRG' THEN 'PETHRG'
							WHEN type = 'SRHRG' THEN 'PETSR'
							WHEN type = 'WPOST' THEN 'HCHRG'
							WHEN type = 'WPRE' THEN 'PTC'
							WHEN type = 'JVPTC' THEN 'PVHRG'
							WHEN type = 'REST' THEN 'RESTHRG'
							WHEN type = 'JVRST' THEN 'RESTHRG'
							WHEN type = 'REVI' THEN 'REVHRG'
							WHEN type = 'DCFS' THEN 'REVHRG'
							WHEN type = 'SENT' THEN 'SENTHRG'
							WHEN type = 'SETTC' THEN 'JAIL'
							WHEN type = 'SETTL' THEN 'SETTLE'
							WHEN type = 'STAT' THEN 'STATUSHRG'
							WHEN type = 'JVSTA' THEN 'STATUSHRG'
							WHEN type = 'JVSTC' THEN 'STATUSHRG'
							WHEN type = 'CUSH' THEN 'CUSTHRG'
							WHEN type = 'DVBT' THEN 'BENTRI'
							WHEN type = 'PRREV' THEN 'PVHRG'
							WHEN type = 'STATH' THEN 'STATH'
							WHEN type = 'ADPCH' THEN 'ADPCH'
							WHEN type = 'APPHG' THEN 'APPHG'
							WHEN type = 'ARRSE' THEN 'ARRSE'
							WHEN type = 'BAILH' THEN 'BAILH'
							WHEN type = 'CMC' THEN 'CMC'
							WHEN type = 'CASEP' THEN 'CASEP'
							WHEN type = 'COPS' THEN 'COPS'
							WHEN type = 'CLDH' THEN 'CLDH'
							WHEN type = 'CVPRT' THEN 'CVPRT'
							WHEN type = 'CONFJ' THEN 'CONFJ'
							WHEN type = 'CTSER' THEN 'CTSER'
							WHEN type = 'DENOV' THEN 'DENOV'
							WHEN type = 'EXTRA' THEN 'EXTRA'
							WHEN type = 'HRGMA' THEN 'HRGMA'
							WHEN type = 'JVIFH' THEN 'JVIFH'
							WHEN type = 'JRCOM' THEN 'JRCOM'
							WHEN type = 'ARRDI' THEN 'ARRDI'
							WHEN type = 'ARDIC' THEN 'ARRDI'
							WHEN type = 'JVCPD' THEN 'JVCPD'
							WHEN type = 'JVDIS' THEN 'DISPHRG'
							WHEN type = 'JVDSC' THEN 'DISPHRG'
							WHEN type = 'JVPET' THEN 'PVHRG'
							WHEN type = 'JVREV' THEN 'REVHRG'
							WHEN type = 'JVREC' THEN 'REVHRG'
							WHEN type = 'PETGU' THEN 'PETGU'
							WHEN type = 'GUATP' THEN 'GUATP'
							WHEN type = 'PRTEV' THEN 'PRTEV'
							WHEN type = 'PROTE' THEN 'PROTE'
							WHEN type = 'RMDGC' THEN 'RMDG'
							WHEN type = 'RMDG' THEN 'RMDG'
							WHEN type = 'SUMJD' THEN 'SUMJD'
							WHEN type = 'TERMG' THEN 'TERMG'
							WHEN type = 'TERM' THEN 'TERM'
							WHEN type = 'TPO' THEN 'TPO'
							WHEN type = 'DIVV' THEN 'DIVV'
							WHEN type = 'WARR' THEN 'WARR'
							WHEN type = 'YOUTH' THEN 'YOUTH'
							WHEN type = 'SENV' THEN 'SENTV'
							WHEN type = 'PVEVI' THEN 'PVEVI'
						END,
						eventCategoryLd =
						CASE
							WHEN type ='ADOPT' THEN 'CLOSED'
							WHEN type ='ADJHG' THEN 'CLOSED'
							WHEN type ='ARR' THEN 'CLOSED'
							WHEN type ='ARRCL' THEN 'CLOSED'
							WHEN type ='JVARC' THEN 'CLOSED'
							WHEN type ='JVBEC' THEN 'CLOSED'
							WHEN type ='JVCPC' THEN 'CLOSED'
							WHEN type ='JVCOC' THEN 'CLOSED'
							WHEN type ='DISPC' THEN 'CLOSED'
							WHEN type ='EVICC' THEN 'CLOSED'
							WHEN type ='JVHCC' THEN 'CLOSED'
							WHEN type ='EXPRC' THEN 'CLOSED'
							WHEN type ='MOTHC' THEN 'CLOSED'
							WHEN type ='OTSCC' THEN 'CLOSED'
							WHEN type ='PETHC' THEN 'CLOSED'
							WHEN type ='JVPTC' THEN 'CLOSED'
							WHEN type ='DCFS' THEN 'CLOSED'
							WHEN type ='JVSTC' THEN 'CLOSED'
							WHEN type ='ADPCH' THEN 'CLOSED'
							WHEN type ='ARDIC' THEN 'CLOSED'
							WHEN type ='JVDSC' THEN 'CLOSED'
							WHEN type ='JVREC' THEN 'CLOSED'
							WHEN type ='PROTE' THEN 'CLOSED'
							WHEN type ='TERM' THEN 'CLOSED'
						END,
						eventResultLd = 
						case
							WHEN resultType = 'HELD' THEN 'CONCLUDED'
							WHEN resultType = 'CONCR' THEN 'CONTINUED'
							WHEN resultType = 'CONDF' THEN 'CONTINUED'
							WHEN resultType = 'CONDR' THEN 'CONTINUED'
							WHEN resultType = 'CONPL' THEN 'CONTINUED'
							WHEN resultType = 'CONST' THEN 'CONTINUED'
							WHEN resultType = 'CONPS' THEN 'CONTINUED'
							WHEN resultType = 'VACAT' THEN 'VACATED'
							WHEN resultType = 'NOTCO' THEN 'NC'
						END,
						eventStatusLd = 
						CASE
							WHEN eventStatus = 'AD_HOC' THEN 'AD_HOC'
							WHEN eventStatus = 'CANCELED' THEN 'CANCELED'
							WHEN eventStatus = 'COORDINATED' THEN 'COORDINATED'
							WHEN eventStatus = 'EVENT' THEN 'EVENT'
							WHEN eventStatus = 'NO_DOCKET' THEN 'NO_DOCKET'
							WHEN eventStatus = 'RELATED' THEN 'RELATED'
							WHEN eventStatus = 'RESCHEDULED' THEN 'RESCHEDULED'
							WHEN eventStatus = 'RESERVED' THEN 'RESERVED'
						END,
						caseNoteFlg = 
						case
							WHEN type IN ('CTINT','GRDRG', 'IVDDI', 'MDFL', 'MDSCS', 'MEDQ', 'SELFR') THEN 1
							ELSE 0
						END,
						cc.idKey caseKey,
						te.Notes as eventNotes,
						dl.convId  as locationCode
						FROM ecourt.tScheduledEvent se
						INNER JOIN ${sql.staging.db}.dbo.case_conv cc
						ON se.case_id  = cc.id
						LEFT JOIN JustWare.dbo.tblEvent te
						ON se.convId = te.EventId
						LEFT JOIN JustWareMigrated_full.ecourt.tDirLocation dl
						ON se.eventLocation_id = dl.id
						
							
						]]>
						</param>
					</params>
					<mappings>
						<mapping source="id" dest="id"/>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="addOn" dest="addOn"/>
						<mapping source="addOnNumber" dest="addOnNumber"/>
						<mapping source="appearanceMethod" dest="appearanceMethod"/>
						<mapping source="assigneeCode" dest="assigneeCode"/>
						<mapping source="assigneeName" dest="assigneeName"/>
						<mapping source="calendarNote" dest="calendarNote"/>
						<mapping source="caseUnit" dest="caseUnit"/>
						<mapping source="checkedIn" dest="checkedIn"/>
						<mapping source="cmsReferenceId" dest="cmsReferenceId"/>
						<mapping source="concurrentCase" dest="concurrentCase"/>
						<mapping source="concurrentEvent" dest="concurrentEvent"/>
						<mapping source="consecutiveCase" dest="consecutiveCase"/>
						<mapping source="consecutiveEvent" dest="consecutiveEvent"/>
						<mapping source="crsBalance" dest="crsBalance"/>
						<mapping source="crsContactName" dest="crsContactName"/>
						<mapping source="crsNumber" dest="crsNumber"/>
						<mapping source="crsNumberOfMotions" dest="crsNumberOfMotions"/>
						<mapping source="crsPartyNames" dest="crsPartyNames"/>
						<mapping source="csrContactEmail" dest="csrContactEmail"/>
						<mapping source="csrContactSecondaryEmail" dest="csrContactSecondaryEmail"/>
						<mapping source="csrContactTelephone" dest="csrContactTelephone"/>
						<mapping source="daysExcluded" dest="daysExcluded"/>
						<mapping source="daysOut" dest="daysOut"/>
						<mapping source="daysToExpiry" dest="daysToExpiry"/>
						<mapping source="description" dest="description"/>
						<mapping source="displayColor" dest="displayColor"/>
						<mapping source="docketNumber" dest="docketNumber"/>
						<mapping source="durationMinutes" dest="durationMinutes"/>
						<mapping source="efmNewEvent" dest="efmNewEvent"/>
						<mapping source="efmReferenceId" dest="efmReferenceId"/>
						<mapping source="endDateTime" dest="endDateTime"/>
						<mapping source="estimatedDays" dest="estimatedDays"/>
						<mapping source="estimatedHours" dest="estimatedHours"/>
						<mapping source="estimatedMinutes" dest="estimatedMinutes"/>
						<mapping source="eventCategoryLd" dest="eventCategory"/>
						<mapping source="eventStatusLd" dest="eventStatus"/>
						<mapping source="exParte" dest="exParte"/>
						<mapping source="exchangeId" dest="exchangeId"/>
						<mapping source="exportToExchange" dest="exportToExchange"/>
						<mapping source="languagesMemo" dest="languagesMemo"/>
						<mapping source="masterCalendar" dest="masterCalendar"/>
						<mapping source="minutesLocked" dest="minutesLocked"/>
						<mapping source="minutesMode" dest="minutesMode"/>
						<mapping source="minutesReviewType" dest="minutesReviewType"/>
						<mapping source="minutesStatus" dest="minutesStatus"/>
						<mapping source="multiFilerCode" dest="multiFilerCode"/>
						<mapping source="multiMotion" dest="multiMotion"/>
						<mapping source="nameExtension" dest="nameExtension"/>
						<mapping source="orderValue" dest="orderValue"/>
						<mapping source="partOfDocket" dest="partOfDocket"/>
						<mapping source="publish" dest="publish"/>
						<mapping source="recurrenceKey" dest="recurrenceKey"/>
						<mapping source="resultCausedBy" dest="resultCausedBy"/>
						<mapping source="resultDate" dest="resultDate"/>
						<mapping source="resultMemo" dest="resultMemo"/>
						<mapping source="resultReason" dest="resultReason"/>
						<mapping source="resultRequestedBy" dest="resultRequestedBy"/>
						<mapping source="eventResultLd" dest="resultType"/>
						<mapping source="standardDuration" dest="standardDuration"/>
						<mapping source="startDateTime" dest="startDateTime"/>
						<mapping source="subType" dest="subType"/>
						<mapping source="timeSlotCount" dest="timeSlotCount"/>
						<mapping source="trialType" dest="trialType"/>
						<mapping source="eventTypeLd" dest="type"/>
						<mapping source="case_id" dest="case_id"/>
						<mapping source="eventLocation_id" dest="eventLocation_id"/> 
						<mapping source="lastMinutesOrder_id" dest="lastMinutesOrder_id"/>
						<mapping source="lastMinutesResult_id" dest="lastMinutesResult_id"/>
						<mapping source="meeting_id" dest="meeting_id"/>
						<mapping source="minutesRelatedParent_id" dest="minutesRelatedParent_id"/>
						<mapping source="proceeding_id" dest="proceeding_id"/>
						<mapping source="rescheduledTo_id" dest="rescheduledTo_id"/>
						<mapping source="subCase_id" dest="subCase_id"/>
						<mapping source="convId" dest="convId"/>
						<mapping source="notes" dest="notes"/>
						<mapping source="slotCode" dest="slotCode"/>
						<mapping source="slotId" dest="slotId"/>
						<mapping source="joinStatus" dest="joinStatus"/>
						<mapping source="tentativeAttached" dest="tentativeAttached"/>
						<mapping source="lastTentativeMinutesOrder_id" dest="lastTentativeMinutesOrder_id"/>
						<mapping source="source" dest="source"/>
						<mapping source="isRecurringEvent" dest="isRecurringEvent"/>
						<mapping source="tsTemplateCode" dest="tsTemplateCode"/>
						<mapping source="weight" dest="weight"/>
						<mapping source="task" dest="task"/>
						<mapping source="cf_date" dest="cf_date"/>
						<mapping source="googleCalendarId" dest="googleCalendarId"/>
						<mapping source="probateNotesAttached" dest="probateNotesAttached"/>
						<mapping source="lastProbateNotes_id" dest="lastProbateNotes_id"/>
						<mapping source="addOnType" dest="addOnType"/>
						<mapping source="caseKey" dest="caseKey"/>
						<mapping source="type" dest="origType"/>
						<mapping source="caseNoteFlg" dest="caseNoteFlg"/>
						<mapping source="eventNotes" dest="eventNotes"/>
						<mapping source="locationCode" dest="locationCode"/>
	
					</mappings>
					<destination database="${sql.staging.db}" schema="dbo" table="scheduledEvent_conv"/>
				</action>
				
				<action handler="SqlServer.Raw" desc="Creating Case_conv table" progresslabel="Adjust Case Category" enabled="true">
					<source database="${sql.migrated.db}" schema="dbo">
						<task handler="SqlServer.Script" desc="Adjust Case Category">
						<![CDATA[
						UPDATE se 
						SET  dirLocation_Load =
						CASE 
							WHEN locationCode = 'LANDM'  THEN 99041
							WHEN locationCode = 'JCHAM' THEN 99037
							WHEN locationCode = 'CTRM2' THEN 99036
							WHEN locationCode = 'CTRM1'  THEN 97737
							WHEN locationCode = 'JRY1'  THEN 99039
							WHEN locationCode = 'JCT' THEN 97738
							WHEN locationCode = 'MCT'  THEN 99042
							WHEN locationCode = 'JPO' THEN 99038
							WHEN locationCode = 'JRY2'  THEN 99040
						END
						FROM ${sql.staging.db}.dbo.scheduledEvent_conv se;
						
						
						UPDATE se 
						SET  docDef_id =
						CASE 
							WHEN origType = 'AFFRW' THEN (SELECT id FROM ${sql.ecourt.db}.ecourt.tDocDef WHERE number = 'DAOF' )
							WHEN origType = 'ANSWE' THEN (SELECT id FROM ${sql.ecourt.db}.ecourt.tDocDef WHERE number = 'DASR' )
							WHEN origType = 'COMPL' THEN (SELECT id FROM ${sql.ecourt.db}.ecourt.tDocDef WHERE number = 'DCOM' )
							WHEN origType = 'MEDIA' THEN (SELECT id FROM ${sql.ecourt.db}.ecourt.tDocDef WHERE number = 'DOME' )
							WHEN origType = 'DANNU' THEN (SELECT id FROM ${sql.ecourt.db}.ecourt.tDocDef WHERE number = 'DDDA' )
							WHEN origType = 'ADPTD' THEN (SELECT id FROM ${sql.ecourt.db}.ecourt.tDocDef WHERE number = 'DADD' )
							WHEN origType = 'DECRE' THEN (SELECT id FROM ${sql.ecourt.db}.ecourt.tDocDef WHERE number = 'DDJA' )
							WHEN origType = 'EXPRT' THEN (SELECT id FROM ${sql.ecourt.db}.ecourt.tDocDef WHERE number = 'DEXM' )
							WHEN origType = 'INFO' THEN (SELECT id FROM ${sql.ecourt.db}.ecourt.tDocDef WHERE number = 'DINF' )
							WHEN origType = 'JUDGC' THEN (SELECT id FROM ${sql.ecourt.db}.ecourt.tDocDef WHERE number = 'DJOC' )
							WHEN origType = 'MOT' THEN (SELECT id FROM ${sql.ecourt.db}.ecourt.tDocDef WHERE number = 'MMOT' )
							WHEN origType = 'NOTAP' THEN (SELECT id FROM ${sql.ecourt.db}.ecourt.tDocDef WHERE number = 'DNOA' )
							WHEN origType = 'NOTBK' THEN (SELECT id FROM ${sql.ecourt.db}.ecourt.tDocDef WHERE number = 'DNBN' )
							WHEN origType = 'NOEO' THEN (SELECT id FROM ${sql.ecourt.db}.ecourt.tDocDef WHERE number = 'DNEO' )
							WHEN origType = 'NOTOH' THEN (SELECT id FROM ${sql.ecourt.db}.ecourt.tDocDef WHERE number = 'NHRG' )
							WHEN origType = 'OPPMO' THEN (SELECT id FROM ${sql.ecourt.db}.ecourt.tDocDef WHERE number = 'DOPP' )
							WHEN origType = 'ORDER' THEN (SELECT id FROM ${sql.ecourt.db}.ecourt.tDocDef WHERE number = 'DORD' )
							WHEN origType = 'ORDDI' THEN (SELECT id FROM ${sql.ecourt.db}.ecourt.tDocDef WHERE number = 'DODIV' )
							WHEN origType = 'PEREM' THEN (SELECT id FROM ${sql.ecourt.db}.ecourt.tDocDef WHERE number = 'DPCH' )
							WHEN origType = 'PETIT' THEN (SELECT id FROM ${sql.ecourt.db}.ecourt.tDocDef WHERE number = 'DIPT' )
							WHEN origType = 'NCGPT' THEN (SELECT id FROM ${sql.ecourt.db}.ecourt.tDocDef WHERE number = 'DINC' )
							WHEN origType = 'PETSR' THEN (SELECT id FROM ${sql.ecourt.db}.ecourt.tDocDef WHERE number = 'DPSR' )
							WHEN origType = 'PTTRG' THEN (SELECT id FROM ${sql.ecourt.db}.ecourt.tDocDef WHERE number = 'DGPE' )
							WHEN origType = 'PROFS' THEN (SELECT id FROM ${sql.ecourt.db}.ecourt.tDocDef WHERE number = 'DPRS' )
							WHEN origType = 'REQ4S' THEN (SELECT id FROM ${sql.ecourt.db}.ecourt.tDocDef WHERE number = 'DRSU' )
							WHEN origType = 'SATJD' THEN (SELECT id FROM ${sql.ecourt.db}.ecourt.tDocDef WHERE number = 'DSAT' )
							WHEN origType = 'TRFCT' THEN (SELECT id FROM ${sql.ecourt.db}.ecourt.tDocDef WHERE number = 'TRCIT' )
							WHEN origType = 'TRX' THEN (SELECT id FROM ${sql.ecourt.db}.ecourt.tDocDef WHERE number = 'DTRN' )
							--WHEN origType = 'WARI' THEN (SELECT id FROM ${sql.ecourt.db}.ecourt.tDocDef WHERE number = '' )
							WHEN origType = 'WRIEX' THEN (SELECT id FROM ${sql.ecourt.db}.ecourt.tDocDef WHERE number = 'WEX' )
							ELSE (SELECT id FROM ${sql.ecourt.db}.ecourt.tDocDef WHERE number = 'CONV' )
						END
						FROM ${sql.staging.db}.dbo.scheduledEvent_conv se;
						
					
						UPDATE ${sql.staging.db}.dbo.scheduledEvent_conv 
						SET cfAdditionalInfo = li.label
						FROM ${sql.staging.db}.dbo.scheduledEvent_conv se
						LEFT JOIN (SELECT li.code, label FROM ${sql.migrated.db}.ecourt.tLookupItem li INNER JOIN ${sql.migrated.db}.ecourt.tLookupList ll ON li.lookupList_id = ll.id WHERE NAME ='EVENT_TYPE') li
						ON se.origType = li.code;
						
						

						]]>
						
						
						</task>
						
					</source>
				</action>
				
		
			</actions>
		</stage> 
	
		<stage num="38" mode="Serial" desc="Transform Case Seal" enabled="true">
			<actions>
			
				<action handler="SqlServer.Raw" desc="Creating Case Seal" progresslabel="Creating Case Seal" enabled="true">
					<source database="${sql.staging.db}" schema="dbo">
						<task handler="SqlServer.Script" desc="Create Case Seal table">
						IF OBJECT_ID('caseSeal_conv', 'U') IS NOT NULL 
						DROP TABLE [dbo].[caseSeal_conv];
						
			
						</task>
						
						<task handler="SqlServer.Script" desc="Create Case Seal table">
						<![CDATA[
						
						CREATE TABLE [caseSeal_conv](
						idKey [NUMERIC] (19,0) IDENTITY, 	
						id NUMERIC(19,0),
						[accessLevel] [int] NULL,
						[createUserRealName] [varchar](255) NULL,
						[createUsername] [varchar](255) NULL,
						[dateCreated] [datetime] NULL,
						[lastUpdateUserRealName] [varchar](255) NULL,
						[lastUpdateUsername] [varchar](255) NULL,
						[lastUpdated] [datetime] NULL,
						[memo] [varchar](7500) NULL,
						[optlock] [int] NOT NULL,
						[roaAccessLevel] [int] NULL,
						[sourceCaseNumber] [varchar](255) NULL,
						[updateReason] [varchar](255) NULL,
						[effectiveFrom] [datetime] NULL,
						[effectiveTo] [datetime] NULL,
						[type] [varchar](255) NULL,
						[case_id] [numeric](19, 0) NOT NULL,
						[convId] [varchar](12) NULL,
						
							);			


						]]>
						
						</task>
						
					</source>
				</action>
			
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Case Seal">
					<source database="${sql.migrated.db}" schema="dbo"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	

						SELECT
						se.*
						FROM ecourt.tCaseSeal se
						INNER JOIN ${sql.staging.db}.dbo.convertCases_conv cc
						ON se.case_id  = cc.case_id

						
							
						]]>
						</param>
					</params>
					<mappings>
						<mapping source="id" dest="id"/>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="effectiveFrom" dest="effectiveFrom"/>
						<mapping source="effectiveTo" dest="effectiveTo"/>
						<mapping source="type" dest="type"/>
						<mapping source="case_id" dest="case_id"/>
						<mapping source="convId" dest="convId"/>
					</mappings>
					<destination database="${sql.staging.db}" schema="dbo" table="caseSeal_conv"/>
				</action>-
		
			</actions>
		</stage> 
	
		<stage num="40" mode="Serial" desc="Transform Case Note" enabled="true">
				<actions>
				
					<action handler="SqlServer.Raw" desc="Creating Case Note" progresslabel="Creating  Case Note" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create  Case Note table">
							IF OBJECT_ID('caseNote_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[caseNote_conv];
							
				
							</task>
							
							<task handler="SqlServer.Script" desc="Create  Case Note table">
							<![CDATA[
							
							CREATE TABLE [caseNote_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							[accessLevel] [int] NULL,
							[createUserRealName] [varchar](255) NULL,
							[createUsername] [varchar](255) NULL,
							[dateCreated] [datetime] NULL,
							[lastUpdateUserRealName] [varchar](255) NULL,
							[lastUpdateUsername] [varchar](255) NULL,
							[lastUpdated] [datetime] NULL,
							[memo] [varchar](7500) NULL,
							[optlock] [int] NOT NULL,
							[roaAccessLevel] [int] NULL,
							[sourceCaseNumber] [varchar](255) NULL,
							[updateReason] [varchar](255) NULL,
							[attachedEntity] [varchar](255) NULL,
							[attachedId] [numeric](19, 0) NULL,
							[color] [varchar](255) NOT NULL,
							[completed] [tinyint] NULL,
							[content] [text] NULL,
							[dueDate] [datetime] NULL,
							[noteDate] [datetime] NULL,
							[sharedToAuthorityNames] [varchar](255) NULL,
							[sharedToUsernames] [varchar](255) NULL,
							[sharingLevel] [int] NOT NULL,
							[stripedContent] [text] NULL,
							[title] [varchar](255) NULL,
							[toDate] [datetime] NULL,
							[type] [varchar](255) NULL,
							[username] [varchar](255) NULL,
							[assignedUser_id] [numeric](19, 0) NULL,
							[case_id] [numeric](19, 0) NOT NULL,
							[convId] [int] NULL,
							[convId_table] [varchar](255) NULL,
							cfCorrespondenceType VARCHAR(255),
							caseKy NUMERIC(19,0),
							AttachedIdLd NUMERIC(19,0),
							srcTbl VARCHAR(255)
							
								);			


							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Case Note">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	

							SELECT
							cn.*,  cn.lastUpdated as noteDateLd, cc.idKey as caseKy
							FROM ecourt.tCaseNote cn
							LEFT JOIN ${sql.staging.db}.dbo.case_conv cc 
							ON cn.case_id = cc.id
							WHERE attachedEntity <> 'com.sustain.cases.model.Tracking' OR attachedEntity IS NULL

							
								
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="id" dest="id"/>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="optlock" dest="optlock"/>
							<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
							<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
							<mapping source="updateReason" dest="updateReason"/>
							<mapping source="attachedEntity" dest="attachedEntity"/>
							<mapping source="attachedId" dest="attachedId"/>
							<mapping source="color" dest="color"/>
							<mapping source="completed" dest="completed"/>
							<mapping source="content" dest="content"/>
							<mapping source="dueDate" dest="dueDate"/>
							<mapping source="noteDateLd" dest="noteDate"/>
							<mapping source="sharedToAuthorityNames" dest="sharedToAuthorityNames"/>
							<mapping source="sharedToUsernames" dest="sharedToUsernames"/>
							<mapping source="sharingLevel" dest="sharingLevel"/>
							<mapping source="stripedContent" dest="stripedContent"/>
							<mapping source="title" dest="title"/>
							<mapping source="toDate" dest="toDate"/>
							<mapping source="type" dest="type"/>
							<mapping source="username" dest="username"/>
							<mapping source="assignedUser_id" dest="assignedUser_id"/>
							<mapping source="case_id" dest="case_id"/>
							<mapping source="convId" dest="convId"/>
							<mapping source="convId_table" dest="convId_table"/>
							<mapping source="caseKy" dest="caseKy"/>
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="caseNote_conv"/>
					</action>-
					
						
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Case Note - Tracking" enabled = "true">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	

							SELECT
							COALESCE(cn.accessLevel, tr.accessLevel) as accessLevel ,
							COALESCE(cn.createUserRealName, tr.createUserRealName) as createUserRealName,
							COALESCE(cn.createUserName, tr.createUserName) as createUserName,
							COALESCE(cn.dateCreated, tr.dateCreated) as dateCreated,
							COALESCE(cn.lastUpdateUserRealName, tr.lastUpdateUserRealName) as lastUpdateUserRealName,
							COALESCE(cn.lastUpdateUsername, tr.lastUpdateUsername) lastUpdateUsername,
							COALESCE(cn.lastUpdated, tr.lastUpdated) lastUpdated,
							COALESCE(cn.optlock, tr.optlock,0) optlock,
							COALESCE(cn.color, 'WHITE') color,
							COALESCE(cn.sharingLevel, 0) sharingLevel,
							COALESCE(cn.case_id, tr.case_id) case_id,
							cn.*, tr.startDate as noteDateLd, cfCorrespondenceType = t1.label, 
							srcTbl = 'Tracking'
							FROM ecourt.tTracking Tr
							LEFT JOIN ecourt.tCaseNote cn
							ON cn.attachedId = tr.id AND attachedEntity = 'com.sustain.cases.model.Tracking'
							LEFT JOIN (SELECT code, label FROM ecourt.tLookupItem li INNER JOIN ecourt.tLookupList ll ON  li.lookupList_id = ll.id WHERE ll.id = 368) t1
							ON tr.trackingType = t1.code
							WHERE (attachedEntity = 'com.sustain.cases.model.Tracking' OR cn.AttachedId IS NULL)
							

							
								
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="id" dest="id"/>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="optlock" dest="optlock"/>
							<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
							<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
							<mapping source="updateReason" dest="updateReason"/>
							<mapping source="attachedEntity" dest="attachedEntity"/>
							<mapping source="attachedId" dest="attachedId"/>
							<mapping source="color" dest="color"/>
							<mapping source="completed" dest="completed"/>
							<mapping source="content" dest="content"/>
							<mapping source="dueDate" dest="dueDate"/>
							<mapping source="noteDateLd" dest="noteDate"/>
							<mapping source="sharedToAuthorityNames" dest="sharedToAuthorityNames"/>
							<mapping source="sharedToUsernames" dest="sharedToUsernames"/>
							<mapping source="sharingLevel" dest="sharingLevel"/>
							<mapping source="stripedContent" dest="stripedContent"/>
							<mapping source="title" dest="title"/>
							<mapping source="toDate" dest="toDate"/>
							<mapping source="type" dest="type"/>
							<mapping source="username" dest="username"/>
							<mapping source="assignedUser_id" dest="assignedUser_id"/>
							<mapping source="case_id" dest="case_id"/>
							<mapping source="convId" dest="convId"/>
							<mapping source="convId_table" dest="convId_table"/>
							<mapping source="cfCorrespondenceType" dest="cfCorrespondenceType"/>
							<mapping source="srcTbl" dest="srcTbl"/>
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="caseNote_conv"/>
					</action>-
			
					
				</actions>
			</stage> 
								
		
		<stage num="42" mode="Serial" desc="Transform Exhibit" enabled="true">
				<actions>
				
					<action handler="SqlServer.Raw" desc="Creating Case Note" progresslabel="Creating  Case Note" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create  Case Note table">
							IF OBJECT_ID('exhibit_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[exhibit_conv];
							
							IF OBJECT_ID('exhibitTracking_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[exhibitTracking_conv];
							
				
							</task>
							
							<task handler="SqlServer.Script" desc="Create  Case Note table">
							<![CDATA[
							
							CREATE TABLE [exhibit_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							[accessLevel] [int] NULL,
							[createUserRealName] [varchar](255) NULL,
							[createUsername] [varchar](255) NULL,
							[dateCreated] [datetime] NULL,
							[lastUpdateUserRealName] [varchar](255) NULL,
							[lastUpdateUsername] [varchar](255) NULL,
							[lastUpdated] [datetime] NULL,
							[memo] [varchar](512) NULL,
							[optlock] [int] NOT NULL,
							[roaAccessLevel] [int] NULL,
							[sourceCaseNumber] [varchar](255) NULL,
							[updateReason] [varchar](255) NULL,
							[dateReceived] [datetime] NULL,
							[description] [varchar](255) NULL,
							[disposalRequired] [varchar](255) NULL,
							[disposeBy] [datetime] NULL,
							[disposition] [varchar](255) NULL,
							[exhibitNumber] [varchar](255) NULL,
							[exhibitNumberInt] [numeric](19, 0) NULL,
							[exhibitSubType] [varchar](255) NULL,
							[exhibitType] [varchar](255) NULL,
							[status] [varchar](255) NULL,
							[statusDate] [datetime] NULL,
							[submittedBy] [varchar](255) NULL,
							[case_id] [numeric](19, 0) NOT NULL,
							[proceeding_id] [numeric](19, 0) NULL,
							[subCase_id] [numeric](19, 0) NULL,
							[convId] [int] NULL,
							[notes] [varchar](7500) NULL,
							[value] [varchar](255) NULL,
							[dirPerson_id] [numeric](19, 0) NULL,
							texhibit_id NUMERIC(19,0),
							caseNumber VARCHAR(255)
								);	

							CREATE TABLE [exhibitTracking_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							[accessLevel] [int] NULL,
							[createUserRealName] [varchar](255) NULL,
							[createUsername] [varchar](255) NULL,
							[dateCreated] [datetime] NULL,
							[lastUpdateUserRealName] [varchar](255) NULL,
							[lastUpdateUsername] [varchar](255) NULL,
							[lastUpdated] [datetime] NULL,
							[memo] [varchar](512) NULL,
							[optlock] [int] NOT NULL,
							[roaAccessLevel] [int] NULL,
							[sourceCaseNumber] [varchar](255) NULL,
							[updateReason] [varchar](255) NULL,
							[dateEntered] [datetime] NULL,
							[enteredBy] [varchar](255) NULL,
							[notes] [varchar](255) NULL,
							[status] [varchar](255) NULL,
							[statusDate] [datetime] NULL,
							[timeEntered] [datetime] NULL,
							[viewedBy] [varchar](255) NULL,
							[viewedByFirstName] [varchar](255) NULL,
							[viewedByLastName] [varchar](255) NULL,
							[exhibit_id] [numeric](19, 0) NULL,
							[location_id] [numeric](19, 0) NULL,
							[convId] [int] NULL,
							[dirPerson_id] [numeric](19, 0) NULL,
							locationLd NUMERIC(19,0)
								);		


							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Exhibit">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	

							SELECT
							e.*, c.caseNumber,
							exhibitTypeLd = 
							Case
								WHEN exhibitType='DOC' THEN 'DOC'
								WHEN exhibitType='DRUG' THEN 'N'
								WHEN exhibitType='OTH' THEN 'OTH'
								WHEN exhibitType='PHOT' THEN 'PIC'
								WHEN exhibitType='WEA' THEN 'WEA'
								WHEN exhibitType='AUD' THEN 'AUD'
								WHEN exhibitType='CHART' THEN 'CHART'
								WHEN exhibitType='DVD' THEN 'DVD'
								WHEN exhibitType='JUST' THEN 'JUST'
								WHEN exhibitType='MAP' THEN 'MAP'
								WHEN exhibitType='USB' THEN 'USB'
							END
							FROM ecourt.tExhibit e
							INNER JOIN ${sql.staging.db}.dbo.case_conv c
							ON e.case_id = c.id 

							
								
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="id" dest="id"/>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="optlock" dest="optlock"/>
							<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
							<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
							<mapping source="updateReason" dest="updateReason"/>
							<mapping source="dateReceived" dest="dateReceived"/>
							<mapping source="description" dest="description"/>
							<mapping source="disposalRequired" dest="disposalRequired"/>
							<mapping source="disposeBy" dest="disposeBy"/>
							<mapping source="disposition" dest="disposition"/>
							<mapping source="exhibitNumber" dest="exhibitNumber"/>
							<mapping source="exhibitNumberInt" dest="exhibitNumberInt"/>
							<mapping source="exhibitSubType" dest="exhibitSubType"/>
							<mapping source="exhibitTypeLd" dest="exhibitType"/>
							<mapping source="status" dest="status"/>
							<mapping source="statusDate" dest="statusDate"/>
							<mapping source="submittedBy" dest="submittedBy"/>
							<mapping source="case_id" dest="case_id"/>
							<mapping source="proceeding_id" dest="proceeding_id"/>
							<mapping source="subCase_id" dest="subCase_id"/>
							<mapping source="convId" dest="convId"/>
							<mapping source="notes" dest="notes"/>
							<mapping source="value" dest="value"/>
							<mapping source="dirPerson_id" dest="dirPerson_id"/>
							<mapping source="caseNumber" dest="caseNumber"/>
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="exhibit_conv"/>
					</action>
					
							
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Exhibit Tracking">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	

							SELECT
							et.*,
							locationLd = 
							Case
								WHEN location_id = 149 THEN 99044
								WHEN location_id = 147 THEN 99045
								WHEN location_id = 153 THEN 97881
								WHEN location_id = 155 THEN 97938
								WHEN location_id = 151 THEN 97880
								WHEN location_id = 157 THEN 99046
								WHEN location_id = 159 THEN 99047
								WHEN location_id = 143 THEN 97879
							END
							FROM ecourt.tExhibitTracking et
						
							
								
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="id" dest="id"/>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="optlock" dest="optlock"/>
							<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
							<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
							<mapping source="updateReason" dest="updateReason"/>
							<mapping source="dateEntered" dest="dateEntered"/>
							<mapping source="enteredBy" dest="enteredBy"/>
							<mapping source="notes" dest="notes"/>
							<mapping source="status" dest="status"/>
							<mapping source="statusDate" dest="statusDate"/>
							<mapping source="timeEntered" dest="timeEntered"/>
							<mapping source="viewedBy" dest="viewedBy"/>
							<mapping source="viewedByFirstName" dest="viewedByFirstName"/>
							<mapping source="viewedByLastName" dest="viewedByLastName"/>
							<mapping source="exhibit_id" dest="exhibit_id"/>
							<mapping source="location_id" dest="location_id"/>
							<mapping source="convId" dest="convId"/>
							<mapping source="dirPerson_id" dest="dirPerson_id"/>
							<mapping source="locationLd" dest="locationLd"/>
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="exhibitTracking_conv"/>
					</action>
			
				</actions>
			</stage> 
			
		<stage num="44" mode="Serial" desc="Transform Person Note" enabled="true">
				<actions>
				
					<action handler="SqlServer.Raw" desc="Creating Person Note" progresslabel="Creating  Person Note" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create   Person table">
							IF OBJECT_ID('personNote_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[personNote_conv];
							
				
							</task>
							
							<task handler="SqlServer.Script" desc="Create  Person Note table">
							<![CDATA[
							
							CREATE TABLE [personNote_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							[accessLevel] [int] NULL,
							[createUserRealName] [varchar](255) NULL,
							[createUsername] [varchar](255) NULL,
							[dateCreated] [datetime] NULL,
							[lastUpdateUserRealName] [varchar](255) NULL,
							[lastUpdateUsername] [varchar](255) NULL,
							[lastUpdated] [datetime] NULL,
							[memo] [varchar](7500) NULL,
							[optlock] [int] NOT NULL,
							[roaAccessLevel] [int] NULL,
							[sourceCaseNumber] [varchar](255) NULL,
							[updateReason] [varchar](255) NULL,
							[attachedEntity] [varchar](255) NULL,
							[attachedId] [numeric](19, 0) NULL,
							[color] [varchar](255) NOT NULL,
							[completed] [tinyint] NULL,
							[content] [text] NULL,
							[dueDate] [datetime] NULL,
							[noteDate] [datetime] NULL,
							[sharedToAuthorityNames] [varchar](255) NULL,
							[sharedToUsernames] [varchar](255) NULL,
							[sharingLevel] [int] NOT NULL,
							[stripedContent] [text] NULL,
							[title] [varchar](255) NULL,
							[toDate] [datetime] NULL,
							[type] [varchar](255) NULL,
							[username] [varchar](255) NULL,
							[assignedUser_id] [numeric](19, 0) NULL,
							[person_id] [numeric](19, 0) NOT NULL,
							[convId] [int] NULL,
							
								);			


							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Person Note">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	

							SELECT
							pn.*
							FROM ecourt.tPersonNote pn
						

							
								
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="optlock" dest="optlock"/>
							<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
							<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
							<mapping source="updateReason" dest="updateReason"/>
							<mapping source="attachedEntity" dest="attachedEntity"/>
							<mapping source="attachedId" dest="attachedId"/>
							<mapping source="color" dest="color"/>
							<mapping source="completed" dest="completed"/>
							<mapping source="content" dest="content"/>
							<mapping source="dueDate" dest="dueDate"/>
							<mapping source="noteDate" dest="noteDate"/>
							<mapping source="sharedToAuthorityNames" dest="sharedToAuthorityNames"/>
							<mapping source="sharedToUsernames" dest="sharedToUsernames"/>
							<mapping source="sharingLevel" dest="sharingLevel"/>
							<mapping source="stripedContent" dest="stripedContent"/>
							<mapping source="title" dest="title"/>
							<mapping source="toDate" dest="toDate"/>
							<mapping source="type" dest="type"/>
							<mapping source="username" dest="username"/>
							<mapping source="assignedUser_id" dest="assignedUser_id"/>
							<mapping source="person_id" dest="person_id"/>
							<mapping source="convId" dest="convId"/>
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="personNote_conv"/>
					</action>-
			
				</actions>
			</stage> 
			
		<stage num="46" mode="Serial" desc="Transform tCaseOtherNumber" enabled="true">
				<actions>
				
					<action handler="SqlServer.Raw" desc="Creating tCaseOtherNumber" progresslabel="Creating  tCaseOtherNumber" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create  tCaseOtherNumber">
							IF OBJECT_ID('caseOtherNumber_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[caseOtherNumber_conv];
							
				
							</task>
							
							<task handler="SqlServer.Script" desc="Create tCaseOtherNumber table">
							<![CDATA[
							
							CREATE TABLE [caseOtherNumber_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							[accessLevel] [int] NULL,
							[createUserRealName] [varchar](255) NULL,
							[createUsername] [varchar](255) NULL,
							[dateCreated] [datetime] NULL,
							[lastUpdateUserRealName] [varchar](255) NULL,
							[lastUpdateUsername] [varchar](255) NULL,
							[lastUpdated] [datetime] NULL,
							[memo] [varchar](512) NULL,
							[optlock] [int] NOT NULL,
							[roaAccessLevel] [int] NULL,
							[sourceCaseNumber] [varchar](255) NULL,
							[updateReason] [varchar](255) NULL,
							[endDate] [datetime] NULL,
							[number] [varchar](255) NULL,
							[startDate] [datetime] NULL,
							[type] [varchar](255) NULL,
							[case_id] [numeric](19, 0) NOT NULL,
							[subCase_id] [numeric](19, 0) NULL,
							[convId] [int] NULL,
							[active] [tinyint] NULL,
							[lead] [tinyint] NULL,
							[notes] [varchar](7500) NULL,
							[dirOrgUnit_id] [numeric](19, 0) NULL,
							tCaseOtherNumber_id NUMERIC(19,0),
							caseKey NUMERIC(19,0)
							
								);			


							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Person Note">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	

							SELECT
							con.*,
							cc.idKey as caseKey
							FROM ecourt.tCaseOtherNumber con
							INNER JOIN ${sql.staging.db}.dbo.case_conv cc
							ON con.case_id = cc.id
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="optlock" dest="optlock"/>
							<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
							<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
							<mapping source="updateReason" dest="updateReason"/>
							<mapping source="endDate" dest="endDate"/>
							<mapping source="number" dest="number"/>
							<mapping source="startDate" dest="startDate"/>
							<mapping source="type" dest="type"/>
							<mapping source="case_id" dest="case_id"/>
							<mapping source="subCase_id" dest="subCase_id"/>
							<mapping source="convId" dest="convId"/>
							<mapping source="active" dest="active"/>
							<mapping source="lead" dest="lead"/>
							<mapping source="notes" dest="notes"/>
							<mapping source="dirOrgUnit_id" dest="dirOrgUnit_id"/>
							<mapping source="caseKey" dest="caseKey"/>
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="caseOtherNumber_conv"/>
					</action>-
			
				</actions>
			</stage> 
			
		<stage num="48" mode="Serial" desc="Transform tArrest" enabled="true">
			<actions>
				
					<action handler="SqlServer.Raw" desc="Creating tArrest" progresslabel="Creating  tArrest" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create  tArrest">
							IF OBJECT_ID('arrest_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[arrest_conv];
							
				
							</task>
							
							<task handler="SqlServer.Script" desc="Create tArrest table">
							<![CDATA[
							
							CREATE TABLE [arrest_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							[accessLevel] [int] NULL,
							[createUserRealName] [varchar](255) NULL,
							[createUsername] [varchar](255) NULL,
							[dateCreated] [datetime] NULL,
							[lastUpdateUserRealName] [varchar](255) NULL,
							[lastUpdateUsername] [varchar](255) NULL,
							[lastUpdated] [datetime] NULL,
							[memo] [varchar](7500) NULL,
							[optlock] [int] NOT NULL,
							[roaAccessLevel] [int] NULL,
							[sourceCaseNumber] [varchar](255) NULL,
							[updateReason] [varchar](255) NULL,
							[arrestDate] [datetime] NULL,
							[arrestTime] [datetime] NULL,
							[arrestType] [varchar](255) NULL,
							[arrestingAgencyFileNumber] [varchar](255) NULL,
							[bookingNumber] [varchar](255) NULL,
							[location] [varchar](255) NULL,
							[statusDate] [datetime] NULL,
							[arrestingAgency_id] [numeric](19, 0) NULL,
							[associatedParty_id] [numeric](19, 0) NULL,
							[bookingAgency_id] [numeric](19, 0) NULL,
							[officer_id] [numeric](19, 0) NULL,
							[convId] [int] NULL,
													
								);			


							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Person Note">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	

							SELECT
							a.*
							FROM ecourt.tArrest a
							WHERE arrestDate IS NOT NULL
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="id" dest="id"/>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="optlock" dest="optlock"/>
							<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
							<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
							<mapping source="updateReason" dest="updateReason"/>
							<mapping source="arrestDate" dest="arrestDate"/>
							<mapping source="arrestTime" dest="arrestTime"/>
							<mapping source="arrestType" dest="arrestType"/>
							<mapping source="arrestingAgencyFileNumber" dest="arrestingAgencyFileNumber"/>
							<mapping source="bookingNumber" dest="bookingNumber"/>
							<mapping source="location" dest="location"/>
							<mapping source="statusDate" dest="statusDate"/>
							<mapping source="arrestingAgency_id" dest="arrestingAgency_id"/>
							<mapping source="associatedParty_id" dest="associatedParty_id"/>
							<mapping source="bookingAgency_id" dest="bookingAgency_id"/>
							<mapping source="officer_id" dest="officer_id"/>
							<mapping source="convId" dest="convId"/>
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="arrest_conv"/>
					</action>-
			
				</actions>
			</stage> 
		
		<stage num="50" mode="Serial" desc="Transform tBail" enabled="true">
			<actions>
				
					<action handler="SqlServer.Raw" desc="Creating tCaseOtherNumber" progresslabel="Creating  tBail" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create  tCaseOtherNumber">
							IF OBJECT_ID('bail_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[bail_conv];
							
							IF OBJECT_ID('bailCondition_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[bailCondition_conv];
				
				
							</task>
							
							<task handler="SqlServer.Script" desc="Create tCaseOtherNumber table">
							<![CDATA[
							
							CREATE TABLE [bail_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							[accessLevel] [int] NULL,
							[createUserRealName] [varchar](255) NULL,
							[createUsername] [varchar](255) NULL,
							[dateCreated] [datetime] NULL,
							[lastUpdateUserRealName] [varchar](255) NULL,
							[lastUpdateUsername] [varchar](255) NULL,
							[lastUpdated] [datetime] NULL,
							[memo] [varchar](512) NULL,
							[optlock] [int] NOT NULL,
							[roaAccessLevel] [int] NULL,
							[sourceCaseNumber] [varchar](255) NULL,
							[updateReason] [varchar](255) NULL,
							[bailAmountAppliedCents] [numeric](19, 0) NOT NULL,
							[bailAmountCents] [numeric](19, 0) NOT NULL,
							[bailType] [varchar](255) NULL,
							[bondAgentAddress1] [varchar](255) NULL,
							[bondAgentAddress2] [varchar](255) NULL,
							[bondAgentCity] [varchar](255) NULL,
							[bondAgentCountry] [varchar](255) NULL,
							[bondAgentNumber] [varchar](255) NULL,
							[bondAgentState] [varchar](255) NULL,
							[bondAgentZip] [varchar](255) NULL,
							[bondForfeitureNumber] [varchar](255) NULL,
							[bondNumber] [varchar](255) NULL,
							[bondType] [varchar](255) NULL,
							[datePosted] [datetime] NULL,
							[effectiveFrom] [datetime] NULL,
							[effectiveTo] [datetime] NULL,
							[bailAmountApplied] [float] NULL,
							[bailAmount] [float] NULL,
							[orderBy] [varchar](255) NULL,
							[refundOrderNumber] [varchar](255) NULL,
							[registerNumber] [varchar](255) NULL,
							[status] [varchar](255) NULL,
							[statusDate] [datetime] NULL,
							[suretyType] [varchar](255) NULL,
							[associatedParty_id] [numeric](19, 0) NOT NULL,
							[bailBondsman_id] [numeric](19, 0) NULL,
							[bondIndemnityCompany_id] [numeric](19, 0) NULL,
							[postedBailParty_id] [numeric](19, 0) NULL,
							[convId] [int] NULL,
							[notes] [varchar](7500) NULL,
							[cf_bailAmount] [float] NULL,
							cfConvMemo varchar(7500)
													
								);			
							
							CREATE TABLE [bailCondition_conv](
							[idKey] [numeric](19, 0) IDENTITY(1,1) NOT NULL,
							id NUMERIC(19,0),
							[bailConditionStatus] [varchar](255) NULL,
							[beginDate] [datetime] NULL,
							[conditionType] [varchar](255) NULL,
							[endDate] [datetime] NULL,
							[bail_id] [numeric](19, 0) NOT NULL,
							[conditionText] [varchar](255) NULL,
							[optlock] [int] NOT NULL,
							[dateCreated] [datetime] NULL,
							[lastUpdated] [datetime] NULL,
							[memo] [varchar](7500) NULL,
							notes varchar(7500),
							[accessLevel] [int] NULL,
							[createUserRealName] [varchar](255) NULL,
							[createUsername] [varchar](255) NULL,
							[lastUpdateUserRealName] [varchar](255) NULL,
							[lastUpdateUsername] [varchar](255) NULL,
							[calculatedAccessLevel] [int] NULL,
							[roaAccessLevel] [int] NULL,
							[sourceCaseNumber] [varchar](255) NULL,
							[updateReason] [varchar](255) NULL,
							[exchangeId] [varchar](255) NULL,
							[conditionBeginDate] [datetime] NULL,
							[conditionEndDate] [datetime] NULL,
							[length] [float] NULL,
							[lengthUnit] [varchar](255) NULL,
							[status] [varchar](255) NULL,
							[statusDate] [datetime] NULL,
							tParty_id NUMERIC(19,0),
							tPID NUMERIC(19,0),
							tPerson_id NUMERIC(19,0),
							caseKey NUMERIC(19,0),
							directory_id NUMERIC(19,0) 
							);
							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Bail">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	

							SELECT
							b.*,
							bailTypeLd =
							case
								WHEN bailType = 'SURC' THEN 'BOND'
								WHEN bailType = 'CASH' THEN 'CASH'
								WHEN bailType = 'CAS' THEN 'CASH'
								WHEN bailType = 'CT5' THEN 'CT5'
								WHEN bailType = 'CT6' THEN 'CT6'
							END,
							bailStatusLd=
							case
								WHEN status = 'A' THEN 'ACTIVE'
								WHEN status = 'FORF' THEN 'FORF'
								WHEN status = 'POST' THEN 'POST'
								WHEN status = 'SET' THEN 'SET'
							END
							FROM ecourt.tBail b
			
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="id" dest="id"/>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="optlock" dest="optlock"/>
							<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
							<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
							<mapping source="updateReason" dest="updateReason"/>
							<mapping source="bailAmountAppliedCents" dest="bailAmountAppliedCents"/>
							<mapping source="bailAmountCents" dest="bailAmountCents"/>
							<mapping source="bailTypeLd" dest="bailType"/>
							<mapping source="bondAgentAddress1" dest="bondAgentAddress1"/>
							<mapping source="bondAgentAddress2" dest="bondAgentAddress2"/>
							<mapping source="bondAgentCity" dest="bondAgentCity"/>
							<mapping source="bondAgentCountry" dest="bondAgentCountry"/>
							<mapping source="bondAgentNumber" dest="bondAgentNumber"/>
							<mapping source="bondAgentState" dest="bondAgentState"/>
							<mapping source="bondAgentZip" dest="bondAgentZip"/>
							<mapping source="bondForfeitureNumber" dest="bondForfeitureNumber"/>
							<mapping source="bondNumber" dest="bondNumber"/>
							<mapping source="bondType" dest="bondType"/>
							<mapping source="datePosted" dest="datePosted"/>
							<mapping source="effectiveFrom" dest="effectiveFrom"/>
							<mapping source="effectiveTo" dest="effectiveTo"/>
							<mapping source="bailAmountApplied" dest="bailAmountApplied"/>
							<mapping source="bailAmount" dest="bailAmount"/>
							<mapping source="orderBy" dest="orderBy"/>
							<mapping source="refundOrderNumber" dest="refundOrderNumber"/>
							<mapping source="registerNumber" dest="registerNumber"/>
							<mapping source="bailStatusLd" dest="status"/>
							<mapping source="statusDate" dest="statusDate"/>
							<mapping source="suretyType" dest="suretyType"/>
							<mapping source="associatedParty_id" dest="associatedParty_id"/>
							<mapping source="bailBondsman_id" dest="bailBondsman_id"/>
							<mapping source="bondIndemnityCompany_id" dest="bondIndemnityCompany_id"/>
							<mapping source="postedBailParty_id" dest="postedBailParty_id"/>
							<mapping source="convId" dest="convId"/>
							<mapping source="notes" dest="notes"/>
							<mapping source="cf_bailAmount" dest="cf_bailAmount"/>
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="bail_conv"/>
					</action>
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Bail">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	

							SELECT bc.*, pty.caseKey as caseKey,
							bbs_id =
							CASE
								WHEN conditionType = 'POST' THEN bbs.tParty_id
								ELSE NULL
							END,
							directory_id = 
							CASE
								WHEN bc.notes = 'A B BAIL BONDS' THEN '100754'
								WHEN bc.notes = 'Aalie''''s Bail Bonds  1835 Bliss Ct.  Carson City, NV 89701' THEN '100754'
								WHEN bc.notes = 'Aalie''''s Bail Bonds' THEN '100754'
								WHEN bc.notes = 'Aallie''''s Bail Bond  1835 Bliss Court  Carson City, NV  89701' THEN '100754'
								WHEN bc.notes = 'Aallie''''s Bail Bond  1835 Bliss Court  Carson City, NV 89701' THEN '100754'
								WHEN bc.notes = 'Aallie''''s Bail Bond' THEN '100754'
								WHEN bc.notes = 'Aallie''''s Bail Bonds  1835 Bliss Court  Carson City, NV   89701' THEN '100754'
								WHEN bc.notes = 'Aallie''''s Bail Bonds  1835 Bliss Court  Carson City, NV  89701' THEN '100754'
								WHEN bc.notes = 'Aallie''''s Bail Bonds  1835 Bliss Court  Carson City, NV 89701' THEN '100754'
								WHEN bc.notes = 'Aallie''''s Bail Bonds  1835 Bliss Court   Carson City, NV  89701' THEN '100754'
								WHEN bc.notes = 'Aallie''''s Bail Bonds  1835 Bliss Court   Carson City, NV 89701' THEN '100754'
								WHEN bc.notes = 'Aallie''''s Bail Bonds  1835 Bliss Ct  Carson City, NV 89701' THEN '100754'
								WHEN bc.notes = 'Aallie''''s Bail Bonds  1835 Bliss Ct.  Carson City, NV  89701  ' THEN '100754'
								WHEN bc.notes = 'Aallie''''s Bail Bonds  1835 Bliss Ct.  Carson City, NV  89701' THEN '100754'
								WHEN bc.notes = 'Aallie''''s Bail Bonds  1835 Bliss Ct.  Carson City, NV 89701' THEN '100754'
								WHEN bc.notes = 'Aallie''''s Bail Bonds  1835 Bliss Ct.   Carson City, NV  89701' THEN '100754'
								WHEN bc.notes = 'Aallie''''s Bail Bonds  1835 Bliss Ct.   Carson City, NV 89701' THEN '100754'
								WHEN bc.notes = 'Aallie''''s Bail Bonds  Mailing: 1835 Bliss Ct.   Carson City, NV 89701' THEN '100754'
								WHEN bc.notes = 'AAllie''''s Bail Bonds   1835 Bliss Court  Carson City, NV  89701' THEN '100754'
								WHEN bc.notes = 'Aallie''''s Bail Bonds   1835 Bliss Ct  Carson City, NV  89701' THEN '100754'
								WHEN bc.notes = 'AALLIE''''S BAIL BONDS' THEN '100754'
								WHEN bc.notes = 'Aallie''''s Bail Bonds   1835 Bliss Ct   Carson City, NV  89701' THEN '100754'
								WHEN bc.notes = 'Aallie''''s Bail Bonds, Inc. ' THEN '100754'
								WHEN bc.notes = 'Aallie''''s Bail Bons   1835 Bliss Court  Carson City, NV  89701' THEN '100754'
								WHEN bc.notes = 'Aallies Bail Bonds  1835 Bliss Court  Carson City, NV  89701' THEN '100754'
								WHEN bc.notes = 'Aalllie''''s Bail Bonds  1835 Bliss Court  Carson City, NV  89701' THEN '100754'
								WHEN bc.notes = 'Aawsome Bail Bonds  P.O. Box 1735  Hawthorne, Nevada 89415' THEN '100755'
								WHEN bc.notes = 'Aawsome Bail Bonds  P.O. Box 1735  Hawthorne, NV  89415' THEN '100755'
								WHEN bc.notes = 'Aawsome Bail Bonds   P.O. Box 1616  Fallon, NV  89406' THEN '100755'
								WHEN bc.notes = 'AAWSOME BAIL BONDS' THEN '100755'
								WHEN bc.notes = 'Aawsome Bail Bonds/Ed Jones' THEN '100755'
								WHEN bc.notes = 'Able Bail  161 Vine St.   Reno, NV, 89503' THEN '100756'
								WHEN bc.notes = 'Able Bail  161 Vine Street  Reno, NV  89503' THEN '100756'
								WHEN bc.notes = 'Able Bail   161 Vine Street  Reno, NV  89503' THEN '100756'
								WHEN bc.notes = 'Able Bail ' THEN '100756'
								WHEN bc.notes = 'ABLE BAIL BONDS' THEN '100756'
								WHEN bc.notes = 'ACCREDITED SURETY' THEN '97932'
								WHEN bc.notes = 'Accredited Surety and Casualty Co. Inc.' THEN '97932'
								WHEN bc.notes = 'Accredited Surety and Casualty Co., Inc.' THEN '97932'
								WHEN bc.notes = 'Accredited Surety and Casualty Company, Inc' THEN '97932'
								WHEN bc.notes = 'Accredtited Surety and Casualty Company, Inc.' THEN '97932'
								WHEN bc.notes = 'ACTION ANNIE''''S INC.' THEN '100757'
								WHEN bc.notes = 'Action Annie''''s, Inc. Annie''''s Bail Bonds' THEN '100757'
								WHEN bc.notes = 'Action Bail Bonds' THEN '100757'
								WHEN bc.notes = 'ALLEGHENY CASUALTY' THEN '100763'
								WHEN bc.notes = 'Allegheny Casualty Company  P.O. Box 9810   Calabasas, CA  91372-9810' THEN '100763'
								WHEN bc.notes = 'Allie''''s Bail Bonds' THEN '100754'
								WHEN bc.notes = 'Allie''''s Bail Bonds, 1835 Bliss Court, Carson City, NV 89701' THEN '100754'
								WHEN bc.notes = 'ALOHA BAIL BONDS' THEN '100767'
								WHEN bc.notes = 'AMERICAN BANKERS' THEN '97930'
								WHEN bc.notes = 'AMERICAN CONTRACTORS INDEMNITY' THEN '100751'
								WHEN bc.notes = 'American Contractors Indemnity Company  157 Main Street  Greenville, PA  16125' THEN '100751'
								WHEN bc.notes = 'American Contractors Indemnity Company  157 Main Street  Greenville, PA 16125' THEN '100751'
								WHEN bc.notes = 'American Contractors Indemnity Company  157 Main Street / P.O. Box  Greenville, PA  16125' THEN '100751'
								WHEN bc.notes = 'American Contractors Indemnity Company  157 Main Street / P.O. Box 806  Greenville, PA  16125' THEN '100751'
								WHEN bc.notes = 'American Contractors Indemnity Company  Bail USA, Inc.   157 Main Street / P.O. Box 806  Greenville, PA  16125' THEN '100751'
								WHEN bc.notes = 'American Contractors Indemnity Company  P.O. Box 806  Greenville, PA  16125' THEN '100751'
								WHEN bc.notes = 'American Contractors Indemnity Company' THEN '100751'
								WHEN bc.notes = 'AMERICAN SURETY' THEN '100752'
								WHEN bc.notes = 'American Surety Company  P.O. Box 68932  Indianapolis, IN 46268' THEN '100752'
								WHEN bc.notes = 'American Surety Company  P.O. Box 68932  Indianapolis, Indiana 46268' THEN '100752'
								WHEN bc.notes = 'American Surety Company  PO Box 68932  Indianapolis, IN 46268' THEN '100752'
								WHEN bc.notes = 'American Surety Company' THEN '100752'
								WHEN bc.notes = 'AMWEST SURETY INS.' THEN '100765'
								WHEN bc.notes = 'ANNIE''''S BAIL BONDS' THEN '100757'
								WHEN bc.notes = 'Annie''''s Bailbonds  812 E. Musser Street  Carson City, NV  89706' THEN '100757'
								WHEN bc.notes = 'Asllie''''s Bail Bonds  1835 Bliss Court  Carson City, NV 89701' THEN '100754'
								WHEN bc.notes = 'BAIL BONDS INC.' THEN '100754'
								WHEN bc.notes = 'BANKERS INSURANCE CO' THEN '97930'
								WHEN bc.notes = 'Battle Born Bail Bond  845 Hunter Parkway  Fallon, NV 89406' THEN '100758'
								WHEN bc.notes = 'Battle Born Bail Bonds  (no address listed)' THEN '100758'
								WHEN bc.notes = 'battle born bail bonds  40 E Williams Ave  Fallon NV, 89406  ' THEN '100758'
								WHEN bc.notes = 'Battle Born Bail Bonds  40 E Williams Ave  Fallon, NV  89406' THEN '100758'
								WHEN bc.notes = 'Battle Born Bail Bonds  40 E Williams Ave  Fallon, NV 89406' THEN '100758'
								WHEN bc.notes = 'Battle Born Bail Bonds  40 E Williams Avenue  Fallon, NV 89406' THEN '100758'
								WHEN bc.notes = 'Battle Born Bail Bonds  40 E. Williams Ave  Fallon, NV  89406' THEN '100758'
								WHEN bc.notes = 'Battle Born Bail Bonds  40 E. Williams Ave  Fallon, NV 89406' THEN '100758'
								WHEN bc.notes = 'Battle Born Bail Bonds  40 E. Williams Ave   Fallon, NV  89406' THEN '100758'
								WHEN bc.notes = 'Battle Born Bail Bonds  40 E. Williams Avenue  Fallon, NV  89406' THEN '100758'
								WHEN bc.notes = 'Battle Born Bail Bonds  40 E. Williams Avenue  Fallon, NV 89046' THEN '100758'
								WHEN bc.notes = 'Battle Born Bail Bonds  40 E. Williams Avenue  Fallon, NV 89406  ' THEN '100758'
								WHEN bc.notes = 'Battle Born Bail Bonds  40 E. Williams Avenue  Fallon, NV 89406' THEN '100758'
								WHEN bc.notes = 'Battle Born Bail Bonds  40 E. Williams Avenue   Fallon, NV  89406' THEN '100758'
								WHEN bc.notes = 'Battle Born Bail Bonds  40 E. Williams Avenue   Fallon, NV 889406' THEN '100758'
								WHEN bc.notes = 'Battle Born Bail Bonds  40 E. Williams Avenue   Fallon, NV 89406' THEN '100758'
								WHEN bc.notes = 'Battle Born Bail Bonds  40 E. Williams Avenue' THEN '100758'
								WHEN bc.notes = 'Battle Born Bail Bonds  40 East Williams Avenue  Fallon, NV 89406' THEN '100758'
								WHEN bc.notes = 'Battle Born Bail Bonds  845 Hunter Parkway  Fallon, NV 89406' THEN '100758'
								WHEN bc.notes = 'Battle Born Bail Bonds  845 Hunter Parkway   Fallon, NV 89406' THEN '100758'
								WHEN bc.notes = 'Battle Born Bail Bonds   40 E. Williams Ave  Fallon, NV  89406' THEN '100758'
								WHEN bc.notes = 'Battle Born Bail Bonds' THEN '100758'
								WHEN bc.notes = 'BBI OF FALLON' THEN '100759'
								WHEN bc.notes = 'BHattle Born Bail Bonds' THEN '100758'
								WHEN bc.notes = 'Crum & Forster   United States Fire Insurance Company  Bail USA, Inc.   157 Main Street/P.O. Box 806  Greenville, PA 16125' THEN '97925'
								WHEN bc.notes = 'Crum and Forster  United States Fire Insurance Company  157 Main Street / P.O. Box 806  Greenville, PA  16125' THEN '97925'
								WHEN bc.notes = 'Crum and forster Indemnity Company  10350 Richmond Ave, Ste 300  Houston, TX  77042' THEN '97925'
								WHEN bc.notes = 'Crum and Foster  United States Fire Insurance Company  157 Main Street / P.O. Box 806  Greenville, PA  16125' THEN '97925'
								WHEN bc.notes = 'Fallon Bail Bond  P.O. Box 1616   Fallon, NV  89407' THEN '100759'
								WHEN bc.notes = 'Fallon Bail Bond, Inc' THEN '100759'
								WHEN bc.notes = 'Fallon Bail Bond, Inc.  P.O. Box 1616  Fallon, NV  89407' THEN '100759'
								WHEN bc.notes = 'Fallon Bail Bond, Inc.  PO Box 1616  Fallon, NV 89407' THEN '100759'
								WHEN bc.notes = 'Fallon Bail Bond, Inc.' THEN '100759'
								WHEN bc.notes = 'Fallon Bail Bonds  P.O. Box 1616  Fallon, NV  89406' THEN '100759'
								WHEN bc.notes = 'Fallon Bail Bonds  P.O. Box 1616  Fallon, NV  89407' THEN '100759'
								WHEN bc.notes = 'Fallon Bail Bonds  P.O. Box 1616  Fallon, NV 89407' THEN '100759'
								WHEN bc.notes = 'Fallon Bail Bonds  PO Box 1616  Fallon, NV 89407' THEN '100759'
								WHEN bc.notes = 'Fallon Bail Bonds  PO Box 1616   Fallon, NV 89406' THEN '100759'
								WHEN bc.notes = 'Fallon Bail Bonds  POB 1616  Fallon, NV  89406' THEN '100759'
								WHEN bc.notes = 'Fallon Bail Bonds   P.O. Box 1616  Fallon, NV  89406' THEN '100759'
								WHEN bc.notes = 'Fallon Bail Bonds   P.O. Box 1616  Fallon, NV  89407' THEN '100759'
								WHEN bc.notes = 'FALLON BAIL BONDS' THEN '100759'
								WHEN bc.notes = 'Fallon Bail Bonds Inc  P.O. Box 1616  Fallon, NV  89406' THEN '100759'
								WHEN bc.notes = 'Fallon Bail Bonds Inc  PO Box 1616  Fallon, NV 89406' THEN '100759'
								WHEN bc.notes = 'Fallon Bail Bonds Inc.  PO Box 1616  Fallon, NV 89407' THEN '100759'
								WHEN bc.notes = 'Fallon bail Bonds Inc.  POB 1616   Fallon, NV 89407' THEN '100759'
								WHEN bc.notes = 'Fallon Bail Bonds Inc.   PO Box 1616  Fallon, NV 89407' THEN '100759'
								WHEN bc.notes = 'Fallon Bail Bonds, Inc  P.O. Box 1616  Fallon, NV  89406' THEN '100759'
								WHEN bc.notes = 'Fallon Bail Bonds, Inc  P.O. Box 1616  Fallon, NV  89407' THEN '100759'
								WHEN bc.notes = 'Fallon Bail Bonds, Inc' THEN '100759'
								WHEN bc.notes = 'Fallon Bail Bonds, Inc   POB 1616, Fallon, NV  89406' THEN '100759'
								WHEN bc.notes = 'Fallon Bail Bonds, Inc.  P. O. Box 1616  Fallon, NV 89407' THEN '100759'
								WHEN bc.notes = 'Fallon Bail Bonds, Inc.  P.O. Box 1616  Fallon, NV  89406' THEN '100759'
								WHEN bc.notes = 'Fallon Bail Bonds, Inc.  P.O. Box 1616  Fallon, NV  89407  ' THEN '100759'
								WHEN bc.notes = 'Fallon Bail Bonds, Inc.  P.O. Box 1616  Fallon, NV  89407' THEN '100759'
								WHEN bc.notes = 'Fallon Bail Bonds, Inc.  P.O. Box 1616  Fallon, NV 89407' THEN '100759'
								WHEN bc.notes = 'Fallon Bail Bonds, Inc.  PO Box 1616  Fallon, NV  89407' THEN '100759'
								WHEN bc.notes = 'Fallon Bail Bonds, Inc.  PO Box 1616  Fallon, NV 89407' THEN '100759'
								WHEN bc.notes = 'Fallon Bail Bonds, Inc.   P.O. Box 1616  Fallon, NV 89406' THEN '100759'
								WHEN bc.notes = 'Fallon Bail Bonds, Inc.   P.O. Box 1616  Fallon, NV 89407' THEN '100759'
								WHEN bc.notes = 'Fallon Bail Bonds, Inc.   POB 1616  Fallon, NV 89407' THEN '100759'
								WHEN bc.notes = 'Fallon Bail Bonds, Inc.    P.O. Box 1616  Fallon, NV  89406' THEN '100759'
								WHEN bc.notes = 'Fallon Bail Bonds, Inc.    P.O. Box 1616  Fallon, NV  89407' THEN '100759'
								WHEN bc.notes = 'Fallon Bail Bonds, Inc.' THEN '100759'
								WHEN bc.notes = 'Fallon Bail Bonds, POB 1616 Fallon, NV 89407' THEN '100759'
								WHEN bc.notes = 'Fallon/AAwesome Bail Bonds  P.O. Box 1616  Fallon, NV 89406' THEN '100759'
								WHEN bc.notes = 'Fallon/AAwsome Bail Bonds  P.O. 1616   Fallon, NV 89407' THEN '100759'
								WHEN bc.notes = 'Fallon/Aawsome Bail Bonds  PO Box 1616  Fallon, NV 89407' THEN '100759'
								WHEN bc.notes = 'FRONTIER INSURANCE' THEN '100764'
								WHEN bc.notes = 'INTERNATIONAL FIDELITY INS' THEN '97929'
								WHEN bc.notes = 'International Fidelity Insurance Company  c/o Associated Bond and Insurance Agency, Inc.  PO Box 9810  Calabasas, CA 91372-9810' THEN '97929'
								WHEN bc.notes = 'LEXINGTON NATIONAL' THEN '100761'
								WHEN bc.notes = 'Lexington National Insurance  P.O. Box 6098  Lutherville, MD  21094' THEN '100761'
								WHEN bc.notes = 'Lexington National Insurance Company  P.O. Box 6098  Lutherville, Maryland  21094' THEN '100761'
								WHEN bc.notes = 'Lexington National Insurance Corp  P.O. Box 6098  Lutherville, MD  21094' THEN '100761'
								WHEN bc.notes = 'Lexington National Insurance Corp.  P.O. Box 6098  Luthervile, MD  21094' THEN '100761'
								WHEN bc.notes = 'Lexington national Insurance Corp. ' THEN '100761'
								WHEN bc.notes = 'Lexington National Insurance Corporation  P.O. Box 6098  Lutherville, Maryland   21094' THEN '100761'
								WHEN bc.notes = 'Lexington National Insurance Corporation  P.O. Box 6098  Lutherville, Maryland  21094' THEN '100761'
								WHEN bc.notes = 'Lexington National Insurance Corporation  P.O. Box 6098  Lutherville, Maryland 21094' THEN '100761'
								WHEN bc.notes = 'Lexington National Insurance Corporation  P.O. Box 6098  Lutherville, MD   21094' THEN '100761'
								WHEN bc.notes = 'Lexington National Insurance Corporation  P.O. Box 6098  Lutherville, MD  21094' THEN '100761'
								WHEN bc.notes = 'Lexington National Insurance Corporation  P.O. Box 6098  Lutherville, MD 21094' THEN '100761'
								WHEN bc.notes = 'Lexington National Insurance Corporation  P.O. Box 6098  Luthervllle, MD  21094' THEN '100761'
								WHEN bc.notes = 'Lexington National Insurance Corporation  PO Box 6098  Lutherville, MD 21094' THEN '100761'
								WHEN bc.notes = 'Lexington National Insurance Corporation' THEN '100761'
								WHEN bc.notes = 'Mike''''s Family Bail Bonds  1280 Terminal Way, #26  Reno, NV  89502' THEN '100760'
								WHEN bc.notes = 'Mike''''s Family Bail Bonds  1550 South Wells Avenue, Suite 200  Reno, NV 89502' THEN '100760'
								WHEN bc.notes = 'Mike''''s Family Bail Bonds' THEN '100760'
								WHEN bc.notes = 'RANGER INSURANCE CO.' THEN '100766'
								WHEN bc.notes = 'ROCHE SURETY & CASUALTY' THEN '97927'
								WHEN bc.notes = 'Roche Surety and Casualty Co  4107 N. Himes Avenue, 2nd Floor  Tampa, FL  33607' THEN '97927'
								WHEN bc.notes = 'Roche Surety and Casualty Co Inc.  4107 N Himes Avenue 2nd FLoor  Tampa, FL 33607' THEN '97927'
								WHEN bc.notes = 'Roche Surety and Casualty Co Inc.  4107 N. Himes Avenue 2nd Floor  Tampa, FL 33607' THEN '97927'
								WHEN bc.notes = 'Roche Surety and Casualty Co, Inc.  4107 N. Himes Avenue - 2nd Floor  Tampa, FL  33607' THEN '97927'
								WHEN bc.notes = 'Roche Surety and Casualty Co, Inc.' THEN '97927'
								WHEN bc.notes = 'Roche Surety and Casualty Co. ' THEN '97927'
								WHEN bc.notes = 'Roche Surety and Casualty Co. Inc  4107 N Himes Avenue 2nd Floor  Tampa, FL 33607' THEN '97927'
								WHEN bc.notes = 'Roche Surety and Casualty Co. Inc  4107 N Himes. Avenue 2nd Floor  Tampa, FL 33607' THEN '97927'
								WHEN bc.notes = 'Roche Surety and Casualty Co. Inc  4107 N. Himes Ave 2nd Floor  Tampa, FL 33607' THEN '97927'
								WHEN bc.notes = 'Roche Surety and Casualty Co. Inc  4107 N. Himes Avenue 2nd Floor  Tampa, FL 33607' THEN '97927'
								WHEN bc.notes = 'Roche Surety and Casualty Co. Inc.  4107 N Himes Avenue 2nd Floor  Tampa, FL 33607' THEN '97927'
								WHEN bc.notes = 'Roche Surety and Casualty Co. Inc.  4107 N. Himes 2nd Floor  Tampa, FL 33607' THEN '97927'
								WHEN bc.notes = 'Roche Surety and Casualty Co. Inc.  4107 N. Himes Avenue 2nd Floor  Tampa, FL 33607' THEN '97927'
								WHEN bc.notes = 'Roche Surety and Casualty Co. Inc.  4107 N. Himes Avenue 2nd Floor   Tampa, FL 33607' THEN '97927'
								WHEN bc.notes = 'Roche Surety and Casualty Co. Inc.   4107 N. Himes Avenue 2nd Floor  Tampa, FL 33607' THEN '97927'
								WHEN bc.notes = 'Roche Surety and Casualty Co. Inc.' THEN '97927'
								WHEN bc.notes = 'Roche Surety and Casualty Co.,   4107 N. Himes Avenue, 2nd Floor  Tampa, FL 33607' THEN '97927'
								WHEN bc.notes = 'Roche Surety and Casualty Co., Inc  4107 N. Himes Ave, 2nd Floor  Tampa, FL  33607' THEN '97927'
								WHEN bc.notes = 'Roche Surety and Casualty Co., Inc  4107 N. Himes Avenue, 2nd Floor  Tampa, FL  33607' THEN '97927'
								WHEN bc.notes = 'Roche Surety and Casualty Co., Inc' THEN '97927'
								WHEN bc.notes = 'Roche Surety and Casualty Co., Inc.  ' THEN '97927'
								WHEN bc.notes = 'Roche Surety and Casualty Co., Inc.  1910 Orient Road  Tampa, FL  33619' THEN '97927'
								WHEN bc.notes = 'Roche Surety and Casualty Co., Inc.  1910 Orient Road  Tampa, FL 33619' THEN '97927'
								WHEN bc.notes = 'Roche Surety and Casualty Co., Inc.  19101 Orient Road  Tampa, FL 33619' THEN '97927'
								WHEN bc.notes = 'Roche Surety and Casualty Co., Inc.  4107 N. Himes Ave, 2nd Floor  Tampa, FL  33607' THEN '97927'
								WHEN bc.notes = 'Roche Surety and Casualty Co., Inc.  4107 N. Himes Ave, 2nd Floor  Tampa, FL 33607' THEN '97927'
								WHEN bc.notes = 'Roche Surety and Casualty Co., Inc.  4107 N. Himes Ave, Second Floor  Tampa, FL  33607' THEN '97927'
								WHEN bc.notes = 'Roche Surety and Casualty Co., Inc.  4107 N. Himes Avenue  Tampa, FL  33607' THEN '97927'
								WHEN bc.notes = 'Roche Surety and Casualty Co., Inc.  4107 N. Himes Avenue - 2nd Floor  Tampa, FL  33607' THEN '97927'
								WHEN bc.notes = 'Roche Surety and Casualty Co., Inc.  4107 N. Himes Avenue 2nd Floor  Tampa, FL 33607' THEN '97927'
								WHEN bc.notes = 'Roche Surety and Casualty Co., Inc.  4107 N. Himes Avenue 2nd Floor   Tampa, FL 33607' THEN '97927'
								WHEN bc.notes = 'Roche Surety and Casualty Co., Inc.  4107 N. Himes Avenue, 2 Floor  Tampa, FL  33607' THEN '97927'
								WHEN bc.notes = 'Roche Surety and Casualty Co., Inc.  4107 N. Himes Avenue, 2nd Floor  Tampa, FL  33607' THEN '97927'
								WHEN bc.notes = 'Roche Surety and Casualty Co., Inc.  4107 N. Himes Avenue, 2nd Floor  Tampa, FL 33607' THEN '97927'
								WHEN bc.notes = 'Roche Surety and Casualty Co., Inc.  4107 N. Himes Avenue, Second Floor  Tampa, FL  33607' THEN '97927'
								WHEN bc.notes = 'Roche Surety and Casualty Co., Inc.  4107 North Himes Avenue, 2nd Floor  Tampa, FL  33607' THEN '97927'
								WHEN bc.notes = 'Roche Surety And Casualty Co., Inc.  4107 North Himes Avenue, 2nd Floor   Tampa, Florida 33607' THEN '97927'
								WHEN bc.notes = 'Roche Surety and Casualty Co., Inc.   4107 Himes Avenue 2nd Floor  Tampa, FL 33607' THEN '97927'
								WHEN bc.notes = 'Roche Surety and Casualty Co., Inc.   4107 N. Himes Avenue 2nd Floor  Tampa, FL 33607' THEN '97927'
								WHEN bc.notes = 'Roche Surety and Casualty Co., Inc.   4107 N. Himes Avenue 2nd Floor   Tampa, FL 33607' THEN '97927'
								WHEN bc.notes = 'Roche Surety and Casualty Co., Inc.   4107 N. Himes Avenue, 2nd Floor  Tampa, FL 33607' THEN '97927'
								WHEN bc.notes = 'Roche Surety and Casualty Co., Inc.   4107 N. Himes Avenue, 2nd Floor   Tampa, FL 33607' THEN '97927'
								WHEN bc.notes = 'Roche Surety and Casualty Co., Inc.   4107 North Himes Avenue, 2nd Floor  Tampa, Florida 33607' THEN '97927'
								WHEN bc.notes = 'Roche Surety and Casualty Co., Inc.   4107 North Himes Avenue, 2nd Floor   Tampa, Florida 33607' THEN '97927'
								WHEN bc.notes = 'Roche Surety and Casualty Co., Inc.' THEN '97927'
								WHEN bc.notes = 'Roche Surety and Casuualty Co., Inc.  4107 North Himes Avenue, 2nd Floor  Tampa, Florida 33607' THEN '97927'
								WHEN bc.notes = 'Roche Surety and Caualty Co., Inc.  1910 Orient Road  Tampa, FL 33619' THEN '97927'
								WHEN bc.notes = 'Seneca   160 Water Street   New York, NY  10038' THEN '100762'
								WHEN bc.notes = 'SENECA INSURANCE' THEN '100762'
								WHEN bc.notes = 'Seneca Insurance Casualty Inc.' THEN '100762'
								WHEN bc.notes = 'Seneca Insurance Co  160 Water Street  New York, NY  10038' THEN '100762'
								WHEN bc.notes = 'Seneca Insurance Co, Inc  160 Water Street  New York, NY  10038' THEN '100762'
								WHEN bc.notes = 'Seneca Insurance Co, Inc    160 Water Street   New York, NY  10038' THEN '100762'
								WHEN bc.notes = 'Seneca Insurance Co, Inc.  160 Water St.  New York, NY  10038' THEN '100762'
								WHEN bc.notes = 'Seneca Insurance Co, Inc.  160 Water St.  New York, NY 10038' THEN '100762'
								WHEN bc.notes = 'Seneca Insurance Co, Inc.  160 Water Street  New York, New York  10038' THEN '100762'
								WHEN bc.notes = 'Seneca Insurance Co, Inc.  160 Water Street  New York, NY   10038' THEN '100762'
								WHEN bc.notes = 'Seneca Insurance Co, Inc.  160 Water Street  New York, NY  10038  ' THEN '100762'
								WHEN bc.notes = 'Seneca Insurance Co, Inc.  160 Water Street  New York, NY  10038' THEN '100762'
								WHEN bc.notes = 'Seneca Insurance Co, Inc.  160 Water Street  New York, NY 10038' THEN '100762'
								WHEN bc.notes = 'Seneca Insurance Co, Inc.  160 Water Street   New York, NY  10038' THEN '100762'
								WHEN bc.notes = 'Seneca Insurance Co, Inc.   160 Water Street  New York, NY  10038  ' THEN '100762'
								WHEN bc.notes = 'Seneca Insurance Co, Inc.' THEN '100762'
								WHEN bc.notes = 'Seneca Insurance Co. Inc.' THEN '100762'
								WHEN bc.notes = 'Seneca Insurance Co., Inc.  160 Water Street  New York, NY 10038' THEN '100762'
								WHEN bc.notes = 'Seneca Insurance Co., Inc.' THEN '100762'
								WHEN bc.notes = 'Seneca Insurance Company  160 Water Street  New York, New York 10038' THEN '100762'
								WHEN bc.notes = 'Seneca Insurance Company  160 Water Street  New York, NY  10038' THEN '100762'
								WHEN bc.notes = 'Seneca Insurance Company  160 Water Street  New York, NY 10038' THEN '100762'
								WHEN bc.notes = 'Seneca Insurance Company' THEN '100762'
								WHEN bc.notes = 'Seneca Insurance Company Inc.' THEN '100762'
								WHEN bc.notes = 'Seneca Insurance Company, Inc  160 Water Street  New York, New York, NV  10038' THEN '100762'
								WHEN bc.notes = 'Seneca Insurance Company, Inc' THEN '100762'
								WHEN bc.notes = 'Seneca Insurance Company, Inc.  ' THEN '100762'
								WHEN bc.notes = 'Seneca Insurance Company, Inc.  160 Water St.  New York, NY 10038' THEN '100762'
								WHEN bc.notes = 'Seneca Insurance Company, Inc.  160 Water Street  New York, NY  10038' THEN '100762'
								WHEN bc.notes = 'Seneca Insurance Company, Inc.  160 Water Street  New York, NY 10038' THEN '100762'
								WHEN bc.notes = 'Seneca Insurance Company, Inc.' THEN '100762'
								WHEN bc.notes = 'Seneca Insurance Company, Inc. 160 Water Street, New York, NY 10038' THEN '100762'
								WHEN bc.notes = 'Sun Surety Insuance Company   21 Main Street   Rapid City, SD  57701' THEN '97928'
								WHEN bc.notes = 'Sun Surety Insurance  21 Main Street   Rapid City, SD  57701' THEN '97928'
								WHEN bc.notes = 'Sun Surety Insurance  Company' THEN '97928'
								WHEN bc.notes = 'Sun Surety Insurance - 21 Main St, Rapid City, SD 57701' THEN '97928'
								WHEN bc.notes = 'SUN SURETY INSURANCE CO.' THEN '97928'
								WHEN bc.notes = 'Sun Surety Insurance Company  21 Main St  Rapid City, SD 57701' THEN '97928'
								WHEN bc.notes = 'Sun Surety Insurance Company  21 Main St.  Rapid City, SD 57701' THEN '97928'
								WHEN bc.notes = 'Sun Surety Insurance Company  21 Main St.  Rapid City, South Dakota 57701' THEN '97928'
								WHEN bc.notes = 'Sun Surety Insurance Company  21 Main St.   Rapid City, SD 57701' THEN '97928'
								WHEN bc.notes = 'Sun Surety Insurance Company  21 Main St.   Rapids City, South Dakota 57701' THEN '97928'
								WHEN bc.notes = 'Sun Surety Insurance Company  21 Main Street  Rampid City, SD 57701' THEN '97928'
								WHEN bc.notes = 'Sun Surety Insurance Company  21 Main Street  Rapid City  South Dakota 57701' THEN '97928'
								WHEN bc.notes = 'Sun Surety Insurance Company  21 Main Street  Rapid City, SD   57701' THEN '97928'
								WHEN bc.notes = 'Sun Surety Insurance Company  21 Main Street  Rapid City, SD  57701' THEN '97928'
								WHEN bc.notes = 'Sun Surety Insurance Company  21 Main Street  Rapid City, SD 57701' THEN '97928'
								WHEN bc.notes = 'Sun Surety Insurance Company  21 Main Street  Rapid City, South Dakota  57701' THEN '97928'
								WHEN bc.notes = 'Sun Surety Insurance Company  21 Main Street  Rapid City, South Dakota 57701' THEN '97928'
								WHEN bc.notes = 'Sun Surety Insurance Company  21 Main Street   Rapid City, SD   57701' THEN '97928'
								WHEN bc.notes = 'Sun Surety Insurance Company  21 Main Street   Rapid City, SD  57701' THEN '97928'
								WHEN bc.notes = 'Sun Surety Insurance Company  21 Main Street   Rapid City, SD 57701' THEN '97928'
								WHEN bc.notes = 'Sun Surety Insurance Company  21 Main Street   Rapid City, South Dakota  57701' THEN '97928'
								WHEN bc.notes = 'Sun Surety Insurance Company   21 Main Street  Rapid City, SD  57701' THEN '97928'
								WHEN bc.notes = 'Sun Surety Insurance Company   21 Main Street  Rapid City, South Dakota  57701' THEN '97928'
								WHEN bc.notes = 'Sun Surety Insurance Company   21 Main Street   Rapid City, SD  57701' THEN '97928'
								WHEN bc.notes = 'Sun Surety Insurance Company   21 Main Street   Rapid City, SD  577014' THEN '97928'
								WHEN bc.notes = 'Sun Surety Insurance Company   21 Main Street   Rapid City, SD 57701' THEN '97928'
								WHEN bc.notes = 'Sun Surety Insurance Company   21 Main Street   Rapid City, South Dakota  57701' THEN '97928'
								WHEN bc.notes = 'Sun Surety Insurance Company' THEN '97928'
								WHEN bc.notes = 'Sun Surety Insurance Company  21 Main Street, Rapid City, SD  57701' THEN '97928'
								WHEN bc.notes = 'Sun Surety Insurance Compnay' THEN '97928'
								WHEN bc.notes = 'SunSurety Insurance Company  21 Main St. Rapid City, SD 57701' THEN '97928'
								WHEN bc.notes = 'Ubited States Fire Insurance Company  P.O. Box 2807   Houston, TX 77252-2807' THEN '100753'
								WHEN bc.notes = 'United States Fire Insurance Company  11490 Westheimer Rd. Suite 300  Houston, TX 77077  ' THEN '100753'
								WHEN bc.notes = 'United States Fire Insurance Company  11490 Westheimer Rd. Suite 300  Houston, TX 77077' THEN '100753'
								WHEN bc.notes = 'United States Fire Insurance Company  11490 Westheimer Rd., Suite 300   Houston, TX 77077  P.O. Box 2807 Houston, Texas 77252-2807' THEN '100753'
								WHEN bc.notes = 'United States Fire Insurance Company  11490 Westheimer Road, Suite 300  Houston TX  77077' THEN '100753'
								WHEN bc.notes = 'United States Fire Insurance Company  11490 Westheimer Road, Suite 300  Houston, TX  77077' THEN '100753'
								WHEN bc.notes = 'United States Fire Insurance Company  157 Main Street / P.O. Box 806  Greenville, PA  16125' THEN '100753'
								WHEN bc.notes = 'United States Fire Insurance Company  157 Main Street / P.O. Box 806  Greenville, PA 16125' THEN '100753'
								WHEN bc.notes = 'United States Fire Insurance Company  P.O. Box 2807  Houston, TX  77077' THEN '100753'
								WHEN bc.notes = 'United States Fire Insurance Company  P.O. Box 2807   Houston, TX 77252-2807' THEN '100753'
								WHEN bc.notes = 'United States Fire Insurance Company   P.O. Box 2807  Houston, TX 77252' THEN '100753'
								WHEN bc.notes = 'United States Fire Insurance Company' THEN '100753'
							END
							FROM ecourt.tBailCondition bc
							LEFT JOIN ecourt.tBail b
							ON bc.bail_id = b.id
							LEFT JOIN ${sql.staging.db}.dbo.party_conv pty
							ON b.associatedParty_id = pty.id 
							LEFT JOIN (SELECT *, ROW_NUMBER() OVER(PARTITION BY case_id ORDER BY dateCreated) rnk FROM ${sql.staging.db}.dbo.party_conv WHERE partyType = 'BBMAN') bbs
							ON pty.case_id = bbs.case_id AND bbs.rnk = 1
							
			
							]]>
							</param>
						</params>
						<mappings>
								<mapping source="id" dest="id"/>
								<mapping source="bailConditionStatus" dest="bailConditionStatus"/>
								<mapping source="beginDate" dest="beginDate"/>
								<mapping source="conditionType" dest="conditionType"/>
								<mapping source="endDate" dest="endDate"/>
								<mapping source="bail_id" dest="bail_id"/>
								<mapping source="conditionText" dest="conditionText"/>
								<mapping source="optlock" dest="optlock"/>
								<mapping source="dateCreated" dest="dateCreated"/>
								<mapping source="lastUpdated" dest="lastUpdated"/>
								<mapping source="memo" dest="memo"/>
								<mapping source="accessLevel" dest="accessLevel"/>
								<mapping source="createUserRealName" dest="createUserRealName"/>
								<mapping source="createUsername" dest="createUsername"/>
								<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
								<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
								<mapping source="notes" dest="notes"/>
								
								<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
								<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
								<mapping source="updateReason" dest="updateReason"/>
		
								<mapping source="beginDate" dest="conditionBeginDate"/>
								<mapping source="endDate" dest="conditionEndDate"/>
								
								<mapping source="bailConditionStatus" dest="status"/>
				
								<mapping source="caseKey" dest="caseKey"/>
								<mapping source="bbs_id" dest="tParty_id"/>
								<mapping source="directory_id" dest="directory_id"/>
					
						
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="bailCondition_conv"/>
					</action>
					
					
			
				</actions>
			</stage> 
		
		
		<stage num="52" mode="Serial" desc="Transform Case Status" enabled="true">
			<actions>
				
					<action handler="SqlServer.Raw" desc="Creating Case Status" progresslabel="Creating  Case Status" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create  Case Status">
							IF OBJECT_ID('caseStatus_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[caseStatus_conv];
							
				
							</task>
							
							<task handler="SqlServer.Script" desc="Create Case Status table">
							<![CDATA[
							
							CREATE TABLE [caseStatus_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							[accessLevel] [int] NULL,
							[createUserRealName] [varchar](255) NULL,
							[createUsername] [varchar](255) NULL,
							[dateCreated] [datetime] NULL,
							[lastUpdateUserRealName] [varchar](255) NULL,
							[lastUpdateUsername] [varchar](255) NULL,
							[lastUpdated] [datetime] NULL,
							[memo] [varchar](512) NULL,
							[optlock] [int] NOT NULL,
							[roaAccessLevel] [int] NULL,
							[sourceCaseNumber] [varchar](255) NULL,
							[updateReason] [varchar](255) NULL,
							[beginDate] [datetime] NULL,
							[endDate] [datetime] NULL,
							[value] [varchar](255) NULL,
							[case_id] [numeric](19, 0) NOT NULL,
							[convId] [int] NULL,
							[notes] [varchar](7500) NULL,
								);			


							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Case Status">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	

							SELECT
							cs.*
							FROM ecourt.tCaseStatus cs
			
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="id" dest="id"/>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="optlock" dest="optlock"/>
							<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
							<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
							<mapping source="updateReason" dest="updateReason"/>
							<mapping source="beginDate" dest="beginDate"/>
							<mapping source="endDate" dest="endDate"/>
							<mapping source="value" dest="value"/>
							<mapping source="case_id" dest="case_id"/>
							<mapping source="convId" dest="convId"/>
							<mapping source="notes" dest="notes"/>
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="caseStatus_conv"/>
					</action>-
			
				</actions>
			</stage> 
		
		
			
		<stage num="54" mode="Serial" desc="Transform Case Track" enabled="true">
			<actions>
				
					<action handler="SqlServer.Raw" desc="Creating Case Track" progresslabel="Creating  Case Track" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create  Case Track">
							IF OBJECT_ID('caseTrack_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[caseTrack_conv];
							
				
							</task>
							
							<task handler="SqlServer.Script" desc="Create Case Track table">
							<![CDATA[
							
							CREATE TABLE [caseTrack_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							[accessLevel] [int] NULL,
							[createUserRealName] [varchar](255) NULL,
							[createUsername] [varchar](255) NULL,
							[dateCreated] [datetime] NULL,
							[lastUpdateUserRealName] [varchar](255) NULL,
							[lastUpdateUsername] [varchar](255) NULL,
							[lastUpdated] [datetime] NULL,
							[memo] [varchar](7500) NULL,
							[optlock] [int] NOT NULL,
							[roaAccessLevel] [int] NULL,
							[sourceCaseNumber] [varchar](255) NULL,
							[updateReason] [varchar](255) NULL,
							[dateTracked] [datetime] NULL,
							[location] [varchar](255) NULL,
							[personName] [varchar](255) NULL,
							[trackingNumber] [varchar](255) NULL,
							[trackingType] [varchar](255) NULL,
							[case_id] [numeric](19, 0) NULL,
							[convId] [int] NULL,
							[cf_trackingLocation] [varchar](255) NULL,
							[notes] [varchar](7500) NULL,
							[dirPerson_id] [numeric](19, 0) NULL
				
								);			


							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Case Track">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	

							SELECT
							ct.*
							FROM ecourt.tCaseTrack ct
							
			
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="id" dest="id"/>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="optlock" dest="optlock"/>
							<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
							<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
							<mapping source="updateReason" dest="updateReason"/>
							<mapping source="dateTracked" dest="dateTracked"/>
							<mapping source="location" dest="location"/>
							<mapping source="personName" dest="personName"/>
							<mapping source="trackingNumber" dest="trackingNumber"/>
							<mapping source="trackingType" dest="trackingType"/>
							<mapping source="case_id" dest="case_id"/>
							<mapping source="convId" dest="convId"/>
							<mapping source="cf_trackingLocation" dest="cf_trackingLocation"/>
							<mapping source="notes" dest="notes"/>
							<mapping source="dirPerson_id" dest="dirPerson_id"/>
				
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="caseTrack_conv"/>
					</action>-
			
				</actions>
			</stage> 
		
		<stage num="56" mode="Serial" desc="Transform Case Joinder" enabled="true">
			<actions>
				
					<action handler="SqlServer.Raw" desc="Creating caseJoinder_conv" progresslabel="Creating  Case Joinder" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create  Case Track">
							IF OBJECT_ID('caseJoinder_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[caseJoinder_conv];
							
				
							</task>
							
							<task handler="SqlServer.Script" desc="Create caseJoinder_conv table">
							<![CDATA[
							
							CREATE TABLE [caseJoinder_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							[accessLevel] [int] NULL,
							[createUserRealName] [varchar](255) NULL,
							[createUsername] [varchar](255) NULL,
							[dateCreated] [datetime] NULL,
							[lastUpdateUserRealName] [varchar](255) NULL,
							[lastUpdateUsername] [varchar](255) NULL,
							[lastUpdated] [datetime] NULL,
							[memo] [varchar](7500) NULL,
							[description] [varchar](512) NULL,
							[effectiveFrom] [datetime] NULL,
							[effectiveTo] [datetime] NULL,
							[name] [varchar](255) NULL,
							[orderDate] [datetime] NULL,
							[type] [varchar](255) NULL,
							[convId] [int] NULL,
							tcaseJoinder_id NUMERIC(19,0)
								);			


							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Case Joinder">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	

							SELECT
							cj.*,
							typeLd =
							CASE
								WHEN type = 'RELAT' THEN 'REL'
								WHEN type = 'CODC' THEN 'CODEF'
							END
							FROM ecourt.tCaseJoinder cj
			
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="id" dest="id"/>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="description" dest="description"/>
							<mapping source="effectiveFrom" dest="effectiveFrom"/>
							<mapping source="effectiveTo" dest="effectiveTo"/>
							<mapping source="name" dest="name"/>
							<mapping source="orderDate" dest="orderDate"/>
							<mapping source="typeLd" dest="type"/>
							<mapping source="convId" dest="convId"/>
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="caseJoinder_conv"/>
					</action>-
			
				</actions>
			</stage> 
				
		<stage num="58" mode="Serial" desc="Transform Joinder Items" enabled="true">
			<actions>
				
					<action handler="SqlServer.Raw" desc="Creating caseJoinder_conv" progresslabel="Creating Joinder Items" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create  Case Track">
							IF OBJECT_ID('caseJoinedItem_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[caseJoinedItem_conv];
							
				
							</task>
							
							<task handler="SqlServer.Script" desc="Create caseJoinedItem_conv table">
							<![CDATA[
							
							CREATE TABLE [caseJoinedItem_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							[accessLevel] [int] NULL,
							[createUserRealName] [varchar](255) NULL,
							[createUsername] [varchar](255) NULL,
							[dateCreated] [datetime] NULL,
							[lastUpdateUserRealName] [varchar](255) NULL,
							[lastUpdateUsername] [varchar](255) NULL,
							[lastUpdated] [datetime] NULL,
							[memo] [varchar](7500) NULL,
							[optlock] [int] NOT NULL,
							[roaAccessLevel] [int] NULL,
							[sourceCaseNumber] [varchar](255) NULL,
							[updateReason] [varchar](255) NULL,
							[effectiveFrom] [datetime] NULL,
							[effectiveTo] [datetime] NULL,
							[primaryCase] [tinyint] NULL,
							[case_id] [numeric](19, 0) NOT NULL,
							[joinder_id] [numeric](19, 0) NOT NULL,
								);			


							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Case Joinded Item">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	

							SELECT
							cji.*
							FROM ecourt.[tCaseJoinedItem] cji
			
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="id" dest="id"/>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="optlock" dest="optlock"/>
							<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
							<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
							<mapping source="updateReason" dest="updateReason"/>
							<mapping source="effectiveFrom" dest="effectiveFrom"/>
							<mapping source="effectiveTo" dest="effectiveTo"/>
							<mapping source="primaryCase" dest="primaryCase"/>
							<mapping source="case_id" dest="case_id"/>
							<mapping source="joinder_id" dest="joinder_id"/>
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="caseJoinedItem_conv"/>
					</action>-
			
				</actions>
			</stage> 
		
		<stage num="60" mode="Serial" desc="Transform tCe_NonCollectibleFinancial" enabled="true">
			<actions>
				
					<action handler="SqlServer.Raw" desc="Creating caseJoinder_conv" progresslabel="Creating tCe_NonCollectibleFinancial_conv" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create tCe_NonCollectibleFinancial_conv">
							IF OBJECT_ID('tCe_NonCollectibleFinancial_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[tCe_NonCollectibleFinancial_conv];
							
				
							</task>
							
							<task handler="SqlServer.Script" desc="Create tCe_NonCollectibleFinancial_conv table">
							<![CDATA[
							
							CREATE TABLE [tCe_NonCollectibleFinancial_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							[accessLevel] [int] NULL,
							[createUserRealName] [varchar](255) NULL,
							[createUsername] [varchar](255) NULL,
							[dateCreated] [datetime] NULL,
							[lastUpdateUserRealName] [varchar](255) NULL,
							[lastUpdateUsername] [varchar](255) NULL,
							[lastUpdated] [datetime] NULL,
							[memo] [varchar](7500) NULL,
							[optlock] [int] NOT NULL,
							[roaAccessLevel] [int] NULL,
							[sourceCaseNumber] [varchar](255) NULL,
							[updateReason] [varchar](255) NULL,
							[allegedAmount] [float] NULL,
							[beginDate] [datetime] NULL,
							[category] [varchar](255) NULL,
							[date] [datetime] NULL,
							[description] [varchar](255) NULL,
							[endDate] [datetime] NULL,
							[location] [varchar](255) NULL,
							[notes] [varchar](7500) NULL,
							[orderedAmount] [float] NULL,
							[priority] [varchar](255) NULL,
							[status] [varchar](255) NULL,
							[type] [varchar](255) NULL,
							[case_id] [numeric](19, 0) NOT NULL,
							[convId] [int] NULL,
							tCe_NonCollectibleFinancial_id NUMERIC(19,0)
								);			


							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Case Joinded Item">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	

							SELECT
							*
							FROM ecourt.tCe_NonCollectibleFinancial
			
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="id" dest="id"/>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="optlock" dest="optlock"/>
							<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
							<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
							<mapping source="updateReason" dest="updateReason"/>
							<mapping source="allegedAmount" dest="allegedAmount"/>
							<mapping source="beginDate" dest="beginDate"/>
							<mapping source="category" dest="category"/>
							<mapping source="date" dest="date"/>
							<mapping source="description" dest="description"/>
							<mapping source="endDate" dest="endDate"/>
							<mapping source="location" dest="location"/>
							<mapping source="notes" dest="notes"/>
							<mapping source="orderedAmount" dest="orderedAmount"/>
							<mapping source="priority" dest="priority"/>
							<mapping source="status" dest="status"/>
							<mapping source="type" dest="type"/>
							<mapping source="case_id" dest="case_id"/>
							<mapping source="convId" dest="convId"/>
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="tCe_NonCollectibleFinancial_conv"/>
					</action>-
			
				</actions>
			</stage> 
		
		
		<!-- Placeholder Stage 62 - if needed -->
		
		<!-- Placeholder Stage 64 - if needed -->
		
		<stage num="66" mode="Serial" desc="Transform Checklist Item" enabled="true">
			<actions>
				
					<action handler="SqlServer.Raw" desc="Creating CheckList Item" progresslabel="Creating  Checklist Item" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create  Case Track">
							IF OBJECT_ID('checklistItem_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[checklistItem_conv];
							
				
							</task>
							
							<task handler="SqlServer.Script" desc="Create Check List Item table">
							<![CDATA[
							
							CREATE TABLE [checklistItem_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							[accessLevel] [int] NULL,
							[createUserRealName] [varchar](255) NULL,
							[createUsername] [varchar](255) NULL,
							[dateCreated] [datetime] NULL,
							[lastUpdateUserRealName] [varchar](255) NULL,
							[lastUpdateUsername] [varchar](255) NULL,
							[lastUpdated] [datetime] NULL,
							[memo] [varchar](512) NULL,
							[optlock] [int] NOT NULL,
							[roaAccessLevel] [int] NULL,
							[sourceCaseNumber] [varchar](255) NULL,
							[updateReason] [varchar](255) NULL,
							[complete] [tinyint] NOT NULL,
							[completeDate] [datetime] NULL,
							[description] [varchar](1024) NULL,
							[dueDate] [datetime] NULL,
							[instructions] [varchar](7500) NULL,
							[startDate] [datetime] NULL,
							[suspended] [tinyint] NOT NULL,
							[case_id] [numeric](19, 0) NULL,
							[checkListItemDef_id] [numeric](19, 0) NULL,
							[completedBy_id] [numeric](19, 0) NULL,
							[dirPerson_id] [numeric](19, 0) NULL,
							[person_id] [numeric](19, 0) NULL,
							[subCase_id] [numeric](19, 0) NULL,
							[convId] [int] NULL,
							[status] [varchar](255) NULL,
							[type] [varchar](255) NULL,
							[dirEntryCode] [varchar](255) NULL,
							[dirPerson_id_Load] [numeric](19, 0) NULL,
							caseKey NUMERIC(19,0),
							tChecklistItem_id NUMERIC(19,0)
						
								);			


							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform checklistItem">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	

							SELECT
							cli.*, cc.idKey as caseKey,
							de.code as dirEntryCode,
							d.id as dirPerson_id_Load,
							memo_ld = 
							CASE
							WHEN dirPerson_id IS NOT NULL THEN CONCAT(de.code, ': ', dp.firstName, ' ', dp.middleName, ' ', dp.lastName)
							ELSE NULL
							END
							FROM ecourt.tChecklistItem cli
							LEFT JOIN ${sql.staging.db}.dbo.case_conv cc
							ON cli.case_id = cc.id 
							LEFT JOIN ecourt.tdirEntry de
							ON cli.dirPerson_id = de.id
							LEFT JOIN ${sql.ecourt.db}.ecourt.tDirEntry d
							ON de.code = d.code
							LEFT JOIN ${sql.migrated.db}.ecourt.tDirPerson dp
							ON cli.dirPerson_id = dp.id;

			
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="id" dest="id"/>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo_ld" dest="memo"/>
							<mapping source="optlock" dest="optlock"/>
							<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
							<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
							<mapping source="updateReason" dest="updateReason"/>
							<mapping source="complete" dest="complete"/>
							<mapping source="completeDate" dest="completeDate"/>
							<mapping source="description" dest="description"/>
							<mapping source="dueDate" dest="dueDate"/>
							<mapping source="instructions" dest="instructions"/>
							<mapping source="startDate" dest="startDate"/>
							<mapping source="suspended" dest="suspended"/>
							<mapping source="case_id" dest="case_id"/>
							<mapping source="checkListItemDef_id" dest="checkListItemDef_id"/>
							<mapping source="completedBy_id" dest="completedBy_id"/>
							<mapping source="dirPerson_id" dest="dirPerson_id"/>
							<mapping source="person_id" dest="person_id"/>
							<mapping source="subCase_id" dest="subCase_id"/>
							<mapping source="convId" dest="convId"/>
							<mapping source="status" dest="status"/>
							<mapping source="type" dest="type"/>
							<mapping source="dirEntryCode" dest="dirEntryCode"/>
							<mapping source="dirPerson_id_Load" dest="dirPerson_id_Load"/>
							<mapping source="caseKey" dest="caseKey"/>
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="checklistItem_conv"/>
					</action>-
			
				</actions>
			</stage> 
				
		<!-- Placeholder Stage 68 - if needed -->
		
		<!-- Placeholder Stage 70 - if needed -->
		
		<!-- Placwholder Stage 72 - if needed -->
		
			
		<stage num="74" mode="Serial" desc="Transform Charge" enabled="true">
			<actions>
				
					<action handler="SqlServer.Raw" desc="Creating Charge" progresslabel="Creating Charge" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create  Charge">
							IF OBJECT_ID('charge_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[charge_conv];
							
				
							</task>
							
							<task handler="SqlServer.Script" desc="Create Charge table">
							<![CDATA[
							
							CREATE TABLE [charge_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							[accessLevel] [int] NULL,
							[createUserRealName] [varchar](255) NULL,
							[createUsername] [varchar](255) NULL,
							[dateCreated] [datetime] NULL,
							[lastUpdateUserRealName] [varchar](255) NULL,
							[lastUpdateUsername] [varchar](255) NULL,
							[lastUpdated] [datetime] NULL,
							[memo] [varchar](512) NULL,
							[optlock] [int] NOT NULL,
							[roaAccessLevel] [int] NULL,
							[sourceCaseNumber] [varchar](255) NULL,
							[updateReason] [varchar](255) NULL,
							[actualSpeed] [float] NULL,
							[agency] [varchar](255) NULL,
							[bac] [varchar](255) NULL,
							[chargeAmount] [float] NULL,
							[chargeDate] [datetime] NULL,
							[chargeDegree] [varchar](255) NULL,
							[chargeNumber] [varchar](255) NULL,
							[chargeTime] [varchar](255) NULL,
							[chargeToDate] [datetime] NULL,
							[chargeToTime] [varchar](255) NULL,
							[chargeType] [varchar](255) NULL,
							[citedSpeed] [float] NULL,
							[condition] [varchar](255) NULL,
							[correctable] [varchar](255) NULL,
							[counts] [int] NULL,
							[dateFiled] [datetime] NULL,
							[declinationMemo] [varchar](255) NULL,
							[description] [varchar](255) NULL,
							[dispositionDate] [datetime] NULL,
							[dispositionManner] [varchar](255) NULL,
							[dispositionReason] [varchar](255) NULL,
							[dispositionType] [varchar](255) NULL,
							[eligible] [varchar](255) NULL,
							[ivrReferenceNumber] [varchar](255) NULL,
							[location] [varchar](255) NULL,
							[mustAppear] [tinyint] NULL,
							[offenseLevel] [int] NULL,
							[plea] [varchar](255) NULL,
							[pleaDate] [datetime] NULL,
							[pleaStatus] [varchar](255) NULL,
							[postedSpeed] [float] NULL,
							[principal] [tinyint] NULL,
							[sentencingCompleted] [tinyint] NULL,
							[stageAdded] [varchar](255) NULL,
							[status] [varchar](255) NULL,
							[statusDate] [datetime] NULL,
							[ticketNumber] [varchar](255) NULL,
							[unitOverage] [float] NULL,
							[weightOverage] [float] NULL,
							[associatedParty_id] [numeric](19, 0) NOT NULL,
							[statute_id] [numeric](19, 0) NULL,
							[inchoateType] [varchar](255) NULL,
							[convId] [int] NULL,
							[chargeDate2] [datetime] NULL,
							[date] [datetime] NULL,
							[locationJurisdiction] [varchar](255) NULL,
							[locationNotes] [varchar](7500) NULL,
							[notes] [varchar](7500) NULL,
							[notes2] [varchar](7500) NULL,
							[pleaDispoNotes] [varchar](7500) NULL,
							[pleaDispoNotes2] [varchar](7500) NULL,
							[convId_CountInvPers] [int] NULL,
							[convId_ChargeHistory] [int] NULL,
							[conviction] [varchar](255) NULL,
							[discount] [varchar](255) NULL,
							[cfAllegationAgainst] [varchar](255) NULL,
							[cfConstructionZone] [tinyint] NULL,
							[cfDismissalReason] [varchar](255) NULL,
							[cfSchoolZone] [tinyint] NULL,
							[charge_id] [numeric](19, 0) NULL,
							[diversion] [tinyint] NULL,
							tCharge_id NUMERIC(19,0),
							caseKey NUMERIC(19,0),
							case_id NUMERIC(19,0),
							stConfigCode VARCHAR(255),
							newStatute_id NUMERIC(19,0),
							stSectionNumber VARCHAR(255),
							sectionName VARCHAR(255)
						
								);			


							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform charge">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	

							SELECT
							chg.*, pc.caseKey, pc.case_id, st.configCode as stConfigCode, stSectionNumber = st.sectionNumber, st.sectionName,
							COALESCE(stn.id, (SELECT id  FROM ${sql.ecourt.db}.ecourt.tStatute WHERE sectionCode = '99999')) as newStatute_id
							FROM ecourt.tCharge chg
							LEFT JOIN ecourt.tStatute st 
							ON chg.statute_id = st.id
							INNER JOIN ${sql.staging.db}.dbo.party_conv pc
							ON pc.id = chg.associatedParty_id
							INNER JOIN ${sql.staging.db}.dbo.convertCases_conv cv
							ON pc.case_id = cv.case_id 
							LEFT JOIN ${sql.ecourt.db}.ecourt.tStatute stn
							ON st.sectionCode = stn.sectionCode
							WHERE cv.caseGroup = 'CR'
			
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="id" dest="id"/>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="optlock" dest="optlock"/>
							<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
							<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
							<mapping source="updateReason" dest="updateReason"/>
							<mapping source="actualSpeed" dest="actualSpeed"/>
							<mapping source="agency" dest="agency"/>
							<mapping source="bac" dest="bac"/>
							<mapping source="chargeAmount" dest="chargeAmount"/>
							<mapping source="chargeDate" dest="chargeDate"/>
							<mapping source="chargeDegree" dest="chargeDegree"/>
							<mapping source="chargeNumber" dest="chargeNumber"/>
							<mapping source="chargeTime" dest="chargeTime"/>
							<mapping source="chargeToDate" dest="chargeToDate"/>
							<mapping source="chargeToTime" dest="chargeToTime"/>
							<mapping source="chargeType" dest="chargeType"/>
							<mapping source="citedSpeed" dest="citedSpeed"/>
							<mapping source="condition" dest="condition"/>
							<mapping source="correctable" dest="correctable"/>
							<mapping source="counts" dest="counts"/>
							<mapping source="dateFiled" dest="dateFiled"/>
							<mapping source="declinationMemo" dest="declinationMemo"/>
							<mapping source="description" dest="description"/>
							<mapping source="dispositionDate" dest="dispositionDate"/>
							<mapping source="dispositionManner" dest="dispositionManner"/>
							<mapping source="dispositionReason" dest="dispositionReason"/>
							<mapping source="dispositionType" dest="dispositionType"/>
							<mapping source="eligible" dest="eligible"/>
							<mapping source="ivrReferenceNumber" dest="ivrReferenceNumber"/>
							<mapping source="location" dest="location"/>
							<mapping source="mustAppear" dest="mustAppear"/>
							<mapping source="offenseLevel" dest="offenseLevel"/>
							<mapping source="plea" dest="plea"/>
							<mapping source="pleaDate" dest="pleaDate"/>
							<mapping source="pleaStatus" dest="pleaStatus"/>
							<mapping source="postedSpeed" dest="postedSpeed"/>
							<mapping source="principal" dest="principal"/>
							<mapping source="sentencingCompleted" dest="sentencingCompleted"/>
							<mapping source="stageAdded" dest="stageAdded"/>
							<mapping source="status" dest="status"/>
							<mapping source="statusDate" dest="statusDate"/>
							<mapping source="ticketNumber" dest="ticketNumber"/>
							<mapping source="unitOverage" dest="unitOverage"/>
							<mapping source="weightOverage" dest="weightOverage"/>
							<mapping source="associatedParty_id" dest="associatedParty_id"/>
							<mapping source="statute_id" dest="statute_id"/>
							<mapping source="inchoateType" dest="inchoateType"/>
							<mapping source="convId" dest="convId"/>
							<mapping source="chargeDate2" dest="chargeDate2"/>
							<mapping source="date" dest="date"/>
							<mapping source="locationJurisdiction" dest="locationJurisdiction"/>
							<mapping source="locationNotes" dest="locationNotes"/>
							<mapping source="notes" dest="notes"/>
							<mapping source="notes2" dest="notes2"/>
							<mapping source="pleaDispoNotes" dest="pleaDispoNotes"/>
							<mapping source="pleaDispoNotes2" dest="pleaDispoNotes2"/>
							<mapping source="convId_CountInvPers" dest="convId_CountInvPers"/>
							<mapping source="convId_ChargeHistory" dest="convId_ChargeHistory"/>
							<mapping source="conviction" dest="conviction"/>
							<mapping source="discount" dest="discount"/>
							<mapping source="caseKey" dest="caseKey"/>
							<mapping source="case_id" dest="case_id"/>
							<mapping source="stConfigCode" dest="stConfigCode"/>
							<mapping source="newStatute_id" dest="newStatute_id"/>
							<mapping source="stSectionNumber" dest="stSectionNumber"/>
							<mapping source="sectionName" dest="sectionName"/>
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="charge_conv"/>
					</action>
					
					<action handler="SqlServer.Raw" desc="Fix Statutes" progresslabel="Fix Statutes" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">

							<task handler="SqlServer.Script" desc="Fix Statutes">
							<![CDATA[
							
							UPDATE charge_conv 
							SET newStatute_id =
							case
								WHEN stSectionNumber = '197.09' THEN (SELECT id FROM ${sql.ecourt.db}.ecourt.tStatute WHERE configCode = '52301')
								WHEN stSectionNumber = '197.09' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '52301')
								WHEN stSectionNumber = '199.15' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '52977')
								WHEN stSectionNumber = '199.22' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '60841')
								WHEN stSectionNumber = '199.34' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '53007')
								WHEN stSectionNumber = '200.405' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '50170')
								WHEN stSectionNumber = '202.262' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '51430')
								WHEN stSectionNumber = '202.275' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '51435')
								WHEN stSectionNumber = '202.277' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '51437')
								WHEN stSectionNumber = '202.29' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '51447')
								WHEN stSectionNumber = '202.595' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '51539')
								WHEN stSectionNumber = '205.067' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '50448')
								WHEN stSectionNumber = '205.16' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '50497')
								WHEN stSectionNumber = '205.2747' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '50588')
								WHEN stSectionNumber = '205.405' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '50648')
								WHEN stSectionNumber = '205.75' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '50795')
								WHEN stSectionNumber = '205.8' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '50802')
								WHEN stSectionNumber = '207.012' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '53140')
								WHEN sectionName= 'Unauthorized Communication With Felony Prisoner In Jail' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '53433')
								WHEN stSectionNumber = '207.012' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '51089')
								WHEN stSectionNumber = '453.322' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '51108')
								WHEN stSectionNumber = '501.376' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '52689')
								WHEN stSectionNumber = '502.06' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '52703')
								WHEN stSectionNumber = '179D.447(1), 179D.550(1) and 193.330' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '52953')
								WHEN stSectionNumber = '179D.550 and 193.330' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '52953')
								WHEN stSectionNumber = '179D.550 and 199.480' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '52955')
								WHEN stSectionNumber = '179D.550(1)(D), 179D.460 and 193.153' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '52953')
								WHEN stSectionNumber = '179D.550(1)(D), 179D.460 and 193.330' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '52953')
								WHEN stSectionNumber = '195.030(1)' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '53090')
								WHEN stSectionNumber = '197.210 and 193.019' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '56170')
								WHEN stSectionNumber = '199.240 and 193.330' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '53049')
								WHEN stSectionNumber = '199.280(1)' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '55104')
								WHEN stSectionNumber = '199.280(2)' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '55106')
								WHEN stSectionNumber = '199.335(2)(a) and 193.153' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '65846')
								WHEN stSectionNumber = '200.010 and 200.030' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '50010')
								WHEN stSectionNumber = '200.010, 200.030, 193.165 and 193.167' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '58053')
								WHEN stSectionNumber = '200.030, 193.330 and 193.165' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '50031')
								WHEN stSectionNumber = '200.030, 193.330, 193.167 and 193.165' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '50035')
								WHEN stSectionNumber = '200.050 and 200.080' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '50020')
								WHEN stSectionNumber = '200.070 and 193.330' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '60497')
								WHEN stSectionNumber = '200.310 and 200.320 (1)' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '50052')
								WHEN stSectionNumber = '200.310 and 200.320(2)' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '50051')
								WHEN stSectionNumber = '200.310(2) and 200.330' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '50075')
								WHEN stSectionNumber = '200.366 and 193.330' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '50119')
								WHEN stSectionNumber = '200.366(3)(A)' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '50107')
								WHEN stSectionNumber = '200.380 and 193.165' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '50138')
								WHEN stSectionNumber = '200.380 and 193.167' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '50139')
								WHEN stSectionNumber = '200.380 and 193.330' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '50144')
								WHEN stSectionNumber = '200.380 and 195.020' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '50137')
								WHEN stSectionNumber = '200.400(3) and 193.165' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '60518')
								WHEN stSectionNumber = '200.460(4)' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '50186')
								WHEN stSectionNumber = '200.471(2)(B) and 193.167' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '50202')
								WHEN stSectionNumber = '200.471(2)(B) and 193.330' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '56698')
								WHEN stSectionNumber = '200.471(2)(B) and 195.020' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '50201')
								WHEN stSectionNumber = '200.481(2)(A) and 199.480' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '50243')
								WHEN stSectionNumber = '200.481(2)(B) and 193.153' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '50244')
								WHEN stSectionNumber = '200.481(2)(B) and 193.167' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '50216')
								WHEN stSectionNumber = '200.481(2)(B) and 193.330' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '50244')
								WHEN stSectionNumber = '200.481(2)(b) and 199.480' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '58407')
								WHEN stSectionNumber = '200.481(2)(E)(1) and 193.330' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '50248')
								WHEN stSectionNumber = '200.481(2)(E)(1) and 199.480' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '50256')
								WHEN stSectionNumber = '200.481(2)(e)(1) and 33.018' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '57935')
								WHEN stSectionNumber = '200.485(1)(C), 200.481, 33.018 and 193.167' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '65802')
								WHEN stSectionNumber = '200.485(2), 200.481, 33.018 and 193.153' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '54745')
								WHEN stSectionNumber = '200.485(2), 200.481, 33.018 and 193.330' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '54745')
								WHEN stSectionNumber = '200.5092(1) and 200.5099(1)(A)' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '60799')
								WHEN stSectionNumber = '200.5092(2) and 200.5099(1)(A)' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '60799')
								WHEN stSectionNumber = '200.5092(2) and 200.5099(3)(C)' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '50304')
								WHEN stSectionNumber = '200.5092(2), 200.5099(2) and 193.330' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '60787')
								WHEN stSectionNumber = '200.5099(6) and 200.5092(2)' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '50299')
								WHEN stSectionNumber = '200.571(2)(A)' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '50328')
								WHEN stSectionNumber = '200.603(1) and 200.603(2)(b)' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '50350')
								WHEN stSectionNumber = '200.710(1) and 200.750(2)' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '50368')
								WHEN stSectionNumber = '201.020 and 199.480' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '50945')
								WHEN stSectionNumber = '201.020(1)' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '61742')
								WHEN stSectionNumber = '201.220(1)(A)' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '50973')
								WHEN stSectionNumber = '202.275 and 193.330' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '51472')
								WHEN stSectionNumber = '202.277(2) and 193.330' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '51475')
								WHEN stSectionNumber = '202.285(1)(B)' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '51442')
								WHEN stSectionNumber = '202.350(1)(A) and 202.350(2)(A)(1)' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '51454')
								WHEN stSectionNumber = '202.350(2)(B)' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '51456')
								WHEN stSectionNumber = '202.350(2)(B) and 193.153' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '51493')
								WHEN stSectionNumber = '202.350(2)(B) and 193.330' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '51493')
								WHEN stSectionNumber = '202.360(1)(a)' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '51460')
								WHEN stSectionNumber = '202.360(1)(a) and 193.330' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '51501')
								WHEN stSectionNumber = '202.360(1)(C)' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '51460')
								WHEN stSectionNumber = '202.595(2) and 193.130' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '51540')
								WHEN stSectionNumber = '202.840 and NRS 199.480' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '51556')
								WHEN stSectionNumber = '205.060(1)(b) and 193.330' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '61939')
								WHEN stSectionNumber = '205.060(4) and 195.020' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '50426')
								WHEN stSectionNumber = '205.110 and 193.153' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '50483')
								WHEN stSectionNumber = '205.110 and 193.330' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '50483')
								WHEN stSectionNumber = '205.110 and 195.020' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '50461')
								WHEN stSectionNumber = '205.110 and 199.480' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '50485')
								WHEN stSectionNumber = '205.220, 205.222 and 193.153(1)(A)(5)' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '62131')
								WHEN stSectionNumber = '205.220, 205.222 and 193.330' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '62131')
								WHEN stSectionNumber = '205.226 and 193.330' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '50547')
								WHEN stSectionNumber = '205.240 and 199.480' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '55146')
								WHEN stSectionNumber = '205.273(1)(A) and 199.480' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '50583')
								WHEN stSectionNumber = '205.273(1)(B) and 193.153(1)(A)(4)' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '61986')
								WHEN stSectionNumber = '205.273(3) and 193.153(1)(A)(4)' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '61986')
								WHEN stSectionNumber = '205.274(1) and 193.155(2)' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '58514')
								WHEN stSectionNumber = '205.275(2)(B) and 199.480' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '50594')
								WHEN stSectionNumber = '205.380 and 199.480' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '50670')
								WHEN stSectionNumber = '205.463 and 193.330' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '50699')
								WHEN stSectionNumber = '205.463(2) and 193.153' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '50701')
								WHEN stSectionNumber = '205.463(2) and 193.330' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '50701')
								WHEN stSectionNumber = '205.465 and 199.480' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '50713')
								WHEN stSectionNumber = '205.465(2)' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '50695')
								WHEN stSectionNumber = '205.465(4)' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '50698')
								WHEN stSectionNumber = '205.477(2)' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '56641')
								WHEN stSectionNumber = '205.690(2)' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '50790')
								WHEN stSectionNumber = '205.690(2) and 199.480' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '50805')
								WHEN stSectionNumber = '205.760 and 195.020' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '50796')
								WHEN stSectionNumber = '205.800 and 193.330' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '50836')
								WHEN stSectionNumber = '205.965(2)' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '50852')
								WHEN stSectionNumber = '206.310 and 195.020' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '50905')
								WHEN stSectionNumber = '206.310 and 195.020' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '60319')
								WHEN stSectionNumber = '207.260(1)' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '53174')
								WHEN stSectionNumber = '212.160(3)' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '53437')
								WHEN stSectionNumber = '212.185 and 193.330' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '53469')
								WHEN stSectionNumber = '213.1243(3)B)' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '53481')
								WHEN stSectionNumber = '213.1243(8)' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '53481')								
								WHEN stSectionNumber = '453.321(2)(b)' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '51093')
								WHEN stSectionNumber = '453.3325(2)(B)(1) ' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '51241')
								WHEN stSectionNumber = '453.336(2)(c) ' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '62079')
								WHEN stSectionNumber = '453.338(2)(A)' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '51150')
								WHEN stSectionNumber = '453.391(1)' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '51304')
								WHEN stSectionNumber = '453.401(1)(B)' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '51307')
								WHEN stSectionNumber = '453.401(1)(C)' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '51308')
								WHEN stSectionNumber = '453.401(3)' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '51309')
								WHEN stSectionNumber = '454.311(2)' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '51379')
								WHEN stSectionNumber = '454.311(2)' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '51355')
								WHEN stSectionNumber = '454.530 and 454.510' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '51370')
								WHEN stSectionNumber = '482.545(1)' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '53657')
								WHEN stSectionNumber = '484B.150' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '53952')
								WHEN stSectionNumber = '484B.550(4)' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '53834')
								WHEN stSectionNumber = '484B.550(5) and 199.480' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '66114')
								WHEN stSectionNumber = '484B.600(1)' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '53853')
								WHEN stSectionNumber = '484B.653(5)' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '53896')
								WHEN stSectionNumber = '484B.653(6)' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '53896')
								WHEN stSectionNumber = '484E.010 and 193.330' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '53755')
								WHEN stSectionNumber = '624.750(3)' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '52093')
								WHEN stSectionNumber = '707.910(2)' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '52866')
								WHEN stSectionNumber = '707.910(2) and 193.155(1)' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '52868')
								WHEN stSectionNumber = '707.910(2) and 195.020' THEN (SELECT id FROM churchilleCourtConv.ecourt.tStatute WHERE configCode = '52867')							
								ELSE newStatute_id	
							END;
							
							UPDATE ${sql.staging.db}.dbo.charge_conv
							SET memo = CONCAT(stSectionNumber, ': ', sectionName)
							WHERE newStatute_id =  35330
						
							

							]]>
							
							</task>
							
						</source>
					</action>
			
				</actions>
			</stage> 
		
		<stage num="76" mode="Serial" desc="Transform ChargeCharacteristic" enabled="true">
			<actions>
				
					<action handler="SqlServer.Raw" desc="Creating ChargeCharacteristic" progresslabel="Creating ChargeCharacteristic" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create  ChargeCharacteristic">
							IF OBJECT_ID('chargeCharacteristic_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[chargeCharacteristic_conv];
							
				
							</task>
							
							<task handler="SqlServer.Script" desc="Create ChargeCharacteristic table">
							<![CDATA[
							
							CREATE TABLE [chargeCharacteristic_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							[accessLevel] [int] NULL,
							[createUserRealName] [varchar](255) NULL,
							[createUsername] [varchar](255) NULL,
							[dateCreated] [datetime] NULL,
							[lastUpdateUserRealName] [varchar](255) NULL,
							[lastUpdateUsername] [varchar](255) NULL,
							[lastUpdated] [datetime] NULL,
							[memo] [varchar](512) NULL,
							[optlock] [int] NOT NULL,
							[roaAccessLevel] [int] NULL,
							[sourceCaseNumber] [varchar](255) NULL,
							[updateReason] [varchar](255) NULL,
							[characteristic] [varchar](255) NULL,
							[status] [varchar](255) NULL,
							[statusDate] [datetime] NULL,
							[type] [varchar](255) NULL,
							[charge_id] [numeric](19, 0) NOT NULL,
							[convId] [int] NULL,
							[notes] [varchar](7500) NULL,
							[value] [varchar](255) NULL
						
								);			


							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform charge">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	

							SELECT 
							chgc.*
							FROM ecourt.tChargeCharacteristic chgc
			
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="optlock" dest="optlock"/>
							<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
							<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
							<mapping source="updateReason" dest="updateReason"/>
							<mapping source="characteristic" dest="characteristic"/>
							<mapping source="status" dest="status"/>
							<mapping source="statusDate" dest="statusDate"/>
							<mapping source="type" dest="type"/>
							<mapping source="charge_id" dest="charge_id"/>
							<mapping source="convId" dest="convId"/>
							<mapping source="notes" dest="notes"/>
							<mapping source="value" dest="value"/>
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="chargeCharacteristic_conv"/>
					</action>-
			
				</actions>
			</stage> 
		
		<stage num="80" mode="Serial" desc="Transform Sentence" enabled="true">
			<actions>
				
					<action handler="SqlServer.Raw" desc="Creating Sentence" progresslabel="Creating Sentence" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create  Sentence">
							IF OBJECT_ID('sentence_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[sentence_conv];
							
				
							</task>
							
							<task handler="SqlServer.Script" desc="Create ChargeCharacteristic table">
							<![CDATA[
							
							CREATE TABLE [sentence_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							[accessLevel] [int] NULL,
							[createUserRealName] [varchar](255) NULL,
							[createUsername] [varchar](255) NULL,
							[dateCreated] [datetime] NULL,
							[lastUpdateUserRealName] [varchar](255) NULL,
							[lastUpdateUsername] [varchar](255) NULL,
							[lastUpdated] [datetime] NULL,
							[memo] [varchar](512) NULL,
							[optlock] [int] NOT NULL,
							[roaAccessLevel] [int] NULL,
							[sourceCaseNumber] [varchar](255) NULL,
							[updateReason] [varchar](255) NULL,
							[amount] [float] NULL,
							[amountReducedTo] [float] NULL,
							[amountSuspended] [float] NULL,
							[completeBy] [datetime] NULL,
							[creditDays] [int] NULL,
							[description] [varchar](255) NULL,
							[length] [float] NULL,
							[length2] [float] NULL,
							[length3] [float] NULL,
							[length4] [float] NULL,
							[lengthPeriod] [varchar](255) NULL,
							[lengthUnit] [varchar](255) NULL,
							[lengthUnit2] [varchar](255) NULL,
							[lengthUnit3] [varchar](255) NULL,
							[lengthUnit4] [varchar](255) NULL,
							[liabilityType] [varchar](255) NULL,
							[redeemableLength] [float] NULL,
							[sentenceBeginDate] [datetime] NULL,
							[sentenceCompliance] [varchar](255) NULL,
							[sentenceDate] [datetime] NULL,
							[sentenceEndDate] [datetime] NULL,
							[sentenceType] [varchar](255) NULL,
							[serviceMethod] [varchar](255) NULL,
							[status] [varchar](255) NULL,
							[statusDate] [datetime] NULL,
							[statusEndDate] [datetime] NULL,
							[associatedCharge_id] [numeric](19, 0) NOT NULL,
							[official_id] [numeric](19, 0) NULL,
							[convId] [int] NULL,
							[creditAmountFromDesc] [varchar](7500) NULL,
							[creditAmountToDesc] [varchar](7500) NULL,
							[creditDurationDesc] [varchar](7500) NULL,
							[creditNotes] [varchar](7500) NULL,
							[notes] [varchar](7500) NULL,
							[sentenceAmountFromDesc] [varchar](255) NULL,
							[sentenceAmountToDesc] [varchar](255) NULL,
							[sentenceDurationDesc] [varchar](255) NULL,
							[sentenceLocation] [varchar](255) NULL,
							[sentenceSubType] [varchar](255) NULL,
							[suspendAmountFromDesc] [varchar](7500) NULL,
							[suspendAmountToDesc] [varchar](7500) NULL,
							[suspendDays] [int] NULL,
							[suspendDurationDesc] [varchar](7500) NULL,
							[suspendNotes] [varchar](7500) NULL,
							[convId_ObligationID] [int] NULL,
							[cfAggregate] [varchar](255) NULL,
							tSentence_id NUMERIC(19,0),
							sentenceTypeLd VARCHAR(255)
						
								);			


							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Sentence">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	

							SELECT 
							s.*,
							sentenceLocationLd = t1.label,
							sentenceTypeLd = 
							case
								WHEN sentenceType = 'COMMS' THEN 'CS'
								WHEN sentenceType = 'DIVER' THEN 'DIVER'
								WHEN sentenceType = 'CTF41' THEN 'FNC'
								WHEN sentenceType = 'CTF85' THEN 'FNC'
								WHEN sentenceType = 'MHLTH' THEN 'MENT'
								WHEN sentenceType = 'DUIST' THEN 'DUIST'
								WHEN sentenceType = 'AQTL' THEN 'AQTL'
								WHEN sentenceType = 'DMSL' THEN 'DMSL'
								WHEN sentenceType = 'MSBIL' THEN 'MSBIL'
								WHEN sentenceType = 'TRANJ' THEN 'TRANJ'
								WHEN sentenceType = 'AB135' THEN 'AB135'
								WHEN sentenceType = 'CONFE' THEN 'CONFE'
								WHEN sentenceType = 'DUIDC' THEN 'DUIDC'
								WHEN sentenceType = 'FOREI' THEN 'FOREI'
								WHEN sentenceType = 'JVFIN' THEN 'JVFIN'
								WHEN sentenceType = 'DUIFA' THEN 'DUIFA'
								WHEN sentenceType = 'DUIJV' THEN 'DUIJV'
								WHEN sentenceType = 'BDF90' THEN 'BDF90'
								WHEN sentenceType = 'DUIGM' THEN 'DUIGM'
								WHEN sentenceType = 'CTF15' THEN 'CTF15'
								WHEN sentenceType = 'SANCT' THEN 'SANCT'
								WHEN sentenceType = 'BONDS' THEN 'BONDS'
								WHEN sentenceType = 'VENUE' THEN 'VENUE'
								WHEN sentenceType = 'CASHB' THEN 'CASHB'
								WHEN sentenceType = 'EXEMP' THEN 'EXEMP'
								WHEN sentenceType = 'APJ/M' THEN 'APJ/M'
								WHEN sentenceType = 'PSYEL' THEN 'PSYEL'
								WHEN sentenceType = 'FITPR' THEN 'FITPR'
								WHEN sentenceType = 'DUIDI' THEN 'DUIDI'
								WHEN sentenceType = 'SFF' THEN 'SFF'
								WHEN sentenceType = 'DGCRT' THEN 'DUIDC'
								WHEN sentenceType = 'JVCOM' THEN 'JVCOM'
								WHEN sentenceType = 'INCAR' THEN 'INCAR'
								WHEN sentenceType = 'ADSCO' THEN 'ADSCO'
								ELSE sentenceType
							END
							FROM ecourt.tSentence s
							LEFT JOIN (SELECT li.code, li.label FROM JustWareMigrated_full.ecourt.tLookupItem li
										INNER JOIN 
										JustWareMigrated_full.ecourt.tLookupList ll
										ON li.lookupList_id = ll.id
										WHERE name = 'SENTENCE_LOCATION' ) t1
							ON sentenceLocation = t1.code
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="id" dest="id"/>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="optlock" dest="optlock"/>
							<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
							<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
							<mapping source="updateReason" dest="updateReason"/>
							<mapping source="amount" dest="amount"/>
							<mapping source="amountReducedTo" dest="amountReducedTo"/>
							<mapping source="amountSuspended" dest="amountSuspended"/>
							<mapping source="completeBy" dest="completeBy"/>
							<mapping source="creditDays" dest="creditDays"/>
							<mapping source="description" dest="description"/>
							<mapping source="length" dest="length"/>
							<mapping source="length2" dest="length2"/>
							<mapping source="length3" dest="length3"/>
							<mapping source="length4" dest="length4"/>
							<mapping source="lengthPeriod" dest="lengthPeriod"/>
							<mapping source="lengthUnit" dest="lengthUnit"/>
							<mapping source="lengthUnit2" dest="lengthUnit2"/>
							<mapping source="lengthUnit3" dest="lengthUnit3"/>
							<mapping source="lengthUnit4" dest="lengthUnit4"/>
							<mapping source="liabilityType" dest="liabilityType"/>
							<mapping source="redeemableLength" dest="redeemableLength"/>
							<mapping source="sentenceBeginDate" dest="sentenceBeginDate"/>
							<mapping source="sentenceCompliance" dest="sentenceCompliance"/>
							<mapping source="sentenceDate" dest="sentenceDate"/>
							<mapping source="sentenceEndDate" dest="sentenceEndDate"/>
							<mapping source="sentenceType" dest="sentenceType"/>
							<mapping source="serviceMethod" dest="serviceMethod"/>
							<mapping source="status" dest="status"/>
							<mapping source="statusDate" dest="statusDate"/>
							<mapping source="statusEndDate" dest="statusEndDate"/>
							<mapping source="associatedCharge_id" dest="associatedCharge_id"/>
							<mapping source="official_id" dest="official_id"/>
							<mapping source="convId" dest="convId"/>
							<mapping source="creditAmountFromDesc" dest="creditAmountFromDesc"/>
							<mapping source="creditAmountToDesc" dest="creditAmountToDesc"/>
							<mapping source="creditDurationDesc" dest="creditDurationDesc"/>
							<mapping source="creditNotes" dest="creditNotes"/>
							<mapping source="notes" dest="notes"/>
							<mapping source="sentenceAmountFromDesc" dest="sentenceAmountFromDesc"/>
							<mapping source="sentenceAmountToDesc" dest="sentenceAmountToDesc"/>
							<mapping source="sentenceDurationDesc" dest="sentenceDurationDesc"/>
							<mapping source="sentenceLocationLd" dest="sentenceLocation"/>
							<mapping source="sentenceSubType" dest="sentenceSubType"/>
							<mapping source="suspendAmountFromDesc" dest="suspendAmountFromDesc"/>
							<mapping source="suspendAmountToDesc" dest="suspendAmountToDesc"/>
							<mapping source="suspendDays" dest="suspendDays"/>
							<mapping source="suspendDurationDesc" dest="suspendDurationDesc"/>
							<mapping source="suspendNotes" dest="suspendNotes"/>
							<mapping source="convId_ObligationID" dest="convId_ObligationID"/>
							<mapping source="sentenceTypeLd" dest="sentenceTypeLd"/>
						<!--	<mapping source="cfAggregate" dest="cfAggregate"/> -->
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="sentence_conv"/>
					</action>
			
				</actions>
			</stage> 
		
		<stage num="82" mode="Serial" desc="Transform Sentence Condition" enabled="true">
			<actions>
				
					<action handler="SqlServer.Raw" desc="Creating Sentence" progresslabel="Creating Sentence Condition" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create  Sentence Condition">
							IF OBJECT_ID('sentenceCondition_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[sentenceCondition_conv];
							
				
							</task>
							
							<task handler="SqlServer.Script" desc="Create Sentence Condition table">
							<![CDATA[
							
							CREATE TABLE [sentenceCondition_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							[accessLevel] [int] NULL,
							[createUserRealName] [varchar](255) NULL,
							[createUsername] [varchar](255) NULL,
							[dateCreated] [datetime] NULL,
							[lastUpdateUserRealName] [varchar](255) NULL,
							[lastUpdateUsername] [varchar](255) NULL,
							[lastUpdated] [datetime] NULL,
							[memo] [varchar](512) NULL,
							[optlock] [int] NOT NULL,
							[roaAccessLevel] [int] NULL,
							[sourceCaseNumber] [varchar](255) NULL,
							[updateReason] [varchar](255) NULL,
							[amount] [float] NULL,
							[length] [float] NULL,
							[lengthUnit] [varchar](255) NULL,
							[sentenceConditionBeginDate] [datetime] NULL,
							[sentenceConditionDate] [datetime] NULL,
							[sentenceConditionEndDate] [datetime] NULL,
							[sentenceConditionType] [varchar](255) NULL,
							[status] [varchar](255) NULL,
							[statusDate] [datetime] NULL,
							[associatedSentence_id] [numeric](19, 0) NOT NULL,
							[convId] [int] NULL,
							[amount2] [float] NULL,
							[description] [varchar](255) NULL,
							[length2] [float] NULL,
							[lengthUnit2] [varchar](255) NULL,
							[notes] [varchar](7500) NULL,
							[sentenceConditionAmtFromDesc] [varchar](255) NULL,
							[sentenceConditionAmtToDesc] [varchar](255) NULL,
							[sentenceConditionDurDesc] [varchar](255) NULL,
							[sentenceConditionSubType] [varchar](255) NULL,
							[sentenceConditionLocation] [varchar](255) NULL
						
								);			


							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Sentence">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	

							SELECT 
							sc.*,
							testLd = 'OTH',
							notesLd = CONCAT(li.label, ' ', sc.notes)

							FROM ecourt.tSentenceCondition sc
							LEFT JOIN (SELECT li.code, li.label FROM ecourt.tLookupItem li
							INNER JOIN ecourt.tLookupList ll
							ON li.lookupList_id = ll.id
							WHERE name = 'SENTENCE_CONDITION_TYPE') li
							ON sc.sentenceConditionType = li.code
			
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="id" dest="id"/>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="optlock" dest="optlock"/>
							<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
							<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
							<mapping source="updateReason" dest="updateReason"/>
							<mapping source="amount" dest="amount"/>
							<mapping source="length" dest="length"/>
							<mapping source="lengthUnit" dest="lengthUnit"/>
							<mapping source="sentenceConditionBeginDate" dest="sentenceConditionBeginDate"/>
							<mapping source="sentenceConditionDate" dest="sentenceConditionDate"/>
							<mapping source="sentenceConditionEndDate" dest="sentenceConditionEndDate"/>
							<mapping source="testLd" dest="sentenceConditionType"/>
							<mapping source="status" dest="status"/>
							<mapping source="statusDate" dest="statusDate"/>
							<mapping source="associatedSentence_id" dest="associatedSentence_id"/>
							<mapping source="convId" dest="convId"/>
							<mapping source="amount2" dest="amount2"/>
							<mapping source="description" dest="description"/>
							<mapping source="length2" dest="length2"/>
							<mapping source="lengthUnit2" dest="lengthUnit2"/>
							<mapping source="notesLd" dest="notes"/>
							<mapping source="sentenceConditionAmtFromDesc" dest="sentenceConditionAmtFromDesc"/>
							<mapping source="sentenceConditionAmtToDesc" dest="sentenceConditionAmtToDesc"/>
							<mapping source="sentenceConditionDurDesc" dest="sentenceConditionDurDesc"/>
							<mapping source="sentenceConditionSubType" dest="sentenceConditionSubType"/>
							<mapping source="sentenceConditionLocation" dest="sentenceConditionLocation"/>
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="sentenceCondition_conv"/>
					</action>
			
				</actions>
			</stage> 
		
		<stage num="84" mode="Serial" desc="Transform Case Assignment" enabled="true">
			<actions>
				
					<action handler="SqlServer.Raw" desc="Creating Case Assignment" progresslabel="Creating Case Assignment" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create  Case Assignment">
							IF OBJECT_ID('caseAssignment_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[caseAssignment_conv];

							IF OBJECT_ID('caseAssignmentMapping_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[caseAssignmentMapping_conv];
				
							</task>
							
							<task handler="SqlServer.Script" desc="Create Case Assignment table">
							<![CDATA[
							
							CREATE TABLE [caseAssignment_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							[accessLevel] [int] NULL,
							[createUserRealName] [varchar](255) NULL,
							[createUsername] [varchar](255) NULL,
							[dateCreated] [datetime] NULL,
							[lastUpdateUserRealName] [varchar](255) NULL,
							[lastUpdateUsername] [varchar](255) NULL,
							[lastUpdated] [datetime] NULL,
							[memo] [varchar](512) NULL,
							[optlock] [int] NOT NULL,
							[roaAccessLevel] [int] NULL,
							[sourceCaseNumber] [varchar](255) NULL,
							[updateReason] [varchar](255) NULL,
							[allowPublicAccess] [tinyint] NULL,
							[assignmentGroup] [varchar](255) NULL,
							[assignmentKey] [varchar](255) NULL,
							[assignmentKeyComments] [varchar](255) NULL,
							[assignmentMethod] [varchar](255) NULL,
							[assignmentRole] [varchar](255) NULL,
							[assignmentWeight] [int] NULL,
							[assignmentWeightTotal] [int] NULL,
							[dateAssigned] [datetime] NULL,
							[dateOrdered] [datetime] NULL,
							[dateRemoved] [datetime] NULL,
							[dissenting] [varchar](255) NULL,
							[locationCode] [varchar](255) NULL,
							[locationId] [numeric](19, 0) NULL,
							[locationName] [varchar](255) NULL,
							[parentLocationCode] [varchar](255) NULL,
							[parentLocationId] [numeric](19, 0) NULL,
							[parentLocationName] [varchar](255) NULL,
							[parentOrgUnitCode] [varchar](255) NULL,
							[parentOrgUnitId] [numeric](19, 0) NULL,
							[parentOrgUnitName] [varchar](255) NULL,
							[reassignmentWeight] [int] NULL,
							[removalReason] [varchar](255) NULL,
							[removalReasonSubType] [varchar](255) NULL,
							[removalRequestedBy] [varchar](255) NULL,
							[representing] [varchar](255) NULL,
							[status] [varchar](255) NULL,
							[statusDate] [datetime] NULL,
							[writing] [varchar](255) NULL,
							[case_id] [numeric](19, 0) NOT NULL,
							[directoryPerson_id] [numeric](19, 0) NULL,
							[person_id] [numeric](19, 0) NULL,
							[subCase_id] [numeric](19, 0) NULL,
							[assignmentSubRole] [varchar](255) NULL,
							[victim] [tinyint] NULL,
							[convId] [int] NULL,
							[flag1] [tinyint] NULL,
							[flag2] [tinyint] NULL,
							[flag3] [tinyint] NULL,
							[flag4] [tinyint] NULL,
							[flag5] [tinyint] NULL,
							[notes] [varchar](7500) NULL,
							[notification] [tinyint] NULL,
							[cmsReferenceId] [varchar](255) NULL,
							[efmReferenceId] [varchar](255) NULL,
							[dirOrgUnit_id] [numeric](19, 0) NULL,
							[associatedADR_id] [numeric](19, 0) NULL,
							[eventInvPersConvId] [int] NULL,
							dirPerson_id NUMERIC(19,0),
							code VARCHAR(255),
							firstName VARCHAR(255),
							lastName VARCHAR(255),
							middleName VARCHAR(255),
							tPID NUMERIC(19,0),
							tCaseAssignment_id NUMERIC(19,0),
							tPerson_id NUMERIC(19,0),
							caseKey NUMERIC(19,0),
							dirEntryCode VARCHAR(255),
							dirOrgUnit_id_Load NUMERIC(19,0),
							newDirEntryCode VARCHAR(255),
							cfElectronicServiceAccepted VARCHAR(255)
						
								);	
								
							CREATE TABLE [caseAssignmentMapping_conv](
							idKey NUMERIC(19,0) IDENTITY,
							sourceCode varchar(255),
							ecourtCode varchar(255)
							
						
								);	
								
							
							]]>
							
							</task>
							
						</source>
					</action>
					
					<action handler="SqlServer.Raw" desc="Creating Case Assignment" progresslabel="Case assignment Mapping Table" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
	
							
							<task handler="SqlServer.Script" desc="Case assignment Mapping Table">
							<![CDATA[
							
							
									
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0563', 'AP-AP-1507');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1298', 'AP-AP-106649');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0465', 'AP-AP-1508');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0698', 'AP-AP-62253');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0987', 'AP-AP-1509');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0119', 'AP-PVA');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0298', 'AP-AP-111159');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1247', 'AP-AP-1510');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0121', 'AP-AP-110077');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1259', 'AP-AP-1511');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1153', 'AP-AP-1512');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1133', 'AP-AP-1513');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0905', 'AP-SPN4');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1206', 'AP-AP-1515');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0752', 'AP-AP-111447');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1381', 'AP-AP-1516');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0511', 'AP-AP-1517');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0753', 'AP-AP-97906');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0845', 'AP-AP-64537');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0207', 'AP-AP-64535');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0284', 'AP-AP-1521');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0800', 'AP-AP-1522');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1152', 'AP-AP-1524');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0758', 'AP-AP-1523');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0682', 'AP-AP-109914');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0590', 'AP-AP-1525');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1257', 'AP-AP-110546');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0773', 'AP-AP-1526');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1048', 'AP-AP-1527');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0642', 'AP-AP-95066');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0674', 'AP-AP-2621');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0737', 'AP-AP-61358');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0270', 'AP-AP-1528');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0513', 'AP-AP-1529');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0774', 'AP-AP-106793');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0776', 'AP-AP-1539');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0777', 'AP-AP-1541');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0778', 'AP-AP-1530');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0973', 'AP-AP-1536');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('DA03', 'AP-AP-1531');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0318', 'AP-AP-66512');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1483', 'AP-AP-1537');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1513', 'AP-AP-1532');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1575', 'AP-AP-1535');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1205', 'AP-AP-108317');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1023', 'AP-AP-1540');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0068', 'AP-AP-99251');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0269', 'AP-AP-67694');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1429', 'AP-AP-115989');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0151', 'AP-AP-1544');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0943', 'AP-AP-67740');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0793', 'AP-AP-100079');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0809', 'AP-AP-1543');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0069', 'AP-AP-67782');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1281', 'AP-AP-97786');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0636', 'AP-AP-1546');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('CASA01', 'AP-CAUGHE');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1446', 'AP-AP-110585');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0710', 'AP-AP-107931');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0730', 'AP-AP-60618');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1296', 'AP-AP-112455');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1178', 'AP-AP-1548');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0830', 'AP-AP-1549');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0475', 'AP-AP-105460');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0470', 'AP-AP-1550');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0107', 'AP-PBAKE');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0832', 'AP-AP-1551');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1478', 'AP-AP-1552');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1262', 'AP-AP-107642');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1440', 'AP-AP-1553');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1441', 'AP-AP-1554');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1417', 'AP-AP-102061');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0833', 'AP-AP-106003');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0451', 'AP-AP-54762');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0451', 'AP-AP-1555');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0731', 'AP-AP-55131');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0837', 'AP-AP-1556');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1229', 'AP-AP-105735');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1442', 'AP-AP-102046');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1482', 'AP-AP-1559');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1465', 'AP-AP-106095');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1196', 'AP-AP-94926');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1461', 'AP-AP-1558');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0836', 'AP-AP-110666');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1606', 'AP-AP-1562');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0050', 'AP-AP-1506');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0499', 'AP-AP-1560');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0345', 'AP-AP-1561');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0865', 'AP-AP-111547');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0605', 'AP-AP-1563');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0950', 'AP-AP-74296');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1572', 'AP-AP-1564');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0211', 'AP-AP-74339');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1534', 'AP-AP-1565');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1506', 'AP-AP-107277');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0932', 'AP-AP-74344');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1166', 'AP-AP-115952');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0860', 'AP-AP-1567');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1061', 'AP-AP-1568');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0704', 'AP-AP-75370');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0990', 'AP-AP-1570');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0842', 'AP-AP-1571');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1353', 'AP-AP-1573');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0250', 'AP-AP-60599');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0129', 'AP-AP-1575');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0555', 'AP-JBENI');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1539', 'AP-AP-1574');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0810', 'AP-AP-49');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1367', 'AP-AP-104627');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0242', 'AP-AP-1576');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1256', 'AP-AP-1577');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1645', 'AP-AP-1578');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0848', 'AP-AP-99794');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0191', 'AP-AP-97043');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0408', 'AP-AP-1580');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0697', 'AP-AP-48273');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0851', 'AP-AP-1579');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0852', 'AP-AP-1441');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1335', 'AP-AP-1581');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0678', 'AP-AP-109531');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0192', 'AP-AP-1582');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1203', 'AP-AP-115247');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1396', 'AP-AP-109785');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0015', 'AP-AP-1583');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1669', 'AP-AP-1584');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1276', 'AP-AP-116386');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0183', 'AP-AP-1585');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0437', 'AP-AP-78791');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0853', 'AP-AP-1587');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0650', 'AP-AP-78913');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0135', 'AP-AP-1588');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0688', 'AP-AP-105927');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0166', 'AP-AP-49797');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0403', 'AP-AP-1589');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1559', 'AP-AP-1590');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1382', 'AP-AP-1591');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0315', 'AP-AP-80029');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0314', 'AP-AP-1593');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0614', 'AP-AP-1594');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0769', 'AP-AP-8087');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1545', 'AP-AP-1595');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0455', 'AP-AP-61007');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0567', 'AP-AP-1596');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0988', 'AP-AP-1598');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('CASA02', 'AP-DBRACC');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0664', 'AP-AP-82044');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1407', 'AP-AP-1600');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1383', 'AP-AP-61572');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0855', 'AP-AP-1599');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0855', 'AP-AP-82071');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0863', 'AP-AP-107269');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0816', 'AP-AP-105274');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1562', 'AP-AP-1603');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0065', 'AP-AP-1604');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1350', 'AP-AP-1605');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0013', 'AP-JPN1');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0359', 'AP-AP-1608');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0864', 'AP-AP-115716');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0975', 'AP-AP-1609');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0213', 'AP-AP-1610');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0866', 'AP-AP-116627');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0157', 'AP-AP-111079');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0277', 'AP-AP-1612');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0461', 'AP-AP-1614');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0273', 'AP-AP-1616');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0274', 'AP-AP-1615');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0870', 'AP-AP-8823');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0228', 'AP-AP-1618');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0201', 'AP-AP-116667');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1399', 'AP-AP-84843');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1183', 'AP-AP-1613');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1183', 'AP-AP-83913');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1419', 'AP-AP-1619');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1436', 'AP-AP-1611');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0733', 'AP-AP-47872');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0989', 'AP-AP-1621');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0486', 'AP-AP-1622');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0871', 'AP-AP-104767');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0726', 'AP-AP-113763');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0620', 'AP-AP-1623');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0952', 'AP-AP-110639');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0652', 'AP-AP-1624');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1131', 'AP-AP-113969');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1340', 'AP-AP-115581');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0035', 'AP-AP-1625');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0577', 'AP-AP-1626');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1526', 'AP-AP-108175');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1608', 'AP-AP-1627');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1437', 'AP-AP-1628');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0482', 'AP-AP-112924');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0906', 'AP-AP-1629');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0141', 'AP-GBURS');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0447', 'AP-AP-1631');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0335', 'AP-AP-1630');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0240', 'AP-AP-106689');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0750', 'AP-AP-99819');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0578', 'AP-AP-1632');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1459', 'AP-AP-97103');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0728', 'AP-AP-60605');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0874', 'AP-AP-105379');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1001', 'AP-AP-100672');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0033', 'AP-AP-1633');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1390', 'AP-AP-1634');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1278', 'AP-AP-105198');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0593', 'AP-AP-1635');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1547', 'AP-AP-1636');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('CASA05', 'AP-LCALLA');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0079', 'AP-DCALLA');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1548', 'AP-AP-1637');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0283', 'AP-AP-88442');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0205', 'AP-AP-1641');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0891', 'AP-AP-1638');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0553', 'AP-AP-1642');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0554', 'AP-AP-1640');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0675', 'AP-AP-57546');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0785', 'AP-AP-1645');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1248', 'AP-AP-105249');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0474', 'AP-AP-97679');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0143', 'AP-AP-1643');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1661', 'AP-AP-1649');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0878', 'AP-AP-107089');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0071', 'AP-AP-1647');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('DA02', 'AP-AP-40');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0156', 'AP-AP-1648');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1096', 'AP-AP-116604');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1532', 'AP-AP-1644');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1271', 'AP-AP-110704');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1322', 'AP-AP-113775');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1322', 'AP-AP-1646');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0944', 'AP-AP-90449');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0880', 'AP-AP-111125');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0162', 'AP-AP-110603');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0882', 'AP-AP-91320');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1360', 'AP-AP-112162');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0312', 'AP-AP-1652');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1312', 'AP-AP-1653');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0212', 'AP-AP-112518');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1667', 'AP-AP-104951');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0313', 'AP-AP-50992');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1550', 'AP-AP-1656');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0689', 'AP-AP-99350');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0759', 'AP-AP-1655');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1285', 'AP-AP-113001');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0931', 'AP-AP-1657');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1072', 'AP-AP-114751');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0893', 'AP-AP-1659');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0686', 'AP-AP-57827');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0724', 'AP-CHI2');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0185', 'AP-AP-1661');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1427', 'AP-AP-112679');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0895', 'AP-AP-114704');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1067', 'AP-AP-112134');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0899', 'AP-AP-102347');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0186', 'AP-AP-59217');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0387', 'AP-AP-1663');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0387', 'AP-AP-62975');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0543', 'AP-AP-102001');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0543', 'AP-AP-114667');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1408', 'AP-AP-2626');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('CASA07', 'AP-AP-100242');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0086', 'AP-AP-1664');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0910', 'AP-AP-115907');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0109', 'AP-AP-64106');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0198', 'AP-AP-114943');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0991', 'AP-AP-1666');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0127', 'AP-AP-1667');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1092', 'AP-AP-112741');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1494', 'AP-AP-112827');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1127', 'AP-AP-1671');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0333', 'AP-AP-61568');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0412', 'AP-AP-57844');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0177', 'AP-AP-1668');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0177', 'AP-AP-65123');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0177', 'AP-AP-54801');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1553', 'AP-AP-1674');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0791', 'AP-AP-105514');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0062', 'AP-AP-66227');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0154', 'AP-AP-110078');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0680', 'AP-AP-66283');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0535', 'AP-AP-1676');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0535', 'AP-AP-66290');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0125', 'AP-AP-106458');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1280', 'AP-AP-111355');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1555', 'AP-AP-1677');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0386', 'AP-AP-57659');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0404', 'AP-AP-1678');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0661', 'AP-AP-55975');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0075', 'AP-AP-1679');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1634', 'AP-AP-1680');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1371', 'AP-AP-96887');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0309', 'AP-AP-1681');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0948', 'AP-AP-108737');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1433', 'AP-AP-108513');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1393', 'AP-AP-1684');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0064', 'AP-AP-105787');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1495', 'AP-AP-105500');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0613', 'AP-AP-1686');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0448', 'AP-AP-107829');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0803', 'AP-ACROW');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1125', 'AP-AP-1687');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0701', 'AP-MC');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0525', 'AP-AP-1685');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0525', 'AP-AP-70448');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1528', 'AP-AP-97294');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0296', 'AP-AP-111160');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1370', 'AP-AP-96264');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1328', 'AP-AP-100335');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1503', 'AP-AP-105251');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1654', 'AP-AP-1689');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('AG11', 'AP-AP-1690');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0507', 'AP-AP-55052');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0363', 'AP-AP-107086');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1557', 'AP-AP-1692');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0354', 'AP-AP-1693');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1091', 'AP-AP-113527');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1424', 'AP-AP-1694');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1458', 'AP-AP-111672');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0914', 'AP-AP-107422');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0897', 'AP-AP-97923');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0702', 'AP-SPN3');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1379', 'AP-AP-114393');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0582', 'AP-AP-51835');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0915', 'AP-AP-96851');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1219', 'AP-AP-1697');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1311', 'AP-AP-1698');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1224', 'AP-TDEBR');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1684', 'AP-AP-1696');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1307', 'AP-AP-115660');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0405', 'AP-AP-1699');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0004', 'AP-AP-106653');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1514', 'AP-AP-1700');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1423', 'AP-AP-110766');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1110', 'AP-AP-1701');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0059', 'AP-MDESO');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1507', 'AP-AP-105191');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0700', 'AP-AP-58750');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0700', 'AP-AP-58751');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1586', 'AP-AP-1710');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0929', 'AP-AP-99276');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0347', 'AP-AP-77317');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0347', 'AP-AP-1702');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0798', 'AP-AP-46');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0799', 'AP-KDICKE');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1617', 'AP-AP-77368');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0077', 'AP-AP-1705');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1533', 'AP-AP-1704');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0598', 'AP-AP-1707');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0930', 'AP-AP-1708');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0181', 'AP-AP-60446');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1565', 'AP-AP-1709');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0708', 'AP-AP-97672');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1313', 'AP-AP-109891');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1231', 'AP-AP-1712');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0184', 'AP-AP-1713');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1582', 'AP-AP-1714');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1598', 'AP-AP-1715');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0506', 'AP-AP-1716');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0115', 'AP-AP-1718');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1648', 'AP-AP-1719');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0979', 'AP-AP-114074');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1508', 'AP-AP-1720');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1331', 'AP-AP-111953');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0780', 'AP-AP-1721');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0268', 'AP-AP-1722');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0409', 'AP-AP-110051');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0568', 'AP-AP-1724');
						
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0687', 'AP-AP-57875');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0971', 'AP-AP-1723');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0972', 'AP-AP-79579');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1678', 'AP-AP-1725');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1487', 'AP-AP-1728');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0292', 'AP-AP-80588');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0322', 'AP-AP-1726');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1554', 'AP-AP-1729');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0861', 'AP-AP-1730');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1095', 'AP-AP-116603');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0190', 'AP-AP-1731');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1656', 'AP-AP-1733');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1486', 'AP-AP-1734');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1581', 'AP-AP-1735');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0189', 'AP-AP-1736');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1567', 'AP-AP-1737');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0039', 'AP-AP-106656');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0044', 'AP-AP-1738');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1568', 'AP-AP-1739');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0522', 'AP-AP-116672');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0239', 'AP-AP-1740');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0977', 'AP-AP-100239');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0549', 'AP-AP-1741');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0653', 'AP-AP-81753');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1579', 'AP-AP-1742');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1171', 'AP-AP-1743');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1212', 'AP-AP-1744');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0497', 'AP-AP-110572');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0597', 'AP-AP-114233');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0003', 'AP-AP-110960');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0245', 'AP-AP-1745');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0431', 'AP-AP-112864');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1018', 'AP-AP-112848');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0641', 'AP-AP-112426');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0113', 'AP-AP-1747');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0980', 'AP-AP-1748');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0754', 'AP-AP-1749');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1187', 'AP-AP-1750');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1686', 'AP-AP-1751');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0669', 'AP-AP-97920');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0757', 'AP-AP-1752');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0042', 'AP-AP-1753');
						
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0425', 'AP-AP-101908');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1080', 'AP-AP-1754');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0945', 'AP-AP-115121');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0946', 'AP-AP-116534');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1569', 'AP-AP-1755');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0644', 'AP-AP-83529');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1435', 'AP-AP-114594');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0199', 'AP-AP-83536');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0473', 'AP-AP-98045');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0983', 'AP-AP-1757');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0441', 'AP-AP-94813');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1551', 'AP-AP-1758');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0928', 'AP-RMERQ');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0949', 'AP-AP-107259');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0353', 'AP-AP-84568');
								
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0635', 'AP-AP-85260');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0665', 'AP-AP-15334');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1563', 'AP-AP-1760');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0479', 'AP-SEVENS');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0811', 'AP-AP-100267');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0994', 'AP-AP-115773');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0995', 'AP-AP-110233');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0997', 'AP-AP-85374');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0496', 'AP-AP-86227');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1628', 'AP-AP-1766');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1213', 'AP-AP-109866');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1200', 'AP-AP-115983');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1574', 'AP-AP-1767');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0956', 'AP-AP-87241');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1580', 'AP-AP-1771');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1512', 'AP-AP-1770');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0611', 'AP-AP-87322');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0165', 'AP-AP-1773');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0540', 'AP-AP-1775');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0540', 'AP-AP-88241');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1269', 'AP-AP-112646');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0548', 'AP-AP-1476');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0293', 'AP-AP-1777');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1197', 'AP-AP-1778');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1070', 'AP-AP-1780');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1070', 'AP-AP-89230');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1636', 'AP-AP-1779');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0743', 'AP-AP-104813');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0173', 'AP-AP-1781');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0519', 'AP-AP-1782');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1199', 'AP-AP-115299');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0711', 'AP-AP-2632');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0820', 'AP-AP-109991');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1013', 'AP-AP-108605');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1142', 'AP-AP-1783');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0676', 'AP-AP-57646');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0622', 'AP-AP-1784');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1046', 'AP-AP-105022');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1169', 'AP-AP-116422');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0244', 'AP-AP-1785');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0619', 'AP-AP-1786');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0085', 'AP-AP-1789');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0485', 'AP-AP-1790');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0999', 'AP-AP-90304');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1618', 'AP-AP-1788');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1640', 'AP-AP-1787');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0633', 'AP-AP-1791');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0427', 'AP-AP-1792');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1398', 'AP-AP-109552');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0399', 'AP-BF');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0467', 'AP-AP-1794');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0796', 'AP-AP-1793');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1019', 'AP-AP-1369');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0005', 'AP-JFRIE');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1485', 'AP-AP-1797');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1578', 'AP-AP-49999');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0484', 'AP-AP-108217');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1463', 'AP-AP-109127');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1463', 'AP-AP-107815');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0377', 'AP-AP-108102');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1044', 'AP-AP-1799');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1098', 'AP-AP-115416');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1468', 'AP-AP-111965');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1474', 'AP-AP-1800');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1337', 'AP-AP-1801');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1337', 'AP-AP-1442');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1592', 'AP-AP-1803');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1020', 'AP-AP-107012');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0505', 'AP-AP-100843');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1542', 'AP-AP-1802');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0807', 'AP-AP-96301');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0161', 'AP-AP-1804');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1564', 'AP-AP-1805');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0428', 'AP-AP-163');
							
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0645', 'AP-AP-102420');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0101', 'AP-AP-96993');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0534', 'AP-AP-98003');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0770', 'AP-AP-114412');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0723', 'AP-AP-105034');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0369', 'AP-AP-114555');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0746', 'AP-AP-94196');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0302', 'AP-AP-100650');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0655', 'AP-AP-55565');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1260', 'AP-AP-1809');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1030', 'AP-AP-95115');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1028', 'AP-AP-111602');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1029', 'AP-AP-115187');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1032', 'AP-AP-62767');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0341', 'AP-AP-1810');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0083', 'AP-AP-54814');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0648', 'AP-AP-56977');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1584', 'AP-AP-1817');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1102', 'AP-JGILBE');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0562', 'AP-AP-1814');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0402', 'AP-AP-56913');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0203', 'AP-AP-96411');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0285', 'AP-AP-1816');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0453', 'AP-AP-98092');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0817', 'AP-AP-116285');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0343', 'AP-AP-1818');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1434', 'AP-AP-112676');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1385', 'AP-AP-1819');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1255', 'AP-AP-114621');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1585', 'AP-AP-1820');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0422', 'AP-AP-105948');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1011', 'AP-AP-1821');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1035', 'AP-AP-110122');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1037', 'AP-AP-115584');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1637', 'AP-AP-1822');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1038', 'AP-AP-1823');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('AG03', 'AP-AP-1824');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0266', 'AP-AP-99799');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0815', 'AP-AP-96537');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1185', 'AP-AP-1825');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0671', 'AP-AP-56665');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0628', 'AP-AP-1826');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0019', 'AP-AP-59219');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1078', 'AP-AP-1827');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0132', 'AP-AP-1830');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0381', 'AP-AP-1829');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1122', 'AP-AP-114172');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1589', 'AP-AP-1831');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0521', 'AP-AP-113649');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1258', 'AP-AP-1838');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0221', 'AP-AP-1832');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0454', 'AP-AP-67577');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0349', 'AP-AP-59288');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0970', 'AP-AP-68520');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0483', 'AP-AP-1834');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0126', 'AP-EGRIE');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1123', 'AP-AP-1836');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0792', 'AP-AP-114194');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0712', 'AP-AP-2633');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0623', 'AP-AP-1837');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1118', 'AP-AP-110100');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0090', 'AP-AP-1839');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0775', 'AP-AP-1840');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0775', 'AP-AP-55139');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1190', 'AP-AP-1841');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0965', 'AP-AP-109495');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1104', 'AP-AP-112190');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0263', 'AP-AP-1842');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0367', 'AP-AP-1844');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1068', 'AP-AP-1845');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1087', 'AP-AP-1843');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1115', 'AP-JGULLEY');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0291', 'AP-AP-1846');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0814', 'AP-AP-109641');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1036', 'AP-AP-100264');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0847', 'AP-AP-1849');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0974', 'AP-AP-115984');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1144', 'AP-AP-1850');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0961', 'AP-AP-108052');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0542', 'AP-AP-97807');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1049', 'AP-AP-1851');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1016', 'AP-AP-115515');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1227', 'AP-AP-1852');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0672', 'AP-AP-105533');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0532', 'AP-AP-99786');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0432', 'AP-AP-1853');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1605', 'AP-AP-1855');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1077', 'AP-AP-116575');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1681', 'AP-AP-70715');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1681', 'AP-AP-1923');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0617', 'AP-AP-1857');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0617', 'AP-AP-47236');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0021', 'AP-AP-57176');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1054', 'AP-AP-1856');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1055', 'AP-AP-71795');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0247', 'AP-AP-1858');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0436', 'AP-PHAMI');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0262', 'AP-AP-1316');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0662', 'AP-HAMMER');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1056', 'AP-AP-1860');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1594', 'AP-AP-1861');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0696', 'AP-AP-105039');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1057', 'AP-AP-112550');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1157', 'AP-AP-96545');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1058', 'AP-AP-113354');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0517', 'AP-AP-1864');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1595', 'AP-AP-1862');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0439', 'AP-AP-50936');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0362', 'AP-AP-1865');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1374', 'AP-AP-1868');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1596', 'AP-AP-1877');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0551', 'AP-AP-94805');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1363', 'AP-AP-60843');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1384', 'AP-AP-108625');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1666', 'AP-AP-1866');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0631', 'AP-AP-1869');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1062', 'AP-AP-112115');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0142', 'AP-AP-1870');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0167', 'AP-AP-74170');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1063', 'AP-AP-60535');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1696', 'AP-AP-56136');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1161', 'AP-AP-1847');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1145', 'AP-AP-1873');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1004', 'AP-AP-112026');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0681', 'AP-AP-75249');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0571', 'AP-AP-112643');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1064', 'AP-AP-1874');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1065', 'AP-AP-1420');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0018', 'AP-AP-1875');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1665', 'AP-AP-1876');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0078', 'AP-AP-1878');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0856', 'AP-AP-1879');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0251', 'AP-AP-1880');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1050', 'AP-AP-1881');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0249', 'AP-AP-1882');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0160', 'AP-AP-1883');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0160', 'AP-AP-1892');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0319', 'AP-AP-76472');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0813', 'AP-AP-1885');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0046', 'AP-AP-1886');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0596', 'AP-AP-1887');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1675', 'AP-AP-1890');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('DA01', 'AP-BHENDRIKSEN');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0103', 'AP-AP-105321');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0472', 'AP-CHEND');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1620', 'AP-AP-1889');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1198', 'AP-AP-105402');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0981', 'AP-AP-1891');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1066', 'AP-AP-111998');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0182', 'AP-AP-60594');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0735', 'AP-AP-106304');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1529', 'AP-AP-105938');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0235', 'AP-AP-1895');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0393', 'AP-AP-99577');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0278', 'AP-AP-1896');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0175', 'AP-AP-1897');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0324', 'AP-AP-1898');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0364', 'AP-AP-79857');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1388', 'AP-AP-1899');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1421', 'AP-AP-79897');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0344', 'AP-AP-1903');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0289', 'AP-AP-80952');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0471', 'AP-AP-60519');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0471', 'AP-AP-1906');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0666', 'AP-AP-80941');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1602', 'AP-AP-1904');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0787', 'AP-AP-1907');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0231', 'AP-AP-109200');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1215', 'AP-AP-106449');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1079', 'AP-AP-111603');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1069', 'AP-AP-1909');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1603', 'AP-AP-1908');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1119', 'AP-HOLLER');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1112', 'AP-AP-1910');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0110', 'AP-AP-83149');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1444', 'AP-AP-100583');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0438', 'AP-SHOOT');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0579', 'AP-AP-1912');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0668', 'AP-AP-56474');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0111', 'AP-AP-1913');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0227', 'AP-AP-1914');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0372', 'AP-AP-1915');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0134', 'AP-AP-84131');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0094', 'AP-AP-1916');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1155', 'AP-DHOUS');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1179', 'AP-AP-1918');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0873', 'AP-AP-1919');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0795', 'AP-AP-1920');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1604', 'AP-AP-1922');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1243', 'AP-AP-97160');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0237', 'AP-AP-84224');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0282', 'AP-AP-110760');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0869', 'AP-AP-96886');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1414', 'AP-AP-84934');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0054', 'AP-AP-1927');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0982', 'AP-AP-1926');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1662', 'AP-AP-1928');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1535', 'AP-AP-1929');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0609', 'AP-AP-97194');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1253', 'AP-AP-102412');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1344', 'AP-AP-107534');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1484', 'AP-AP-1930');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1425', 'AP-AP-111890');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0124', 'AP-AP-1931');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1279', 'AP-AP-116401');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1520', 'AP-AP-107512');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0361', 'AP-HUTCH');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1540', 'AP-AP-1932');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1455', 'AP-AP-115505');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0297', 'AP-AP-111161');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0503', 'AP-AP-1934');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0257', 'AP-GIMEL');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0740', 'AP-SIMEL');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0911', 'AP-BINGRAM');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('AG06', 'AP-AP-1936');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1109', 'AP-AP-1935');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0442', 'AP-AP-104483');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0087', 'AP-AP-1938');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0969', 'AP-AP-1939');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1017', 'AP-AP-114854');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0010', 'AP-AP-107331');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0463', 'AP-AP-100352');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1249', 'AP-AP-1937');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0288', 'AP-AP-107024');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0421', 'AP-SJAMI');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1081', 'AP-AP-1941');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1521', 'AP-AP-1942');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1409', 'AP-AP-112857');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0601', 'AP-AP-60216');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0601', 'AP-AP-1943');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0679', 'AP-AP-51283');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0581', 'AP-AP-88015');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0862', 'AP-AP-1945');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0067', 'AP-AP-106234');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1571', 'AP-AP-1948');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0303', 'AP-LJENS');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0310', 'AP-AP-1947');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0907', 'AP-AP-88905');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1021', 'AP-AP-1949');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0584', 'AP-AP-1950');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0818', 'AP-AP-88924');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1100', 'AP-AP-108374');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1527', 'AP-AP-1951');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0649', 'AP-AP-54836');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0490', 'AP-AP-1953');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0784', 'AP-AP-105279');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0720', 'AP-AP-102089');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0707', 'AP-AP-101899');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0805', 'AP-AP-107782');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1103', 'AP-AP-108872');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1105', 'AP-AP-1954');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1613', 'AP-AP-1959');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1674', 'AP-AP-1961');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1239', 'AP-AP-1960');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1134', 'AP-AP-1958');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1071', 'AP-AP-1955');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0604', 'AP-AP-1952');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0163', 'AP-AP-111008');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1207', 'AP-AP-1963');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1641', 'AP-AP-1962');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0942', 'AP-AP-23376');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0699', 'AP-AP-105745');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0150', 'AP-AP-1964');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1400', 'AP-AP-1966');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1193', 'AP-AP-1965');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0495', 'AP-TJOSE');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0756', 'AP-AP-115854');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1646', 'AP-AP-1968');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1664', 'AP-AP-1969');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0028', 'AP-AP-92703');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1560', 'AP-AP-1970');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1546', 'AP-AP-1971');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1290', 'AP-AP-96371');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1126', 'AP-AP-109087');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0037', 'AP-JKALTE');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0912', 'AP-AP-1973');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1204', 'AP-AP-115477');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0460', 'AP-AP-1974');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0705', 'AP-AP-58523');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1668', 'AP-AP-1976');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('CASA03', 'AP-DRK');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0835', 'AP-AP-1977');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0713', 'AP-AP-112476');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0095', 'AP-AP-106251');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1457', 'AP-AP-1979');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0825', 'AP-AP-106657');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1587', 'AP-AP-1980');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1519', 'AP-AP-110340');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1310', 'AP-AP-1981');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1518', 'AP-AP-1982');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0794', 'AP-AP-106109');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0118', 'AP-AP-1984');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1245', 'AP-AP-1986');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0304', 'AP-AP-1983');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0304', 'AP-AP-97272');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0603', 'AP-AP-1985');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0056', 'AP-AP-1987');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0197', 'AP-AP-94674');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1094', 'AP-AP-1988');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0694', 'AP-AP-60727');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1128', 'AP-AP-1989');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0411', 'AP-AP-1990');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1130', 'AP-AP-115315');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0536', 'AP-AP-100086');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1420', 'AP-AP-63235');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0253', 'AP-AP-63261');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0410', 'AP-AP-1993');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1132', 'AP-AP-1992');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1164', 'AP-AP-1995');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0663', 'AP-AP-56140');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0329', 'AP-JKING');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0139', 'AP-AP-63314');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0055', 'AP-AP-1999');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1136', 'AP-AP-2000');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1223', 'AP-AP-63351');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1362', 'AP-AP-108705');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1612', 'AP-AP-1998');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0938', 'AP-AP-106005');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0336', 'AP-AP-2003');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1022', 'AP-AP-99860');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0342', 'AP-AP-61392');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0574', 'AP-AP-2006');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1402', 'AP-AP-2005');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0706', 'AP-AP-2007');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0706', 'AP-AP-52364');
					
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0133', 'AP-AP-108845');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0566', 'AP-AP-109111');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0877', 'AP-AP-112792');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1084', 'AP-AP-100713');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0016', 'AP-AP-109178');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0908', 'AP-AP-65745');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1389', 'AP-AP-2009');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0022', 'AP-AP-2010');
						
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0588', 'AP-AP-2011');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0570', 'AP-AP-2012');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1138', 'AP-AP-97743');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1140', 'AP-AP-2014');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1630', 'AP-AP-2015');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1475', 'AP-AP-2016');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0209', 'AP-AP-2017');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0462', 'AP-AP-99607');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1496', 'AP-AP-107609');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0014', 'AP-AP-104646');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1489', 'AP-AP-107697');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1031', 'AP-AP-95116');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0962', 'AP-AP-106300');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0957', 'AP-AP-114823');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1267', 'AP-AP-2019');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1352', 'AP-AP-107813');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0510', 'AP-AP-2020');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1338', 'AP-AP-2021');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1386', 'AP-AP-2022');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0498', 'AP-AP-2023');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1235', 'AP-AP-2024');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1679', 'AP-AP-2025');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1643', 'AP-AP-2028');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1146', 'AP-AP-2026');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1147', 'AP-AP-2018');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0634', 'AP-AP-52104');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1148', 'AP-AP-2029');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0300', 'AP-AP-2030');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0978', 'AP-AP-2031');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0939', 'AP-AP-70139');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0070', 'AP-AP-70166');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0647', 'AP-AP-101898');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1174', 'AP-AP-2033');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1549', 'AP-AP-2034');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1319', 'AP-AP-107239');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1024', 'AP-AP-2035');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0538', 'AP-AP-2036');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0355', 'AP-AP-58591');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1182', 'AP-AP-109328');
						
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0330', 'AP-AP-71316');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1184', 'AP-AP-2040');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1184', 'AP-AP-71336');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1321', 'AP-AP-2041');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0012', 'AP-AP-106582');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1481', 'AP-AP-2042');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0424', 'AP-AP-2043');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1156', 'AP-AP-99712');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1629', 'AP-AP-2046');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0624', 'AP-AP-2044');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0204', 'AP-AP-2045');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1208', 'AP-AP-109341');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0187', 'AP-AP-2047');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0481', 'AP-LLINT');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1601', 'AP-AP-2049');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0030', 'AP-AP-2050');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0097', 'AP-AP-73618');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0998', 'AP-MLISR');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0872', 'AP-AP-2051');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1660', 'AP-AP-2052');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0673', 'AP-AP-111643');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0763', 'AP-AP-2053');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1632', 'AP-AP-47595');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1609', 'AP-AP-2055');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0545', 'AP-AP-2056');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0053', 'AP-AP-2057');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1460', 'AP-AP-102041');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0348', 'AP-AP-56146');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1107', 'AP-AP-112967');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0487', 'AP-AP-2059');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1505', 'AP-AP-114115');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0524', 'AP-AP-2060');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0849', 'AP-AP-97955');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1659', 'AP-AP-2061');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0457', 'AP-AP-2062');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1083', 'AP-AP-2063');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0168', 'AP-AP-100391');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1216', 'AP-BLUNA');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1449', 'AP-AP-113005');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1218', 'AP-AP-2065');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1633', 'AP-AP-2066');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1163', 'AP-AP-2067');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0308', 'AP-AP-2068');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1631', 'AP-AP-2070');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1220', 'AP-LMACK');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1221', 'AP-AP-78190');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0305', 'AP-AP-5115');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0755', 'AP-AP-2069');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0271', 'AP-AP-111496');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0020', 'AP-AP-52886');
								
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1376', 'AP-AP-78221');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0006', 'AP-AP-1343');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1264', 'AP-AP-2074');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0546', 'AP-AP-2075');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0762', 'AP-AP-2077');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1143', 'AP-AP-2078');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0786', 'AP-AP-2079');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0638', 'AP-AP-116705');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1635', 'AP-AP-2080');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0099', 'AP-AMALLORY');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1240', 'AP-AP-2081');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0152', 'AP-AP-107587');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1230', 'AP-AP-100789');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1026', 'AP-AP-2084');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0144', 'AP-AP-2083');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1261', 'AP-AP-109140');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0717', 'AP-AP-2641');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0024', 'AP-AP-106037');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0523', 'AP-AP-2085');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0500', 'AP-AP-2089');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0695', 'AP-AP-112634');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0898', 'AP-AP-115708');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0316', 'AP-AP-2090');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1638', 'AP-AP-2076');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0034', 'AP-AP-2088');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0896', 'AP-AP-100828');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1509', 'AP-AP-113977');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0547', 'AP-AP-82508');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0714', 'AP-AP-27794');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0748', 'AP-AP-105024');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0654', 'AP-AP-27835');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1238', 'AP-AP-112255');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1195', 'AP-AP-2092');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0625', 'AP-AP-2091');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1232', 'AP-AP-83648');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1236', 'AP-AP-2094');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0301', 'AP-AP-97507');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0494', 'AP-AP-58927');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0539', 'AP-AP-2095');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0840', 'AP-AP-2096');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0414', 'AP-AP-2097');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1577', 'AP-AP-2098');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1246', 'AP-AP-116521');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1639', 'AP-AP-2100');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0615', 'AP-AP-2115');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0520', 'AP-AP-114363');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0501', 'AP-AP-2106');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0501', 'AP-AP-2099');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1299', 'AP-AP-2102');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1336', 'AP-AP-2104');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0824', 'AP-AP-112589');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0637', 'AP-AP-2105');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0575', 'AP-AP-84723');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0116', 'AP-AP-84719');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0533', 'AP-AP-28285');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1428', 'AP-AP-114203');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0602', 'AP-AP-112534');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0958', 'AP-AP-86045');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0736', 'AP-AP-60971');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1265', 'AP-AP-2110');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1192', 'AP-AP-2111');
					
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0264', 'AP-AP-2637');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0797', 'AP-AP-2112');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0149', 'AP-AP-2113');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1450', 'AP-AP-113004');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1688', 'AP-AP-2114');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1288', 'AP-AP-2119');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0225', 'AP-AP-2118');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0413', 'AP-AP-86437');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0466', 'AP-AP-2117');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1573', 'AP-AP-2120');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1268', 'AP-AP-2121');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1499', 'AP-AP-108149');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1615', 'AP-AP-2122');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1454', 'AP-AP-2123');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1233', 'AP-AP-2101');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0047', 'AP-AP-87592');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1392', 'AP-AP-97588');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1523', 'AP-AP-2124');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1194', 'AP-AP-2125');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1086', 'AP-AP-114698');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0783', 'AP-AP-97270');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0286', 'AP-AP-113533');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0828', 'AP-AP-2126');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1116', 'AP-MELLO');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1693', 'AP-AP-2127');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0478', 'AP-AP-2128');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1456', 'AP-AP-59183');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1189', 'AP-AP-2130');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0350', 'AP-AP-2131');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0073', 'AP-AP-106062');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0374', 'AP-AP-2133');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0057', 'AP-KMEYR');
		
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1273', 'AP-AP-106815');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0180', 'AP-AP-97397');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0493', 'AP-AP-108533');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1274', 'AP-AP-112878');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1275', 'AP-AP-111851');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1339', 'AP-AP-106665');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1670', 'AP-AP-2134');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0416', 'AP-AP-97566');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0170', 'AP-KMLR');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0036', 'AP-AP-114378');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0933', 'AP-LMILLS');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0841', 'AP-AP-107632');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0892', 'AP-AP-96540');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1473', 'AP-AP-90640');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1277', 'AP-AP-110395');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0936', 'AP-AP-91494');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0195', 'AP-AP-2138');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0051', 'AP-AP-2139');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0385', 'AP-AP-57722');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0550', 'AP-AP-92456');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0009', 'AP-AP-2142');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1544', 'AP-AP-2147');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0337', 'AP-AP-105874');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1186', 'AP-AP-2148');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1090', 'AP-AP-2149');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1647', 'AP-AP-2152');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1703', 'AP-AP-2154');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1600', 'AP-AP-2153');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1531', 'AP-AP-106388');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1517', 'AP-AP-2151');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1430', 'AP-AP-107400');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1430', 'AP-AP-2150');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0722', 'AP-AP-99575');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('AG12', 'AP-AP-2155');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1380', 'AP-AP-106893');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1108', 'AP-AP-2157');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0255', 'AP-AP-94513');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1515', 'AP-AP-2158');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0072', 'AP-AP-105929');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0504', 'AP-AP-2159');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0772', 'AP-AP-2160');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1141', 'AP-AP-63082');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0196', 'AP-AP-97168');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0076', 'AP-AP-2162');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1651', 'AP-AP-2163');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0630', 'AP-AP-57048');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0822', 'AP-AP-2165');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0108', 'AP-AP-2166');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1286', 'AP-AP-2168');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0140', 'AP-AP-99395');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0966', 'AP-AP-107260');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0782', 'AP-AP-2171');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1516', 'AP-AP-2172');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0643', 'AP-AP-205');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0826', 'AP-AP-113347');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0953', 'AP-AP-65568');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0219', 'AP-AP-102386');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0031', 'AP-AP-2175');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0376', 'AP-DANEI');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0311', 'AP-AP-97794');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0831', 'AP-AP-2186');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1300', 'AP-AP-2177');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1652', 'AP-AP-2178');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1034', 'AP-AP-116152');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0569', 'AP-AP-2179');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1590', 'AP-AP-2180');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0715', 'AP-AP-100825');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0100', 'AP-AP-124');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0716', 'AP-AP-97363');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0331', 'AP-AP-2182');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0082', 'AP-AP-2184');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0670', 'AP-AP-107460');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1002', 'AP-AP-2183');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1447', 'AP-AP-111572');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1284', 'AP-AP-113057');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1655', 'AP-AP-2185');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1625', 'AP-AP-58520');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0768', 'AP-WNOEL');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1176', 'AP-AP-2188');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0171', 'AP-AP-2189');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0106', 'AP-LNORD');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1074', 'AP-AP-2190');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1411', 'AP-AP-96681');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1303', 'AP-AP-97611');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1282', 'AP-AP-107625');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0683', 'AP-JNYE');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1558', 'AP-AP-2196');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0328', 'AP-AP-2195');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0541', 'AP-AP-2197');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0599', 'AP-AP-2209');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1003', 'AP-AP-97720');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0290', 'AP-AP-1391');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0234', 'AP-AP-71482');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1561', 'AP-AP-2210');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0038', 'AP-AP-70322');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0040', 'AP-JOAKES');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0356', 'AP-AP-108296');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1040', 'AP-AP-2198');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1041', 'AP-AP-109680');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0558', 'AP-AP-2199');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0216', 'AP-AP-101958');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1305', 'AP-AP-113304');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1355', 'AP-AP-109259');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0174', 'AP-AP-2200');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0426', 'AP-AP-49429');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0616', 'AP-AP-2201');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1610', 'AP-AP-2202');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1464', 'AP-AP-106305');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1309', 'AP-AP-2207');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0564', 'AP-AP-2205');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0407', 'AP-AP-105618');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1593', 'AP-AP-2206');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1552', 'AP-AP-2208');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1293', 'AP-AP-104469');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0395', 'AP-AP-2211');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0120', 'AP-AP-106823');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1088', 'AP-AP-100336');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1500', 'AP-AP-108627');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0732', 'AP-AP-100274');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0528', 'AP-AP-2212');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1621', 'AP-AP-2214');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1657', 'AP-AP-2213');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0366', 'AP-AP-2215');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1677', 'AP-AP-2216');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1467', 'AP-AP-133');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0996', 'AP-AP-2217');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0092', 'AP-AP-2221');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1117', 'AP-OTUAFI');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1289', 'AP-AP-100585');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0340', 'AP-AP-57667');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0875', 'AP-AP-112998');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1137', 'AP-AP-105766');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0391', 'AP-KPAGE');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0145', 'AP-AP-2225');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1188', 'AP-AP-107433');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0260', 'AP-AP-73818');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0458', 'AP-AP-2228');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1120', 'AP-SPALMER');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1297', 'AP-AP-101969');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1691', 'AP-AP-2230');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0829', 'AP-AP-2231');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1522', 'AP-AP-2232');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1394', 'AP-AP-99523');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1180', 'AP-AP-104497');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1439', 'AP-AP-2013');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1150', 'AP-AP-113336');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0857', 'AP-AP-76026');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0527', 'AP-AP-97284');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1501', 'AP-AP-116102');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1462', 'AP-AP-107605');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0767', 'AP-AP-2234');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1177', 'AP-AP-2236');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0781', 'AP-AP-2237');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1347', 'AP-AP-2239');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1536', 'AP-AP-2238');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0025', 'AP-WPEDE');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1051', 'AP-AP-2241');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1616', 'AP-AP-2242');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0443', 'AP-AP-2243');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0091', 'AP-AP-2244');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1085', 'AP-AP-115818');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0096', 'AP-AP-2246');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0220', 'AP-AP-2247');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1373', 'AP-AP-2245');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1317', 'AP-AP-2249');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1576', 'AP-AP-2254');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0060', 'AP-AP-2251');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0738', 'AP-AP-96817');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0765', 'AP-AP-2253');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1397', 'AP-AP-2259');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1129', 'AP-AP-105472');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1165', 'AP-AP-2250');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1033', 'AP-AP-2256');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0456', 'AP-AP-2258');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1438', 'AP-AP-2261');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0153', 'AP-AP-2262');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0591', 'AP-AP-2264');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1093', 'AP-AP-2265');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0580', 'AP-AP-79735');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0612', 'AP-AP-58881');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0218', 'AP-AP-106199');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0346', 'AP-AP-2268');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0968', 'AP-AP-104581');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0148', 'AP-AP-2270');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1254', 'AP-AP-2271');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1301', 'AP-SPIRK');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1320', 'AP-AP-2272');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0514', 'AP-AP-2273');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1252', 'AP-AP-104616');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0846', 'AP-AP-2274');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0843', 'AP-TPLIM');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0023', 'AP-SCP');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0429', 'AP-AP-2276');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0434', 'AP-AP-2277');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0066', 'AP-SPOPE');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0667', 'AP-AP-81885');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1154', 'AP-AP-2278');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0576', 'AP-AP-109554');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0718', 'AP-AP-107432');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0232', 'AP-AP-61913');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1106', 'AP-AP-2282');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0947', 'AP-AP-82926');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0279', 'AP-AP-58958');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0279', 'AP-AP-58965');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0279', 'AP-AP-58960');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0279', 'AP-AP-58957');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0279', 'AP-AP-2283');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0279', 'AP-AP-58964');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0692', 'AP-AP-49621');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0976', 'AP-AP-99239');
						
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1395', 'AP-AP-109584');
								
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0320', 'AP-AP-2286');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0320', 'AP-AP-84050');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1364', 'AP-AP-2287');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0761', 'AP-AP-2288');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0964', 'AP-AP-105643');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('AG04', 'AP-AP-2289');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0158', 'AP-AP-2290');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1327', 'AP-AP-2291');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0159', 'AP-AP-105027');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1663', 'AP-AP-2292');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0779', 'AP-AP-2294');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1241', 'AP-AP-2295');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0618', 'AP-AP-2296');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1704', 'AP-AP-2297');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1502', 'AP-AP-116103');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0223', 'AP-AP-2299');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1333', 'AP-AP-86196');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0041', 'AP-AP-2302');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0585', 'AP-AP-2301');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1566', 'AP-AP-2303');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('AG10', 'AP-AP-2304');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1705', 'AP-AP-2305');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0703', 'AP-AP-87154');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0804', 'AP-AP-2306');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1346', 'AP-AP-2308');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1175', 'AP-AP-2307');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0326', 'AP-AP-2309');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0488', 'AP-AP-2310');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0839', 'AP-AP-2311');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1082', 'AP-AP-97727');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1234', 'AP-AP-2312');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1432', 'AP-AP-110419');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1694', 'AP-AP-2314');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1348', 'AP-AP-2313');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0452', 'AP-RHYM');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1012', 'AP-AP-2315');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1060', 'AP-AP-98035');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0233', 'AP-AP-2316');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0709', 'AP-MRICH');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1510', 'AP-AP-2317');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1121', 'AP-AP-90034');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0844', 'AP-AP-113645');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1334', 'AP-AP-111873');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1597', 'AP-AP-2318');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1658', 'AP-AP-2319');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1687', 'AP-AP-2320');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1412', 'AP-AP-114729');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0537', 'AP-AP-2321');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0537', 'AP-AP-90110');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1191', 'AP-AP-94770');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1351', 'AP-AP-115960');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1653', 'AP-AP-2322');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1672', 'AP-AP-2324');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0325', 'AP-AP-2329');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0788', 'AP-AP-2325');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1170', 'AP-AP-115933');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1302', 'AP-AP-116219');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1135', 'AP-AP-2328');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1356', 'AP-AP-2327');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0789', 'AP-AP-99370');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0417', 'AP-AP-2330');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0646', 'AP-AP-111337');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0357', 'AP-AP-2331');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0440', 'AP-AP-114702');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1291', 'AP-AP-2332');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1673', 'AP-AP-2333');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1270', 'AP-AP-114547');
							
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0632', 'AP-AP-93066');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0879', 'AP-AP-2335');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0858', 'AP-AP-109461');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0627', 'AP-AP-2647');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0388', 'AP-AP-2338');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1537', 'AP-AP-2337');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1476', 'AP-AP-2323');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0446', 'AP-AP-178');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0446', 'AP-AP-2336');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1237', 'AP-AP-115029');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0088', 'AP-AP-46209');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1359', 'AP-AP-2341');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0294', 'AP-AP-58648');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0246', 'AP-AP-2343');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0246', 'AP-AP-56914');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0026', 'AP-AP-2344');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0384', 'AP-AP-2342');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1015', 'AP-AP-113333');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0594', 'AP-AP-112586');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0526', 'AP-AP-62599');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1222', 'AP-SROWE');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0959', 'AP-AP-62628');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0954', 'AP-AP-36535');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0954', 'AP-AP-63722');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0760', 'AP-AP-2347');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0760', 'AP-AP-2349');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1341', 'AP-AP-115582');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1365', 'AP-AP-2350');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1009', 'AP-AP-2354');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0178', 'AP-AP-2351');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0934', 'AP-AP-2352');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0984', 'AP-AP-2353');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0358', 'AP-AP-2355');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1366', 'AP-AP-116318');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('AG01', 'AP-AP-106010');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1306', 'AP-AP-115659');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0008', 'AP-AP-2356');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0238', 'AP-AP-2357');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0559', 'AP-AP-2358');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1626', 'AP-AP-2363');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1111', 'AP-AP-2362');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1418', 'AP-AP-2359');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1162', 'AP-AP-104904');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1697', 'AP-AP-2360');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0105', 'AP-JOSAN');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0102', 'AP-CSANFORD');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0334', 'AP-AP-2365');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1422', 'AP-AP-2361');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0048', 'AP-AP-2366');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0202', 'AP-AP-116669');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('AG05', 'AP-AP-2367');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1453', 'AP-AP-113199');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0719', 'AP-CHI3');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1538', 'AP-AP-2368');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('CASA06', 'AP-MSAUER');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0112', 'AP-AP-2369');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0256', 'AP-AP-2370');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('CASA04', 'AP-LSCHAR');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0043', 'AP-AP-2379');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0043', 'AP-AP-2371');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0217', 'AP-AP-67411');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0802', 'AP-AP-2375');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1097', 'AP-AP-114215');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0032', 'AP-AP-2376');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1272', 'AP-AP-109985');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0531', 'AP-AP-2372');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0468', 'AP-AP-110079');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0001', 'AP-AP-2377');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1445', 'AP-AP-105099');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1369', 'AP-AP-68664');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0224', 'AP-AP-2378');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1251', 'AP-AP-2373');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1372', 'AP-AP-37384');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0029', 'AP-AP-109780');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1039', 'AP-AP-105783');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1101', 'AP-AP-105300');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0049', 'AP-AP-1409');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0049', 'AP-AP-74044');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1250', 'AP-AP-107456');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1266', 'AP-AP-110886');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0556', 'AP-AP-2381');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1701', 'AP-AP-2383');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1349', 'AP-AP-115012');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1375', 'AP-AP-105937');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1027', 'AP-AP-2384');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1025', 'AP-AP-2385');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0430', 'AP-AP-2386');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1680', 'AP-AP-2387');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1504', 'AP-AP-116643');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0739', 'AP-SSEVON');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0401', 'AP-AP-2388');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0365', 'AP-AP-2389');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1181', 'AP-AP-101906');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1391', 'AP-AP-2390');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0572', 'AP-AP-70937');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1005', 'AP-AP-113144');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1006', 'AP-AP-106339');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0339', 'AP-AP-2391');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1354', 'AP-AP-97183');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0200', 'AP-AP-107436');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1413', 'AP-BESHA');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0017', 'AP-AP-108252');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0281', 'AP-AP-2394');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0147', 'AP-AP-2397');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0583', 'AP-AP-2395');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1159', 'AP-AP-2396');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1075', 'AP-AP-2398');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0259', 'AP-AP-2399');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0606', 'AP-AP-72134');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1676', 'AP-AP-2400');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0993', 'AP-AP-102271');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1682', 'AP-AP-2401');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0390', 'AP-AP-2402');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1644', 'AP-AP-2404');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0323', 'AP-CSIBL');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0392', 'AP-AP-99531');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1683', 'AP-AP-2405');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0854', 'AP-AP-107264');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0375', 'AP-AP-2407');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0307', 'AP-AP-2408');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0955', 'AP-AP-105168');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1357', 'AP-AP-2409');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0433', 'AP-AP-97702');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1591', 'AP-AP-2411');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0131', 'AP-AP-2412');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1052', 'AP-AP-2413');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1292', 'AP-AP-2414');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1053', 'AP-AP-2415');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1368', 'AP-AP-113253');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('AG09', 'AP-AP-2416');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1692', 'AP-AP-2417');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1627', 'AP-AP-2418');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0552', 'AP-JFSLOA');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1649', 'AP-AP-2420');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1158', 'AP-AP-2421');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0595', 'AP-AP-2422');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0081', 'AP-AP-2433');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1685', 'AP-AP-2430');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0194', 'AP-AP-108931');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0420', 'AP-AP-99463');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0371', 'AP-AP-99757');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0382', 'AP-AP-76652');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0383', 'AP-AP-2423');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0389', 'AP-AP-60222');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0747', 'AP-AP-113398');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0721', 'AP-AP-76717');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0801', 'AP-AP-2428');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0801', 'AP-AP-2432');
								
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('DA04', 'AP-AP-2427');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1073', 'AP-AP-106278');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1014', 'AP-AP-112984');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1160', 'AP-AP-2425');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1211', 'AP-AP-2424');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1228', 'AP-AP-115001');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1387', 'AP-AP-111881');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1316', 'AP-AP-2426');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0272', 'AP-AP-2434');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1151', 'AP-AP-2435');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0745', 'AP-AP-61810');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1671', 'AP-AP-2436');
								
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0052', 'AP-JCSOM');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1113', 'AP-AP-2438');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0967', 'AP-AP-78980');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1332', 'AP-AP-2439');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0450', 'AP-AP-2440');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0317', 'AP-AP-99609');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1699', 'AP-AP-2442');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0122', 'AP-AP-108366');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0806', 'AP-AP-107589');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1624', 'AP-AP-2444');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0128', 'AP-AP-2449');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0128', 'AP-AP-2450');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0287', 'AP-AP-2445');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0378', 'AP-AP-39459');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0771', 'AP-AP-2451');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0608', 'AP-AP-2452');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('AG02', 'AP-AP-106413');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0327', 'AP-AP-2458');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1650', 'AP-AP-100683');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1650', 'AP-AP-106804');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1543', 'AP-AP-2454');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1401', 'AP-AP-2456');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1403', 'AP-AP-106192');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0396', 'AP-AP-98127');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0821', 'AP-TAMST');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0586', 'AP-AP-2457');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0299', 'AP-AP-2453');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0214', 'AP-AP-105487');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0397', 'AP-AP-2455');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0935', 'AP-AP-2459');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0963', 'AP-AP-105109');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1343', 'AP-AP-2465');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0445', 'AP-AP-96539');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1415', 'AP-TSTOCK');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1172', 'AP-AP-112316');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0261', 'AP-AP-2466');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0894', 'AP-AP-2462');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1451', 'AP-AP-2464');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1689', 'AP-AP-2467');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0530', 'AP-AP-96469');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0136', 'AP-AP-114945');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0137', 'AP-AP-80');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0176', 'AP-AP-108981');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0610', 'AP-AP-83302');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0639', 'AP-AP-2463');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1614', 'AP-AP-2469');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0742', 'AP-AP-2654');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1623', 'AP-AP-2471');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0509', 'AP-AP-2470');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0685', 'AP-AP-2655');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0960', 'AP-AP-111604');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1358', 'AP-AP-2472');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1404', 'AP-AP-104909');
					
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0058', 'AP-AP-2473');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0491', 'AP-AP-57541');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0229', 'AP-AP-2474');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1406', 'AP-AP-114181');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1556', 'AP-AP-2475');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0658', 'AP-AP-114099');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1410', 'AP-AP-116608');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0986', 'AP-AP-2478');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0406', 'AP-AP-2477');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0406', 'AP-AP-84383');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1045', 'AP-AP-116224');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1047', 'AP-AP-115929');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0138', 'AP-AP-2479');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1124', 'AP-AP-105719');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0626', 'AP-SPN1');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0027', 'AP-AP-2480');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0045', 'AP-AP-2481');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1342', 'AP-AP-2483');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1622', 'AP-AP-2486');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0164', 'AP-AP-86620');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('AG07', 'AP-AP-2484');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1361', 'AP-AP-112292');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0373', 'AP-AP-95114');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0900', 'AP-AP-109258');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1443', 'AP-AP-2488');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0573', 'AP-AP-2489');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1690', 'AP-AP-2490');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0492', 'AP-CTHIB');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0276', 'AP-AP-2491');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0243', 'AP-AP-2496');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0098', 'AP-ATHOMAS');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0063', 'AP-AP-88806');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0476', 'AP-AP-2497');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0992', 'AP-AP-2492');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1583', 'AP-AP-2493');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0188', 'AP-AP-97469');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0657', 'AP-AP-88820');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0659', 'AP-AP-106063');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1000', 'AP-AP-107263');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0985', 'AP-AP-2495');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1416', 'AP-AP-57');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1599', 'AP-AP-2498');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1345', 'AP-AP-113974');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0734', 'AP-AP-89781');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1149', 'AP-AP-2500');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0172', 'AP-AP-2501');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0230', 'AP-AP-2502');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0179', 'AP-AP-61664');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1431', 'AP-AP-113293');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0306', 'AP-AP-97556');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0764', 'AP-AP-97976');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1168', 'AP-AP-115194');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0529', 'AP-AP-2504');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1043', 'AP-AP-2505');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0808', 'AP-AP-108901');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0206', 'AP-AP-99582');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0823', 'AP-AP-2506');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0146', 'AP-AP-2507');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0400', 'AP-AP-2508');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0210', 'AP-AP-62396');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1695', 'AP-AP-2509');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1642', 'AP-AP-2511');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1611', 'AP-AP-2510');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1059', 'AP-AP-62403');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1059', 'AP-AP-2512');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0881', 'AP-AP-104455');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1452', 'AP-AP-96858');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0011', 'AP-AP-2513');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0834', 'AP-AP-106651');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1314', 'AP-AP-64690');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1469', 'AP-AP-2515');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1466', 'AP-AP-105769');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1202', 'AP-AP-114204');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0464', 'AP-AP-2516');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0208', 'AP-AP-2517');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0725', 'AP-AP-65823');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0727', 'AP-AP-2656');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1470', 'AP-AP-2518');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1470', 'AP-AP-96328');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0909', 'AP-AP-106029');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0275', 'AP-AP-2523');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1225', 'AP-AP-65913');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1139', 'AP-AP-2522');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1472', 'AP-AP-97859');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1477', 'AP-AP-2525');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0002', 'AP-AP-65976');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0489', 'AP-AP-2526');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1480', 'AP-AP-108418');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1698', 'AP-AP-2527');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1007', 'AP-AP-99492');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('AG08', 'AP-AP-2528');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0074', 'AP-KWARD');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('CASA08', 'AP-SWARR');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1283', 'AP-AP-107626');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0515', 'AP-AP-106991');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0459', 'AP-AP-2531');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1008', 'AP-AP-102021');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1702', 'AP-AP-2532');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1315', 'AP-AP-2533');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1201', 'AP-AP-111985');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0940', 'AP-AP-114164');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0480', 'AP-AP-104574');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0104', 'AP-JEWED');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0951', 'AP-AP-69646');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0693', 'AP-AP-43493');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0660', 'AP-AP-112793');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0352', 'AP-AP-2535');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0838', 'AP-AP-112610');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1524', 'AP-AP-112584');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1076', 'AP-AP-107886');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0859', 'AP-AP-2536');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0449', 'AP-AP-2537');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1294', 'AP-AP-2538');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0477', 'AP-AP-56919');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1318', 'AP-AP-2539');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0368', 'AP-AP-70810');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1114', 'AP-AP-2546');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1488', 'AP-AP-2542');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0850', 'AP-AP-115243');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0941', 'AP-AP-96818');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0937', 'AP-AP-71923');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0267', 'AP-AP-2543');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0332', 'AP-AP-110507');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0265', 'AP-AP-110624');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0222', 'AP-AP-2547');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0380', 'AP-AP-71971');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1490', 'AP-AP-2545');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1491', 'AP-AP-2559');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1324', 'AP-AP-115307');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1210', 'AP-AP-2541');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1525', 'AP-AP-2552');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0321', 'AP-AP-2551');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1492', 'AP-AP-109751');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0379', 'AP-AP-2555');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0155', 'AP-AP-2556');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0241', 'AP-AP-72050');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0867', 'AP-AP-113428');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0295', 'AP-AP-107454');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1448', 'AP-AP-2558');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1448', 'AP-AP-2562');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1426', 'AP-AP-109888');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0744', 'AP-AP-62062');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0565', 'AP-AP-62085');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1042', 'AP-AP-2570');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0394', 'AP-AP-2586');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0254', 'AP-AP-2564');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0089', 'AP-AP-2561');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0007', 'AP-AP-1402');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1493', 'AP-AP-2563');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0280', 'AP-AP-108474');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1089', 'AP-AP-108484');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0351', 'AP-AP-60080');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0351', 'AP-AP-2565');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1099', 'AP-AP-115418');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0560', 'AP-AP-2583');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0560', 'AP-AP-2566');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0561', 'WILSON');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0607', 'AP-AP-2554');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0587', 'AP-AW');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0226', 'AP-AP-2567');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1497', 'AP-AP-2584');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1263', 'AP-AP-2568');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1209', 'AP-AP-2560');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0729', 'AP-AP-2573');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0502', 'AP-AP-58540');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0640', 'AP-AP-75764');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0751', 'AP-AP-2577');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1167', 'AP-AP-2579');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0766', 'AP-AP-111423');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0508', 'AP-AP-104945');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0589', 'AP-AP-2580');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1511', 'AP-AP-2581');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0236', 'AP-AP-2582');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0621', 'AP-AP-2585');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0621', 'AP-AP-60633');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0651', 'AP-AP-106021');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1214', 'AP-AP-109573');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1323', 'AP-AP-115306');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0338', 'AP-AP-106075');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0130', 'AP-AP-219');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0812', 'AP-AP-2587');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0516', 'AP-AP-2589');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0516', 'AP-AP-96493');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0419', 'AP-WOCHA');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0790', 'AP-AP-109954');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1217', 'AP-AP-112410');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0876', 'AP-AP-106716');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0444', 'AP-AP-2590');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0423', 'AP-AP-2593');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0398', 'AP-AP-2591');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0169', 'AP-AP-2594');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0084', 'AP-AP-2592');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1479', 'AP-AP-106726');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0592', 'AP-AP-2595');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0418', 'AP-MYORK');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0469', 'AP-AP-2600');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0469', 'AP-AP-2660');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0360', 'AP-AP-2605');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0093', 'AP-AP-2603');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0114', 'AP-AP-2602');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0252', 'AP-AP-2604');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0248', 'AP-AP-114229');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0215', 'AP-AP-2601');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0749', 'AP-AP-55908');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0684', 'AP-AP-80283');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1330', 'AP-AP-2606');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1244', 'AP-AP-2608');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1295', 'AP-AP-96489');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0061', 'AP-AP-2609');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1287', 'AP-AP-116420');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1329', 'AP-AP-108932');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1308', 'AP-AP-97625');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1700', 'AP-AP-2610');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1405', 'AP-AP-96719');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY0868', 'AP-AP-2611');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1498', 'AP-AP-98122');
									INSERT INTO caseAssignmentMapping_conv (ecourtCode, sourceCode) VALUES ('ATTY1541', 'AP-AP-2612');

								
							
							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Case Assignment" enabled="true">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	
								SELECT dp.firstName, dp.lastName, dp.middleName, cs.idKey as caseKey, de.code as dirEntryCode,  cas.*,
								dirOrgUnit_id_Load = 
								CASE
									WHEN dirOrgUnit_id = 19 THEN 3491
									WHEN dirOrgUnit_id = 17 THEN 3491
									WHEN dirOrgUnit_id = 13 THEN 3489
									WHEN dirOrgUnit_id = 27 THEN 3495
									WHEN dirOrgUnit_id = 83 THEN 83
									WHEN dirOrgUnit_id = 77 THEN 77
									WHEN dirOrgUnit_id = 7 THEN 3499
									WHEN dirOrgUnit_id = 65 THEN 65
									WHEN dirOrgUnit_id = 45 THEN 45
									WHEN dirOrgUnit_id = 69 THEN 69
									WHEN dirOrgUnit_id = 29 THEN 3497
									WHEN dirOrgUnit_id = 81 THEN 81
									WHEN dirOrgUnit_id = 49 THEN 3493
									WHEN dirOrgUnit_id = 31 THEN 3497
									WHEN dirOrgUnit_id = 89 THEN 89
									WHEN dirOrgUnit_id = 105 THEN 105
									WHEN dirOrgUnit_id = 5 THEN 3499
									WHEN dirOrgUnit_id = 21 THEN 3493
									WHEN dirOrgUnit_id = 63 THEN 63
									WHEN dirOrgUnit_id = 9 THEN 3489
									WHEN dirOrgUnit_id = 39 THEN 39
									WHEN dirOrgUnit_id = 15 THEN 3491
									WHEN dirOrgUnit_id = 47 THEN 3493
									WHEN dirOrgUnit_id = 35 THEN 35
									WHEN dirOrgUnit_id = 33 THEN 3497
									WHEN dirOrgUnit_id = 103 THEN 103
									WHEN dirOrgUnit_id = 23 THEN 3495
									WHEN dirOrgUnit_id = 3 THEN 3
									WHEN dirOrgUnit_id = 11 THEN 3489
									WHEN dirOrgUnit_id = 95 THEN 95
									WHEN dirOrgUnit_id = 25 THEN 3495
									WHEN dirOrgUnit_id = 41 THEN 41
									WHEN dirOrgUnit_id = 99 THEN 3499
								END,
								newDirEntryCode = cam.ecourtCode,
								assignmentRoleLd = 
								Case
									WHEN assignmentRole = 'ATTYG' THEN 'ATTGEN'
									WHEN assignmentRole = 'CASA' THEN 'CASA'
									WHEN assignmentRole = 'DATTY' THEN 'DA'
									WHEN assignmentRole = 'JDG' THEN 'JUD'
									WHEN assignmentRole = 'DOCPR' THEN 'DOCPR'
									WHEN assignmentRole = 'INTER' THEN 'INT'
									WHEN assignmentRole = 'INTJP' THEN 'INT'
									WHEN assignmentRole = 'INTWT' THEN 'INT'
									WHEN assignmentRole = 'JPO' THEN 'JUVPROB'
									WHEN assignmentRole = 'FCMED' THEN 'MED'
									WHEN assignmentRole = 'MEDI' THEN 'MED'
									WHEN assignmentRole = 'PA' THEN 'PA'
									WHEN assignmentRole = 'PDEFD' THEN 'CIT03'
									WHEN assignmentRole = 'SOCWK' THEN 'SW'
									WHEN assignmentRole = 'DCFS' THEN 'SW'
									WHEN assignmentRole = 'YPARO' THEN 'YPO'
									ELSE assignmentRole
								END
								FROM ecourt.tCaseAssignment cas
								INNER JOIN ecourt.tdirPerson dp
								ON cas.directoryPerson_id = dp.id
								INNER JOIN ecourt.tdirEntry de
								ON dp.id = de.id
								LEFT JOIN ${sql.staging.db}.dbo.caseAssignmentMapping_conv cam
								ON de.code = cam.sourceCode
								INNER JOIN ${sql.staging.db}.dbo.case_conv cs 
								ON cas.case_id = cs.id
					
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="caseKey" dest="caseKey"/>
							<mapping source="id" dest="id"/>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="optlock" dest="optlock"/>
							<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
							<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
							<mapping source="updateReason" dest="updateReason"/>
							<mapping source="allowPublicAccess" dest="allowPublicAccess"/>
							<mapping source="assignmentGroup" dest="assignmentGroup"/>
							<mapping source="assignmentKey" dest="assignmentKey"/>
							<mapping source="assignmentKeyComments" dest="assignmentKeyComments"/>
							<mapping source="assignmentMethod" dest="assignmentMethod"/>
							<mapping source="assignmentRoleLd" dest="assignmentRole"/>
							<mapping source="assignmentWeight" dest="assignmentWeight"/>
							<mapping source="assignmentWeightTotal" dest="assignmentWeightTotal"/>
							<mapping source="dateAssigned" dest="dateAssigned"/>
							<mapping source="dateOrdered" dest="dateOrdered"/>
							<mapping source="dateRemoved" dest="dateRemoved"/>
							<mapping source="dissenting" dest="dissenting"/>
							<mapping source="locationCode" dest="locationCode"/>
							<mapping source="locationId" dest="locationId"/>
							<mapping source="locationName" dest="locationName"/>
							<mapping source="parentLocationCode" dest="parentLocationCode"/>
							<mapping source="parentLocationId" dest="parentLocationId"/>
							<mapping source="parentLocationName" dest="parentLocationName"/>
							<mapping source="parentOrgUnitCode" dest="parentOrgUnitCode"/>
							<mapping source="parentOrgUnitId" dest="parentOrgUnitId"/>
							<mapping source="parentOrgUnitName" dest="parentOrgUnitName"/>
							<mapping source="reassignmentWeight" dest="reassignmentWeight"/>
							<mapping source="removalReason" dest="removalReason"/>
							<mapping source="removalReasonSubType" dest="removalReasonSubType"/>
							<mapping source="removalRequestedBy" dest="removalRequestedBy"/>
							<mapping source="representing" dest="representing"/>
							<mapping source="status" dest="status"/>
							<mapping source="statusDate" dest="statusDate"/>
							<mapping source="writing" dest="writing"/>
							<mapping source="case_id" dest="case_id"/>
							<mapping source="directoryPerson_id" dest="directoryPerson_id"/>
							<mapping source="person_id" dest="person_id"/>
							<mapping source="subCase_id" dest="subCase_id"/>
							<mapping source="assignmentSubRole" dest="assignmentSubRole"/>
							<mapping source="victim" dest="victim"/>
							<mapping source="convId" dest="convId"/>
							<mapping source="flag1" dest="flag1"/>
							<mapping source="flag2" dest="flag2"/>
							<mapping source="flag3" dest="flag3"/>
							<mapping source="flag4" dest="flag4"/>
							<mapping source="flag5" dest="flag5"/>
							<mapping source="notes" dest="notes"/>
							<mapping source="notification" dest="notification"/>
							<mapping source="cmsReferenceId" dest="cmsReferenceId"/>
							<mapping source="efmReferenceId" dest="efmReferenceId"/>
							<mapping source="dirOrgUnit_id" dest="dirOrgUnit_id"/>
							<mapping source="associatedADR_id" dest="associatedADR_id"/>
							<mapping source="eventInvPersConvId" dest="eventInvPersConvId"/>
							<mapping source="firstName" dest="firstName"/>
							<mapping source="middleName" dest="middleName"/>
							<mapping source="lastName" dest="lastName"/>
							<mapping source="dirEntryCode" dest="dirEntryCode"/>
							<mapping source="newDirEntryCode" dest="newDirEntryCode"/>
							<!--<mapping source="dirOrgUnit_id_Load" dest="dirOrgUnit_id_Load"/> -->
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="caseAssignment_conv"/>
					</action>
					
					<action handler="SqlServer.Raw" desc="cfElectronicServiceAccepted" progresslabel="cfElectronicServiceAccepted" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							
							
							<task handler="SqlServer.Script" desc="cfElectronicServiceAccepted">
							<![CDATA[
							
							UPDATE caseAssignment_conv 
							SET cfElectronicServiceAccepted = 'ESA'
							FROM caseAssignment_conv ca
							INNER JOIN ${sql.ecourt.db}.ecourt.tDirEntry de
							ON ca.newDirEntryCode = de.code
							INNER JOIN ${sql.ecourt.db}.ecourt.tDirAttribute da
							ON de.id = da.dirEntry_id 
							WHERE attributeType = 'ESA'
							
							
							]]>
							
							</task>
							
						</source>
					</action>
					
			
				</actions>
			</stage> 
		
		<stage num="86" mode="Serial" desc="Transform Case Disposition" enabled="false">
			<actions>
				
					<action handler="SqlServer.Raw" desc="Creating Sentence" progresslabel="Creating Sentence Condition" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create  Sentence Condition">
							IF OBJECT_ID('caseDisposition_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[caseDisposition_conv];

				
							</task>
							
							<task handler="SqlServer.Script" desc="Create Sentence Condition table">
							<![CDATA[
							
							CREATE TABLE [caseDisposition_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							dispositionType VARCHAR(255),
							dispositionDate datetime,
							tCaseDisposition_id NUMERIC(19,0),
							caseKey NUMERIC(19,0),
							partyId NUMERIC(19,0)
						
						
								);	
							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Case Assignment">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	
							
							SELECT chg.dispositionType, chg.dispositionDate, pty.caseKey, pty.id as partyId  FROM ecourt.tCharge chg
							INNER JOIN cnmiStaging.dbo.party_conv pty
							ON chg.associatedParty_id = pty.id
							INNER JOIN cnmiStaging.dbo.convertCases_conv cc
							ON pty.case_id = cc.case_id
							WHERE cc.caseGroup <> 'CR' and chg.dispositionType IS NOT NULL
					
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="dispositionType" dest="dispositionType"/>
							<mapping source="dispositionDate" dest="dispositionDate"/>
							<mapping source="caseKey" dest="caseKey"/>
							<mapping source="partyId" dest="partyId"/>
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="caseDisposition_conv"/>
					</action>
					
					
			
				</actions>
			</stage> 
		
		<stage num="88" mode="Serial" desc="Transform Judgment" enabled="true">
			<actions>
				
					<action handler="SqlServer.Raw" desc="Creating Sentence" progresslabel="Creating Sentence Condition" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create  Sentence Condition">
							IF OBJECT_ID('judgmentSnt_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[judgmentSnt_conv];

				
							</task>
							
							<task handler="SqlServer.Script" desc="Create Sentence Condition table">
							<![CDATA[
							
							CREATE TABLE [judgmentSnt_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							cfAdditionalInfo VARCHAR(MAX),
							sentenceDate datetime,
							charge_id NUMERIC(19,0),
							sentenceId NUMERIC(19,0),
							caseKy NUMERIC(19,0),
							tJudgment_id NUMERIC(19,0),
							tJudgmentAward_id NUMERIC(19,0)
						
								);	
							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Case Assignment">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	
							
							SELECT  li.label, sc.sentenceType, sc.*, CONCAT(li.label, ' - Amt: ', COALESCE(sc.amount, '0'), ' - Sentence Location:', sentenceLocation, '- ', sc.notes) as cfAdditionalInfo, sc.id as sentenceId, 
							c.idKey as caseKy
							FROM ${sql.staging.db}.dbo.convertCases_conv cc
							INNER  JOIN ${sql.migrated.db}.ecourt.tParty pty
							ON cc.case_id = pty.case_id
							INNER JOIN ${sql.migrated.db}.ecourt.tCharge chg
							ON chg.associatedParty_id = pty.id
							INNER JOIN ${sql.migrated.db}.ecourt.tSentence sc
							ON chg.id = sc.associatedCharge_id
							--INNER JOIN ${sql.migrated.db}.ecourt.tSentenceCondition scc
							--ON sc.id = scc.associatedSentence_id
							LEFT JOIN ${sql.migrated.db}.ecourt.tLookupItem li
							ON sc.sentenceType = li.code
							LEFT JOIN ${sql.migrated.db}.ecourt.tLookupList ll
							ON li.lookupList_id = ll.id AND ll.name = 'SENTENCE_TYPE'
							INNER JOIN ${sql.staging.db}.dbo.case_conv c 
							ON cc.case_id = c.id
							WHERE cc.caseGroup <> 'CR' and SentenceType IS NOT NULL
					
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="cfAdditionalInfo" dest="cfAdditionalInfo"/>
							<mapping source="associatedCharge_id" dest="charge_id"/>
							<mapping source="sentenceBeginDate" dest="sentenceDate"/>
							<mapping source="sentenceId" dest="id"/>
							<mapping source="caseKy" dest="caseKy"/>
						
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="judgmentSnt_conv"/>
					</action>
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Case Assignment">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	
							
							
							SELECT  li.label, sc.sentenceType, scc.associatedSentence_id, CONCAT(li.label, ' - ', scc.notes) as cfAdditionalInfo, sc.associatedCharge_id, scc.sentenceConditionBeginDate,
							c.idKey as caseKy
							FROM ${sql.staging.db}.dbo.convertCases_conv cc
							INNER  JOIN ${sql.migrated.db}.ecourt.tParty pty
							ON cc.case_id = pty.case_id
							INNER JOIN ${sql.migrated.db}.ecourt.tCharge chg
							ON chg.associatedParty_id = pty.id
							INNER JOIN ${sql.migrated.db}.ecourt.tSentence sc
							ON chg.id = sc.associatedCharge_id
							INNER JOIN ${sql.migrated.db}.ecourt.tSentenceCondition scc
							ON sc.id = scc.associatedSentence_id
							LEFT JOIN ${sql.migrated.db}.ecourt.tLookupItem li
							ON scc.sentenceConditionType = li.code
							LEFT JOIN ${sql.migrated.db}.ecourt.tLookupList ll
							ON li.lookupList_id = ll.id AND ll.name = 'SENTENCE_CONDITION_TYPE'
							INNER JOIN ${sql.staging.db}.dbo.case_conv c 
							ON cc.case_id = c.id
							WHERE cc.caseGroup <> 'CR'
					
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="cfAdditionalInfo" dest="cfAdditionalInfo"/>
							<mapping source="associatedCharge_id" dest="charge_id"/>
							<mapping source="sentenceConditionBeginDate" dest="sentenceDate"/>
							<mapping source="associatedSentence_id" dest="sentenceId"/>
							<mapping source="caseKy" dest="caseKy"/>
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="judgmentSnt_conv"/>
					</action>
					
					
					
			
				</actions>
			</stage> 
		
		<stage num="90" mode="Serial" desc="Transform Special Status" enabled="true">
			<actions>
				
					<action handler="SqlServer.Raw" desc="Creating Sentence" progresslabel="Creating Special Status" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create  Special Status">
							IF OBJECT_ID('specialStatus_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[specialStatus_conv];

				
							</task>
							
							<task handler="SqlServer.Script" desc="Create Special Status table">
							<![CDATA[
							
							CREATE TABLE [specialStatus_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							[accessLevel] [int] NULL,
							[createUserRealName] [varchar](255) NULL,
							[createUsername] [varchar](255) NULL,
							[dateCreated] [datetime] NULL,
							[lastUpdateUserRealName] [varchar](255) NULL,
							[lastUpdateUsername] [varchar](255) NULL,
							[lastUpdated] [datetime] NULL,
							[memo] [varchar](512) NULL,
							[optlock] [int] NOT NULL,
							[roaAccessLevel] [int] NULL,
							[sourceCaseNumber] [varchar](255) NULL,
							[updateReason] [varchar](255) NULL,
							[category] [varchar](255) NULL,
							[endDate] [datetime] NULL,
							[startDate] [datetime] NULL,
							[status] [varchar](255) NOT NULL,
							[case_id] [numeric](19, 0) NOT NULL,
							[convId] [int] NULL,
							[value] [varchar](255) NULL,
						
								);	
							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Special Status">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	
							
								SELECT *,
								statusLd = 
								Case
									WHEN status = 'IR' THEN 'INTER'
									ELSE status
								END
								FROM ${sql.migrated.db}.ecourt.tSpecialStatus ss
			
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="optlock" dest="optlock"/>
							<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
							<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
							<mapping source="updateReason" dest="updateReason"/>
							<mapping source="category" dest="category"/>
							<mapping source="endDate" dest="endDate"/>
							<mapping source="startDate" dest="startDate"/>
							<mapping source="statusLd" dest="status"/>
							<mapping source="case_id" dest="case_id"/>
							<mapping source="convId" dest="convId"/>
							<mapping source="value" dest="value"/>
						
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="specialStatus_conv"/>
					</action>
			
			
				</actions>
			</stage> 
		
		<stage num="92" mode="Serial" desc="Transform Case Seal - Using Special Status" enabled="false">
			<actions>
				
					<action handler="SqlServer.Raw" desc="Creating Sentence" progresslabel="Creating Case Seal" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create Case Seal">
							IF OBJECT_ID('caseSeal2_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[caseSeal2_conv];

				
							</task>
							
							<task handler="SqlServer.Script" desc="Create Case Seal table">
							<![CDATA[
							
							CREATE TABLE [caseSeal2_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							type VARCHAR(255),
							effectiveFrom datetime,
							effectiveTo datetime,
							memo varchar(512),
							case_id NUMERIC(19,0)
						
								);	
							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Special Status">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	
							
								SELECT 
								case_id,
								'SEAL' as type,
								MIN(startDate) as effectiveFrom,
								MIN(endDate) as effectiveTo,
								STRING_AGG(value, ' | ') as memo
								
								FROM CNMI_eCourt_full.ecourt.tSpecialStatus ss
								WHERE ss.status = 'SLD'
								GROUP BY case_id
								
								UNION
								
								SELECT 
								case_id,
								'CONF' as type,
								MIN(startDate) as effectiveFrom,
								MIN(endDate) as effectiveTo,
								STRING_AGG(value, ' | ') as memo
								
								FROM CNMI_eCourt_full.ecourt.tSpecialStatus ss
								WHERE ss.status = 'CFD'
								GROUP BY case_id
								
								UNION 
								
								SELECT 
								case_id,
								'EXP' as type,
								MIN(startDate) as effectiveFrom,
								MIN(endDate) as effectiveTo,
								STRING_AGG(value, ' | ') as memo
								
								FROM CNMI_eCourt_full.ecourt.tSpecialStatus ss
								WHERE ss.status = 'EXP'
								GROUP BY case_id
			
			
			
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="case_id" dest="case_id"/>
							<mapping source="type" dest="type"/>
							<mapping source="effectiveFrom" dest="effectiveFrom"/>
							<mapping source="effectiveTo" dest="effectiveTo"/>
							<mapping source="memo" dest="memo"/>

						
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="caseSeal2_conv"/>
					</action>
			
			
				</actions>
			</stage> 
		
			
		<stage num="94" mode="Serial" desc="Transform Person Relationship" enabled="true">
			<actions>
				
					<action handler="SqlServer.Raw" desc="Creating Sentence" progresslabel="Creating Person Relationship" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create Person Relationship">
							IF OBJECT_ID('personRelationship_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[personRelationship_conv];

				
							</task>
							
							<task handler="SqlServer.Script" desc="Create Person Relationship table">
							<![CDATA[
							
							CREATE TABLE [personRelationship_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							akaType VARCHAR(255),
							person_id NUMERIC(19,0),
							firstName VARCHAR(255),
							middleName VARCHAR(255),
							lastName VARCHAR(255),
							[createUserRealName] [varchar](255) NULL,
							[createUsername] [varchar](255) NULL,
							[dateCreated] [datetime] NULL,
							[lastUpdateUserRealName] [varchar](255) NULL,
							[lastUpdateUsername] [varchar](255) NULL,
							[lastUpdated] [datetime] NULL,
							[optlock] [int] NOT NULL,
							
						
								);	
							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Person Relationship">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	
							
							SELECT p.firstName, p.lastName, p.middleName, pr.relationshipType as akaType, pr.parentPerson_id,
							pr.createUserRealName,
							pr.createUsername,
							pr.dateCreated,
							pr.lastUpdateUserRealName,
							pr.lastUpdateUsername,
							pr.lastUpdated,
							pr.optlock

							FROM ${sql.migrated.db}.ecourt.tPersonRelationship pr
							LEFT JOIN ${sql.migrated.db}.ecourt.tPerson p 
							ON pr.relatedPerson_id = p.id
			
			
			
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="akaType" dest="akaType"/>
							<mapping source="parentPerson_id" dest="person_id"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="optlock" dest="optlock"/>
							<mapping source="firstName" dest="firstName"/>
							<mapping source="middleName" dest="middleName"/>
							<mapping source="lastName" dest="lastName"/>

						
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="personRelationship_conv"/>
					</action>
			
			
				</actions>
			</stage> 
		
		<stage num="96" mode="Serial" desc="Transform Person Special Status" enabled="true">
			<actions>
				
					<action handler="SqlServer.Raw" desc="Creating Sentence" progresslabel="Creating  personSpecialStatus_conv" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create Person Special Status">
							IF OBJECT_ID('personSpecialStatus_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[personSpecialStatus_conv];

				
							</task>
							
							<task handler="SqlServer.Script" desc="Create Person Special Status table">
							<![CDATA[
							
							CREATE TABLE [personSpecialStatus_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							[accessLevel] [int] NULL,
							[createUserRealName] [varchar](255) NULL,
							[createUsername] [varchar](255) NULL,
							[dateCreated] [datetime] NULL,
							[lastUpdateUserRealName] [varchar](255) NULL,
							[lastUpdateUsername] [varchar](255) NULL,
							[lastUpdated] [datetime] NULL,
							[memo] [varchar](512) NULL,
							[optlock] [int] NOT NULL,
							[roaAccessLevel] [int] NULL,
							[sourceCaseNumber] [varchar](255) NULL,
							[updateReason] [varchar](255) NULL,
							[endDate] [datetime] NULL,
							[issuerCountry] [varchar](255) NULL,
							[issuerName] [varchar](255) NULL,
							[issuerState] [varchar](255) NULL,
							[specialStatusType] [varchar](255) NULL,
							[startDate] [datetime] NULL,
							[status] [tinyint] NULL,
							[associatedPerson_id] [numeric](19, 0) NOT NULL,
							[category] [varchar](255) NULL,
							[value] [varchar](255) NULL,
							[convId] [int] NULL,
							[alert] [tinyint] NULL,
							
						
								);	
							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Person Special Status">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	
						
							SELECT * FROM ecourt.tPersonSpecialStatus
			
			
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="id" dest="id"/>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="optlock" dest="optlock"/>
							<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
							<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
							<mapping source="updateReason" dest="updateReason"/>
							<mapping source="endDate" dest="endDate"/>
							<mapping source="issuerCountry" dest="issuerCountry"/>
							<mapping source="issuerName" dest="issuerName"/>
							<mapping source="issuerState" dest="issuerState"/>
							<mapping source="specialStatusType" dest="specialStatusType"/>
							<mapping source="startDate" dest="startDate"/>
							<mapping source="status" dest="status"/>
							<mapping source="associatedPerson_id" dest="associatedPerson_id"/>
							<mapping source="category" dest="category"/>
							<mapping source="value" dest="value"/>
							<mapping source="convId" dest="convId"/>
							<mapping source="alert" dest="alert"/>
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="personSpecialStatus_conv"/>
					</action>
			
			
				</actions>
			</stage> 
		
			
		<stage num="98" mode="Serial" desc="Transform Vehicle" enabled="true">
			<actions>
				
					<action handler="SqlServer.Raw" desc="Creating Sentence" progresslabel="Creating  vehicle_conv" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create Person Special Status">
							IF OBJECT_ID('vehicle_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[vehicle_conv];

				
							</task>
							
							<task handler="SqlServer.Script" desc="Create Person Special Status table">
							<![CDATA[
							
							CREATE TABLE [vehicle_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							vehicleType VARCHAR(255),
							registeredYear VARCHAR(255),
							model VARCHAR(255),
							make VARCHAR(255),
							color VARCHAR(255),
							cfColor2 VARCHAR(255),
							registeredState VARCHAR(255),
							year NUMERIC(19,0),
							licensePlate VARCHAR(255),
							person_id NUMERIC(19,0),
							memo varchar(255)
							
						
								);	
							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Person Special Status">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	
						
							SELECT id as person_id, COALESCE(bodyType, 'UNK') as vehicleType, NULLIF(CONCAT(plateYear1, plateYear2),'') as licensePlate, model, make, pColor as color, sColor as cfColor2, vState as registeredState, TRY_CAST(vYear as NUMERIC(19,0)) as year, vYear as memo FROM 
							(SELECT MIN(pr.firstName) firstName, MIN(lastName) lastName, MIN(middleName) middleName, pr.id FROM ecourt.tParty pty
							LEFT JOIN ecourt.tPerson pr
							ON pty.person_id = pr.id
							WHERE partyType = 'VEH'
							GROUP BY pr.id) vh
							LEFT JOIN
							(SELECT MIN(value) bodyType, associatedPerson_id FROM ecourt.tPersonSpecialStatus 
							WHERE specialStatusType = 'VBD'
							GROUP BY associatedPerson_id) t1	
							ON vh.id = t1.associatedPerson_id
							LEFT JOIN
							(SELECT MIN(value) plateYear1, associatedPerson_id FROM ecourt.tPersonSpecialStatus 
							WHERE specialStatusType = 'VEHPY'
							GROUP BY associatedPerson_id) t2
							ON vh.id = t2.associatedPerson_id
							LEFT JOIN 
							(SELECT MIN(value) plateYear2, associatedPerson_id FROM ecourt.tPersonSpecialStatus 
							WHERE specialStatusType = 'VLPY'
							GROUP BY associatedPerson_id) t3
							ON vh.id = t3.associatedPerson_id
							LEFT JOIN
							(SELECT MIN(value) model, associatedPerson_id FROM ecourt.tPersonSpecialStatus 
							WHERE specialStatusType = 'VMD'
							GROUP BY associatedPerson_id) t4
							ON vh.id = t4.associatedPerson_id
							LEFT JOIN
							(SELECT MIN(value)  make, associatedPerson_id FROM ecourt.tPersonSpecialStatus 
							WHERE specialStatusType = 'VMK'
							GROUP BY associatedPerson_id) t5
							ON vh.id = t5.associatedPerson_id
							LEFT JOIN
							(SELECT MIN(value) pColor, associatedPerson_id  FROM ecourt.tPersonSpecialStatus 
							WHERE specialStatusType = 'VPC'
							GROUP BY associatedPerson_id) t6	
							ON vh.id = t6.associatedPerson_id
							LEFT JOIN
							(SELECT MIN(value) sColor, associatedPerson_id  FROM ecourt.tPersonSpecialStatus 
							WHERE specialStatusType = 'VSC'
							GROUP BY associatedPerson_id) t7
							ON vh.id = t7.associatedPerson_id
							LEFT JOIN
							(SELECT MIN(value) vState, associatedPerson_id FROM ecourt.tPersonSpecialStatus 
							WHERE specialStatusType = 'VST'
							GROUP BY associatedPerson_id) t8	
							ON vh.id = t8.associatedPerson_id
							LEFT JOIN
							(SELECT MIN(value) vYear, associatedPerson_id FROM ecourt.tPersonSpecialStatus 
							WHERE specialStatusType = 'VYR'
							GROUP BY associatedPerson_id) t9
							ON vh.id = t9.associatedPerson_id
							WHERE NOT (model IS NULL AND make IS NULL AND pColor IS NULL AND sColor IS NULL AND vState IS NULL AND vYear IS NULL AND plateYear1 IS NULL AND plateYear2 IS NULL AND vYear IS NULL)
			
			
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="vehicleType" dest="vehicleType"/>
							<mapping source="licensePlate" dest="licensePlate"/>
							<mapping source="model" dest="model"/>
							<mapping source="make" dest="make"/>
							<mapping source="color" dest="color"/>
							<mapping source="cfColor2" dest="cfColor2"/>
							<mapping source="registeredState" dest="registeredState"/>
							<mapping source="year" dest="year"/>
							<mapping source="person_id" dest="person_id"/>
							<mapping source="memo" dest="memo"/>
							
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="vehicle_conv"/>
					</action>
			
			
				</actions>
			</stage> 
		
			
		<stage num="100" mode="Serial" desc="Transform Warrant" enabled="false">
			<actions>
				
					<action handler="SqlServer.Raw" desc="Creating Sentence" progresslabel="Creating  warrant_conv" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create Person Special Status">
							IF OBJECT_ID('warrant_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[warrant_conv];

				
							</task>
							
							<task handler="SqlServer.Script" desc="Create Person Special Status table">
							<![CDATA[
							
							CREATE TABLE [warrant_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							type VARCHAR(255),
							status VARCHAR(255),
							startDate datetime,
							personId NUMERIC(19,0),
							caseId NUMERIC(19,0),
							caseKy NUMERIC(19,0)
							
						
								);	
							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Warrant">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	
						
							
					--		SELECT 
					--		'BW' as type, 
					--		statusDate,
					--		requestDate = statusDate,
					--		'active' as status,
					--		associatedPerson_id personId,
					--		cc.id as caseId,
					--		caseKy
					--		FROM cnmiStaging.dbo.case_conv cc
					--		INNER JOIN
					--		(SELECT pty.case_id, associatedPerson_id, caseKey caseKy FROM cnmiStaging.dbo.PersonSpecialStatus_conv pss
					--		INNER JOIN cnmiStaging.dbo.party_conv pty
					--		ON person_id = pss.associatedPerson_id
					--		WHERE specialStatusType = 'BW'
					--		GROUP BY associatedPerson_id, pty.case_id, caseKey) t1
					--		ON cc.id = t1.case_id AND associatedPerson_id = cc.person_id
					--		WHERE status = 'BW'
					
							SELECT 
							'BW' as type,
							'BW' as status,
							statusDate as startDate
							status 
							FROM case_conv cc
							WHERE status = 'BW'
			
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="type" dest="type"/>
							<mapping source="requestDate" dest="requestDate"/>
							<mapping source="status" dest="status"/>
							<mapping source="startDate" dest="startDate"/>
							<mapping source="personId" dest="personId"/>
							<mapping source="caseId" dest="caseId"/>
							<mapping source="caseKy" dest="caseKy"/>
							
							
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="warrant_conv"/>
					</action>
			
			
				</actions>
			</stage> 
		
		
		<stage num="300" mode="Serial" desc="Transform Document Folder" enabled="true">
			<actions>
				
					<action handler="SqlServer.Raw" desc="Creating Sentence" progresslabel="Creating  documentfolder_conv" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create Person Special Status">
							IF OBJECT_ID('documentFolder_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[documentFolder_conv];

				
							</task>
							
							<task handler="SqlServer.Script" desc="Create Person Special Status table">
							<![CDATA[
							
							CREATE TABLE [documentFolder_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							[accessLevel] [int] NULL,
							[createUserRealName] [varchar](255) NULL,
							[createUsername] [varchar](255) NULL,
							[dateCreated] [datetime] NULL,
							[lastUpdateUserRealName] [varchar](255) NULL,
							[lastUpdateUsername] [varchar](255) NULL,
							[lastUpdated] [datetime] NULL,
							[memo] [varchar](7500) NULL,
							[name] [varchar](255) NULL,
							[case_id] [numeric](19, 0) NULL,
							[parentFolder_id] [numeric](19, 0) NULL,
							[person_id] [numeric](19, 0) NULL,
							[subCase_id] [numeric](19, 0) NULL,
							[convId] [int] NULL,
							tDocumentFolder_id NUMERIC(19,0),
							personKy NUMERIC(19,0),
							caseKy NUMERIC(19,0),
							docNumber VARCHAR(255)
							
						
								);	
							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform documentFolder">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	
						
							SELECT df.*, p.idKey as personKy FROM ecourt.tDocumentFolder df
							INNER JOIN ${sql.staging.db}.dbo.person_conv p 
							ON df.person_id = p.id
							
			
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="id" dest="id"/>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="name" dest="name"/>
							<mapping source="case_id" dest="case_id"/>
							<mapping source="parentFolder_id" dest="parentFolder_id"/>
							<mapping source="person_id" dest="person_id"/>
							<mapping source="subCase_id" dest="subCase_id"/>
							<mapping source="convId" dest="convId"/>
							<mapping source="personKy" dest="personKy"/>
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="documentFolder_conv"/>
					</action>
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform documentFolder">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	
						
							SELECT df.*, c.idKey as caseKy FROM ecourt.tDocumentFolder df
							INNER JOIN ${sql.staging.db}.dbo.case_conv c 
							ON df.case_id = c.id
			
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="id" dest="id"/>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="name" dest="name"/>
							<mapping source="case_id" dest="case_id"/>
							<mapping source="parentFolder_id" dest="parentFolder_id"/>
							<mapping source="person_id" dest="person_id"/>
							<mapping source="subCase_id" dest="subCase_id"/>
							<mapping source="convId" dest="convId"/>
							<mapping source="caseKy" dest="caseKy"/>
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="documentFolder_conv"/>
					</action>
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform documentFolder">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	
						
							SELECT df.* FROM ecourt.tDocumentFolder df
							WHERE case_id IS NULL AND person_id IS NULL
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="id" dest="id"/>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="name" dest="name"/>
							<mapping source="case_id" dest="case_id"/>
							<mapping source="parentFolder_id" dest="parentFolder_id"/>
							<mapping source="person_id" dest="person_id"/>
							<mapping source="subCase_id" dest="subCase_id"/>
							<mapping source="convId" dest="convId"/>
						
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="documentFolder_conv"/>
					</action>
			
			
				</actions>
			</stage> 
		
			
		<stage num="302" mode="Serial" desc="Transform Document" enabled="true">
			<actions>
				
					<action handler="SqlServer.Raw" desc="Creating Sentence" progresslabel="Creating  document" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create Person Special Status">
							IF OBJECT_ID('document_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[document_conv];

				
							</task>
							
							<task handler="SqlServer.Script" desc="Create Person Special Status table">
							<![CDATA[
							
							CREATE TABLE [document_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							[accessLevel] [int] NULL,
							[createUserRealName] [varchar](255) NULL,
							[createUsername] [varchar](255) NULL,
							[dateCreated] [datetime] NULL,
							[lastUpdateUserRealName] [varchar](255) NULL,
							[lastUpdateUsername] [varchar](255) NULL,
							[lastUpdated] [datetime] NULL,
							[memo] [varchar](512) NULL,
							[optlock] [int] NOT NULL,
							[roaAccessLevel] [int] NULL,
							[sourceCaseNumber] [varchar](255) NULL,
							[updateReason] [varchar](255) NULL,
							[attachmentMethod] [varchar](255) NULL,
							[batch] [varchar](255) NULL,
							[batchSource] [varchar](255) NULL,
							[customDocPropsStatus] [int] NULL,
							[dateFiled] [datetime] NULL,
							[dateReceived] [datetime] NULL,
							[dispositionDate] [datetime] NULL,
							[dispositionType] [varchar](255) NULL,
							[effectiveStatus] [varchar](255) NULL,
							[effectiveStatusDate] [datetime] NULL,
							[exParte] [tinyint] NULL,
							[favorite] [tinyint] NULL,
							[filedByMethod] [varchar](255) NULL,
							[filedByName] [varchar](255) NULL,
							[filedByText] [varchar](255) NULL,
							[filedByType] [varchar](255) NULL,
							[indexPublishFailedCount] [int] NULL,
							[indexPublishFailedError] [varchar](255) NULL,
							[indexPublished] [datetime] NULL,
							[intendedToAmend] [tinyint] NULL,
							[mailingDate] [datetime] NULL,
							[nameExact] [varchar](255) NULL,
							[nameExtension] [varchar](255) NULL,
							[numberOfPages] [int] NULL,
							[numberOfUnits] [float] NULL,
							[numberOfVolumes] [int] NULL,
							[onDemand] [tinyint] NULL,
							[originalFileName] [varchar](255) NULL,
							[partNumber] [int] NULL,
							[reason] [text] NULL,
							[redactedOn] [datetime] NULL,
							[referenceDocId] [numeric](19, 0) NULL,
							[refersToText] [varchar](255) NULL,
							[relatedHearingText] [varchar](255) NULL,
							[relatedToText] [varchar](255) NULL,
							[reportCode] [varchar](255) NULL,
							[requiresService] [varchar](255) NULL,
							[reservationReceiptNumber] [varchar](255) NULL,
							[reviewStatus] [varchar](255) NULL,
							[reviewStatusDate] [datetime] NULL,
							[scanId] [varchar](255) NULL,
							[searchable] [tinyint] NULL,
							[serviceCost] [float] NULL,
							[serviceDue] [datetime] NULL,
							[serviceStatus] [varchar](255) NULL,
							[serviceStatusDate] [datetime] NULL,
							[serviceType] [varchar](255) NULL,
							[signedByName] [varchar](255) NULL,
							[status] [varchar](255) NULL,
							[statusDate] [datetime] NULL,
							[storageId] [varchar](255) NULL,
							[storageMimeType] [varchar](255) NULL,
							[storagePageCount] [int] NULL,
							[storageRev] [int] NULL,
							[storageSize] [numeric](19, 0) NULL,
							[storageStatus] [varchar](255) NULL,
							[storageType] [varchar](255) NULL,
							[task] [varchar](255) NULL,
							[type] [varchar](255) NULL,
							[unitType] [varchar](255) NULL,
							[untimely] [tinyint] NULL,
							[wordPropsError] [varchar](255) NULL,
							[workQueueStatus] [varchar](8) NULL,
							[case_id] [numeric](19, 0) NOT NULL,
							[docDef_id] [numeric](19, 0) NOT NULL,
							[documentEFilingData_id] [numeric](19, 0) NULL,
							[exhibit_id] [numeric](19, 0) NULL,
							[feeWaiver_id] [numeric](19, 0) NULL,
							[folder_id] [numeric](19, 0) NULL,
							[subCase_id] [numeric](19, 0) NULL,
							[submission_id] [numeric](19, 0) NULL,
							[convId] [int] NULL,
							[amount1] [float] NULL,
							[amount2] [float] NULL,
							[category] [varchar](255) NULL,
							[location] [varchar](255) NULL,
							[notes] [varchar](7500) NULL,
							[priority] [varchar](255) NULL,
							[availableOnline] [tinyint] NULL,
							[joinStatus] [int] NULL,
							[reminder] [tinyint] NULL,
							[expirationDate] [datetime] NULL,
							[submissionDate] [datetime] NULL,
							[submissionMethod] [varchar](255) NULL,
							[printEndorsementChecked] [tinyint] NULL,
							[externalReferenceId] [varchar](255) NULL,
							documentFolderKy NUMERIC(19,0),
							tDocument_id NUMERIC(19,0),
							caseKey NUMERIC(19,0),
							docNumber VARCHAR(255)
						
							
						
								);	
							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform document">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	
						
							SELECT d.*, COALESCE(d.dateFiled, d.dateCreated, GETDATE()) as dateFiled_ld,
							REPLACE(REPLACE(Justware.dbo.GetFilePath(d.ConvId), '\\sqldb', 'LegacyDocs'), '\', '/')  as storageId_load,
							cc.idKey as caseKey,
							docNumber = ddf.number
							FROM ecourt.tDocument d 
							LEFT JOIN ${sql.staging.db}.dbo.case_conv cc
							ON d.case_id = cc.id
							LEFT JOIN ecourt.tDocDef ddf
							ON d.docDef_id = ddf.id
			
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="id" dest="id"/>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="optlock" dest="optlock"/>
							<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
							<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
							<mapping source="updateReason" dest="updateReason"/>
							<mapping source="attachmentMethod" dest="attachmentMethod"/>
							<mapping source="batch" dest="batch"/>
							<mapping source="batchSource" dest="batchSource"/>
							<mapping source="customDocPropsStatus" dest="customDocPropsStatus"/>
							<mapping source="dateFiled_ld" dest="dateFiled"/>
							<mapping source="dateReceived" dest="dateReceived"/>
							<mapping source="dispositionDate" dest="dispositionDate"/>
							<mapping source="dispositionType" dest="dispositionType"/>
							<mapping source="effectiveStatus" dest="effectiveStatus"/>
							<mapping source="effectiveStatusDate" dest="effectiveStatusDate"/>
							<mapping source="exParte" dest="exParte"/>
							<mapping source="favorite" dest="favorite"/>
							<mapping source="filedByMethod" dest="filedByMethod"/>
							<mapping source="filedByName" dest="filedByName"/>
							<mapping source="filedByText" dest="filedByText"/>
							<mapping source="filedByType" dest="filedByType"/>
							<mapping source="indexPublishFailedCount" dest="indexPublishFailedCount"/>
							<mapping source="indexPublishFailedError" dest="indexPublishFailedError"/>
							<mapping source="indexPublished" dest="indexPublished"/>
							<mapping source="intendedToAmend" dest="intendedToAmend"/>
							<mapping source="mailingDate" dest="mailingDate"/>
							<mapping source="nameExact" dest="nameExact"/>
							<mapping source="nameExtension" dest="nameExtension"/>
							<mapping source="numberOfPages" dest="numberOfPages"/>
							<mapping source="numberOfUnits" dest="numberOfUnits"/>
							<mapping source="numberOfVolumes" dest="numberOfVolumes"/>
							<mapping source="onDemand" dest="onDemand"/>
							<mapping source="originalFileName" dest="originalFileName"/>
							<mapping source="partNumber" dest="partNumber"/>
							<mapping source="reason" dest="reason"/>
							<mapping source="redactedOn" dest="redactedOn"/>
							<mapping source="referenceDocId" dest="referenceDocId"/>
							<mapping source="refersToText" dest="refersToText"/>
							<mapping source="relatedHearingText" dest="relatedHearingText"/>
							<mapping source="relatedToText" dest="relatedToText"/>
							<mapping source="reportCode" dest="reportCode"/>
							<mapping source="requiresService" dest="requiresService"/>
							<mapping source="reservationReceiptNumber" dest="reservationReceiptNumber"/>
							<mapping source="reviewStatus" dest="reviewStatus"/>
							<mapping source="reviewStatusDate" dest="reviewStatusDate"/>
							<mapping source="scanId" dest="scanId"/>
							<mapping source="searchable" dest="searchable"/>
							<mapping source="serviceCost" dest="serviceCost"/>
							<mapping source="serviceDue" dest="serviceDue"/>
							<mapping source="serviceStatus" dest="serviceStatus"/>
							<mapping source="serviceStatusDate" dest="serviceStatusDate"/>
							<mapping source="serviceType" dest="serviceType"/>
							<mapping source="signedByName" dest="signedByName"/>
							<mapping source="status" dest="status"/>
							<mapping source="statusDate" dest="statusDate"/>
							<mapping source="storageId_load" dest="storageId"/>
							<mapping source="storageMimeType" dest="storageMimeType"/>
							<mapping source="storagePageCount" dest="storagePageCount"/>
							<mapping source="storageRev" dest="storageRev"/>
							<mapping source="storageSize" dest="storageSize"/>
							<mapping source="storageStatus" dest="storageStatus"/>
							<mapping source="storageType" dest="storageType"/>
							<mapping source="task" dest="task"/>
							<mapping source="type" dest="type"/>
							<mapping source="unitType" dest="unitType"/>
							<mapping source="untimely" dest="untimely"/>
							<mapping source="wordPropsError" dest="wordPropsError"/>
							<mapping source="workQueueStatus" dest="workQueueStatus"/>
							<mapping source="case_id" dest="case_id"/>
							<mapping source="docDef_id" dest="docDef_id"/>
							<mapping source="documentEFilingData_id" dest="documentEFilingData_id"/>
							<mapping source="exhibit_id" dest="exhibit_id"/>
							<mapping source="feeWaiver_id" dest="feeWaiver_id"/>
							<mapping source="folder_id" dest="folder_id"/>
							<mapping source="subCase_id" dest="subCase_id"/>
							<mapping source="submission_id" dest="submission_id"/>
							<mapping source="convId" dest="convId"/>
							<mapping source="amount1" dest="amount1"/>
							<mapping source="amount2" dest="amount2"/>
							<mapping source="category" dest="category"/>
							<mapping source="location" dest="location"/>
							<mapping source="notes" dest="notes"/>
							<mapping source="priority" dest="priority"/>
							<mapping source="availableOnline" dest="availableOnline"/>
							<mapping source="joinStatus" dest="joinStatus"/>
							<mapping source="reminder" dest="reminder"/>
							<mapping source="expirationDate" dest="expirationDate"/>
							<mapping source="submissionDate" dest="submissionDate"/>
							<mapping source="submissionMethod" dest="submissionMethod"/>
							<mapping source="printEndorsementChecked" dest="printEndorsementChecked"/>
							<mapping source="externalReferenceId" dest="externalReferenceId"/>
							<mapping source="caseKey" dest="caseKey"/>
							<mapping source="docNumber" dest="docNumber"/>
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="document_conv"/>
					</action>
			
			
				</actions>
			</stage> 
		
	
		<stage num="304" mode="Serial" desc="Transform Document - Person" enabled="true">
			<actions>
				
					<action handler="SqlServer.Raw" desc="Creating Sentence" progresslabel="Creating  document" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create Person Special Status">
							IF OBJECT_ID('documentPerson_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[documentPerson_conv];

				
							</task>
							
							<task handler="SqlServer.Script" desc="Create Person Document table">
							<![CDATA[
							
							CREATE TABLE [documentPerson_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							[accessLevel] [int] NULL,
							[createUserRealName] [varchar](255) NULL,
							[createUsername] [varchar](255) NULL,
							[dateCreated] [datetime] NULL,
							[lastUpdateUserRealName] [varchar](255) NULL,
							[lastUpdateUsername] [varchar](255) NULL,
							[lastUpdated] [datetime] NULL,
							[memo] [varchar](512) NULL,
							[optlock] [int] NOT NULL,
							[roaAccessLevel] [int] NULL,
							[sourceCaseNumber] [varchar](255) NULL,
							[updateReason] [varchar](255) NULL,
							[attachmentMethod] [varchar](255) NULL,
							[dateFiled] [datetime] NULL,
							[dateReceived] [datetime] NULL,
							[filedByType] [varchar](255) NULL,
							[intendedToAmend] [tinyint] NULL,
							[mailingDate] [datetime] NULL,
							[nameExact] [varchar](255) NULL,
							[nameExtension] [varchar](255) NULL,
							[originalFileName] [varchar](255) NULL,
							[scanId] [varchar](255) NULL,
							[serviceType] [varchar](255) NULL,
							[status] [varchar](255) NULL,
							[statusDate] [datetime] NULL,
							[storageId] [varchar](255) NULL,
							[storageMimeType] [varchar](255) NULL,
							[storageRev] [int] NULL,
							[storageSize] [numeric](19, 0) NULL,
							[storageStatus] [varchar](255) NULL,
							[storageType] [varchar](255) NULL,
							[type] [varchar](255) NULL,
							[docDef_id] [numeric](19, 0) NOT NULL,
							[folder_id] [numeric](19, 0) NULL,
							[person_id] [numeric](19, 0) NOT NULL,
							[category] [varchar](255) NULL,
							[notes] [varchar](7500) NULL,
							[convId] [int] NULL,
							[amount1] [float] NULL,
							[amount2] [float] NULL,
							[location] [varchar](255) NULL,
							[priority] [varchar](255) NULL,
							[sealed] [tinyint] NULL,
							[customDocPropsStatus] [int] NULL,
							[redactedOn] [datetime] NULL,
							personKy NUMERIC(19,0),
							docNumber VARCHAR(255)
						
								);	
							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform person document">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	
						
							SELECT pd.*, COALESCE(pd.dateFiled, pd.dateCreated, GETDATE()) as dateFiled_ld,
							REPLACE(REPLACE(Justware.dbo.GetFilePath(pd.ConvId), '\\sqldb', 'LegacyDocs'), '\', '/')  as storageId_load,
							docNumber = number
							FROM ecourt.tPersonDocument pd 
							LEFT JOIN ecourt.tDocDef ddf
							ON pd.docDef_id = ddf.id
							
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="optlock" dest="optlock"/>
							<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
							<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
							<mapping source="updateReason" dest="updateReason"/>
							<mapping source="attachmentMethod" dest="attachmentMethod"/>
							<mapping source="dateFiled_ld" dest="dateFiled"/>
							<mapping source="dateReceived" dest="dateReceived"/>
							<mapping source="filedByType" dest="filedByType"/>
							<mapping source="intendedToAmend" dest="intendedToAmend"/>
							<mapping source="mailingDate" dest="mailingDate"/>
							<mapping source="nameExact" dest="nameExact"/>
							<mapping source="nameExtension" dest="nameExtension"/>
							<mapping source="originalFileName" dest="originalFileName"/>
							<mapping source="scanId" dest="scanId"/>
							<mapping source="serviceType" dest="serviceType"/>
							<mapping source="status" dest="status"/>
							<mapping source="statusDate" dest="statusDate"/>
							<mapping source="storageId_load" dest="storageId"/>
							<mapping source="storageMimeType" dest="storageMimeType"/>
							<mapping source="storageRev" dest="storageRev"/>
							<mapping source="storageSize" dest="storageSize"/>
							<mapping source="storageStatus" dest="storageStatus"/>
							<mapping source="storageType" dest="storageType"/>
							<mapping source="type" dest="type"/>
							<mapping source="docDef_id" dest="docDef_id"/>
							<mapping source="folder_id" dest="folder_id"/>
							<mapping source="person_id" dest="person_id"/>
							<mapping source="category" dest="category"/>
							<mapping source="notes" dest="notes"/>
							<mapping source="convId" dest="convId"/>
							<mapping source="amount1" dest="amount1"/>
							<mapping source="amount2" dest="amount2"/>
							<mapping source="location" dest="location"/>
							<mapping source="priority" dest="priority"/>
							<mapping source="sealed" dest="sealed"/>
							<mapping source="customDocPropsStatus" dest="customDocPropsStatus"/>
							<mapping source="redactedOn" dest="redactedOn"/>
							<mapping source="docNumber" dest="docNumber"/>
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="documentPerson_conv"/>
					</action>
			
						<action handler="SqlServer.Raw" desc="Creating Sentence" progresslabel="Creating  document" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create Person Document table">
							<![CDATA[
							UPDATE documentPerson_conv 
							SET storageId = REPLACE(storageId, '//DISTCOURTAPPS/JustWareFilingCabinet/', 'LegacyDocs');
							
							UPDATE document_conv 
							SET storageId = REPLACE(storageId, '//DISTCOURTAPPS/JustWareFilingCabinet/', 'LegacyDocs/');
							
							
							]]>
							
							</task>
						</source>
					</action>
			
				</actions>
			</stage> 
		
		
		<stage num="306" mode="Serial" desc="Transform Person Image" enabled="true">
			<actions>
				
					<action handler="SqlServer.Raw" desc="Creating Sentence" progresslabel="Creating  personImage_conv" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create personImage_conv">
							IF OBJECT_ID('personImage_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[personImage_conv];

				
							</task>
							
							<task handler="SqlServer.Script" desc="CreatepersonImage_conv  table">
							<![CDATA[
							
							CREATE TABLE [personImage_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							[accessLevel] [int] NULL,
							[createUserRealName] [varchar](255) NULL,
							[createUsername] [varchar](255) NULL,
							[dateCreated] [datetime] NULL,
							[lastUpdateUserRealName] [varchar](255) NULL,
							[lastUpdateUsername] [varchar](255) NULL,
							[lastUpdated] [datetime] NULL,
							[memo] [varchar](7500) NULL,
							[optlock] [int] NOT NULL,
							[roaAccessLevel] [int] NULL,
							[sourceCaseNumber] [varchar](255) NULL,
							[updateReason] [varchar](255) NULL,
							[dateTaken] [datetime] NULL,
							[description] [varchar](255) NULL,
							[image] [image] NULL,
							[imageFileName] [varchar](255) NULL,
							[source] [varchar](255) NULL,
							[type] [varchar](255) NULL,
							[associatedPerson_id] [numeric](19, 0) NOT NULL,
							[convId] [int] NULL
						
								);	
							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform personImage_conv">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	
						
							SELECT * FROM ecourt.tPersonImage
			
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="id" dest="id"/>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="optlock" dest="optlock"/>
							<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
							<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
							<mapping source="updateReason" dest="updateReason"/>
							<mapping source="dateTaken" dest="dateTaken"/>
							<mapping source="description" dest="description"/>
							<mapping source="image" dest="image"/>
							<mapping source="imageFileName" dest="imageFileName"/>
							<mapping source="source" dest="source"/>
							<mapping source="type" dest="type"/>
							<mapping source="associatedPerson_id" dest="associatedPerson_id"/>
							<mapping source="convId" dest="convId"/>
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="personImage_conv"/>
					</action>
			
			
				</actions>
			</stage> 
		
			
		<stage num="308" mode="Serial" desc="Transform Person Document" enabled="false">
			<actions>
				
					<action handler="SqlServer.Raw" desc="Creating personDocument_conv" progresslabel="Creating  personDocument_conv" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create personDocument_conv">
							IF OBJECT_ID('personDocument_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[personDocument_conv];

				
							</task>
							
							<task handler="SqlServer.Script" desc="Create personDocument_conv  table">
							<![CDATA[
							
							CREATE TABLE [personDocument_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							[accessLevel] [int] NULL,
							[createUserRealName] [varchar](255) NULL,
							[createUsername] [varchar](255) NULL,
							[dateCreated] [datetime] NULL,
							[lastUpdateUserRealName] [varchar](255) NULL,
							[lastUpdateUsername] [varchar](255) NULL,
							[lastUpdated] [datetime] NULL,
							[memo] [varchar](512) NULL,
							[optlock] [int] NOT NULL,
							[roaAccessLevel] [int] NULL,
							[sourceCaseNumber] [varchar](255) NULL,
							[updateReason] [varchar](255) NULL,
							[attachmentMethod] [varchar](255) NULL,
							[dateFiled] [datetime] NULL,
							[dateReceived] [datetime] NULL,
							[filedByType] [varchar](255) NULL,
							[intendedToAmend] [tinyint] NULL,
							[mailingDate] [datetime] NULL,
							[nameExact] [varchar](255) NULL,
							[nameExtension] [varchar](255) NULL,
							[originalFileName] [varchar](255) NULL,
							[scanId] [varchar](255) NULL,
							[serviceType] [varchar](255) NULL,
							[status] [varchar](255) NULL,
							[statusDate] [datetime] NULL,
							[storageId] [varchar](255) NULL,
							[storageMimeType] [varchar](255) NULL,
							[storageRev] [int] NULL,
							[storageSize] [numeric](19, 0) NULL,
							[storageStatus] [varchar](255) NULL,
							[storageType] [varchar](255) NULL,
							[type] [varchar](255) NULL,
							[docDef_id] [numeric](19, 0) NOT NULL,
							[folder_id] [numeric](19, 0) NULL,
							[person_id] [numeric](19, 0) NOT NULL,
							[category] [varchar](255) NULL,
							[notes] [varchar](7500) NULL,
							[convId] [int] NULL,
							[amount1] [float] NULL,
							[amount2] [float] NULL,
							[location] [varchar](255) NULL,
							[priority] [varchar](255) NULL,
							[sealed] [tinyint] NULL,
							[customDocPropsStatus] [int] NULL,
							[redactedOn] [datetime] NULL,
							tPersonDocument_id NUMERIC(19,0)
								);	
							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform personImage_conv">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	
						
							SELECT * FROM ecourt.tPersonDocument
			
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="id" dest="id"/>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="optlock" dest="optlock"/>
							<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
							<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
							<mapping source="updateReason" dest="updateReason"/>
							<mapping source="attachmentMethod" dest="attachmentMethod"/>
							<mapping source="dateFiled" dest="dateFiled"/>
							<mapping source="dateReceived" dest="dateReceived"/>
							<mapping source="filedByType" dest="filedByType"/>
							<mapping source="intendedToAmend" dest="intendedToAmend"/>
							<mapping source="mailingDate" dest="mailingDate"/>
							<mapping source="nameExact" dest="nameExact"/>
							<mapping source="nameExtension" dest="nameExtension"/>
							<mapping source="originalFileName" dest="originalFileName"/>
							<mapping source="scanId" dest="scanId"/>
							<mapping source="serviceType" dest="serviceType"/>
							<mapping source="status" dest="status"/>
							<mapping source="statusDate" dest="statusDate"/>
							<mapping source="storageId" dest="storageId"/>
							<mapping source="storageMimeType" dest="storageMimeType"/>
							<mapping source="storageRev" dest="storageRev"/>
							<mapping source="storageSize" dest="storageSize"/>
							<mapping source="storageStatus" dest="storageStatus"/>
							<mapping source="storageType" dest="storageType"/>
							<mapping source="type" dest="type"/>
							<mapping source="docDef_id" dest="docDef_id"/>
							<mapping source="folder_id" dest="folder_id"/>
							<mapping source="person_id" dest="person_id"/>
							<mapping source="category" dest="category"/>
							<mapping source="notes" dest="notes"/>
							<mapping source="convId" dest="convId"/>
							<mapping source="amount1" dest="amount1"/>
							<mapping source="amount2" dest="amount2"/>
							<mapping source="location" dest="location"/>
							<mapping source="priority" dest="priority"/>
							<mapping source="sealed" dest="sealed"/>
							<mapping source="customDocPropsStatus" dest="customDocPropsStatus"/>
							<mapping source="redactedOn" dest="redactedOn"/>
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="personDocument_conv"/>
					</action>
			
			
				</actions>
			</stage> 
		
		<stage num="400" mode="Serial" desc="Transform tblAccount" enabled="true">
			<actions>
				
					<action handler="SqlServer.Raw" desc="Creating tblAccount_conv" progresslabel="Creating  tblAccount_conv" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create personImage_conv">
							IF OBJECT_ID('tblAccount_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[tblAccount_conv];

				
							</task>
							
							<task handler="SqlServer.Script" desc="Create tblAccount_conv  table">
							<![CDATA[
							
							CREATE TABLE [tblAccount_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							[accessLevel] [int] NULL,
							[createUserRealName] [varchar](255) NULL,
							[createUsername] [varchar](255) NULL,
							[dateCreated] [datetime] NULL,
							[lastUpdateUserRealName] [varchar](255) NULL,
							[lastUpdateUsername] [varchar](255) NULL,
							[lastUpdated] [datetime] NULL,
							[memo] [varchar](512) NULL,
							[balance] [float] NULL,
							[masterCodeAccountType] [int] NULL,
							[name] [varchar](500) NULL,
							[number] [varchar](255) NULL,
							[status] [varchar](255) NULL,
							[type] [varchar](255) NULL,
							[dirOrgUnit_id] [numeric](19, 0) NULL,
							[convId] [int] NULL,
							[dirPerson_id] [numeric](19, 0) NULL,
							[person_id] [numeric](19, 0) NULL,
							tAccount_id NUMERIC(19,0)
						
								);	
							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform tblAccount_conv">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	
						
							SELECT * FROM ecourt.tTblAccount ta
			
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="id" dest="id"/>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="balance" dest="balance"/>
							<mapping source="masterCodeAccountType" dest="masterCodeAccountType"/>
							<mapping source="name" dest="name"/>
							<mapping source="number" dest="number"/>
							<mapping source="status" dest="status"/>
							<mapping source="type" dest="type"/>
							<mapping source="dirOrgUnit_id" dest="dirOrgUnit_id"/>
							<mapping source="convId" dest="convId"/>
							<mapping source="dirPerson_id" dest="dirPerson_id"/>
							<mapping source="person_id" dest="person_id"/>
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="tblAccount_conv"/>
					</action>
			
			
				</actions>
			</stage> 
		
		<stage num="402" mode="Serial" desc="Transform tblObligation" enabled="true">
			<actions>
				
					<action handler="SqlServer.Raw" desc="Creating tblObligation_conv" progresslabel="Creating  tblObligation_conv" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create personImage_conv">
							IF OBJECT_ID('tblObligation_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[tblObligation_conv];

				
							</task>
							
							<task handler="SqlServer.Script" desc="Create tTblObligation  table">
							<![CDATA[
							
							CREATE TABLE [tblObligation_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							[accessLevel] [int] NULL,
							[createUserRealName] [varchar](255) NULL,
							[createUsername] [varchar](255) NULL,
							[dateCreated] [datetime] NULL,
							[lastUpdateUserRealName] [varchar](255) NULL,
							[lastUpdateUsername] [varchar](255) NULL,
							[lastUpdated] [datetime] NULL,
							[memo] [varchar](512) NULL,
							[accountNumber] [varchar](255) NULL,
							[adjustedAmount] [float] NULL,
							[amount] [float] NULL,
							[bank] [int] NULL,
							[dateDue] [datetime] NULL,
							[dateReceived] [datetime] NULL,
							[dateWritten] [datetime] NULL,
							[fromAccountEntryType] [varchar](255) NULL,
							[isJointAndSeveral] [tinyint] NULL,
							[notes] [varchar](7500) NULL,
							[referenceNumber] [varchar](255) NULL,
							[routingNumber] [varchar](255) NULL,
							[toAccountEntryType] [varchar](255) NULL,
							[type] [varchar](255) NULL,
							[unallocAmount] [float] NULL,
							[case_id] [numeric](19, 0) NULL,
							[dirOrgUnit_id] [numeric](19, 0) NULL,
							[fromAccount_id] [numeric](19, 0) NULL,
							[payee_id] [numeric](19, 0) NULL,
							[toAccount_id] [numeric](19, 0) NULL,
							[convId] [int] NULL,
							tObligation_id NUMERIC(19,0)
												
								);	
							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform tblObligation">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	
						
							SELECT * FROM ecourt.tTblObligation tobl
			
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="id" dest="id"/>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="accountNumber" dest="accountNumber"/>
							<mapping source="adjustedAmount" dest="adjustedAmount"/>
							<mapping source="amount" dest="amount"/>
							<mapping source="bank" dest="bank"/>
							<mapping source="dateDue" dest="dateDue"/>
							<mapping source="dateReceived" dest="dateReceived"/>
							<mapping source="dateWritten" dest="dateWritten"/>
							<mapping source="fromAccountEntryType" dest="fromAccountEntryType"/>
							<mapping source="isJointAndSeveral" dest="isJointAndSeveral"/>
							<mapping source="notes" dest="notes"/>
							<mapping source="referenceNumber" dest="referenceNumber"/>
							<mapping source="routingNumber" dest="routingNumber"/>
							<mapping source="toAccountEntryType" dest="toAccountEntryType"/>
							<mapping source="type" dest="type"/>
							<mapping source="unallocAmount" dest="unallocAmount"/>
							<mapping source="case_id" dest="case_id"/>
							<mapping source="dirOrgUnity_id" dest="dirOrgUnit_id"/>
							<mapping source="fromAccount_id" dest="fromAccount_id"/>
							<mapping source="payee_id" dest="payee_id"/>
							<mapping source="toAccount_id" dest="toAccount_id"/>
							<mapping source="convId" dest="convId"/>
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="tblObligation_conv"/>
					</action>
			
			
				</actions>
			</stage> 
		
		<stage num="404" mode="Serial" desc="Transform tblPayment" enabled="true">
			<actions>
				
					<action handler="SqlServer.Raw" desc="Creating tblPayment_conv" progresslabel="Creating  tblPayment_conv" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create tblPayment_conv">
							IF OBJECT_ID('tblPayment_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[tblPayment_conv];

				
							</task>
							
							<task handler="SqlServer.Script" desc="Create tblPayment_conv  table">
							<![CDATA[
							
							CREATE TABLE [tblPayment_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							[accessLevel] [int] NULL,
							[createUserRealName] [varchar](255) NULL,
							[createUsername] [varchar](255) NULL,
							[dateCreated] [datetime] NULL,
							[lastUpdateUserRealName] [varchar](255) NULL,
							[lastUpdateUsername] [varchar](255) NULL,
							[lastUpdated] [datetime] NULL,
							[memo] [varchar](512) NULL,
							[amount] [float] NULL,
							[checkCount] [int] NULL,
							[dateReceived] [datetime] NULL,
							[notes] [varchar](7500) NULL,
							[receiptNumber] [varchar](255) NULL,
							[referenceNumber] [varchar](255) NULL,
							[status] [varchar](255) NULL,
							[type] [varchar](255) NULL,
							[payer_id] [numeric](19, 0) NULL,
							[person_id] [numeric](19, 0) NULL,
							[receivedBy_id] [numeric](19, 0) NULL,
							[convId] [int] NULL,
							[deposit_id] [numeric](19, 0) NULL,
							[dirOrgUnit_id] [numeric](19, 0) NULL,
							tPayment_id NUMERIC(19,0)					
								);	
							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform tblPayment">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	
						
							SELECT * FROM ecourt.tTblPayment  py
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="id" dest="id"/>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="amount" dest="amount"/>
							<mapping source="checkCount" dest="checkCount"/>
							<mapping source="dateReceived" dest="dateReceived"/>
							<mapping source="notes" dest="notes"/>
							<mapping source="receiptNumber" dest="receiptNumber"/>
							<mapping source="referenceNumber" dest="referenceNumber"/>
							<mapping source="status" dest="status"/>
							<mapping source="type" dest="type"/>
							<mapping source="payer_id" dest="payer_id"/>
							<mapping source="person_id" dest="person_id"/>
							<mapping source="receivedBy_id" dest="receivedBy_id"/>
							<mapping source="convId" dest="convId"/>
							<mapping source="deposit_id" dest="deposit_id"/>
							<mapping source="dirOrgUnit_id" dest="dirOrgUnit_id"/>
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="tblPayment_conv"/>
					</action>
			
			
				</actions>
			</stage> 
		
		<stage num="406" mode="Serial" desc="Transform tblTransfer" enabled="true">
			<actions>
				
					<action handler="SqlServer.Raw" desc="Creating tblPayment_conv" progresslabel="Creating  tblTransfer_conv" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create tblTransfer_conv">
							IF OBJECT_ID('tblTransfer_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[tblTransfer_conv];

				
							</task>
							
							<task handler="SqlServer.Script" desc="Create tblTransfer_conv  table">
							<![CDATA[
							
							CREATE TABLE [tblTransfer_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							[accessLevel] [int] NULL,
							[createUserRealName] [varchar](255) NULL,
							[createUsername] [varchar](255) NULL,
							[dateCreated] [datetime] NULL,
							[lastUpdateUserRealName] [varchar](255) NULL,
							[lastUpdateUsername] [varchar](255) NULL,
							[lastUpdated] [datetime] NULL,
							[memo] [varchar](7500) NULL,
							[amount] [float] NULL,
							[codeTypePaymentType] [int] NULL,
							[fromAccountEntryType] [varchar](255) NULL,
							[masterCodePaymentStatus] [int] NULL,
							[notes] [varchar](7500) NULL,
							[payerPayment] [int] NULL,
							[psAmtDueOld] [float] NULL,
							[psDueDateNew] [datetime] NULL,
							[psDueDateOld] [datetime] NULL,
							[toAccountEntryType] [varchar](255) NULL,
							[type] [varchar](255) NULL,
							[void] [tinyint] NULL,
							[bond_id] [numeric](19, 0) NULL,
							[case_id] [numeric](19, 0) NULL,
							[fromAccount_id] [numeric](19, 0) NULL,
							[nonCasePayment_id] [numeric](19, 0) NULL,
							[obligation_id] [numeric](19, 0) NULL,
							[payment_id] [numeric](19, 0) NULL,
							[paymentSchedule_id] [numeric](19, 0) NULL,
							[toAccount_id] [numeric](19, 0) NULL,
							[voucher_id] [numeric](19, 0) NULL,
							[convId] [int] NULL,				
								);	
							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform tblTransfer_conv">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	
						
							SELECT * FROM ecourt.tTblTransfer  tt
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="id" dest="id"/>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="amount" dest="amount"/>
							<mapping source="codeTypePaymentType" dest="codeTypePaymentType"/>
							<mapping source="fromAccountEntryType" dest="fromAccountEntryType"/>
							<mapping source="masterCodePaymentStatus" dest="masterCodePaymentStatus"/>
							<mapping source="notes" dest="notes"/>
							<mapping source="payerPayment" dest="payerPayment"/>
							<mapping source="psAmtDueOld" dest="psAmtDueOld"/>
							<mapping source="psDueDateNew" dest="psDueDateNew"/>
							<mapping source="psDueDateOld" dest="psDueDateOld"/>
							<mapping source="toAccountEntryType" dest="toAccountEntryType"/>
							<mapping source="type" dest="type"/>
							<mapping source="void" dest="void"/>
							<mapping source="bond_id" dest="bond_id"/>
							<mapping source="case_id" dest="case_id"/>
							<mapping source="fromAccount_id" dest="fromAccount_id"/>
							<mapping source="nonCasePayment_id" dest="nonCasePayment_id"/>
							<mapping source="obligation_id" dest="obligation_id"/>
							<mapping source="payment_id" dest="payment_id"/>
							<mapping source="paymentSchedule_id" dest="paymentSchedule_id"/>
							<mapping source="toAccount_id" dest="toAccount_id"/>
							<mapping source="voucher_id" dest="voucher_id"/>
							<mapping source="convId" dest="convId"/>
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="tblTransfer_conv"/>
					</action>
			
			
				</actions>
			</stage> 
		
		<stage num="408" mode="Serial" desc="Transform tblPaymentSchedule" enabled="true">
			<actions>
				
				<action handler="SqlServer.Raw" desc="Creating tblPaymentSchedule" progresslabel="Creating  tblPaymentSchedule" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create tblPaymentSchedule_conv">
							IF OBJECT_ID('tblPaymentSchedule_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[tblPaymentSchedule_conv];

				
							</task>
							
							<task handler="SqlServer.Script" desc="Create tblPaymentSchedule_conv  table">
							<![CDATA[
							
							CREATE TABLE [tblPaymentSchedule_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							[accessLevel] [int] NULL,
							[createUserRealName] [varchar](255) NULL,
							[createUsername] [varchar](255) NULL,
							[dateCreated] [datetime] NULL,
							[lastUpdateUserRealName] [varchar](255) NULL,
							[lastUpdateUsername] [varchar](255) NULL,
							[lastUpdated] [datetime] NULL,
							[memo] [varchar](512) NULL,
							[amount] [float] NULL,
							[day1] [int] NULL,
							[day2] [int] NULL,
							[dayOfWeek] [int] NULL,
							[dayOfWeek2] [int] NULL,
							[description] [varchar](255) NULL,
							[endDt] [datetime] NULL,
							[endType] [int] NULL,
							[nextPaymentAmount] [float] NULL,
							[nextPaymentDate] [datetime] NULL,
							[numPayments] [int] NULL,
							[origScheduleDesc] [varchar](2000) NULL,
							[priority] [int] NULL,
							[scheduleType] [int] NULL,
							[startDate] [datetime] NULL,
							[subType] [int] NULL,
							[dirOrgUnit_id] [numeric](19, 0) NULL,
							[person_id] [numeric](19, 0) NULL,
							[convId] [int] NULL,
							[amountDue] [float] NULL,
							[expectedFinalPaymentDt] [datetime] NULL,
							[expectedFinalPaymentDtAsDate] [datetime] NULL,
							[outstandingBalance] [float] NULL,
							[scheduleDescription] [varchar](2000) NULL,
							tPaymentSchedule_id NUMERIC(19,0)
								);	
							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform tblPaymentSchedule_conv">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	
						
							SELECT * FROM ecourt.tTblPaymentSchedule  ps
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="id" dest="id"/>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="amount" dest="amount"/>
							<mapping source="day1" dest="day1"/>
							<mapping source="day2" dest="day2"/>
							<mapping source="dayOfWeek" dest="dayOfWeek"/>
							<mapping source="dayOfWeek2" dest="dayOfWeek2"/>
							<mapping source="description" dest="description"/>
							<mapping source="endDt" dest="endDt"/>
							<mapping source="endType" dest="endType"/>
							<mapping source="nextPaymentAmount" dest="nextPaymentAmount"/>
							<mapping source="nextPaymentDate" dest="nextPaymentDate"/>
							<mapping source="numPayments" dest="numPayments"/>
							<mapping source="origScheduleDesc" dest="origScheduleDesc"/>
							<mapping source="priority" dest="priority"/>
							<mapping source="scheduleType" dest="scheduleType"/>
							<mapping source="startDate" dest="startDate"/>
							<mapping source="subType" dest="subType"/>
							<mapping source="dirOrgUnit_id" dest="dirOrgUnit_id"/>
							<mapping source="person_id" dest="person_id"/>
							<mapping source="convId" dest="convId"/>
							<mapping source="amountDue" dest="amountDue"/>
							<mapping source="expectedFinalPaymentDt" dest="expectedFinalPaymentDt"/>
							<mapping source="expectedFinalPaymentDtAsDate" dest="expectedFinalPaymentDtAsDate"/>
							<mapping source="outstandingBalance" dest="outstandingBalance"/>
							<mapping source="scheduleDescription" dest="scheduleDescription"/>
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="tblPaymentSchedule_conv"/>
					</action>
			
			
				</actions>
			</stage> 
		
		<stage num="410" mode="Serial" desc="Transform tblBond" enabled="true">
			<actions>
				
				<action handler="SqlServer.Raw" desc="Creating tblBond" progresslabel="Creating  tblBond" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create tblBond">
							IF OBJECT_ID('tblBond_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[tblBond_conv];

				
							</task>
							
							<task handler="SqlServer.Script" desc="Create tblBond_conv  table">
							<![CDATA[
							
							CREATE TABLE [tblBond_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							[accessLevel] [int] NULL,
							[createUserRealName] [varchar](255) NULL,
							[createUsername] [varchar](255) NULL,
							[dateCreated] [datetime] NULL,
							[lastUpdateUserRealName] [varchar](255) NULL,
							[lastUpdateUsername] [varchar](255) NULL,
							[lastUpdated] [datetime] NULL,
							[memo] [varchar](512) NULL,
							[amount] [float] NULL,
							[amountDue] [float] NULL,
							[bondStatus] [varchar](255) NULL,
							[bondType] [varchar](255) NULL,
							[notes] [varchar](7500) NULL,
							[percentage] [int] NULL,
							[postedDt] [datetime] NULL,
							[setDt] [datetime] NULL,
							[case_id] [numeric](19, 0) NULL,
							[dirOrgUnit_id] [numeric](19, 0) NULL,
							[party_id] [numeric](19, 0) NULL,
							[person_id] [numeric](19, 0) NULL,
							[account_id] [numeric](19, 0) NULL,
							[convId] [int] NULL,
							tBond_id NUMERIC(19,0)
								);	
							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform tblBond_conv">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	
						
							SELECT * FROM ecourt.tTblBond bd
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="id" dest="id"/>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="amount" dest="amount"/>
							<mapping source="amountDue" dest="amountDue"/>
							<mapping source="bondStatus" dest="bondStatus"/>
							<mapping source="bondType" dest="bondType"/>
							<mapping source="notes" dest="notes"/>
							<mapping source="percentage" dest="percentage"/>
							<mapping source="postedDt" dest="postedDt"/>
							<mapping source="setDt" dest="setDt"/>
							<mapping source="case_id" dest="case_id"/>
							<mapping source="dirOrgUnit_id" dest="dirOrgUnit_id"/>
							<mapping source="party_id" dest="party_id"/>
							<mapping source="person_id" dest="person_id"/>
							<mapping source="account_id" dest="account_id"/>
							<mapping source="convId" dest="convId"/>
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="tblBond_conv"/>
					</action>
			
			
				</actions>
			</stage> 
		
		<stage num="412" mode="Serial" desc="Transform tblVoucher" enabled="true">
			<actions>
				
				<action handler="SqlServer.Raw" desc="Creating tblVoucher" progresslabel="Creating  tblVoucher" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create tblVoucher">
							IF OBJECT_ID('tblVoucher_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[tblVoucher_conv];

				
							</task>
							
							<task handler="SqlServer.Script" desc="Create tblVoucher_conv  table">
							<![CDATA[
							
							CREATE TABLE [tblVoucher_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							[accessLevel] [int] NULL,
							[createUserRealName] [varchar](255) NULL,
							[createUsername] [varchar](255) NULL,
							[dateCreated] [datetime] NULL,
							[lastUpdateUserRealName] [varchar](255) NULL,
							[lastUpdateUsername] [varchar](255) NULL,
							[lastUpdated] [datetime] NULL,
							[memo] [varchar](512) NULL,
							[amount] [float] NULL,
							[dateWritten] [datetime] NULL,
							[notes] [varchar](7500) NULL,
							[referenceNumber] [varchar](255) NULL,
							[status] [varchar](255) NULL,
							[type] [varchar](255) NULL,
							[dirOrgUnit_id] [numeric](19, 0) NULL,
							[person_id] [numeric](19, 0) NULL,
							[writtenBy_id] [numeric](19, 0) NULL,
							[convId] [int] NULL,
							tVoucher_id NUMERIC(19,0)
								);	
							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform tblVoucher_conv">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	
						
							SELECT * FROM ecourt.tTblVoucher 
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="id" dest="id"/>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="amount" dest="amount"/>
							<mapping source="dateWritten" dest="dateWritten"/>
							<mapping source="notes" dest="notes"/>
							<mapping source="referenceNumber" dest="referenceNumber"/>
							<mapping source="status" dest="status"/>
							<mapping source="type" dest="type"/>
							<mapping source="dirOrgUnit_id" dest="dirOrgUnit_id"/>
							<mapping source="person_id" dest="person_id"/>
							<mapping source="writtenBy_id" dest="writtenBy_id"/>
							<mapping source="convId" dest="convId"/>
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="tblVoucher_conv"/>
					</action>
			
			
				</actions>
			</stage> 
		
		<stage num="414" mode="Serial" desc="Transform tblBondAmend" enabled="true">
			<actions>
				
				<action handler="SqlServer.Raw" desc="Creating tblBondAmend" progresslabel="Creating  tblBondAmend" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create tblBondAmend">
							IF OBJECT_ID('tblBondAmend_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[tblBondAmend_conv];

				
							</task>
							
							<task handler="SqlServer.Script" desc="Create tblBondAmend_conv  table">
							<![CDATA[
							
							CREATE TABLE [tblBondAmend_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							[accessLevel] [int] NULL,
							[createUserRealName] [varchar](255) NULL,
							[createUsername] [varchar](255) NULL,
							[dateCreated] [datetime] NULL,
							[lastUpdateUserRealName] [varchar](255) NULL,
							[lastUpdateUsername] [varchar](255) NULL,
							[lastUpdated] [datetime] NULL,
							[memo] [varchar](7500) NULL,
							[amendDt] [datetime] NULL,
							[amount] [float] NULL,
							[amountDue] [float] NULL,
							[bondStatus] [varchar](255) NULL,
							[bondType] [varchar](255) NULL,
							[notes] [varchar](7500) NULL,
							[percentage] [int] NULL,
							[postedDt] [datetime] NULL,
							[setDt] [datetime] NULL,
							[account_id] [numeric](19, 0) NULL,
							[bond_id] [numeric](19, 0) NULL,
							[dirOrgUnit_id] [numeric](19, 0) NULL,
							[party_id] [numeric](19, 0) NULL,
							[person_id] [numeric](19, 0) NULL,
							[convId] [int] NULL
							
							
								);	
							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform tblBondAmend_conv">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	
						
							SELECT * FROM ecourt.tTblBondAmend
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="id" dest="id"/>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="amendDt" dest="amendDt"/>
							<mapping source="amount" dest="amount"/>
							<mapping source="amountDue" dest="amountDue"/>
							<mapping source="bondStatus" dest="bondStatus"/>
							<mapping source="bondType" dest="bondType"/>
							<mapping source="notes" dest="notes"/>
							<mapping source="percentage" dest="percentage"/>
							<mapping source="postedDt" dest="postedDt"/>
							<mapping source="setDt" dest="setDt"/>
							<mapping source="account_id" dest="account_id"/>
							<mapping source="bond_id" dest="bond_id"/>
							<mapping source="dirOrgUnit_id" dest="dirOrgUnit_id"/>
							<mapping source="party_id" dest="party_id"/>
							<mapping source="person_id" dest="person_id"/>
							<mapping source="convId" dest="convId"/>
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="tblBondAmend_conv"/>
					</action>
			
			
				</actions>
			</stage> 

		
		
		<stage num="500" mode="Serial" desc="Load Case" enabled="true">
			<actions>
				
				<action handler="SqlServer.Raw" desc="Get initial ecourt row counts for all tables" progresslabel="Initial table counts" enabled="true">
					<source database="${sql.ecourt.db}">
						<task handler="SqlServer.TableCounts"><args savePath="${log.folder}\startingCounts.xml"/></task>
					</source>
				</action>
			
				<action handler="SqlServer.Raw" verbose="${verbose}">
					<source database="${sql.ecourt.db}" schema="ecourt" table="tAuditLog">
						<task handler="SqlServer.Script" desc="Add tAuditLog row if necessary">
							DECLARE @today datetime; SET @today = GETDATE();
							INSERT INTO ecourt.tAuditLog (username, category, timeStamp, dateCreated, lastUpdated) VALUES ('conv', 'data conversion', @today, @today, @today); --1
					
						</task>
					</source>
				</action>
				
				<action handler="SqlServer.Raw" verbose="${verbose}">
					<source database="${sql.staging.db}" schema="dbo">
						<task handler="SqlServer.DB.StringFixTables">case_conv, subCase_conv, charge_conv, scheduledEvent_conv, party_conv, person_conv, caseSeal_conv, caseAssignment_conv, sentence_conv, sentenceCondition_conv, address1_conv, address2_conv, telephone2_conv</task>
					</source>
				</action>
				

				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Case">
					<source database="${sql.staging.db}" schema="dbo" table="case_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
								

							SELECT
							createUserRealName = COALESCE(cc.createUserRealName, 'conv' ),
							createUsername = COALESCE(cc.createUsername, 'conv' ) ,
							dateCreated = COALESCE(cc.dateCreated, @today),
							lastUpdateUserRealName = COALESCE(cc.lastUpdateUserRealName, 'conv' ),
							lastUpdateUsername = COALESCE(cc.lastUpdateUsername, 'conv') ,
							lastUpdated = COALESCE(cc.lastUpdated, @today),
							cc.*,
							cc.caseNumber,
							caseTypeLd =
							CASE 
								WHEN cc.caseType_ld IN ('FJUUJ','CRFLJ') THEN 'JUVV'
								ELSE cc.caseType_ld
							END,
							caseNumber_load = 
							CASE
								WHEN t1.caseNumber IS NULL THEN  cc.caseNumber
								ELSE  cc.sourceCaseNumber
							END,
							t1.caseNumber,
							sourceCaseNumber,
							'CONV' filingType_Ld
							From ${sql.staging.db}.dbo.case_conv cc
							LEFT JOIN  (SELECT caseNumber, count(1) ocr FROM ${sql.staging.db}.dbo.case_conv GROUP BY caseNumber HAVING count(1) > 1) t1
							ON cc.caseNumber = t1.caseNumber 
						]]>							
						</param>
						<param name="idColumnName">tCase_id</param>
						<param name="whereColumnName">idKey</param>	
												
					</params>
					<mappings>
					
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="asbestos" dest="asbestos"/>
						<mapping source="assignedTrack" dest="assignedTrack"/>
						<mapping source="caseJurisdiction" dest="caseJurisdiction"/>
						<mapping source="caseName" dest="caseName"/>
						<mapping source="caseNumber_load" dest="caseNumber"/>
						<mapping source="caseNumberSequence" dest="caseNumberSequence"/>
						<mapping source="caseReason" dest="caseReason"/>
						<mapping source="caseShortName" dest="caseShortName"/>
						<mapping source="caseSubType" dest="caseSubType"/>
						<mapping source="caseType" dest="caseType"/>
						<mapping source="category" dest="category"/>
						<mapping source="ceqa" dest="ceqa"/>
						<mapping source="classAction" dest="classAction"/>
						<mapping source="complexFeeAssessedAmountCents" dest="complexFeeAssessedAmountCents"/>
						<mapping source="complexLitigation" dest="complexLitigation"/>
						<mapping source="conditionallySealed" dest="conditionallySealed"/>
						<mapping source="consolidationType" dest="consolidationType"/>
						<mapping source="county" dest="county"/>
						<mapping source="demandAmount" dest="demandAmount"/>
						<mapping source="demandAmountType" dest="demandAmountType"/>
						<mapping source="dispositionDate" dest="dispositionDate"/>
						<mapping source="dispositionManner" dest="dispositionManner"/>
						<mapping source="dispositionType" dest="dispositionType"/>
						<mapping source="dmvDocketId" dest="dmvDocketId"/>
						<mapping source="documentAccessLevel" dest="documentAccessLevel"/>
						<mapping source="eFileCitationDate" dest="eFileCitationDate"/>
						<mapping source="eFileCitationNumber" dest="eFileCitationNumber"/>
						<mapping source="efmEFiled" dest="efmEFiled"/>
						<mapping source="efmLegacyCase" dest="efmLegacyCase"/>
						<mapping source="excludeFromEFiling" dest="excludeFromEFiling"/>
						<mapping source="filingAgency" dest="filingAgency"/>
						<mapping source="filingDate" dest="filingDate"/>
						<mapping source="filingStatus" dest="filingStatus"/>
						<mapping source="filingType_Ld" dest="filingType"/>
						<mapping source="hearingRequestedDate" dest="hearingRequestedDate"/>
						<mapping source="hearingRequestedTime" dest="hearingRequestedTime"/>
						<mapping source="hearingRequestedType" dest="hearingRequestedType"/>
						<mapping source="incidentZip" dest="incidentZip"/>
						<mapping source="ivrCaseNumber" dest="ivrCaseNumber"/>
						<mapping source="ivrCitationNumber" dest="ivrCitationNumber"/>
						<mapping source="ivrDLNumber" dest="ivrDLNumber"/>
						<mapping source="jccpCaseNumber" dest="jccpCaseNumber"/>
						<mapping source="joined" dest="joined"/>
						<mapping source="judicialOfficer" dest="judicialOfficer"/>
						<mapping source="jurisdictionalAmount" dest="jurisdictionalAmount"/>
						<mapping source="latitude" dest="latitude"/>
						<mapping source="location" dest="location"/>
						<mapping source="locationAddress1" dest="locationAddress1"/>
						<mapping source="locationAddress2" dest="locationAddress2"/>
						<mapping source="locationCity" dest="locationCity"/>
						<mapping source="locationDept" dest="locationDept"/>
						<mapping source="locationState" dest="locationState"/>
						<mapping source="locationZip" dest="locationZip"/>
						<mapping source="longitude" dest="longitude"/>
						<mapping source="memo2" dest="memo2"/>
						<mapping source="noFeeCase" dest="noFeeCase"/>
						<mapping source="noFeeCaseSection" dest="noFeeCaseSection"/>
						<mapping source="noOfParcels" dest="noOfParcels"/>
						<mapping source="originalFiledDate" dest="originalFiledDate"/>
						<mapping source="originalVerdictDate" dest="originalVerdictDate"/>
						<mapping source="receivedDate" dest="receivedDate"/>
						<mapping source="referenceNumber" dest="referenceNumber"/>
						<mapping source="status" dest="status"/>
						<mapping source="statusDate" dest="statusDate"/>
						<mapping source="statusUpdateReason" dest="statusUpdateReason"/>
						<mapping source="subJurisdiction" dest="subJurisdiction"/>
						<mapping source="workflowCaseAttribute" dest="workflowCaseAttribute"/>
						<mapping source="workflowLocation" dest="workflowLocation"/>
						<mapping source="workflowLocation2" dest="workflowLocation2"/>
						<mapping source="workflowLocation3" dest="workflowLocation3"/>
						<mapping source="caseUnit" dest="caseUnit"/>
						<mapping source="filingAgencyCaseNumber" dest="filingAgencyCaseNumber"/>
						<mapping source="caseSealType" dest="caseSealType"/>
						<mapping source="caseOrigination" dest="caseOrigination"/>
						<mapping source="cfSubCategory" dest="cfSubCategory"/>
					
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tCase"/>
				</action>
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Case Special Status">
					<source database="${sql.staging.db}" schema="dbo" table="case_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
								

							SELECT
							createUserRealName =  'conv',
							createUsername = 'conv',
							dateCreated =  @today,
							lastUpdateUserRealName =  'conv',
							lastUpdateUsername =  'conv',
							lastUpdated =  @today,
							0 as optlock,
							cc.idKey,
							cc.receivedDate as startDate,
							cc.specialStatusMemo as memo,
							'CONV' as status,
							cc.tCase_id as case_id
							FROM ${sql.staging.db}.dbo.case_conv cc
							WHERE specialStatusFlag = 1 
							
						]]>							
						</param>
						<param name="idColumnName">tCaseSpecialStatus_id</param>
						<param name="whereColumnName">idKey</param>	
												
					</params>
					<mappings>
					
						
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="status" dest="status"/>
						<mapping source="startDate" dest="startDate"/>
						<mapping source="case_id" dest="case_id"/>
						
					
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tSpecialStatus"/>
				</action>
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Case Note">
					<source database="${sql.staging.db}" schema="dbo" table="case_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
								

							SELECT
							createUserRealName =  'conv',
							createUsername =  'conv'  ,
							dateCreated =  @today,
							lastUpdateUserRealName =  'conv',
							lastUpdateUsername =  'conv',
							lastUpdated =  @today,
							0 as optlock,
							cc.idKey,
							type = 'CNOTE',
							content = caseNote,
							color = 'BLUE',
							sharingLevel = 0,
							statusDate as noteDate,
							tCase_id as case_id
							FROM ${sql.staging.db}.dbo.case_conv cc
							WHERE caseNoteFlag = 1 
							
						]]>							
						</param>
						<param name="idColumnName">tCaseNote_id</param>
						<param name="whereColumnName">idKey</param>	
												
					</params>
					<mappings>
					
						
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="color" dest="color"/>
						<mapping source="content" dest="content"/>
						<mapping source="case_id" dest="case_id"/>
						<mapping source="type" dest="type"/>
						<mapping source="noteDate" dest="noteDate"/>
						<mapping source="sharingLevel" dest="sharingLevel"/>
						
					
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tCaseNote"/>
				</action>
				
				
					
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Case Dispo - Other">
					<source database="${sql.staging.db}" schema="dbo" table="case_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
								

							SELECT
							createUserRealName =  'conv',
							createUsername =  'conv'  ,
							dateCreated =  @today,
							lastUpdateUserRealName =  'conv',
							lastUpdateUsername =  'conv',
							lastUpdated =  @today,
							0 as optlock,
							'OTHER' as dispositionType,
							dispositionDate = DATEADD(d, -1, dispositionDate),
							tCase_id as case_id,
							idKey
							FROM ${sql.staging.db}.dbo.case_conv cc
							WHERE dispoisitionFlag = 1
							
						]]>							
						</param>
						<param name="idColumnName">tCaseDispositionOther_id</param>
						<param name="whereColumnName">idKey</param>	
												
					</params>
					<mappings>
					
						
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="case_id" dest="case_id"/>
						<mapping source="dispositionType" dest="dispositionType"/>
						<mapping source="dispositionDate" dest="dispositionDate"/>
						
					
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tCaseDisposition"/>
				</action>
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Case Dispo">
					<source database="${sql.staging.db}" schema="dbo" table="case_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
								

							SELECT
							createUserRealName =  'conv',
							createUsername =  'conv'  ,
							dateCreated =  @today,
							lastUpdateUserRealName =  'conv',
							lastUpdateUsername =  'conv',
							lastUpdated =  @today,
							0 as optlock,
							dispositionType,
							dispositionDate = dispositionDate,
							tCase_id as case_id,
							idKey
							FROM ${sql.staging.db}.dbo.case_conv cc
							WHERE dispositionType IS NOT NULL
							
						]]>							
						</param>
						<param name="idColumnName">tCaseDisposition_id</param>
						<param name="whereColumnName">idKey</param>	
												
					</params>
					<mappings>
					
						
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="case_id" dest="case_id"/>
						<mapping source="dispositionType" dest="dispositionType"/>
						<mapping source="dispositionDate" dest="dispositionDate"/>
						
					
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tCaseDisposition"/>
				</action>
				
				
				
			</actions>
		</stage>	
		
		
	
		
		<stage num="502" mode="Serial" desc="Load SubCase" enabled="true">
			<actions>
				
				

				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading SubCase">
					<source database="${sql.staging.db}" schema="dbo" table="subCase_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT	
							COALESCE(sc.createUserRealName, 'conv' ) as createUserRealName,
							COALESCE(sc.createUsername, 'conv' ) as createUsername ,
							COALESCE(sc.dateCreated, @today) as dateCreated,
							COALESCE(sc.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
							COALESCE(sc.lastUpdateUsername, 'conv') as lastUpdateUsername ,
							COALESCE(sc.lastUpdated, @today) as lastUpdated,
							sc.*,
							cc.tCase_id,
							cc.caseNumber,
							cc.filingDate as filingDateLd,
							filingType_Ld = 'CONV',
							cc.category as categoryLd
							From subcase_conv sc
							INNER JOIN case_conv cc
							ON sc.caseNumber = cc.caseNumber AND cc.caseGroup = 'CR'
					
						]]>							
						</param>
						<param name="idColumnName">tSubCase_id</param>
						<param name="whereColumnName">idKey</param>		
												
					</params>
					<mappings>
						
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="caseUnit" dest="caseUnit"/>
						<mapping source="categoryLd" dest="category"/>
						<mapping source="dateIncurred" dest="dateIncurred"/>
						<mapping source="dateOfMarriage" dest="dateOfMarriage"/>
						<mapping source="dateOfSeparation" dest="dateOfSeparation"/>
						<mapping source="demandAmount" dest="demandAmount"/>
						<mapping source="demandAmountType" dest="demandAmountType"/>
						<mapping source="dispositionDate" dest="dispositionDate"/>
						<mapping source="dispositionManner" dest="dispositionManner"/>
						<mapping source="dispositionType" dest="dispositionType"/>
						<mapping source="dmvDocketId" dest="dmvDocketId"/>
						<mapping source="documentAccessLevel" dest="documentAccessLevel"/>
						<mapping source="does" dest="does"/>
						<mapping source="efmReferenceId" dest="efmReferenceId"/>
						<mapping source="exemption" dest="exemption"/>
						<mapping source="filingAgency" dest="filingAgency"/>
						<mapping source="filingDateLd" dest="filingDate"/>
						<mapping source="filingType_Ld" dest="filingType"/>
						<mapping source="hearingRequestedDate" dest="hearingRequestedDate"/>
						<mapping source="heldToAnswerDate" dest="heldToAnswerDate"/>
						<mapping source="indianChildWelfare" dest="indianChildWelfare"/>
						<mapping source="interstateCompact" dest="interstateCompact"/>
						<mapping source="jurisdictionalAmount" dest="jurisdictionalAmount"/>
						<mapping source="location" dest="location"/>
						<mapping source="locationAddress1" dest="locationAddress1"/>
						<mapping source="locationAddress2" dest="locationAddress2"/>
						<mapping source="locationCity" dest="locationCity"/>
						<mapping source="locationState" dest="locationState"/>
						<mapping source="locationZip" dest="locationZip"/>
						<mapping source="otherCaseNumber" dest="otherCaseNumber"/>
						<mapping source="otherCaseNumberType" dest="otherCaseNumberType"/>
						<mapping source="ownersResponsibility" dest="ownersResponsibility"/>
						<mapping source="paternityFiling" dest="paternityFiling"/>
						<mapping source="referenceNumber" dest="referenceNumber"/>
						<mapping source="roes" dest="roes"/>
						<mapping source="shortName" dest="shortName"/>
						<mapping source="status" dest="status"/>
						<mapping source="statusDate" dest="statusDate"/>
						<mapping source="subCaseName" dest="subCaseName"/>
						<mapping source="caseNumber" dest="subCaseNumber"/>
						<mapping source="subCaseReason" dest="subCaseReason"/>
						<mapping source="subCaseSource" dest="subCaseSource"/>
						<!--<mapping source="convSubCaseType" dest="subCaseType"/> -->
						<mapping source="terminationDate" dest="terminationDate"/>
						<mapping source="terminationType" dest="terminationType"/>
						<mapping source="violationDate" dest="violationDate"/>
						<mapping source="tCase_id" dest="case_id"/>
						<mapping source="receivedDate" dest="receivedDate"/>
						<mapping source="efmMoreThan12Claims" dest="efmMoreThan12Claims"/>
						<mapping source="originalVerdictDate" dest="originalVerdictDate"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tSubCase"/>
				</action>
				
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading SubCase" enabled = "false">
					<source database="${sql.staging.db}" schema="dbo" table="subCase_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT	
							COALESCE(sc.createUserRealName, 'conv' ) as createUserRealName,
							COALESCE(sc.createUsername, 'conv' ) as createUsername ,
							COALESCE(sc.dateCreated, @today) as dateCreated,
							COALESCE(sc.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
							COALESCE(sc.lastUpdateUsername, 'conv') as lastUpdateUsername ,
							COALESCE(sc.lastUpdated, @today) as lastUpdated,							
							sc.*,
							cc.tCase_id,
							cc.caseNumber,
							cc.filingDate as filingDateLd,
							filingType_Ld = 'CONV'
							From subcase_conv sc
							INNER JOIN case_conv cc
							ON sc.case_id = cc.id AND cc.caseGroup <> 'CR'
						
						]]>							
						</param>
						<param name="idColumnName">tSubCase_id</param>
						<param name="whereColumnName">idKey</param>		
												
					</params>
					<mappings>
						
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="caseUnit" dest="caseUnit"/>
						<mapping source="category" dest="category"/>
						<mapping source="dateIncurred" dest="dateIncurred"/>
						<mapping source="dateOfMarriage" dest="dateOfMarriage"/>
						<mapping source="dateOfSeparation" dest="dateOfSeparation"/>
						<mapping source="demandAmount" dest="demandAmount"/>
						<mapping source="demandAmountType" dest="demandAmountType"/>
						<mapping source="dispositionDate" dest="dispositionDate"/>
						<mapping source="dispositionManner" dest="dispositionManner"/>
						<mapping source="dispositionType" dest="dispositionType"/>
						<mapping source="dmvDocketId" dest="dmvDocketId"/>
						<mapping source="documentAccessLevel" dest="documentAccessLevel"/>
						<mapping source="does" dest="does"/>
						<mapping source="efmReferenceId" dest="efmReferenceId"/>
						<mapping source="exemption" dest="exemption"/>
						<mapping source="filingAgency" dest="filingAgency"/>
						<mapping source="filingDateLd" dest="filingDate"/>
						<mapping source="filingType_Ld" dest="filingType"/>
						<mapping source="hearingRequestedDate" dest="hearingRequestedDate"/>
						<mapping source="heldToAnswerDate" dest="heldToAnswerDate"/>
						<mapping source="indianChildWelfare" dest="indianChildWelfare"/>
						<mapping source="interstateCompact" dest="interstateCompact"/>
						<mapping source="jurisdictionalAmount" dest="jurisdictionalAmount"/>
						<mapping source="location" dest="location"/>
						<mapping source="locationAddress1" dest="locationAddress1"/>
						<mapping source="locationAddress2" dest="locationAddress2"/>
						<mapping source="locationCity" dest="locationCity"/>
						<mapping source="locationState" dest="locationState"/>
						<mapping source="locationZip" dest="locationZip"/>
						<mapping source="otherCaseNumber" dest="otherCaseNumber"/>
						<mapping source="otherCaseNumberType" dest="otherCaseNumberType"/>
						<mapping source="ownersResponsibility" dest="ownersResponsibility"/>
						<mapping source="paternityFiling" dest="paternityFiling"/>
						<mapping source="referenceNumber" dest="referenceNumber"/>
						<mapping source="roes" dest="roes"/>
						<mapping source="shortName" dest="shortName"/>
						<mapping source="status" dest="status"/>
						<mapping source="statusDate" dest="statusDate"/>
						<mapping source="subCaseName" dest="subCaseName"/>
						<mapping source="caseNumber" dest="subCaseNumber"/>
						<mapping source="subCaseReason" dest="subCaseReason"/>
						<mapping source="subCaseSource" dest="subCaseSource"/>
						<!--<mapping source="convSubCaseType" dest="subCaseType"/>-->
						<mapping source="terminationDate" dest="terminationDate"/>
						<mapping source="terminationType" dest="terminationType"/>
						<mapping source="violationDate" dest="violationDate"/>
						<mapping source="tCase_id" dest="case_id"/>
						<mapping source="receivedDate" dest="receivedDate"/>
						<mapping source="efmMoreThan12Claims" dest="efmMoreThan12Claims"/>
						<mapping source="originalVerdictDate" dest="originalVerdictDate"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tSubCase"/>
				</action>
				
		
				<action handler="SqlServer.Raw" desc="Creating Case_conv table" progresslabel="Fixing SubCaseNumber" enabled="true">
					<source database="${sql.ecourt.db}" schema="dbo">
						
						<task handler="SqlServer.Script" desc="Fixing SubCaseNumber">
						<![CDATA[
						
						UPDATE ${sql.ecourt.db}.ecourt.tSubCase 
						SET subCaseNumber = caseNumber
						FROM ${sql.ecourt.db}.ecourt.tSubCase  sc
						INNER JOIN ${sql.ecourt.db}.ecourt.tCase cs
						ON sc.case_id = cs.id
						WHERE caseNumber <> subCaseNumber;
						
									
						]]>
						
						</task>
						
					</source>
				</action>
				
			</actions>
		</stage>	
		
					
		<stage num="504" mode="Serial" desc="Load person/party" enabled="true">
			<actions>
				

				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading PI - Normal">
					<source database="${sql.staging.db}" schema="dbo" table="person_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						DECLARE @today datetime; SET @today = GETDATE();
								

						SELECT
						
						
						'0' as optlock,
						'conv' as createUserRealName,
						'conv' as createUsername,
						'conv' as lastUpdateUserRealName,
						'conv' as lastUpdateUsername,
						@today as dateCreated,
						@today as lastUpdated,
						
						personIdentifier_id 
						FROM person_conv 
						WHERE partyTypeFlg = 0 
						GROUP BY personIdentifier_id
						
						]]>							
						</param>
						<param name="idColumnName">tPID</param>
						<param name="whereColumnName">personIdentifier_id</param>
												
					</params>
					<mappings>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tPersonIdentifier"/>
				</action>
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading PI - Too many/Broken up">
					<source database="${sql.staging.db}" schema="dbo" table="person_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						DECLARE @today datetime; SET @today = GETDATE();
								

						SELECT
						
						
						'0' as optlock,
						'conv' as createUserRealName,
						'conv' as createUsername,
						'conv' as lastUpdateUserRealName,
						'conv' as lastUpdateUsername,
						@today as dateCreated,
						@today as lastUpdated,
						idKey,
						personIdentifier_id 
						FROM person_conv 
						WHERE partyTypeFlg = 1
						]]>							
						</param>
						<param name="idColumnName">tPID</param>
						<param name="whereColumnName">idKey</param>
												
					</params>
					<mappings>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tPersonIdentifier"/>
				</action>
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Person">
					<source database="${sql.staging.db}" schema="dbo" table="person_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						SELECT
						COALESCE(createUserRealName, 'conv' ) as createUserRealName,
						COALESCE(createUsername, 'conv' ) as createUsername ,
						COALESCE(dateCreated, GETDATE()) as dateCreated,
						COALESCE(lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
						COALESCE(lastUpdateUsername, 'conv') as lastUpdateUsername ,
						COALESCE(lastUpdated, GETDATE()) as lastUpdated,
						REPLACE(nameSuffix, 'jw-','') as nameSuffixLd,
						REPLACE(namePrefix, 'jw-','') as namePrefixLd,
						
						*
						
						FROM person_conv pc
				
						
						]]>							
						</param>
							<param name="idColumnName">tPerson_id</param>
							<param name="whereColumnName">idKey</param>						
					</params>
					<mappings>					
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="addressAccessLevel" dest="addressAccessLevel"/>
						<mapping source="collectionAssignedDate" dest="collectionAssignedDate"/>
						<mapping source="efmErroneouslySued" dest="efmErroneouslySued"/>
						<mapping source="efmExemptionType" dest="efmExemptionType"/>
						<mapping source="efmFeeExemptionRequestType" dest="efmFeeExemptionRequestType"/>
						<mapping source="efmFeeExemptionType" dest="efmFeeExemptionType"/>
						<mapping source="efmInterpreterLanguage" dest="efmInterpreterLanguage"/>
						<mapping source="efmTrueName" dest="efmTrueName"/>
						<mapping source="efspFeeWaiverFiled" dest="efspFeeWaiverFiled"/>
						<mapping source="efspFirstAppearancePaid" dest="efspFirstAppearancePaid"/>
						<mapping source="efspGovernmentExempt" dest="efspGovernmentExempt"/>
						<mapping source="electronicPinNumber" dest="electronicPinNumber"/>
						<mapping source="email" dest="email"/>
						<mapping source="firstAppearancePaid" dest="firstAppearancePaid"/>
						<mapping source="firstName" dest="firstName"/>
						<mapping source="governmentAgency" dest="governmentAgency"/>
						<mapping source="jobTitle" dest="jobTitle"/>
						<mapping source="lastName" dest="lastName"/>
						<mapping source="lastName2" dest="lastName2"/>
						<mapping source="legalName" dest="legalName"/>
						<mapping source="middleName" dest="middleName"/>
						<mapping source="nameExact" dest="nameExact"/>
						<mapping source="nameExtension" dest="nameExtension"/>
						<mapping source="namePrefixLd" dest="namePrefix"/>
						<mapping source="nameSuffixLd" dest="nameSuffix"/>
						<mapping source="organization" dest="organization"/>
						<mapping source="organizationName" dest="organizationName"/>
						<mapping source="organizationSuffix" dest="organizationSuffix"/>
						<mapping source="personCode" dest="personCode"/>
						<mapping source="personId" dest="personId"/>
						<mapping source="personSource" dest="personSource"/>
						<mapping source="personSubType" dest="personSubType"/>
						<mapping source="personType" dest="personType"/>
						<mapping source="pinNumber" dest="pinNumber"/>
						<mapping source="searchableInitials" dest="searchableInitials"/>
						<mapping source="status" dest="status"/>
						<mapping source="statusDate" dest="statusDate"/>
						<mapping source="collectionAgency_id" dest="collectionAgency_id"/>
						<mapping source="mergedToPerson_id" dest="mergedToPerson_id"/>
						<mapping source="tPID" dest="personIdentifier_id"/>
						<mapping source="efspEService" dest="efspEService"/>
						<mapping source="efspEmail" dest="efspEmail"/>
						<mapping source="electronicService" dest="electronicService"/>
						<mapping source="eftAccountName" dest="eftAccountName"/>
						<mapping source="eftAccountNo" dest="eftAccountNo"/>
						<mapping source="eftRoutingNo" dest="eftRoutingNo"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tPerson"/>
				</action>
				
				
		
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Party - MAIN" enabled="true">
					<source database="${sql.staging.db}" schema="dbo" table="party_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						SELECT
						COALESCE(pty.createUserRealName, 'conv' ) as createUserRealName,
						COALESCE(pty.createUsername, 'conv' ) as createUsername ,
						COALESCE(pty.dateCreated, GETDATE()) as dateCreated,
						COALESCE(pty.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
						COALESCE(pty.lastUpdateUsername, 'conv') as lastUpdateUsername ,
						COALESCE(pty.lastUpdated, GETDATE()) as lastUpdated,
						pty.*,
						pr.tPerson_id,
						cc.tCase_id,
						sc.tSubCase_id
						FROM party_conv pty
						INNER JOIN person_conv pr
						ON pty.person_id = pr.id AND pty.case_id = pr.case_id
						INNER JOIN case_conv cc
						ON pty.case_id = cc.id
						INNER JOIN convertCases_conv cv
						ON cc.id = cv.case_id
						INNER JOIN subCase_conv sc
						ON cc.id = sc.case_id AND convSubCaseType = 'MAIN'
						WHERE partyType NOT IN ('DEFT5', 'PLTF5', 'SCDCA', 'SCDAC', 'SCI10', 'SCI11', 'SCPAC', 'SCPCA', 'DEFT4', 'PLTF4', 'DEFT3', 'PLTF3') and cv.caseGroup = 'CV'
						]]>							
						</param>
							<param name="idColumnName">tParty_id</param>
							<param name="whereColumnName">idKey</param>						
					</params>
					<mappings>					
						<mapping source="tPerson_id" dest="person_id"/>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="allowPublicAccess" dest="allowPublicAccess"/>
						<mapping source="cmsReferenceId" dest="cmsReferenceId"/>
						<mapping source="crsExemptOverride" dest="crsExemptOverride"/>
						<mapping source="dispositionDate" dest="dispositionDate"/>
						<mapping source="dispositionManner" dest="dispositionManner"/>
						<mapping source="dispositionType" dest="dispositionType"/>
						<mapping source="efmReferenceId" dest="efmReferenceId"/>
						<mapping source="endDate" dest="endDate"/>
						<mapping source="exemptEligible" dest="exemptEligible"/>
						<mapping source="formerRepresentationText" dest="formerRepresentationText"/>
						<mapping source="nonMonApplication" dest="nonMonApplication"/>
						<mapping source="partyDesignationType" dest="partyDesignationType"/>
						<mapping source="partyNumber" dest="partyNumber"/>
						<mapping source="partySource" dest="partySource"/>
						<mapping source="partySubType" dest="partySubType"/>
						<mapping source="partyType" dest="partyType"/>
						<mapping source="representationText" dest="representationText"/>
						<mapping source="representingPartyType" dest="representingPartyType"/>
						<mapping source="selfRepresented" dest="selfRepresented"/>
						<mapping source="startDate" dest="startDate"/>
						<mapping source="status" dest="status"/>
						<mapping source="statusDate" dest="statusDate"/>
						<mapping source="stayDate" dest="stayDate"/>
						<mapping source="stayEndDate" dest="stayEndDate"/>
						<mapping source="stayStatus" dest="stayStatus"/>
						<mapping source="tCase_id" dest="case_id"/>
						<mapping source="exportBatch_id" dest="exportBatch_id"/>
						<mapping source="exportCompletedBatch_id" dest="exportCompletedBatch_id"/>
						<mapping source="exportFailedBatch_id" dest="exportFailedBatch_id"/>
						<mapping source="tSubCase_id" dest="subCase_id"/>
					
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tParty"/>
				</action>
						
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Party - CROSS" enabled="true">
					<source database="${sql.staging.db}" schema="dbo" table="party_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						SELECT
						COALESCE(pty.createUserRealName, 'conv' ) as createUserRealName,
						COALESCE(pty.createUsername, 'conv' ) as createUsername ,
						COALESCE(pty.dateCreated, GETDATE()) as dateCreated,
						COALESCE(pty.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
						COALESCE(pty.lastUpdateUsername, 'conv') as lastUpdateUsername ,
						COALESCE(pty.lastUpdated,GETDATE()) as lastUpdated,
						pty.*,
						pr.tPerson_id,
						cc.tCase_id,
						sc.tSubCase_id
						FROM party_conv pty
						INNER JOIN person_conv pr
						ON pty.person_id = pr.id AND pty.case_id = pr.case_id
						INNER JOIN case_conv cc
						ON pty.case_id = cc.id
						INNER JOIN subCase_conv sc
						ON cc.id = sc.case_id AND convSubCaseType = 'CROSS'
						WHERE partyType  IN ('DEFT5', 'PLTF5', 'SCDCA', 'SCDAC', 'SCI10', 'SCI11', 'SCPAC', 'SCPCA') 
						]]>							
						</param>
							<param name="idColumnName">tParty_id</param>
							<param name="whereColumnName">idKey</param>						
					</params>
					<mappings>					
						<mapping source="tPerson_id" dest="person_id"/>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="allowPublicAccess" dest="allowPublicAccess"/>
						<mapping source="cmsReferenceId" dest="cmsReferenceId"/>
						<mapping source="crsExemptOverride" dest="crsExemptOverride"/>
						<mapping source="dispositionDate" dest="dispositionDate"/>
						<mapping source="dispositionManner" dest="dispositionManner"/>
						<mapping source="dispositionType" dest="dispositionType"/>
						<mapping source="efmReferenceId" dest="efmReferenceId"/>
						<mapping source="endDate" dest="endDate"/>
						<mapping source="exemptEligible" dest="exemptEligible"/>
						<mapping source="formerRepresentationText" dest="formerRepresentationText"/>
						<mapping source="nonMonApplication" dest="nonMonApplication"/>
						<mapping source="partyDesignationType" dest="partyDesignationType"/>
						<mapping source="partyNumber" dest="partyNumber"/>
						<mapping source="partySource" dest="partySource"/>
						<mapping source="partySubType" dest="partySubType"/>
						<mapping source="partyType" dest="partyType"/>
						<mapping source="representationText" dest="representationText"/>
						<mapping source="representingPartyType" dest="representingPartyType"/>
						<mapping source="selfRepresented" dest="selfRepresented"/>
						<mapping source="startDate" dest="startDate"/>
						<mapping source="status" dest="status"/>
						<mapping source="statusDate" dest="statusDate"/>
						<mapping source="stayDate" dest="stayDate"/>
						<mapping source="stayEndDate" dest="stayEndDate"/>
						<mapping source="stayStatus" dest="stayStatus"/>
						<mapping source="tCase_id" dest="case_id"/>
						<mapping source="exportBatch_id" dest="exportBatch_id"/>
						<mapping source="exportCompletedBatch_id" dest="exportCompletedBatch_id"/>
						<mapping source="exportFailedBatch_id" dest="exportFailedBatch_id"/>
						<mapping source="tSubCase_id" dest="subCase_id"/>
						
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tParty"/>
				</action>
				
							
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Party - COUNTER" enabled="true">
					<source database="${sql.staging.db}" schema="dbo" table="party_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						SELECT
						COALESCE(pty.createUserRealName, 'conv' ) as createUserRealName,
						COALESCE(pty.createUsername, 'conv' ) as createUsername ,
						COALESCE(pty.dateCreated, GETDATE()) as dateCreated,
						COALESCE(pty.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
						COALESCE(pty.lastUpdateUsername, 'conv') as lastUpdateUsername ,
						COALESCE(pty.lastUpdated, GETDATE()) as lastUpdated,
						pty.*,
						pr.tPerson_id,
						cc.tCase_id,
						sc.tSubCase_id
						FROM party_conv pty
						INNER JOIN person_conv pr
						ON pty.person_id = pr.id AND pty.case_id = pr.case_id
						INNER JOIN case_conv cc
						ON pty.case_id = cc.id
						INNER JOIN subCase_conv sc
						ON cc.id = sc.case_id AND convSubCaseType = 'COUNTER'
						WHERE partyType  IN  ('DEFT4', 'PLTF4')
						]]>							
						</param>
							<param name="idColumnName">tParty_id</param>
							<param name="whereColumnName">idKey</param>						
					</params>
					<mappings>					
						<mapping source="tPerson_id" dest="person_id"/>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="allowPublicAccess" dest="allowPublicAccess"/>
						<mapping source="cmsReferenceId" dest="cmsReferenceId"/>
						<mapping source="crsExemptOverride" dest="crsExemptOverride"/>
						<mapping source="dispositionDate" dest="dispositionDate"/>
						<mapping source="dispositionManner" dest="dispositionManner"/>
						<mapping source="dispositionType" dest="dispositionType"/>
						<mapping source="efmReferenceId" dest="efmReferenceId"/>
						<mapping source="endDate" dest="endDate"/>
						<mapping source="exemptEligible" dest="exemptEligible"/>
						<mapping source="formerRepresentationText" dest="formerRepresentationText"/>
						<mapping source="nonMonApplication" dest="nonMonApplication"/>
						<mapping source="partyDesignationType" dest="partyDesignationType"/>
						<mapping source="partyNumber" dest="partyNumber"/>
						<mapping source="partySource" dest="partySource"/>
						<mapping source="partySubType" dest="partySubType"/>
						<mapping source="partyType" dest="partyType"/>
						<mapping source="representationText" dest="representationText"/>
						<mapping source="representingPartyType" dest="representingPartyType"/>
						<mapping source="selfRepresented" dest="selfRepresented"/>
						<mapping source="startDate" dest="startDate"/>
						<mapping source="status" dest="status"/>
						<mapping source="statusDate" dest="statusDate"/>
						<mapping source="stayDate" dest="stayDate"/>
						<mapping source="stayEndDate" dest="stayEndDate"/>
						<mapping source="stayStatus" dest="stayStatus"/>
						<mapping source="tCase_id" dest="case_id"/>
						<mapping source="exportBatch_id" dest="exportBatch_id"/>
						<mapping source="exportCompletedBatch_id" dest="exportCompletedBatch_id"/>
						<mapping source="exportFailedBatch_id" dest="exportFailedBatch_id"/>
						<mapping source="tSubCase_id" dest="subCase_id"/>
					
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tParty"/>
				</action>
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Party - TP" enabled="true">
					<source database="${sql.staging.db}" schema="dbo" table="party_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						SELECT
						COALESCE(pty.createUserRealName, 'conv' ) as createUserRealName,
						COALESCE(pty.createUsername, 'conv' ) as createUsername ,
						COALESCE(pty.dateCreated, GETDATE()) as dateCreated,
						COALESCE(pty.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
						COALESCE(pty.lastUpdateUsername, 'conv') as lastUpdateUsername ,
						COALESCE(pty.lastUpdated, GETDATE()) as lastUpdated,
						pty.*,
						pr.tPerson_id,
						cc.tCase_id,
						sc.tSubCase_id
						FROM party_conv pty
						INNER JOIN person_conv pr
						ON pty.person_id = pr.id AND pty.case_id = pr.case_id
						INNER JOIN case_conv cc
						ON pty.case_id = cc.id
						INNER JOIN subCase_conv sc
						ON cc.id = sc.case_id AND convSubCaseType = 'TP'
						WHERE partyType  IN  ('DEFT3', 'PLTF3')
						]]>							
						</param>
							<param name="idColumnName">tParty_id</param>
							<param name="whereColumnName">idKey</param>						
					</params>
					<mappings>					
						<mapping source="tPerson_id" dest="person_id"/>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="allowPublicAccess" dest="allowPublicAccess"/>
						<mapping source="cmsReferenceId" dest="cmsReferenceId"/>
						<mapping source="crsExemptOverride" dest="crsExemptOverride"/>
						<mapping source="dispositionDate" dest="dispositionDate"/>
						<mapping source="dispositionManner" dest="dispositionManner"/>
						<mapping source="dispositionType" dest="dispositionType"/>
						<mapping source="efmReferenceId" dest="efmReferenceId"/>
						<mapping source="endDate" dest="endDate"/>
						<mapping source="exemptEligible" dest="exemptEligible"/>
						<mapping source="formerRepresentationText" dest="formerRepresentationText"/>
						<mapping source="nonMonApplication" dest="nonMonApplication"/>
						<mapping source="partyDesignationType" dest="partyDesignationType"/>
						<mapping source="partyNumber" dest="partyNumber"/>
						<mapping source="partySource" dest="partySource"/>
						<mapping source="partySubType" dest="partySubType"/>
						<mapping source="partyType" dest="partyType"/>
						<mapping source="representationText" dest="representationText"/>
						<mapping source="representingPartyType" dest="representingPartyType"/>
						<mapping source="selfRepresented" dest="selfRepresented"/>
						<mapping source="startDate" dest="startDate"/>
						<mapping source="status" dest="status"/>
						<mapping source="statusDate" dest="statusDate"/>
						<mapping source="stayDate" dest="stayDate"/>
						<mapping source="stayEndDate" dest="stayEndDate"/>
						<mapping source="stayStatus" dest="stayStatus"/>
						<mapping source="tCase_id" dest="case_id"/>
						<mapping source="exportBatch_id" dest="exportBatch_id"/>
						<mapping source="exportCompletedBatch_id" dest="exportCompletedBatch_id"/>
						<mapping source="exportFailedBatch_id" dest="exportFailedBatch_id"/>
						<mapping source="tSubCase_id" dest="subCase_id"/>
					
					
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tParty"/>
				</action>
				
					
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Party - CR" enabled="true">
					<source database="${sql.staging.db}" schema="dbo" table="party_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						SELECT
						COALESCE(pty.createUserRealName, 'conv' ) as createUserRealName,
						COALESCE(pty.createUsername, 'conv' ) as createUsername ,
						COALESCE(pty.dateCreated, GETDATE()) as dateCreated,
						COALESCE(pty.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
						COALESCE(pty.lastUpdateUsername, 'conv') as lastUpdateUsername ,
						COALESCE(pty.lastUpdated, GETDATE()) as lastUpdated,
						pty.*,
						pr.tPerson_id,
						cc.tCase_id,
						sc.tSubCase_id
						FROM party_conv pty
						INNER JOIN person_conv pr
						ON pty.person_id = pr.id AND pty.caseNumber = pr.caseNumber
						INNER JOIN case_conv cc
						ON cc.caseNumber = pty.CaseNumber
						INNER JOIN convertCases_conv cv
						ON cc.id = cv.case_id
						INNER JOIN subCase_conv sc
						ON cc.id = sc.case_id AND cc.caseNumber = sc.caseNumber
						WHERE  cv.caseGroup = 'CR' 
						]]>							
						</param>
							<param name="idColumnName">tParty_id</param>
							<param name="whereColumnName">idKey</param>						
					</params>
					<mappings>					
						<mapping source="tPerson_id" dest="person_id"/>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="allowPublicAccess" dest="allowPublicAccess"/>
						<mapping source="cmsReferenceId" dest="cmsReferenceId"/>
						<mapping source="crsExemptOverride" dest="crsExemptOverride"/>
						<mapping source="dispositionDate" dest="dispositionDate"/>
						<mapping source="dispositionManner" dest="dispositionManner"/>
						<mapping source="dispositionType" dest="dispositionType"/>
						<mapping source="efmReferenceId" dest="efmReferenceId"/>
						<mapping source="endDate" dest="endDate"/>
						<mapping source="exemptEligible" dest="exemptEligible"/>
						<mapping source="formerRepresentationText" dest="formerRepresentationText"/>
						<mapping source="nonMonApplication" dest="nonMonApplication"/>
						<mapping source="partyDesignationType" dest="partyDesignationType"/>
						<mapping source="partyNumber" dest="partyNumber"/>
						<mapping source="partySource" dest="partySource"/>
						<mapping source="partySubType" dest="partySubType"/>
						<mapping source="partyType" dest="partyType"/>
						<mapping source="representationText" dest="representationText"/>
						<mapping source="representingPartyType" dest="representingPartyType"/>
						<mapping source="selfRepresented" dest="selfRepresented"/>
						<mapping source="startDate" dest="startDate"/>
						<mapping source="status" dest="status"/>
						<mapping source="statusDate" dest="statusDate"/>
						<mapping source="stayDate" dest="stayDate"/>
						<mapping source="stayEndDate" dest="stayEndDate"/>
						<mapping source="stayStatus" dest="stayStatus"/>
						<mapping source="tCase_id" dest="case_id"/>
						<mapping source="exportBatch_id" dest="exportBatch_id"/>
						<mapping source="exportCompletedBatch_id" dest="exportCompletedBatch_id"/>
						<mapping source="exportFailedBatch_id" dest="exportFailedBatch_id"/>
						<mapping source="tSubCase_id" dest="subCase_id"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tParty"/>
				</action>
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Party - NA" enabled="true">
					<source database="${sql.staging.db}" schema="dbo" table="party_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						SELECT
						COALESCE(pty.createUserRealName, 'conv' ) as createUserRealName,
						COALESCE(pty.createUsername, 'conv' ) as createUsername ,
						COALESCE(pty.dateCreated, GETDATE()) as dateCreated,
						COALESCE(pty.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
						COALESCE(pty.lastUpdateUsername, 'conv') as lastUpdateUsername ,
						COALESCE(pty.lastUpdated, GETDATE()) as lastUpdated,
						pty.*,
						pr.tPerson_id,
						cc.tCase_id,
						sc.tSubCase_id
						FROM party_conv pty
						INNER JOIN person_conv pr
						ON pty.person_id = pr.id AND pty.caseNumber = pr.caseNumber
						INNER JOIN case_conv cc
						ON cc.caseNumber = pty.CaseNumber
						INNER JOIN convertCases_conv cv
						ON cc.id = cv.case_id
						INNER JOIN subCase_conv sc
						ON cc.id = sc.case_id AND cc.caseNumber = sc.caseNumber
						WHERE  cv.caseGroup = 'NA' 
						]]>							
						</param>
							<param name="idColumnName">tParty_id</param>
							<param name="whereColumnName">idKey</param>						
					</params>
					<mappings>					
						<mapping source="tPerson_id" dest="person_id"/>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="allowPublicAccess" dest="allowPublicAccess"/>
						<mapping source="cmsReferenceId" dest="cmsReferenceId"/>
						<mapping source="crsExemptOverride" dest="crsExemptOverride"/>
						<mapping source="dispositionDate" dest="dispositionDate"/>
						<mapping source="dispositionManner" dest="dispositionManner"/>
						<mapping source="dispositionType" dest="dispositionType"/>
						<mapping source="efmReferenceId" dest="efmReferenceId"/>
						<mapping source="endDate" dest="endDate"/>
						<mapping source="exemptEligible" dest="exemptEligible"/>
						<mapping source="formerRepresentationText" dest="formerRepresentationText"/>
						<mapping source="nonMonApplication" dest="nonMonApplication"/>
						<mapping source="partyDesignationType" dest="partyDesignationType"/>
						<mapping source="partyNumber" dest="partyNumber"/>
						<mapping source="partySource" dest="partySource"/>
						<mapping source="partySubType" dest="partySubType"/>
						<mapping source="partyType" dest="partyType"/>
						<mapping source="representationText" dest="representationText"/>
						<mapping source="representingPartyType" dest="representingPartyType"/>
						<mapping source="selfRepresented" dest="selfRepresented"/>
						<mapping source="startDate" dest="startDate"/>
						<mapping source="status" dest="status"/>
						<mapping source="statusDate" dest="statusDate"/>
						<mapping source="stayDate" dest="stayDate"/>
						<mapping source="stayEndDate" dest="stayEndDate"/>
						<mapping source="stayStatus" dest="stayStatus"/>
						<mapping source="tCase_id" dest="case_id"/>
						<mapping source="exportBatch_id" dest="exportBatch_id"/>
						<mapping source="exportCompletedBatch_id" dest="exportCompletedBatch_id"/>
						<mapping source="exportFailedBatch_id" dest="exportFailedBatch_id"/>
						<mapping source="tSubCase_id" dest="subCase_id"/>
						
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tParty"/>
				</action>
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Person - TR Clearance Report" enabled="false">
					<source database="${sql.staging.db}" schema="dbo" table="caseTR_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						SELECT
						'conv' as createUserRealName,
						'conv' as createUsername ,
						GETDATE() as dateCreated,
						'conv' as lastUpdateUserRealName,
						'conv' as lastUpdateUsername ,
						GETDATE() as lastUpdated,
						0 as optlock,
						firstName,
						middleName,
						lastName,
						nameSuffix,
						namePrefix,
						idKey,
						tPID as personIdentifier_id
						FROM caseTR_conv
						
						]]>							
						</param>
							<param name="idColumnName">tPerson_id</param>
							<param name="whereColumnName">idKey</param>						
					</params>
					<mappings>					

						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="firstName" dest="firstName"/>
						<mapping source="middleName" dest="middleName"/>
						<mapping source="lastName" dest="lastName"/>
						<mapping source="nameSuffix" dest="nameSuffix"/>
						<mapping source="namePrefix" dest="namePrefix"/>
						<mapping source="personIdentifier_id" dest="personIdentifier_id"/>
					
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tPerson"/>
				</action>
				
				
					
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Part - TR Clearance Report" enabled="false">
					<source database="${sql.staging.db}" schema="dbo" table="person_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						SELECT
						'conv' as createUserRealName,
						'conv' as createUsername ,
						GETDATE() as dateCreated,
						'conv' as lastUpdateUserRealName,
						'conv' as lastUpdateUsername ,
						GETDATE() as lastUpdated,
						0 as optlock,
						'INTP' as partyType,
						tCaseTR_id,
						tPerson_id,
						idKey,
						'ANY' nonMonApplication,
						tSubCaseTR_id as subCase_id

						FROM person_conv WHERE tCaseTR_id IS NOT NULL
						
						]]>							
						</param>
							<param name="idColumnName">tPartyTR_id</param>
							<param name="whereColumnName">idKey</param>						
					</params>
					<mappings>					

						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="partyType" dest="partyType"/>
						<mapping source="tCaseTR_id" dest="case_id"/>
						<mapping source="tPerson_id" dest="person_id"/>
						<mapping source="nonMonApplication" dest="nonMonApplication"/>
						<mapping source="subCase_id" dest="subCase_id"/>
					
					
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tParty"/>
				</action>
				
				
				
			</actions>
		</stage>	
		
		<stage num="506" mode="Serial" desc="Load address" enabled="true">
			<actions>
				
						
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Address">
					<source database="${sql.staging.db}" schema="dbo" table="address2_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT 
							createUserRealName = COALESCE(ad.createUserRealName, 'conv' ),
							createUsername = COALESCE(ad.createUsername, 'conv' ) ,
							dateCreated = COALESCE(ad.dateCreated, @today),
							lastUpdateUserRealName = COALESCE(ad.lastUpdateUserRealName, 'conv' ),
							lastUpdateUsername = COALESCE(ad.lastUpdateUsername, 'conv') ,
							lastUpdated = COALESCE(ad.lastUpdated, @today),
							*, pc.tPerson_id FROM ${sql.staging.db}.dbo.address2_conv ad
							LEFT JOIN ${sql.staging.db}.dbo.person_conv pc
							ON ad.associatedPerson_id = pc.id
							
						
						]]>							
						</param>	
												
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="notes" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="address1" dest="address1"/>
						<mapping source="address2" dest="address2"/>
						<mapping source="addressType" dest="addressType"/>
						<mapping source="city" dest="city"/>
						<mapping source="country" dest="country"/>
						<mapping source="county" dest="county"/>
						<mapping source="effectiveFrom" dest="effectiveFrom"/>
						<mapping source="effectiveTo" dest="effectiveTo"/>
						<mapping source="forNotification" dest="forNotification"/>
						<mapping source="hundredBlock" dest="hundredBlock"/>
						<mapping source="intersection" dest="intersection"/>
						<mapping source="intersectionAbbr" dest="intersectionAbbr"/>
						<mapping source="latitude" dest="latitude"/>
						<mapping source="longitude" dest="longitude"/>
						<mapping source="number" dest="number"/>
						<mapping source="numberPrefix" dest="numberPrefix"/>
						<mapping source="numberSuffix" dest="numberSuffix"/>
						<mapping source="pin" dest="pin"/>
						<mapping source="preferred" dest="preferred"/>
						<mapping source="sourceId" dest="sourceId"/>
						<mapping source="state" dest="state"/>
						<mapping source="status" dest="status"/>
						<mapping source="statusDate" dest="statusDate"/>
						<mapping source="streetName" dest="streetName"/>
						<mapping source="streetNamePostDirectional" dest="streetNamePostDirectional"/>
						<mapping source="streetNamePostType" dest="streetNamePostType"/>
						<mapping source="streetNamePreDirectional" dest="streetNamePreDirectional"/>
						<mapping source="streetNamePreType" dest="streetNamePreType"/>
						<mapping source="structure" dest="structure"/>
						<mapping source="subDivision" dest="subDivision"/>
						<mapping source="taxCode" dest="taxCode"/>
						<mapping source="township" dest="township"/>
						<mapping source="verificationStatus" dest="verificationStatus"/>
						<mapping source="zip" dest="zip"/>
						<mapping source="zip4" dest="zip4"/>
						<mapping source="zoning" dest="zoning"/>
						<mapping source="addressIdentifier_id" dest="addressIdentifier_id"/>
						<mapping source="tPerson_id" dest="associatedPerson_id"/>
			
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tAddress"/>
				</action>
				

			</actions>
		</stage>	
		
		<stage num="508" mode="Serial" desc="Load telephone" enabled="true">
			<actions>
				
						
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Address">
					<source database="${sql.staging.db}" schema="dbo" table="telephone2_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT 
							COALESCE(t.createUserRealName, 'conv' ) as createUserRealName,
							COALESCE(t.createUsername, 'conv' ) as createUsername ,
							COALESCE(t.dateCreated, @today) as dateCreated,
							COALESCE(t.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
							COALESCE(t.lastUpdateUsername, 'conv') as lastUpdateUsername ,
							COALESCE(t.lastUpdated, @today) as lastUpdated,
							*, pc.tPerson_id FROM ${sql.staging.db}.dbo.telephone2_conv t
							LEFT JOIN ${sql.staging.db}.dbo.person_conv pc
							ON t.associatedPerson_id = pc.id
							
							
						]]>							
						</param>	
												
					</params>
					<mappings>
						<mapping source="id" dest="id"/>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="notes" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="areaCode" dest="areaCode"/>
						<mapping source="countryCode" dest="countryCode"/>
						<mapping source="effectiveFrom" dest="effectiveFrom"/>
						<mapping source="effectiveTo" dest="effectiveTo"/>
						<mapping source="extension" dest="extension"/>
						<mapping source="forNotification" dest="forNotification"/>
						<mapping source="preferred" dest="preferred"/>
						<mapping source="telephoneNumber" dest="telephoneNumber"/>
						<mapping source="telephoneType" dest="telephoneType"/>
						<mapping source="tPerson_id" dest="associatedPerson_id"/>
						
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tTelephone"/>
				</action>
				

			</actions>
		</stage>	
		
		<stage num="510" mode="Serial" desc="Load PersonProfile" enabled="true">
			<actions>
				
						
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading PersonProfile">
					<source database="${sql.staging.db}" schema="dbo"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT
							COALESCE(pp.createUserRealName, 'conv' ) as createUserRealName,
							COALESCE(pp.createUsername, 'conv' ) as createUsername ,
							COALESCE(pp.dateCreated, @today) as dateCreated,
							COALESCE(pp.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
							COALESCE(pp.lastUpdateUsername, 'conv') as lastUpdateUsername ,
							COALESCE(pp.lastUpdated, @today) as lastUpdated,
							*, pc.tPerson_id FROM ${sql.staging.db}.dbo.personProfile_conv pp
							LEFT JOIN ${sql.staging.db}.dbo.person_conv pc
							ON pp.associatedPerson_id = pc.id
							
							
						]]>							
						</param>	
												
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="canRead" dest="canRead"/>
						<mapping source="canWrite" dest="canWrite"/>
						<mapping source="citizenship" dest="citizenship"/>
						<mapping source="dateOfBirth" dest="dateOfBirth"/>
						<mapping source="dateOfBirth2" dest="dateOfBirth2"/>
						<mapping source="dateOfBirth3" dest="dateOfBirth3"/>
						<mapping source="dateOfDeath" dest="dateOfDeath"/>
						<mapping source="dateOfMajority" dest="dateOfMajority"/>
						<mapping source="ethnicity" dest="ethnicity"/>
						<mapping source="eyeColor" dest="eyeColor"/>
						<mapping source="gender" dest="gender"/>
						<mapping source="hairColor" dest="hairColor"/>
						<mapping source="hasIEP" dest="hasIEP"/>
						<mapping source="height" dest="height"/>
						<mapping source="maritalStatus" dest="maritalStatus"/>
						<mapping source="militaryStatus" dest="militaryStatus"/>
						<mapping source="occupation" dest="occupation"/>
						<mapping source="placeOfBirth" dest="placeOfBirth"/>
						<mapping source="placeOfDeath" dest="placeOfDeath"/>
						<mapping source="primaryLanguage" dest="primaryLanguage"/>
						<mapping source="profileType" dest="profileType"/>
						<mapping source="religion" dest="religion"/>
						<mapping source="secondaryLanguage" dest="secondaryLanguage"/>
						<mapping source="weight" dest="weight"/>
						<mapping source="tPerson_id" dest="associatedPerson_id"/>
						<mapping source="race" dest="race"/>
						<mapping source="dateOfMarriage" dest="dateOfMarriage"/>
						<mapping source="dateOfSeparation" dest="dateOfSeparation"/>
						<mapping source="dateOfBirthStatus" dest="dateOfBirthStatus"/>
						<mapping source="dateOfDeathStatus" dest="dateOfDeathStatus"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tPersonProfile"/>
				</action>
				

			</actions>
		</stage>	
		
		<stage num="512" mode="Serial" desc="Load CaseContact" enabled="true">
			<actions>
				
						
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading PersonProfile">
					<source database="${sql.staging.db}" schema="dbo"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT 
							COALESCE(cc.createUserRealName, 'conv' ) as createUserRealName,
							COALESCE(cc.createUsername, 'conv' ) as createUsername ,
							COALESCE(cc.dateCreated, @today) as dateCreated,
							COALESCE(cc.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
							COALESCE(cc.lastUpdateUsername, 'conv') as lastUpdateUsername ,
							COALESCE(cc.lastUpdated, @today) as lastUpdated,
							*, pc.tPerson_id FROM  ${sql.staging.db}.dbo.caseContact_conv cc
							LEFT JOIN ${sql.staging.db}.dbo.person_conv pc
							ON cc.associatedPerson_id = pc.id
							
							
						]]>							
						</param>	
												
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="notes" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="contact" dest="contact"/>
						<mapping source="effectiveFrom" dest="effectiveFrom"/>
						<mapping source="effectiveTo" dest="effectiveTo"/>
						<mapping source="forNotification" dest="forNotification"/>
						<mapping source="type" dest="type"/>
						<mapping source="tPerson_id" dest="associatedPerson_id"/>
						<mapping source="preferred" dest="preferred"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tCaseContact"/>
				</action>
				

			</actions>
		</stage>	
		
		<stage num="514" mode="Serial" desc="Load Identification" enabled="true">
			<actions>
				
						
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading PersonProfile">
					<source database="${sql.staging.db}" schema="dbo"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT 
							COALESCE(i.createUserRealName, 'conv' ) as createUserRealName,
							COALESCE(i.createUsername, 'conv' ) as createUsername ,
							COALESCE(i.dateCreated, @today) as dateCreated,
							COALESCE(i.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
							COALESCE(i.lastUpdateUsername, 'conv') as lastUpdateUsername ,
							COALESCE(i.lastUpdated, @today) as lastUpdated,
							*, pc.tPerson_id FROM ${sql.staging.db}.dbo.identification_conv i
							LEFT JOIN ${sql.staging.db}.dbo.person_conv pc
							ON i.associatedPerson_id = pc.id
							
							
						]]>							
						</param>	
											
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="notes" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="effectiveFrom" dest="effectiveFrom"/>
						<mapping source="effectiveTo" dest="effectiveTo"/>
						<mapping source="identificationClass" dest="identificationClass"/>
						<mapping source="identificationNumber" dest="identificationNumber"/>
						<mapping source="identificationType" dest="identificationType"/>
						<mapping source="issuerCity" dest="issuerCity"/>
						<mapping source="issuerCountry" dest="issuerCountry"/>
						<mapping source="issuerName" dest="issuerName"/>
						<mapping source="issuerState" dest="issuerState"/>
						<mapping source="ivrDlNumber" dest="ivrDlNumber"/>
						<mapping source="status" dest="status"/>
						<mapping source="statusDate" dest="statusDate"/>
						<mapping source="tPerson_id" dest="associatedPerson_id"/>
					
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tIdentification"/>
				</action>
				

			</actions>
		</stage>	
		
		<stage num="516" mode="Serial" desc="Load Scheduled Event" enabled="true">
			<actions>
				
						
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading scheduledEvent">
					<source database="${sql.staging.db}" schema="dbo" table="scheduledEvent_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT 
							COALESCE(se.createUserRealName, 'conv' ) as createUserRealName,
							COALESCE(se.createUsername, 'conv' ) as createUsername ,
							COALESCE(se.dateCreated, @today) as dateCreated,
							COALESCE(se.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
							COALESCE(se.lastUpdateUsername, 'conv') as lastUpdateUsername ,
							COALESCE(se.lastUpdated, @today) as lastUpdated,
							se.*, cc.tCase_id FROM ${sql.staging.db}.dbo.scheduledEvent_conv se
							LEFT JOIN ${sql.staging.db}.dbo.case_conv cc
							ON se.case_id = cc.id AND se.caseKey = cc.idKey
							WHERE tCase_id IS NOT NULL AND type IS NOT NULL
							
						]]>							
						</param>	
						<param name="idColumnName">tScheduledEvent_id</param>
						<param name="whereColumnName">idKey</param>					
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="addOn" dest="addOn"/>
						<mapping source="addOnNumber" dest="addOnNumber"/>
						<mapping source="appearanceMethod" dest="appearanceMethod"/>
						<mapping source="assigneeCode" dest="assigneeCode"/>
						<mapping source="assigneeName" dest="assigneeName"/>
						<mapping source="calendarNote" dest="calendarNote"/>
						<mapping source="caseUnit" dest="caseUnit"/>
						<mapping source="checkedIn" dest="checkedIn"/>
						<mapping source="cmsReferenceId" dest="cmsReferenceId"/>
						<mapping source="concurrentCase" dest="concurrentCase"/>
						<mapping source="concurrentEvent" dest="concurrentEvent"/>
						<mapping source="consecutiveCase" dest="consecutiveCase"/>
						<mapping source="consecutiveEvent" dest="consecutiveEvent"/>
						<mapping source="crsBalance" dest="crsBalance"/>
						<mapping source="crsContactName" dest="crsContactName"/>
						<mapping source="crsNumber" dest="crsNumber"/>
						<mapping source="crsNumberOfMotions" dest="crsNumberOfMotions"/>
						<mapping source="crsPartyNames" dest="crsPartyNames"/>
						<mapping source="csrContactEmail" dest="csrContactEmail"/>
						<mapping source="csrContactSecondaryEmail" dest="csrContactSecondaryEmail"/>
						<mapping source="csrContactTelephone" dest="csrContactTelephone"/>
						<mapping source="daysExcluded" dest="daysExcluded"/>
						<mapping source="daysOut" dest="daysOut"/>
						<mapping source="daysToExpiry" dest="daysToExpiry"/>
						<mapping source="description" dest="description"/>
						<mapping source="displayColor" dest="displayColor"/>
						<mapping source="docketNumber" dest="docketNumber"/>
						<mapping source="durationMinutes" dest="durationMinutes"/>
						<mapping source="efmNewEvent" dest="efmNewEvent"/>
						<mapping source="efmReferenceId" dest="efmReferenceId"/>
						<mapping source="endDateTime" dest="endDateTime"/>
						<mapping source="estimatedDays" dest="estimatedDays"/>
						<mapping source="estimatedHours" dest="estimatedHours"/>
						<mapping source="estimatedMinutes" dest="estimatedMinutes"/>
						<mapping source="eventCategory" dest="eventCategory"/>
						<mapping source="eventStatus" dest="eventStatus"/>
						<mapping source="exParte" dest="exParte"/>
						<mapping source="exchangeId" dest="exchangeId"/>
						<mapping source="exportToExchange" dest="exportToExchange"/>
						<mapping source="languagesMemo" dest="languagesMemo"/>
						<mapping source="masterCalendar" dest="masterCalendar"/>
						<mapping source="minutesLocked" dest="minutesLocked"/>
						<mapping source="minutesMode" dest="minutesMode"/>
						<mapping source="minutesReviewType" dest="minutesReviewType"/>
						<mapping source="minutesStatus" dest="minutesStatus"/>
						<mapping source="multiFilerCode" dest="multiFilerCode"/>
						<mapping source="multiMotion" dest="multiMotion"/>
						<mapping source="nameExtension" dest="nameExtension"/>
						<mapping source="orderValue" dest="orderValue"/>
						<mapping source="partOfDocket" dest="partOfDocket"/>
						<mapping source="publish" dest="publish"/>
						<mapping source="recurrenceKey" dest="recurrenceKey"/>
						<mapping source="resultDate" dest="resultDate"/>
						<mapping source="resultMemo" dest="resultMemo"/>
						<mapping source="resultRequestedBy" dest="resultRequestedBy"/>
						<mapping source="resultType" dest="resultType"/>
						<mapping source="standardDuration" dest="standardDuration"/>
						<mapping source="startDateTime" dest="startDateTime"/>
						<mapping source="subType" dest="subType"/>
						<mapping source="timeSlotCount" dest="timeSlotCount"/>
						<mapping source="trialType" dest="trialType"/>
						<mapping source="type" dest="type"/>
						<mapping source="tCase_id" dest="case_id"/>
						<mapping source="dirLocation_Load" dest="eventLocation_id"/>
						<mapping source="lastMinutesOrder_id" dest="lastMinutesOrder_id"/>
						<mapping source="lastMinutesResult_id" dest="lastMinutesResult_id"/>
						<mapping source="meeting_id" dest="meeting_id"/>
						<mapping source="minutesRelatedParent_id" dest="minutesRelatedParent_id"/>
						<mapping source="proceeding_id" dest="proceeding_id"/>
						<mapping source="rescheduledTo_id" dest="rescheduledTo_id"/>
						<mapping source="subCase_id" dest="subCase_id"/>
						<mapping source="slotCode" dest="slotCode"/>
						<mapping source="slotId" dest="slotId"/>
						<mapping source="joinStatus" dest="joinStatus"/>
						<mapping source="tentativeAttached" dest="tentativeAttached"/>
						<mapping source="lastTentativeMinutesOrder_id" dest="lastTentativeMinutesOrder_id"/>
						<mapping source="source" dest="source"/>
						<mapping source="isRecurringEvent" dest="isRecurringEvent"/>
						<mapping source="tsTemplateCode" dest="tsTemplateCode"/>
						<mapping source="weight" dest="weight"/>
						<mapping source="task" dest="task"/>
						<mapping source="googleCalendarId" dest="googleCalendarId"/>
						<mapping source="probateNotesAttached" dest="probateNotesAttached"/>
						<mapping source="lastProbateNotes_id" dest="lastProbateNotes_id"/>
						<mapping source="addOnType" dest="addOnType"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tScheduledEvent"/>
				</action>
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading scheduledEvent - Case Note">
					<source database="${sql.staging.db}" schema="dbo" table="scheduledEvent_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT 
							COALESCE(se.createUserRealName, 'conv' ) as createUserRealName,
							COALESCE(se.createUsername, 'conv' ) as createUsername ,
							COALESCE(se.dateCreated, @today) as dateCreated,
							COALESCE(se.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
							COALESCE(se.lastUpdateUsername, 'conv') as lastUpdateUsername ,
							COALESCE(se.lastUpdated, @today) as lastUpdated,
							'CNOTE' as type ,
							noteDate = startDateTime,
							'WHITE' as color,
							0 as sharingLevel,
							0 as optlock,
							se.idKey,
							se.accessLevel,
							content = CONCAT('Converted Event: ', cfAdditionalInfo),
							cc.tCase_id FROM ${sql.staging.db}.dbo.scheduledEvent_conv se
							LEFT JOIN ${sql.staging.db}.dbo.case_conv cc
							ON se.case_id = cc.id AND se.caseKey = cc.idKey
							WHERE caseNoteFlg = 1 
							
						]]>							
						</param>	
						<param name="idColumnName">tCaseNote_id</param>
						<param name="whereColumnName">idKey</param>					
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="type" dest="type"/>
						<mapping source="content" dest="content"/>
						<mapping source="color" dest="color"/>
						<mapping source="sharingLevel" dest="sharingLevel"/>
						<mapping source="tCase_id" dest="case_id"/>
						<mapping source="noteDate" dest="noteDate"/>
						
					
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tCaseNote"/>
				</action>
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading scheduledEvent - Documents">
					<source database="${sql.staging.db}" schema="dbo" table="scheduledEvent_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT 
							COALESCE(se.createUserRealName, 'conv' ) as createUserRealName,
							COALESCE(se.createUsername, 'conv' ) as createUsername ,
							COALESCE(se.dateCreated, @today) as dateCreated,
							COALESCE(se.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
							COALESCE(se.lastUpdateUsername, 'conv') as lastUpdateUsername ,
							COALESCE(se.lastUpdated, @today) as lastUpdated,
							filingDate = startDateTime,
							0 as optlock,
							se.idKey,
							se.accessLevel,
							docDef_id,
							cfAdditionalInfo,
							status = 'FILED',
							cc.tCase_id FROM ${sql.staging.db}.dbo.scheduledEvent_conv se
							LEFT JOIN ${sql.staging.db}.dbo.case_conv cc
							ON se.case_id = cc.id AND se.caseKey = cc.idKey
							WHERE caseNoteFlg = 0 and tScheduledEvent_id IS NULL
							
						]]>							
						</param>	
						<param name="idColumnName">tDocument_id</param>
						<param name="whereColumnName">idKey</param>					
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="docDef_id" dest="docDef_id"/>
						<mapping source="cfAdditionalInfo" dest="cfAdditionalInfo"/>
						<mapping source="tCase_id" dest="case_id"/>
						<mapping source="filingDate" dest="dateFiled"/>
						<mapping source="filingDate" dest="statusDate"/>
						<mapping source="status" dest="status"/>
						
					
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tDocument"/>
				</action>
				
				

			</actions>
		</stage> 	
		
		<stage num="518" mode="Serial" desc="Load Case Seal" enabled="true">
			<actions>
				
						
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Case Seal">
					<source database="${sql.staging.db}" schema="dbo"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT 
							COALESCE(se.createUserRealName, 'conv' ) as createUserRealName,
							COALESCE(se.createUsername, 'conv' ) as createUsername ,
							COALESCE(se.dateCreated, @today) as dateCreated,
							COALESCE(se.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
							COALESCE(se.lastUpdateUsername, 'conv') as lastUpdateUsername ,
							COALESCE(se.lastUpdated, @today) as lastUpdated,
							*, cc.tCase_id FROM ${sql.staging.db}.dbo.caseSeal_conv se
							LEFT JOIN ${sql.staging.db}.dbo.case_conv cc
							ON se.case_id = cc.id
							WHERE tCase_id IS NOT NULL
							
						]]>							
						</param>	
												
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="effectiveFrom" dest="effectiveFrom"/>
						<mapping source="effectiveTo" dest="effectiveTo"/>
						<mapping source="type" dest="type"/>
						<mapping source="tCase_id" dest="case_id"/>

					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tCaseSeal"/>
				</action>
				

			</actions>
		</stage> 	
		
		<stage num="520" mode="Serial" desc="Load Case Note" enabled="false">
			<actions>
				
						
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Case Note">
					<source database="${sql.staging.db}" schema="dbo"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT 
							COALESCE(cn.createUserRealName, 'conv' ) as createUserRealName,
							COALESCE(cn.createUsername, 'conv' ) as createUsername ,
							COALESCE(cn.dateCreated, @today) as dateCreated,
							COALESCE(cn.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
							COALESCE(cn.lastUpdateUsername, 'conv') as lastUpdateUsername ,
							COALESCE(cn.lastUpdated, @today) as lastUpdated,
							*, cc.tCase_id, COALESCE(cn.noteDate, cn.lastUpdated, GETDATE()) as noteDate_ld FROM cnmiStaging.dbo.caseNote_conv cn
							LEFT JOIN cnmiStaging.dbo.case_conv cc
							ON cn.case_id = cc.id
							WHERE tCase_id IS NOT NULL 
							
						]]>							
						</param>	
												
					</params>
					<mappings>
							<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="attachedEntity" dest="attachedEntity"/>
						<mapping source="attachedId" dest="attachedId"/>
						<mapping source="color" dest="color"/>
						<mapping source="completed" dest="completed"/>
						<mapping source="content" dest="content"/>
						<mapping source="dueDate" dest="dueDate"/>
						<mapping source="noteDate_ld" dest="noteDate"/>
						<mapping source="sharedToAuthorityNames" dest="sharedToAuthorityNames"/>
						<mapping source="sharedToUsernames" dest="sharedToUsernames"/>
						<mapping source="sharingLevel" dest="sharingLevel"/>
						<mapping source="stripedContent" dest="stripedContent"/>
						<mapping source="title" dest="title"/>
						<mapping source="toDate" dest="toDate"/>
						<mapping source="type" dest="type"/>
						<mapping source="username" dest="username"/>
						<mapping source="assignedUser_id" dest="assignedUser_id"/>
						<mapping source="tCase_id" dest="case_id"/>
						<mapping source="convId" dest="convId"/>
						<mapping source="convId_table" dest="convId_table"/>
						<mapping source="cfCorrespondenceType" dest="cfCorrespondenceType"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tCaseNote"/>
				</action>
				
				
				

			</actions>
		</stage> 	
		
			
		<stage num="522" mode="Serial" desc="Load Exhibit" enabled="true">
			<actions>
				
						
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Exhibit">
					<source database="${sql.staging.db}" schema="dbo" table="exhibit_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT 
							COALESCE(e.createUserRealName, 'conv' ) as createUserRealName,
							COALESCE(e.createUsername, 'conv' ) as createUsername ,
							COALESCE(e.dateCreated, @today) as dateCreated,
							COALESCE(e.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
							COALESCE(e.lastUpdateUsername, 'conv') as lastUpdateUsername ,
							COALESCE(e.lastUpdated, @today) as lastUpdated,
							e.*, cc.tCase_id FROM ${sql.staging.db}.dbo.exhibit_conv e
							LEFT JOIN ${sql.staging.db}.dbo.case_conv cc
							ON e.case_id = cc.id AND e.caseNumber = cc.caseNumber
							WHERE tCase_id IS NOT NULL
							
						]]>							
						</param>
							<param name="idColumnName">texhibit_id</param>
							<param name="whereColumnName">idKey</param>						
												
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="dateReceived" dest="dateReceived"/>
						<mapping source="notes" dest="description"/>
						<mapping source="disposalRequired" dest="disposalRequired"/>
						<mapping source="disposeBy" dest="disposeBy"/>
						<mapping source="disposition" dest="disposition"/>
						<mapping source="exhibitNumber" dest="exhibitNumber"/>
						<mapping source="exhibitNumberInt" dest="exhibitNumberInt"/>
						<mapping source="exhibitSubType" dest="exhibitSubType"/>
						<mapping source="exhibitType" dest="exhibitType"/>
						<mapping source="status" dest="status"/>
						<mapping source="statusDate" dest="statusDate"/>
						<mapping source="submittedBy" dest="submittedBy"/>
						<mapping source="tCase_id" dest="case_id"/>
						<mapping source="proceeding_id" dest="proceeding_id"/>
						<mapping source="subCase_id" dest="subCase_id"/>

					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tExhibit"/>
				</action>
				
							
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Exhibit Tracking">
					<source database="${sql.staging.db}" schema="dbo" table="exhibit_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT et.*, e.texhibit_id FROM ${sql.staging.db}.dbo.exhibitTracking_conv et
							LEFT JOIN ${sql.staging.db}.dbo.exhibit_conv e
							ON e.id = et.exhibit_id
					
							
						]]>							
						</param>
							
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="dateEntered" dest="dateEntered"/>
						<mapping source="enteredBy" dest="enteredBy"/>
						<mapping source="notes" dest="notes"/>
						<mapping source="status" dest="status"/>
						<mapping source="statusDate" dest="statusDate"/>
						<mapping source="timeEntered" dest="timeEntered"/>
						<mapping source="viewedBy" dest="viewedBy"/>
						<mapping source="viewedByFirstName" dest="viewedByFirstName"/>
						<mapping source="viewedByLastName" dest="viewedByLastName"/>
						<mapping source="texhibit_id" dest="exhibit_id"/>
						<mapping source="locationLd" dest="location_id"/>
				
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tExhibitTracking"/>
				</action>
				
			</actions>
		</stage> 	
		
		
		<stage num="524" mode="Serial" desc="Load Person Note" enabled="true">
			<actions>
				
						
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Person Note">
					<source database="${sql.staging.db}" schema="dbo"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT 
							COALESCE(pn.createUserRealName, 'conv' ) as createUserRealName,
							COALESCE(pn.createUsername, 'conv' ) as createUsername ,
							COALESCE(pn.dateCreated, @today) as dateCreated,
							COALESCE(pn.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
							COALESCE(pn.lastUpdateUsername, 'conv') as lastUpdateUsername ,
							COALESCE(pn.lastUpdated, @today) as lastUpdated,
							pn.*, pc.tPerson_id FROM ${sql.staging.db}.dbo.personNote_conv pn
							LEFT JOIN ${sql.staging.db}.dbo.person_conv pc
							ON pn.person_id = pc.id
						
							
						]]>							
						</param>	
												
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="attachedEntity" dest="attachedEntity"/>
						<mapping source="attachedId" dest="attachedId"/>
						<mapping source="color" dest="color"/>
						<mapping source="completed" dest="completed"/>
						<mapping source="content" dest="content"/>
						<mapping source="dueDate" dest="dueDate"/>
						<mapping source="noteDate" dest="noteDate"/>
						<mapping source="sharedToAuthorityNames" dest="sharedToAuthorityNames"/>
						<mapping source="sharedToUsernames" dest="sharedToUsernames"/>
						<mapping source="sharingLevel" dest="sharingLevel"/>
						<mapping source="stripedContent" dest="stripedContent"/>
						<mapping source="title" dest="title"/>
						<mapping source="toDate" dest="toDate"/>
						<mapping source="type" dest="type"/>
						<mapping source="username" dest="username"/>
						<mapping source="assignedUser_id" dest="assignedUser_id"/>
						<mapping source="tPerson_id" dest="person_id"/>
				
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tPersonNote"/>
				</action>
				

			</actions>
		</stage> 	
		
		
		
		<stage num="526" mode="Serial" desc="Load Case Other Number" enabled="true">
			<actions>
				
						
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Case Other Number">
					<source database="${sql.staging.db}" schema="dbo" table="caseOtherNumber_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT 
							COALESCE(con.createUserRealName, 'conv' ) as createUserRealName,
							COALESCE(con.createUsername, 'conv' ) as createUsername ,
							COALESCE(con.dateCreated, @today) as dateCreated,
							COALESCE(con.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
							COALESCE(con.lastUpdateUsername, 'conv') as lastUpdateUsername ,
							COALESCE(con.lastUpdated, @today) as lastUpdated,
							con.*, cc.tCase_id FROM ${sql.staging.db}.dbo.caseOtherNumber_conv con
							LEFT JOIN ${sql.staging.db}.dbo.case_conv cc
							ON con.case_id = cc.id AND con.caseKey = cc.idKey
							WHERE tCase_id IS NOT NULL and  number IS NOT NULL
						
							
						]]>							
						</param>
						<param name="idColumnName">tCaseOtherNumber_id</param>
						<param name="whereColumnName">idKey</param>	
												
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="notes" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="endDate" dest="endDate"/>
						<mapping source="number" dest="number"/>
						<mapping source="startDate" dest="startDate"/>
						<mapping source="type" dest="type"/>
						<mapping source="tCase_id" dest="case_id"/>
						<mapping source="subCase_id" dest="subCase_id"/>
					<!--	<mapping source="active" dest="active"/>
						<mapping source="lead" dest="lead"/>
						<mapping source="dirOrgUnit_id" dest="dirOrgUnit_id"/> -->
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tCaseOtherNumber"/>
				</action>
				

			</actions>
		</stage> 	
		
		<stage num="528" mode="Serial" desc="Load Arrest" enabled="true">
			<actions>
				
						
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Case Other Number">
					<source database="${sql.staging.db}" schema="dbo"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT 
							COALESCE(a.createUserRealName, 'conv' ) as createUserRealName,
							COALESCE(a.createUsername, 'conv' ) as createUsername ,
							COALESCE(a.dateCreated, @today) as dateCreated,
							COALESCE(a.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
							COALESCE(a.lastUpdateUsername, 'conv') as lastUpdateUsername ,
							COALESCE(a.lastUpdated, @today) as lastUpdated,
							a.*, pty.tParty_id FROM ${sql.staging.db}.dbo.arrest_conv a
							LEFT JOIN ${sql.staging.db}.dbo.party_conv pty
							ON a.associatedParty_id = pty.id
						
						
							
						]]>							
						</param>	
												
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="arrestDate" dest="arrestDate"/>
						<mapping source="arrestTime" dest="arrestTime"/>
						<mapping source="arrestType" dest="arrestType"/>
						<mapping source="arrestingAgencyFileNumber" dest="arrestingAgencyFileNumber"/>
						<mapping source="bookingNumber" dest="bookingNumber"/>
						<mapping source="location" dest="location"/>
						<mapping source="statusDate" dest="statusDate"/>
						<mapping source="arrestingAgency_id" dest="arrestingAgency_id"/>
						<mapping source="tParty_id" dest="associatedParty_id"/>
						<mapping source="bookingAgency_id" dest="bookingAgency_id"/>
						<mapping source="officer_id" dest="officer_id"/>
						<mapping source="convId" dest="convId"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tArrest"/>
				</action>
				

			</actions>
		</stage> 	
		
		<stage num="530" mode="Serial" desc="Load Bail" enabled="true">
			<actions>
				
						
				
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Bail">
					<source database="${sql.staging.db}" schema="dbo" table="bailCondition_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT 
							0 as optlock,
							COALESCE(bc.createUserRealName, 'conv' ) as createUserRealName,
							COALESCE(bc.createUsername, 'conv' ) as createUsername ,
							COALESCE(bc.dateCreated, @today) as dateCreated,
							COALESCE(bc.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
							COALESCE(bc.lastUpdateUsername, 'conv') as lastUpdateUsername ,
							COALESCE(bc.lastUpdated, @today) as lastUpdated,
							idKey
							FROM bailCondition_conv bc
							WHERE conditionType = 'POST' AND tParty_id IS NULL
							

						]]>							
						</param>	
						<param name="idColumnName">tPID</param>
						<param name="whereColumnName">idKey</param>	
												
					</params>
					<mappings>
						<mapping source="createUserRealName" dest="createUserRealName"/>
					
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tPersonIdentifier"/>
				</action>
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Bail">
					<source database="${sql.staging.db}" schema="dbo" table="bailCondition_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT 
							0 as optlock,
							COALESCE(bc.createUserRealName, 'conv' ) as createUserRealName,
							COALESCE(bc.createUsername, 'conv' ) as createUsername ,
							COALESCE(bc.dateCreated, @today) as dateCreated,
							COALESCE(bc.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
							COALESCE(bc.lastUpdateUsername, 'conv') as lastUpdateUsername ,
							COALESCE(bc.lastUpdated, @today) as lastUpdated,
							idKey,
							notes as lastName,
							tPID as personIdentifier_id
							FROM bailCondition_conv bc
							WHERE conditionType = 'POST' AND tParty_id IS NULL
							

						]]>							
						</param>	
						<param name="idColumnName">tPerson_id</param>
						<param name="whereColumnName">idKey</param>	
												
					</params>
					<mappings>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="lastName" dest="lastName"/>
						<mapping source="personIdentifier_id" dest="personIdentifier_id"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tPerson"/>
				</action>
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Bail">
					<source database="${sql.staging.db}" schema="dbo" table="bailCondition_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT 
							0 as optlock,
							COALESCE(bc.createUserRealName, 'conv' ) as createUserRealName,
							COALESCE(bc.createUsername, 'conv' ) as createUsername ,
							COALESCE(bc.dateCreated, @today) as dateCreated,
							COALESCE(bc.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
							COALESCE(bc.lastUpdateUsername, 'conv') as lastUpdateUsername ,
							COALESCE(bc.lastUpdated, @today) as lastUpdated,
							bc.idKey,
							notes as lastName,
							'ANY' as nonMonApplication,
							tPerson_id as person_id,
							'BPAY' as partyType,
							cc.tCase_id as case_id 
							FROM bailCondition_conv bc
							LEFT JOIN case_conv cc
							ON bc.caseKey = cc.idKey
							WHERE conditionType = 'POST' AND tParty_id IS NULL
							

						]]>							
						</param>	
						<param name="idColumnName">tParty_id</param>
						<param name="whereColumnName">idKey</param>	
												
					</params>
					<mappings>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="person_id" dest="person_id"/>
						<mapping source="partyType" dest="partyType"/>
						<mapping source="case_id" dest="case_id"/>
						<mapping source="nonMonApplication" dest="nonMonApplication"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tParty"/>
				</action>
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Bail">
					<source database="${sql.staging.db}" schema="dbo"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT 
						
							COALESCE(b.createUserRealName, 'conv' ) as createUserRealName,
							COALESCE(b.createUsername, 'conv' ) as createUsername ,
							COALESCE(b.dateCreated, @today) as dateCreated,
							COALESCE(b.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
							COALESCE(b.lastUpdateUsername, 'conv') as lastUpdateUsername ,
							COALESCE(b.lastUpdated, @today) as lastUpdated,
							(cf_bailAmount) as bailAmountLd,
							(cf_bailAmount * 100) as bailAmountCentsLd,
							b.*, pty.tParty_id as bailParty_id, bp.tParty_id as payorParty_id ,
							cfConvMemoLd = cm.cfConvMemo,
							bondIndemnityCompany_idLd = bic.directory_id,
							bailBondsman_idLd = bbi.directory_id
							FROM ${sql.staging.db}.dbo.bail_conv b
							LEFT JOIN ${sql.staging.db}.dbo.party_conv pty
							ON b.associatedParty_id = pty.id
							LEFT JOIN (SELECT * FROM ${sql.staging.db}.dbo.bailCondition_conv bc WHERE conditionType = 'POST') bp
							ON bp.bail_id = b.id
							LEFT JOIN (SELECT bail_id, STRING_AGG(CONCAT(conditionType, ': ', notes), '|') as cfConvMemo FROM ${sql.staging.db}.dbo.bailCondition_conv bc GROUP BY bail_id) cm
							ON b.id = cm.bail_id
							LEFT JOIN (SELECT bail_id, directory_id FROM ${sql.staging.db}.dbo.bailCondition_conv bc WHERE conditionType = 'BAILB') bbi
							ON b.id = bbi.bail_id
							LEFT JOIN (SELECT bail_id, directory_id FROM ${sql.staging.db}.dbo.bailCondition_conv bc WHERE conditionType = 'BSURE') bic
							ON b.id = bic.bail_id
							WHERE pty.tParty_id IS NOT NULL

						]]>							
						</param>	
												
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="notes" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="bailAmountAppliedCents" dest="bailAmountAppliedCents"/>
						<mapping source="bailAmountCentsLd" dest="bailAmountCents"/>
						<mapping source="bailType" dest="bailType"/>
						<mapping source="bondAgentAddress1" dest="bondAgentAddress1"/>
						<mapping source="bondAgentAddress2" dest="bondAgentAddress2"/>
						<mapping source="bondAgentCity" dest="bondAgentCity"/>
						<mapping source="bondAgentCountry" dest="bondAgentCountry"/>
						<mapping source="bondAgentNumber" dest="bondAgentNumber"/>
						<mapping source="bondAgentState" dest="bondAgentState"/>
						<mapping source="bondAgentZip" dest="bondAgentZip"/>
						<mapping source="bondForfeitureNumber" dest="bondForfeitureNumber"/>
						<mapping source="bondNumber" dest="bondNumber"/>
						<mapping source="bondType" dest="bondType"/>
						<mapping source="datePosted" dest="datePosted"/>
						<mapping source="effectiveFrom" dest="effectiveFrom"/>
						<mapping source="effectiveTo" dest="effectiveTo"/>
						<mapping source="bailAmountApplied" dest="bailAmountApplied"/>
						<mapping source="bailAmountLd" dest="bailAmount"/>
						<mapping source="orderBy" dest="orderBy"/>
						<mapping source="refundOrderNumber" dest="refundOrderNumber"/>
						<mapping source="registerNumber" dest="registerNumber"/>
						<mapping source="status" dest="status"/>
						<mapping source="statusDate" dest="statusDate"/>
						<mapping source="suretyType" dest="suretyType"/>
						<mapping source="bailParty_id" dest="associatedParty_id"/>
						<mapping source="bailBondsman_idLd" dest="bailBondsman_id"/>
						<mapping source="bondIndemnityCompany_idLd" dest="bondIndemnityCompany_id"/>
						<mapping source="payorParty_id" dest="postedBailParty_id"/>
						<mapping source="cfConvMemoLd" dest="cfConvMemo"/>
						
					
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tBail"/>
				</action>
				
				

			</actions>
		</stage> 	
		
		
		<stage num="532" mode="Serial" desc="Load Case Status" enabled="true">
			<actions>
				
						
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Case Status">
					<source database="${sql.staging.db}" schema="dbo"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT 
							COALESCE(cs.createUserRealName, 'conv' ) as createUserRealName,
							COALESCE(cs.createUsername, 'conv' ) as createUsername ,
							COALESCE(cs.dateCreated, @today) as dateCreated,
							COALESCE(cs.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
							COALESCE(cs.lastUpdateUsername, 'conv') as lastUpdateUsername ,
							COALESCE(cs.lastUpdated, @today) as lastUpdated,
							cs.*, cc.tCase_id FROM  ${sql.staging.db}.dbo.caseStatus_conv cs
							LEFT JOIN ${sql.staging.db}.dbo.case_conv cc
							ON cs.case_id = cc.id
							WHERE tCase_id IS NOT NULL

						]]>							
						</param>	
												
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="notes" dest="memo"/>
							<mapping source="optlock" dest="optlock"/>
							<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
							<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
							<mapping source="updateReason" dest="updateReason"/>
							<mapping source="beginDate" dest="beginDate"/>
							<mapping source="endDate" dest="endDate"/>
							<mapping source="value" dest="value"/>
							<mapping source="tCase_id" dest="case_id"/>
						
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tCaseStatus"/>
				</action>
				

			</actions>
		</stage> 	
		
		<stage num="534" mode="Serial" desc="Load Case Track" enabled="true">
			<actions>
				
						
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Case Track">
					<source database="${sql.staging.db}" schema="dbo"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT 
							COALESCE(ct.createUserRealName, 'conv' ) as createUserRealName,
							COALESCE(ct.createUsername, 'conv' ) as createUsername ,
							COALESCE(ct.dateCreated, @today) as dateCreated,
							COALESCE(ct.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
							COALESCE(ct.lastUpdateUsername, 'conv') as lastUpdateUsername ,
							COALESCE(ct.lastUpdated, @today) as lastUpdated,
							ct.*, cc.tCase_id FROM ${sql.staging.db}.dbo.caseTrack_conv ct
							LEFT JOIN ${sql.staging.db}.dbo.case_conv cc
							ON ct.case_id = cc.id
							WHERE tCase_id IS NOT NULL

						]]>							
						</param>	
												
					</params>
					<mappings>
						<mapping source="id" dest="id"/>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="notes" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="dateTracked" dest="dateTracked"/>
						<mapping source="location" dest="location"/>
						<mapping source="personName" dest="personName"/>
						<mapping source="trackingNumber" dest="trackingNumber"/>
						<mapping source="trackingType" dest="trackingType"/>
						<mapping source="tCase_id" dest="case_id"/>
						
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tCaseTrack"/>
				</action>
				

			</actions>
		</stage> 	
		
		<stage num="536" mode="Serial" desc="Load Case Joinder" enabled="true">
			<actions>
				
						
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Case Joinder">
					<source database="${sql.staging.db}" schema="dbo" table="caseJoinder_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT 
							COALESCE(cj.createUserRealName, 'conv' ) as createUserRealName,
							COALESCE(cj.createUsername, 'conv' ) as createUsername ,
							COALESCE(cj.dateCreated, @today) as dateCreated,
							COALESCE(cj.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
							COALESCE(cj.lastUpdateUsername, 'conv') as lastUpdateUsername ,
							COALESCE(cj.lastUpdated, @today) as lastUpdated,
							cj.* FROM ${sql.staging.db}.dbo.caseJoinder_conv cj
						

						]]>							
						</param>	
							<param name="idColumnName">tcaseJoinder_id</param>
							<param name="whereColumnName">idKey</param>						
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="description" dest="description"/>
						<mapping source="effectiveFrom" dest="effectiveFrom"/>
						<mapping source="effectiveTo" dest="effectiveTo"/>
						<mapping source="name" dest="name"/>
						<mapping source="orderDate" dest="orderDate"/>
						<mapping source="type" dest="type"/>
					
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tCaseJoinder"/>
				</action>
				

			</actions>
		</stage> 	
		
		<stage num="538" mode="Serial" desc="Load Case Joinded Item" enabled="true">
			<actions>
				
						
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading  Case Joinded Item">
					<source database="${sql.staging.db}" schema="dbo"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT 
							COALESCE(cji.createUserRealName, 'conv' ) as createUserRealName,
							COALESCE(cji.createUsername, 'conv' ) as createUsername ,
							COALESCE(cji.dateCreated, @today) as dateCreated,
							COALESCE(cji.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
							COALESCE(cji.lastUpdateUsername, 'conv') as lastUpdateUsername ,
							COALESCE(cji.lastUpdated, @today) as lastUpdated,
							cji.*, cc.tCase_id, cj.tcaseJoinder_id  FROM ${sql.staging.db}.dbo.caseJoinedItem_conv cji
							INNER JOIN ${sql.staging.db}.dbo.caseJoinder_conv cj
							ON cji.joinder_id = cj.id
							INNER JOIN ${sql.staging.db}.dbo.case_conv cc
							ON cji.case_id = cc.id
						

						]]>							
						</param>						
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="effectiveFrom" dest="effectiveFrom"/>
						<mapping source="effectiveTo" dest="effectiveTo"/>
						<mapping source="primaryCase" dest="primaryCase"/>
						<mapping source="tCase_id" dest="case_id"/>
						<mapping source="tcaseJoinder_id" dest="joinder_id"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tCaseJoinedItem"/>
				</action>
				

			</actions>
		</stage> 	
		
		<stage num="540" mode="Serial" desc="Load Ce_OtherNumber" enabled="false">
			<actions>
				
						
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading  Ce_OtherNumber Item">
					<source database="${sql.staging.db}" schema="dbo"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT 
							COALESCE(ceon.createUserRealName, 'conv' ) as createUserRealName,
							COALESCE(ceon.createUsername, 'conv' ) as createUsername ,
							COALESCE(ceon.dateCreated, @today) as dateCreated,
							COALESCE(ceon.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
							COALESCE(ceon.lastUpdateUsername, 'conv') as lastUpdateUsername ,
							COALESCE(ceon.lastUpdated, @today) as lastUpdated,
							ceon.*, cc.tCase_id FROM ${sql.migrated.db}.ecourt.tCe_OtherNumber ceon
							INNER JOIN case_conv cc
							ON ceon.case_id = cc.id 
							WHERE courtNumber IS NOT NULL
						

						]]>							
						</param>						
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="courtCodeType" dest="courtCodeType"/>
						<mapping source="courtDescription" dest="courtDescription"/>
						<mapping source="courtMasterCode" dest="courtMasterCode"/>
						<mapping source="courtNumber" dest="courtNumber"/>
						<mapping source="defenseCodeType" dest="defenseCodeType"/>
						<mapping source="defenseDescription" dest="defenseDescription"/>
						<mapping source="defenseMasterCode" dest="defenseMasterCode"/>
						<mapping source="defenseNumber" dest="defenseNumber"/>
						<mapping source="lawCodeType" dest="lawCodeType"/>
						<mapping source="lawDescription" dest="lawDescription"/>
						<mapping source="lawMasterCode" dest="lawMasterCode"/>
						<mapping source="lawNumber" dest="lawNumber"/>
						<mapping source="nonAgencySpecificCodeType" dest="nonAgencySpecificCodeType"/>
						<mapping source="nonAgencySpecificDescription" dest="nonAgencySpecificDescription"/>
						<mapping source="nonAgencySpecificMasterCode" dest="nonAgencySpecificMasterCode"/>
						<mapping source="nonAgencySpecificNumber" dest="nonAgencySpecificNumber"/>
						<mapping source="probationCodeType" dest="probationCodeType"/>
						<mapping source="probationDescription" dest="probationDescription"/>
						<mapping source="probationMasterCode" dest="probationMasterCode"/>
						<mapping source="probationNumber" dest="probationNumber"/>
						<mapping source="prosecutorCodeType" dest="prosecutorCodeType"/>
						<mapping source="prosecutorDescription" dest="prosecutorDescription"/>
						<mapping source="prosecutorMasterCode" dest="prosecutorMasterCode"/>
						<mapping source="prosecutorNumber" dest="prosecutorNumber"/>
						<mapping source="tCase_id" dest="case_id"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tCe_OtherNumber"/>
				</action>
				

			</actions>
		</stage> 	
		
		<stage num="542" mode="Serial" desc="Load tCe_PersonEvent" enabled="true">
			<actions>
				
						
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading  tCe_PersonEvent">
					<source database="${sql.staging.db}" schema="dbo"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT DISTINCT
							COALESCE(pe.createUserRealName, 'conv' ) as createUserRealName,
							COALESCE(pe.createUsername, 'conv' ) as createUsername ,
							COALESCE(pe.dateCreated, @today) as dateCreated,
							COALESCE(pe.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
							COALESCE(pe.lastUpdateUsername, 'conv') as lastUpdateUsername ,
							COALESCE(pe.lastUpdated, @today) as lastUpdated,
							pe.*, pc.tPerson_id, 'WHITE' as color, 0 as sharingLevel,
							contentLd = CONCAT(notes, '-', resultType) 
						
							FROM ${sql.migrated.db}.ecourt.tCe_PersonEvent pe
							INNER JOIN person_conv pc
							ON pe.person_id = pc.id 
							WHERE notes IS NOT NULL
						

						]]>							
						</param>						
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="color" dest="color"/>
						<mapping source="sharingLevel" dest="sharingLevel"/>
						<mapping source="contentLd" dest="content"/>
						<mapping source="startDateTime" dest="noteDate"/>
						<mapping source="type" dest="type"/>
						<mapping source="tPerson_id" dest="person_id"/>
					
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tPersonNote"/>
				</action>
				

			</actions>
		</stage> 	
		
			
		<stage num="544" mode="Serial" desc="Load tCe_PersonTracking" enabled="false">
			<actions>
				
						
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading  tCe_PersonTracking">
					<source database="${sql.staging.db}" schema="dbo"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT 
							COALESCE(pt.createUserRealName, 'conv' ) as createUserRealName,
							COALESCE(pt.createUsername, 'conv' ) as createUsername ,
							COALESCE(pt.dateCreated, @today) as dateCreated,
							COALESCE(pt.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
							COALESCE(pt.lastUpdateUsername, 'conv') as lastUpdateUsername ,
							COALESCE(pt.lastUpdated, @today) as lastUpdated,
							pt.*, pc.tPerson_id FROM CNMI_eCourt_full.ecourt.tCe_PersonTracking pt
							INNER JOIN person_conv pc
							ON pt.person_id = pc.id 
						

						]]>							
						</param>						
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="date" dest="date"/>
						<mapping source="endDate" dest="endDate"/>
						<mapping source="note" dest="note"/>
						<mapping source="startDate" dest="startDate"/>
						<mapping source="status" dest="status"/>
						<mapping source="subType" dest="subType"/>
						<mapping source="trackingContent" dest="trackingContent"/>
						<mapping source="trackingType" dest="trackingType"/>
						<mapping source="ce_PersonTracking_id" dest="ce_PersonTracking_id"/>
						<mapping source="person_id" dest="person_id"/>
						<mapping source="convId" dest="convId"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tCe_PersonTracking"/>
				</action>
				

			</actions>
		</stage> 	
		
		<stage num="546" mode="Serial" desc="Load CheckListItem" enabled="true">
			<actions>
				
						
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading  Check List Item">
					<source database="${sql.staging.db}" schema="dbo" table="checklistItem_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT 
							COALESCE(cli.createUserRealName, 'conv' ) as createUserRealName,
							COALESCE(cli.createUsername, 'conv' ) as createUsername ,
							COALESCE(cli.dateCreated, @today) as dateCreated,
							COALESCE(cli.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
							COALESCE(cli.lastUpdateUsername, 'conv') as lastUpdateUsername ,
							COALESCE(cli.lastUpdated, @today) as lastUpdated,
							cli.*, cc.tCase_id,
							LEFT(instructions, 255) as instructionsLd,
							li.label as descriptionLd,
							memoLd = CONCAT(firstName, ' ', lastName)
							FROM checklistItem_conv cli
							INNER JOIN case_conv cc
							ON cli.case_id = cc.id  AND cli.caseKey = cc.idKey
							LEFT JOIN (SELECT li.code, li.label FROM JustWareMigrated_full.ecourt.tLookupItem li
							INNER JOIN JustWareMigrated_full.ecourt.tLookupList ll
							ON li.lookupList_id = ll.id
							WHERE NAME = 'CASE_TASK_TYPE') li
							ON cli.type = li.code
							LEFT JOIN JustWareMigrated_full.ecourt.tDirPerson dp
							ON cli.dirPerson_id = dp.id
							WHERE cli.person_id IS NULL
						

						]]>							
						</param>
							<param name="idColumnName">tChecklistItem_id</param>
							<param name="whereColumnName">idKey</param>								
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="complete" dest="complete"/>
						<mapping source="completeDate" dest="completeDate"/>
						<mapping source="descriptionLd" dest="description"/>
						<mapping source="dueDate" dest="dueDate"/>
						<mapping source="instructionsLd" dest="instructions"/>
						<mapping source="startDate" dest="startDate"/>
						<mapping source="suspended" dest="suspended"/>
						<mapping source="tCase_id" dest="case_id"/>
						<mapping source="checkListItemDef_id" dest="checkListItemDef_id"/>
						<mapping source="completedBy_id" dest="completedBy_id"/>
						<mapping source="person_id" dest="person_id"/>
						<mapping source="subCase_id" dest="subCase_id"/>
					
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tCheckListItem"/>
				</action>
				

			</actions>
		</stage> 	
		
		<stage num="548" mode="Serial" desc="Load Tracking" enabled="false">
			<actions>
				
						
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading  Tracking">
					<source database="${sql.staging.db}" schema="dbo"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT 
							COALESCE(ct.createUserRealName, 'conv' ) as createUserRealName,
							COALESCE(ct.createUsername, 'conv' ) as createUsername ,
							COALESCE(ct.dateCreated, @today) as dateCreated,
							COALESCE(ct.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
							COALESCE(ct.lastUpdateUsername, 'conv') as lastUpdateUsername ,
							COALESCE(ct.lastUpdated, @today) as lastUpdated,
							ct.*, cc.tCase_id FROM ${sql.migrated.db}.ecourt.tTracking ct
							INNER JOIN case_conv cc
							ON ct.case_id = cc.id 
			

						]]>							
						</param>						
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="date" dest="date"/>
						<mapping source="status" dest="status"/>
						<mapping source="statusDate" dest="statusDate"/>
						<mapping source="subType" dest="subType"/>
						<mapping source="trackingContent" dest="trackingContent"/>
						<mapping source="trackingFrom" dest="trackingFrom"/>
						<mapping source="trackingNumber" dest="trackingNumber"/>
						<mapping source="trackingTo" dest="trackingTo"/>
						<mapping source="trackingType" dest="trackingType"/>
						<mapping source="case_id" dest="case_id"/>
						<mapping source="charge_id" dest="charge_id"/>
						<mapping source="invoice_id" dest="invoice_id"/>
						<mapping source="party_id" dest="party_id"/>
						<mapping source="paymentInvoice_id" dest="paymentInvoice_id"/>
						<mapping source="trustTransaction_id" dest="trustTransaction_id"/>
						<mapping source="convId" dest="convId"/>
						<mapping source="endDate" dest="endDate"/>
						<mapping source="note" dest="note"/>
						<mapping source="startDate" dest="startDate"/>
						<mapping source="notes" dest="notes"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tTracking"/>
				</action>
				

			</actions>
		</stage> 	
		
		<stage num="550" mode="Serial" desc="Load Person Special Status" enabled="true">
			<actions>
				
						
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading  tPersonSpecialStatus">
					<source database="${sql.staging.db}" schema="dbo"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT 
							COALESCE(pss.createUserRealName, 'conv' ) as createUserRealName,
							COALESCE(pss.createUsername, 'conv' ) as createUsername ,
							COALESCE(pss.dateCreated, @today) as dateCreated,
							COALESCE(pss.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
							COALESCE(pss.lastUpdateUsername, 'conv') as lastUpdateUsername ,
							COALESCE(pss.lastUpdated, @today) as lastUpdated,
							pss.*, pc.tPerson_id FROM ${sql.migrated.db}.ecourt.tPersonSpecialStatus pss
							INNER JOIN person_conv pc
							ON pss.associatedPerson_id = pc.id 
			

						]]>							
						</param>						
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="value" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="endDate" dest="endDate"/>
						<mapping source="issuerCountry" dest="issuerCountry"/>
						<mapping source="issuerName" dest="issuerName"/>
						<mapping source="issuerState" dest="issuerState"/>
						<mapping source="specialStatusType" dest="specialStatusType"/>
						<mapping source="startDate" dest="startDate"/>
						<mapping source="status" dest="status"/>
						<mapping source="tPerson_id" dest="associatedPerson_id"/>
					
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tPersonSpecialStatus"/>
				</action>
				

			</actions>
		</stage> 	
		
		<stage num="552" mode="Serial" desc="Load tCe_NonCollectibleFinancial" enabled="false">
			<actions>
				
					
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading tCe_NonCollectibleFinancial">
					<source database="${sql.staging.db}" schema="dbo" table="tCe_NonCollectibleFinancial_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT 
							COALESCE(ncf.createUserRealName, 'conv' ) as createUserRealName,
							COALESCE(ncf.createUsername, 'conv' ) as createUsername ,
							COALESCE(ncf.dateCreated, @today) as dateCreated,
							COALESCE(ncf.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
							COALESCE(ncf.lastUpdateUsername, 'conv') as lastUpdateUsername ,
							COALESCE(ncf.lastUpdated, @today) as lastUpdated,
							ncf.*, cc.tCase_id FROM tCe_NonCollectibleFinancial_conv ncf
							INNER JOIN case_conv cc
							ON ncf.case_id = cc.id 
			

						]]>							
						</param>
						<param name="idColumnName">tCe_NonCollectibleFinancial_id</param>
						<param name="whereColumnName">idKey</param>	
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="allegedAmount" dest="allegedAmount"/>
						<mapping source="beginDate" dest="beginDate"/>
						<mapping source="category" dest="category"/>
						<mapping source="date" dest="date"/>
						<mapping source="description" dest="description"/>
						<mapping source="endDate" dest="endDate"/>
						<mapping source="location" dest="location"/>
						<mapping source="notes" dest="notes"/>
						<mapping source="orderedAmount" dest="orderedAmount"/>
						<mapping source="priority" dest="priority"/>
						<mapping source="status" dest="status"/>
						<mapping source="type" dest="type"/>
						<mapping source="tCase_id" dest="case_id"/>
						<mapping source="convId" dest="convId"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tCe_NonCollectibleFinancial"/>
				</action>
				

			</actions>
		</stage> 	
		
		<stage num="554" mode="Serial" desc="Load tCharge" enabled="true">
			<actions>
				
						
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading tCharge">
					<source database="${sql.staging.db}" schema="dbo" table="charge_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT 
							COALESCE(chg.createUserRealName, 'conv' ) as createUserRealName,
							COALESCE(chg.createUsername, 'conv' ) as createUsername ,
							COALESCE(chg.dateCreated, @today) as dateCreated,
							COALESCE(chg.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
							COALESCE(chg.lastUpdateUsername, 'conv') as lastUpdateUsername ,
							COALESCE(chg.lastUpdated, @today) as lastUpdated,
							chg.*, pty.tParty_id,
							sc.id as subCase_id,
							chargeDateLd = COALESCE(chargeDate,chg.dateCreated),
							sentencingCompletedLd =
							CASE
								WHEN chg.dispositionType IS NULL OR chg.dispositionType = 'ABEY' THEN 0
								ELSE 1
							END,
							dispositionTypeLd =
							CASE
								WHEN chg.dispositionType = 'DECAQ' THEN 'ACQBT'
								WHEN chg.dispositionType = 'VACQU' THEN 'ACQJT'
								WHEN chg.dispositionType = 'DELCH' THEN 'APAS'
								WHEN chg.dispositionType = 'DECJU' THEN 'CONVBT'
								WHEN chg.dispositionType = 'DEFJ' THEN 'DJDC'
								WHEN chg.dispositionType = 'DISAM' THEN 'DNA'
								WHEN chg.dispositionType = 'NCINF' THEN 'DNA'
								WHEN chg.dispositionType = 'JVDIS' THEN 'DNA'
								WHEN chg.dispositionType = 'DISAD' THEN 'DISAD'
								WHEN chg.dispositionType = 'DISBT' THEN 'DISBT'
								WHEN chg.dispositionType = 'DISDT' THEN 'DISDJT'
								WHEN chg.dispositionType = 'VGUIL' THEN 'GPDJT'
								WHEN chg.dispositionType = 'DISNP' THEN 'NPBT'
								WHEN chg.dispositionType = 'TRANS' THEN 'TRAN'
								WHEN chg.dispositionType = 'GUIL' THEN 'G'
							END
							FROM ${sql.staging.db}.dbo.charge_conv chg
							INNER JOIN party_conv pty
							ON chg.associatedParty_id = pty.id 
							LEFT JOIN ${sql.ecourt.db}.ecourt.tParty epty
							ON pty.tParty_id = epty.id 
							LEFT JOIN ${sql.ecourt.db}.ecourt.tSubCase sc
							ON epty.case_id = sc.case_id 
							
							WHERE pty.tParty_id IS NOT NULL and newStatute_id IS NOT NULL AND stSectionNumber <> 'CVFIN'  -- to remove final clause in lieu of default at later date
			

						]]>							
						</param>
						<param name="idColumnName">tCharge_id</param>
						<param name="whereColumnName">idKey</param>								
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="optlock" dest="optlock"/>
							<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
							<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
							<mapping source="updateReason" dest="updateReason"/>
							<mapping source="actualSpeed" dest="actualSpeed"/>
							<mapping source="agency" dest="agency"/>
							<mapping source="bac" dest="bac"/>
							<mapping source="chargeAmount" dest="chargeAmount"/>
							<mapping source="chargeDateLd" dest="chargeDate"/>
							<mapping source="chargeDegree" dest="chargeDegree"/>
							<mapping source="chargeNumber" dest="chargeNumber"/>
							<mapping source="chargeTime" dest="chargeTime"/>
							<mapping source="chargeToDate" dest="chargeToDate"/>
							<mapping source="chargeToTime" dest="chargeToTime"/>
							<mapping source="chargeType" dest="chargeType"/>
							<mapping source="citedSpeed" dest="citedSpeed"/>
							<mapping source="condition" dest="condition"/>
							<mapping source="correctable" dest="correctable"/>
							<mapping source="counts" dest="counts"/>
							<mapping source="dateFiled" dest="dateFiled"/>
							<mapping source="declinationMemo" dest="declinationMemo"/>
							<mapping source="description" dest="description"/>
							<mapping source="dispositionDate" dest="dispositionDate"/>
							<mapping source="dispositionManner" dest="dispositionManner"/>
							<mapping source="dispositionReason" dest="dispositionReason"/>
							<mapping source="dispositionTypeLd" dest="dispositionType"/>
							<mapping source="eligible" dest="eligible"/>
							<mapping source="ivrReferenceNumber" dest="ivrReferenceNumber"/>
							<mapping source="location" dest="location"/>
							<mapping source="mustAppear" dest="mustAppear"/>
							<mapping source="offenseLevel" dest="offenseLevel"/>
							<mapping source="plea" dest="plea"/>
							<mapping source="pleaDate" dest="pleaDate"/>
							<mapping source="pleaStatus" dest="pleaStatus"/>
							<mapping source="postedSpeed" dest="postedSpeed"/>
							<mapping source="principal" dest="principal"/>
							<mapping source="sentencingCompletedLd" dest="sentencingCompleted"/>
							<mapping source="stageAdded" dest="stageAdded"/>
							<mapping source="status" dest="status"/>
							<mapping source="statusDate" dest="statusDate"/>
							<mapping source="ticketNumber" dest="ticketNumber"/>
							<mapping source="unitOverage" dest="unitOverage"/>
							<mapping source="weightOverage" dest="weightOverage"/>
							<mapping source="tParty_id" dest="associatedParty_id"/>
							<mapping source="newStatute_id" dest="statute_id"/>
							<mapping source="inchoateType" dest="inchoateType"/>
							<mapping source="conviction" dest="conviction"/>
							<mapping source="discount" dest="discount"/>
							<mapping source="subCase_id" dest="subCase_id"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tCharge"/>
				</action>
				

			</actions>
		</stage> 	
		
		
		<stage num="556" mode="Serial" desc="Load tChargeCharateristic" enabled="true">
			<actions>
				
						
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading tCharge">
					<source database="${sql.staging.db}" schema="dbo" table="chargeCharacteristic_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT 
							COALESCE(chgc.createUserRealName, 'conv' ) as createUserRealName,
							COALESCE(chgc.createUsername, 'conv' ) as createUsername ,
							COALESCE(chgc.dateCreated, @today) as dateCreated,
							COALESCE(chgc.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
							COALESCE(chgc.lastUpdateUsername, 'conv') as lastUpdateUsername ,
							COALESCE(chgc.lastUpdated, @today) as lastUpdated,
							chgc.*, chg.tCharge_id FROM ${sql.staging.db}.dbo.chargeCharacteristic_conv chgc
							INNER JOIN charge_conv chg
							ON chgc.charge_id = chg.id and tCharge_id IS NOT NULL -- to be removed

						]]>							
						</param>							
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="value" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="characteristic" dest="characteristic"/>
						<mapping source="status" dest="status"/>
						<mapping source="statusDate" dest="statusDate"/>
						<mapping source="type" dest="type"/>
						<mapping source="tCharge_id" dest="charge_id"/>
						
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tChargeCharacteristic"/>
				</action>
				

			</actions>
		</stage> 	
		
			
		<stage num="558" mode="Serial" desc="Load tCe_ChargeIntoxicant" enabled="false">
			<actions>
				
						
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading tCharge">
					<source database="${sql.staging.db}" schema="dbo"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT 
							COALESCE(ci.createUserRealName, 'conv' ) as createUserRealName,
							COALESCE(ci.createUsername, 'conv' ) as createUsername ,
							COALESCE(ci.dateCreated, @today) as dateCreated,
							COALESCE(ci.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
							COALESCE(ci.lastUpdateUsername, 'conv') as lastUpdateUsername ,
							COALESCE(ci.lastUpdated, @today) as lastUpdated,
							ci.*, chg.tCharge_id FROM CNMI_eCourt_full.ecourt.tCe_ChargeIntoxicant ci
							INNER JOIN charge_conv chg
							ON ci.charge_id = chg.id 

						]]>							
						</param>							
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="intoxicant" dest="intoxicant"/>
						<mapping source="level" dest="level"/>
						<mapping source="notes" dest="notes"/>
						<mapping source="charge_id" dest="charge_id"/>
						<mapping source="convId" dest="convId"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tCe_ChargeIntoxicant"/>
				</action>
				

			</actions>
		</stage> 	
		
		<stage num="560" mode="Serial" desc="Load tChargeRelated" enabled="false">
			<actions>
				
						
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading tCharge">
					<source database="${sql.staging.db}" schema="dbo"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT
							COALESCE(cr.createUserRealName, 'conv' ) as createUserRealName,
							COALESCE(cr.createUsername, 'conv' ) as createUsername ,
							COALESCE(cr.dateCreated, @today) as dateCreated,
							COALESCE(cr.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
							COALESCE(cr.lastUpdateUsername, 'conv') as lastUpdateUsername ,
							COALESCE(cr.lastUpdated, @today) as lastUpdated,							
							cr.*, cchg.tCharge_id as childCharge, pchg.tCharge_id as parentCharge FROM CNMI_eCourt_full.ecourt.tChargeRelated cr
							INNER JOIN charge_conv cchg
							ON cr.childCharge_id = cchg.id 
							INNER JOIN charge_conv pchg
							ON cr.childCharge_id = pchg.id 

						]]>							
						</param>							
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="relatedType" dest="relatedType"/>
						<mapping source="childCharge" dest="childCharge_id"/>
						<mapping source="parentCharge" dest="parentCharge_id"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tChargeRelated"/>
				</action>
				

			</actions>
		</stage> 	
		
		<stage num="562" mode="Serial" desc="Load tSentence" enabled="true">
			<actions>
				
						
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading tCharge">
					<source database="${sql.staging.db}" schema="dbo" table="sentence_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT 
							COALESCE(s.createUserRealName, 'conv' ) as createUserRealName,
							COALESCE(s.createUsername, 'conv' ) as createUsername ,
							COALESCE(s.dateCreated, @today) as dateCreated,
							COALESCE(s.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
							COALESCE(s.lastUpdateUsername, 'conv') as lastUpdateUsername ,
							COALESCE(s.lastUpdated, @today) as lastUpdated,
							s.*, chg.tCharge_id,
							sentenceDateLd = 
							case
								WHEN sentenceBeginDate = '1900-01-01' THEN s.dateCreated
								ELSE COALESCE(sentenceBeginDate, s.dateCreated)
							END,
							suspendDaysLd = TRY_CAST(suspendDays as VARCHAR(255)),
							creditDaysLd = TRY_CAST(creditDays as VARCHAR(255)),
							cfCreditDescription = 
							CASE 
							 WHEN creditDays IS NOT NULL THEN CONCAT( creditDays / (7 * 24 * 60), ' Week(s) ', (creditDays % (7 * 24 * 60)) / (24 * 60), ' Day(s) ', ((creditDays % (7 * 24 * 60)) % (24 * 60)) / 60, ' Hour(s) ', ((creditDays % (7 * 24 * 60)) % (24 * 60)) % 60, ' Minute(s)')
							END,
							cfSuspendDescription =
							CASE
							WHEN SuspendDays IS NOT NULL THEN CONCAT( suspendDays / (7 * 24 * 60), ' Week(s) ', (suspendDays % (7 * 24 * 60)) / (24 * 60), ' Day(s) ', ((suspendDays % (7 * 24 * 60)) % (24 * 60)) / 60, ' Hour(s) ', ((suspendDays % (7 * 24 * 60)) % (24 * 60)) % 60, ' Minute(s)')
							END
							
							FROM ${sql.staging.db}.dbo.sentence_conv s
							INNER JOIN ${sql.staging.db}.dbo.charge_conv chg
							ON s.associatedCharge_id = chg.id AND tCharge_id IS NOT NULL
							
							
						]]>							
						</param>
						<param name="idColumnName">tSentence_id</param>
						<param name="whereColumnName">idKey</param>						
					</params>
					<mappings>
						<mapping source="id" dest="id"/>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="optlock" dest="optlock"/>
							<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
							<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
							<mapping source="updateReason" dest="updateReason"/>
							<mapping source="amount" dest="amount"/>
							<mapping source="amountReducedTo" dest="amountReducedTo"/>
							<mapping source="amountSuspended" dest="amountSuspended"/>
							<mapping source="completeBy" dest="completeBy"/>
							<mapping source="creditDays" dest="creditDays"/>
							<mapping source="description" dest="description"/>
							<mapping source="length" dest="length"/>
							<mapping source="length2" dest="length2"/>
							<mapping source="length3" dest="cfCredit"/>
							<mapping source="length4" dest="cfSuspend"/>
							<mapping source="lengthPeriod" dest="lengthPeriod"/>
							<mapping source="lengthUnit" dest="lengthUnit"/>
							<mapping source="lengthUnit2" dest="lengthUnit2"/>
							<mapping source="lengthUnit3" dest="cfCreditUnit"/>
							<mapping source="lengthUnit4" dest="cfSuspendUnit"/>
							<mapping source="liabilityType" dest="liabilityType"/>
							<mapping source="redeemableLength" dest="redeemableLength"/>
							<mapping source="sentenceDateLd" dest="sentenceBeginDate"/>
							<mapping source="sentenceCompliance" dest="sentenceCompliance"/>
							<mapping source="sentenceDateLd" dest="sentenceDate"/>
							<mapping source="sentenceDateLd" dest="sentenceEndDate"/>
							<mapping source="sentenceTypeLd" dest="sentenceType"/>
							<mapping source="serviceMethod" dest="serviceMethod"/>
							<mapping source="status" dest="status"/>
							<mapping source="statusDate" dest="statusDate"/>
							<mapping source="statusEndDate" dest="statusEndDate"/>
							<mapping source="tCharge_id" dest="associatedCharge_id"/>
							<mapping source="official_id" dest="official_id"/>
							<mapping source="notes" dest="cfConvMemo"/>
							
							<mapping source="sentenceAmountFromDesc" dest="cfSentenceAmountFromDesc"/>
							<mapping source="sentenceAmountToDesc" dest="cfSentenceAmountToDesc"/>
							<mapping source="sentenceDurationDesc" dest="cfSentenceDurationDesc"/>
							<mapping source="sentenceLocation" dest="cfSentenceLocation"/>
					

							<mapping source="suspendDaysLd" dest="cfSuspendDays"/>
							<mapping source="creditDaysLd" dest="cfCreditDays"/>
					
							<mapping source="suspendNotes" dest="cfSuspendNotes"/>
							<mapping source="creditNotes" dest="cfCreditNotes"/>
							<mapping source="cfSuspendDescription" dest="cfSuspendDescription"/>
							<mapping source="cfCreditDescription" dest="cfCreditDescription"/>
							
			
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tSentence"/>
				</action>
				

			</actions>
		</stage> 	
		
			
		<stage num="564" mode="Serial" desc="Load tSentenceCondition" enabled="true">
			<actions>
				
						
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading tSentenceCodition">
					<source database="${sql.staging.db}" schema="dbo"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT
							COALESCE(sc.createUserRealName, 'conv' ) as createUserRealName,
							COALESCE(sc.createUsername, 'conv' ) as createUsername ,
							COALESCE(sc.dateCreated, @today) as dateCreated,
							COALESCE(sc.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
							COALESCE(sc.lastUpdateUsername, 'conv') as lastUpdateUsername ,
							COALESCE(sc.lastUpdated, @today) as lastUpdated,
							sc.*, s.tSentence_id, tCharge_id,
							sentenceDateLd = COALESCE(sentenceConditionDate, sentenceConditionBeginDate, sc.dateCreated),
							sentenceBeginDateLd = COALESCE(sentenceConditionBeginDate,sentenceConditionDate, sc.dateCreated),
							'OTH' as sentenceTypeld
						
							FROM ${sql.staging.db}.dbo.sentenceCondition_conv sc
							INNER JOIN ${sql.staging.db}.dbo.sentence_conv s
							ON sc.associatedSentence_id = s.id
							INNER JOIN ${sql.staging.db}.dbo.charge_conv chg
							ON s.associatedCharge_id = chg.id 
							
					
						]]>							
						</param>							
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="sentenceTypeld" dest="sentenceType"/>
						<mapping source="notes" dest="cfConvMemo"/>
						<mapping source="sentenceBeginDateLd" dest="sentenceBeginDate"/>
						<mapping source="sentenceDateLd" dest="sentenceDate"/>
						<mapping source="sentenceBeginDateLd" dest="sentenceEndDate"/>
						<mapping source="status" dest="status"/>
						<mapping source="statusDate" dest="statusDate"/>
						<mapping source="tCharge_id" dest="associatedCharge_id"/>
				<!--		<mapping source="convId" dest="convId"/>
						<mapping source="amount2" dest="amount2"/>
						<mapping source="description" dest="description"/>
						<mapping source="length2" dest="length2"/>
						<mapping source="lengthUnit2" dest="lengthUnit2"/>
						<mapping source="notes" dest="notes"/>
						<mapping source="sentenceConditionAmtFromDesc" dest="sentenceConditionAmtFromDesc"/>
						<mapping source="sentenceConditionAmtToDesc" dest="sentenceConditionAmtToDesc"/>
						<mapping source="sentenceConditionDurDesc" dest="sentenceConditionDurDesc"/>
						<mapping source="sentenceConditionSubType" dest="sentenceConditionSubType"/>
						<mapping source="sentenceConditionLocation" dest="sentenceConditionLocation"/> -->
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tSentence"/>
				</action>
				

			</actions>
		</stage> 	
		
				
		<stage num="566" mode="Serial" desc="Load Case Assignment" enabled="true">
			<actions>
				
						
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading PI - Case Assignment">
					<source database="${sql.staging.db}" schema="dbo" table="caseAssignment_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						DECLARE @today datetime; SET @today = GETDATE();
								

						SELECT
						
						
						'0' as optlock,
						'conv' as createUserRealName,
						'conv' as createUsername,
						'conv' as lastUpdateUserRealName,
						'conv' as lastUpdateUsername,
						@today as dateCreated,
						@today as lastUpdated,
						idKey
						FROM caseAssignment_conv ca
					
						
						]]>							
						</param>
						<param name="idColumnName">tPID</param>
						<param name="whereColumnName">idKey</param>
												
					</params>
					<mappings>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tPersonIdentifier"/>
				</action>
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading person  - Case Assignment">
					<source database="${sql.staging.db}" schema="dbo" table="caseAssignment_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						DECLARE @today datetime; SET @today = GETDATE();
								

						SELECT
						
						
						'0' as optlock,
						'conv' as createUserRealName,
						'conv' as createUsername,
						'conv' as lastUpdateUserRealName,
						'conv' as lastUpdateUsername,
						@today as dateCreated,
						@today as lastUpdated,
						firstName,
						lastName,
						middleName,
						tPID,
						idKey,
						de.id as personId
			 
						FROM caseAssignment_conv ca
						LEFT JOIN ${sql.ecourt.db}.ecourt.tDirEntry de
						ON ca.newDirEntryCode = de.code
			
						]]>							
						</param>
						<param name="idColumnName">tPerson_id</param>
						<param name="whereColumnName">idKey</param>
												
					</params>
					<mappings>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						
						<mapping source="firstName" dest="firstName"/>
						<mapping source="middleName" dest="middleName"/>
						<mapping source="lastName" dest="lastName"/>
						<mapping source="tPID" dest="personIdentifier_id"/>
						<mapping source="personId" dest="personId"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tPerson"/>
				</action>
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Case Assignment  - Case Assignment">
					<source database="${sql.staging.db}" schema="dbo" table="caseAssignment_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						DECLARE @today datetime; SET @today = GETDATE();
								

						SELECT
						
						
						'0' as optlock,
						'conv' as createUserRealName,
						'conv' as createUsername,
						'conv' as lastUpdateUserRealName,
						'conv' as lastUpdateUsername,
						@today as dateCreated,
						@today as lastUpdated,
						ca.*,
						cc.tCase_id
						FROM caseAssignment_conv ca
						INNER JOIN case_conv cc
						ON ca.case_id = cc.id AND ca.caseKey = cc.idKey
			
						]]>							
						</param>
						<param name="idColumnName">tCaseAssignment_id</param>
						<param name="whereColumnName">idKey</param>
												
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="allowPublicAccess" dest="allowPublicAccess"/>
						<mapping source="assignmentGroup" dest="assignmentGroup"/>
						<mapping source="assignmentKey" dest="assignmentKey"/>
						<mapping source="assignmentKeyComments" dest="assignmentKeyComments"/>
						<mapping source="assignmentMethod" dest="assignmentMethod"/>
						<mapping source="assignmentRole" dest="assignmentRole"/>
						<mapping source="assignmentWeight" dest="assignmentWeight"/>
						<mapping source="assignmentWeightTotal" dest="assignmentWeightTotal"/>
						<mapping source="dateAssigned" dest="dateAssigned"/>
						<mapping source="dateOrdered" dest="dateOrdered"/>
						<mapping source="dateRemoved" dest="dateRemoved"/>
						<mapping source="dissenting" dest="dissenting"/>
						<mapping source="locationCode" dest="locationCode"/>
						<mapping source="locationId" dest="locationId"/>
						<mapping source="locationName" dest="locationName"/>
						<mapping source="parentLocationCode" dest="parentLocationCode"/>
						<mapping source="parentLocationId" dest="parentLocationId"/>
						<mapping source="parentLocationName" dest="parentLocationName"/>
						<mapping source="parentOrgUnitCode" dest="parentOrgUnitCode"/>
						<mapping source="parentOrgUnitId" dest="parentOrgUnitId"/>
						<mapping source="parentOrgUnitName" dest="parentOrgUnitName"/>
						<mapping source="reassignmentWeight" dest="reassignmentWeight"/>
						<mapping source="removalReason" dest="removalReason"/>
						<mapping source="removalReasonSubType" dest="removalReasonSubType"/>
						<mapping source="removalRequestedBy" dest="removalRequestedBy"/>
						<mapping source="representing" dest="representing"/>
						<mapping source="status" dest="status"/>
						<mapping source="statusDate" dest="statusDate"/>
						<mapping source="writing" dest="writing"/>
						<mapping source="tCase_id" dest="case_id"/>
					<!--	<mapping source="directoryPerson_id" dest="directoryPerson_id"/> -->
						<mapping source="tPerson_id" dest="person_id"/>
					<!--	<mapping source="subCase_id" dest="subCase_id"/> -->
						<mapping source="assignmentSubRole" dest="assignmentSubRole"/>
						<mapping source="victim" dest="victim"/>
					<!--	<mapping source="cfElectronicServiceAccepted" dest="cfElectronicServiceAccepted"/> -->
						
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tCaseAssignment"/>
				</action>
				

			</actions>
		</stage> 	
		
					
		<stage num="568" mode="Serial" desc="Load Case Assignment - Events" enabled="true">
			<actions>

				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel=" Events - Case Assignment">
					<source database="${sql.staging.db}" schema="dbo" table="caseAssignment_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						DECLARE @today datetime; SET @today = GETDATE();
								

						SELECT se.tScheduledEvent_id as events_id, cas.tCaseAssignment_id as assignments_id, sea.convId  FROM ${sql.migrated.db}.ecourt.tScheduledEvent_assignments sea
						INNER JOIN  ${sql.staging.db}.dbo.scheduledEvent_conv se
						ON sea.events_id = se.id
						INNER JOIN ${sql.staging.db}.dbo.caseAssignment_conv cas
						ON sea.assignments_id = cas.id AND se.caseKey =cas.caseKey 
						WHERE tScheduledEvent_id IS NOT NULL
					

						]]>							
						</param>					
					</params>
					<mappings>
						<mapping source="events_id" dest="events_id"/>
						<mapping source="assignments_id" dest="assignments_id"/>
			
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tScheduledEvent_assignments"/>
				</action>
			
			</actions>
		</stage> 

		<stage num="570" mode="Serial" desc="Load Parties - Events" enabled="true">
			<actions>

				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel=" Events - Party">
					<source database="${sql.staging.db}" schema="dbo" table="caseAssignment_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						DECLARE @today datetime; SET @today = GETDATE();
								

						SELECT se.tScheduledEvent_id , pty.tParty_id  as parties_id, sea.convId  FROM ${sql.migrated.db}.ecourt.tScheduledEvent_parties sea
						INNER JOIN  ${sql.staging.db}.dbo.scheduledEvent_conv se
						ON sea.tScheduledEvent_id = se.id
						INNER JOIN ${sql.staging.db}.dbo.party_conv pty
						ON sea.parties_id = pty.id AND se.caseKey = pty.caseKey
						WHERE tParty_id IS NOT NULL AND se.tScheduledEvent_id IS NOT NULL

						]]>							
						</param>					
					</params>
					<mappings>
						<mapping source="tScheduledEvent_id" dest="tScheduledEvent_id"/>
						<mapping source="parties_id" dest="parties_id"/>
					
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tScheduledEvent_parties"/>
				</action>
			
			</actions>
		</stage> 			
		
		<stage num="572" mode="Serial" desc="Load Case Joinders - Split Cases" enabled="true">
			<actions>
			
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Case Joinder">
					<source database="${sql.staging.db}" schema="dbo" table="case_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT 
							'conv'  as createUserRealName,
							'conv'  as createUsername ,
							@today as dateCreated,
							'conv'  as lastUpdateUserRealName,
							'conv' as lastUpdateUsername ,
							@today as lastUpdated,
							'CODC' as type,
							'Co-Defendant Cases' as name,
							GETDATE() as effectiveFrom,
							id
							FROM ${sql.staging.db}.dbo.case_conv cc
							GROUP BY id 
							HAVING count(1) > 1
						

						]]>							
						</param>	
							<param name="idColumnName">tcaseJoinder_id</param>
							<param name="whereColumnName">id</param>						
					</params>
					<mappings>
						
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="name" dest="description"/>
						<mapping source="effectiveFrom" dest="effectiveFrom"/>
						<mapping source="name" dest="name"/>
						<mapping source="type" dest="type"/>
						
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tCaseJoinder"/>
				</action>
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading  Case Joinded Item">
					<source database="${sql.staging.db}" schema="dbo"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT 
							COALESCE(cc.createUserRealName, 'conv' ) as createUserRealName,
							COALESCE(cc.createUsername, 'conv' ) as createUsername ,
							COALESCE(cc.dateCreated, @today) as dateCreated,
							COALESCE(cc.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
							COALESCE(cc.lastUpdateUsername, 'conv') as lastUpdateUsername ,
							COALESCE(cc.lastUpdated, @today) as lastUpdated,
							*,
							primaryCase =
							CASE
								WHEN RIGHT(caseNumber,5) NOT LIKE '%-%' THEN 1
								ELSE 0
							END,
							GETDATE() as effectiveFrom
							FROM case_conv cc
							WHERE tcaseJoinder_id IS NOT NULL
						

						]]>							
						</param>						
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="effectiveFrom" dest="effectiveFrom"/>
						<mapping source="primaryCase" dest="primaryCase"/>
						<mapping source="tCase_id" dest="case_id"/>
						<mapping source="tcaseJoinder_id" dest="joinder_id"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tCaseJoinedItem"/>
				</action>
				
			
			
			</actions>
		</stage> 			
		
		
		<stage num="574" mode="Serial" desc="Load Case Disposition - Charge Dispositions" enabled="false">
			<actions>
			
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Case Dispo">
					<source database="${sql.staging.db}" schema="dbo" table="caseDisposition_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT 
							'conv'  as createUserRealName,
							'conv'  as createUsername ,
							@today as dateCreated,
							'conv'  as lastUpdateUserRealName,
							'conv' as lastUpdateUsername ,
							@today as lastUpdated,
							0 as optlock,
							cd.*,
							cc.tCase_id
							FROM ${sql.staging.db}.dbo.caseDisposition_conv cd
							INNER JOIN ${sql.staging.db}.dbo.case_conv cc
							ON cd.caseKey = cc.idKey
						

						]]>							
						</param>	
							<param name="idColumnName">tCaseDisposition_id</param>
							<param name="whereColumnName">idKey</param>						
					</params>
					<mappings>
						
						<mapping source="optlock" dest="optlock"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="dispositionType" dest="dispositionType"/>
						<mapping source="dispositionDate" dest="dispositionDate"/>
						<mapping source="tCase_id" dest="case_id"/>
					
						
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tCaseDisposition"/>
				</action>
			
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Case Dispo - XREF">
					<source database="${sql.staging.db}" schema="dbo" table="caseDisposition_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT 
							'conv'  as createUserRealName,
							'conv'  as createUsername ,
							@today as dateCreated,
							'conv'  as lastUpdateUserRealName,
							'conv' as lastUpdateUsername ,
							@today as lastUpdated,
							0 as optlock,
							tCaseDisposition_id as lid,
							'com.sustain.cases.model.CaseDisposition' as lEntity,
							tParty_id as rid,
							'com.sustain.cases.model.Party' as rEntity,
							'REL' as type,
							tCase_id as associatedCase_id
							FROM cnmiStaging.dbo.caseDisposition_conv cd
							LEFT JOIN cnmiStaging.dbo.party_conv pc
							ON cd.partyId = pc.id
							LEFT JOIN cnmiStaging.dbo.Case_conv cc
							ON cd.caseKey = cc.idKey 

						]]>							
						</param>						
					</params>
					<mappings>
						
						<mapping source="optlock" dest="optlock"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="lid" dest="lid"/>
						<mapping source="lEntity" dest="lEntity"/>
						<mapping source="rid" dest="rid"/>
						<mapping source="rEntity" dest="rEntity"/>
						<mapping source="associatedCase_id" dest="associatedCase_id"/>
				
					
						
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tCaseCrossReference"/>
				</action>
			
			
			</actions>
		</stage> 			
		
			
		<stage num="576" mode="Serial" desc="Load Judgment" enabled="true">
			<actions>
			
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Judgment" enabled="true">
					<source database="${sql.staging.db}" schema="dbo" table="judgmentSnt_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT *, cc.tCase_id FROM 
							(SELECT 
							'conv'  as createUserRealName,
							'conv'  as createUsername ,
							@today as dateCreated,
							'conv'  as lastUpdateUserRealName,
							'conv' as lastUpdateUsername ,
							@today as lastUpdated,
							0 as optlock, 
							COALESCE(sentenceDate, GETDATE()) as judgmentDate,
							'CONV' as judgmentType,
							caseKy,
							j.idKey,
							'CONV' as status,
							ROW_NUMBER() OVER(PARTITION BY cfAdditionalInfo, caseKy ORDER BY j.idKey) rnk
							FROM ${sql.staging.db}.dbo.judgmentSnt_conv j) t1
							INNER JOIN ${sql.staging.db}.dbo.case_conv cc
							ON t1.caseKy = cc.idKey
							WHERE rnk = 1 
						
						
						
						

						]]>							
						</param>	
							<param name="idColumnName">tJudgment_id</param>
							<param name="whereColumnName">idKey</param>						
					</params>
					<mappings>
						
						<mapping source="optlock" dest="optlock"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="judgmentType" dest="judgmentType"/>
						<mapping source="judgmentDate" dest="judgmentDate"/>
						<mapping source="status" dest="status"/>
						<mapping source="tCase_id" dest="case_id"/>
					
						
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tJudgment"/>
				</action>
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Judgment">
					<source database="${sql.staging.db}" schema="dbo" table="judgmentSnt_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT * FROM 
							
							(SELECT 
							'conv'  as createUserRealName,
							'conv'  as createUsername ,
							@today as dateCreated,
							'conv'  as lastUpdateUserRealName,
							'conv' as lastUpdateUsername ,
							@today as lastUpdated,
							0 as optlock,
							LEFT(cfAdditionalInfo, 512) as memo,
							tJudgment_id,
							j.id,
							j.idKey,
							ROW_NUMBER() OVER(PARTITION BY cfAdditionalInfo, caseKy ORDER BY j.idKey) rnk 
							FROM ${sql.staging.db}.dbo.judgmentSnt_conv j) t1
							WHERE rnk = 1 and tJudgment_id IS NOT NULL
						
						

						]]>							
						</param>	
							<param name="idColumnName">tJudgmentAward_id</param>
							<param name="whereColumnName">idKey</param>						
					</params>
					<mappings>
						
						<mapping source="optlock" dest="optlock"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="tJudgment_id" dest="judgment_id"/>
				
					
						
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tJudgmentAward"/>
				</action>
			
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Judgment">
					<source database="${sql.staging.db}" schema="dbo" table="judgmentSnt_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						
						SELECT pj.tJudgment_id as tJudgmentAward_id, cj.tJudgmentAward_id as childAwards_id FROM ${sql.staging.db}.dbo.judgmentSnt_conv pj
						INNER JOIN ${sql.staging.db}.dbo.judgmentSnt_conv cj
						ON pj.id = cj.sentenceId
						WHERE pj.tJudgment_id IS NOT NULL AND cj.tJudgmentAward_id IS NOT NULL


						

						]]>							
						</param>						
					</params>
					<mappings>
						
						
						<mapping source="tJudgmentAward_id" dest="tJudgmentAward_id"/>
						<mapping source="childAwards_id" dest="childAwards_id"/>
				
					
						
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tJudgmentAward_tJudgmentAward"/>
				</action>
			
			
			</actions>
		</stage> 			
		
			
		<stage num="578" mode="Serial" desc="Load Case Special Status" enabled="true">
			<actions>
			
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Case Special Status" enabled="true">
					<source database="${sql.staging.db}" schema="dbo" table="specialStatus_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						
						
						SELECT ss.*, cc.tCase_id FROM ${sql.staging.db}.dbo.specialStatus_conv ss
						INNER JOIN ${sql.staging.db}.dbo.case_conv cc
						ON ss.case_id = cc.id
						

						]]>							
						</param>	
											
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="value" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="category" dest="category"/>
						<mapping source="endDate" dest="endDate"/>
						<mapping source="dateCreated" dest="startDate"/>
						<mapping source="status" dest="status"/>
						<mapping source="tCase_id" dest="case_id"/>
		

					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tSpecialStatus"/>
				</action>
				
			
			</actions>
		</stage> 			
		
			
		<stage num="580" mode="Serial" desc="Load Seal - From Special Status --- Not Used for Churchill" enabled="false">
			<actions>
			
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Case Seal" enabled="true">
					<source database="${sql.staging.db}" schema="dbo" table="specialStatus_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						
						
						DECLARE @today datetime; SET @today = GETDATE();
						SELECT 
						'conv'  as createUserRealName,
						'conv'  as createUsername ,
						@today as dateCreated,
						'conv'  as lastUpdateUserRealName,
						'conv' as lastUpdateUsername ,
						@today as lastUpdated,
						0 as optlock,
						cs.*, cc.tCase_id FROM caseSeal2_conv cs
						INNER JOIN case_conv cc
						ON cs.case_id = cc.id
						

						]]>							
						</param>						
					</params>
					<mappings>
						
						<mapping source="optlock" dest="optlock"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="effectiveFrom" dest="effectiveFrom"/>
						<mapping source="effectiveTo" dest="effectiveTo"/>
						<mapping source="type" dest="type"/>
						<mapping source="tCase_id" dest="case_id"/>
					
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tCaseSeal"/>
				</action>
				
			
			</actions>
		</stage> 			
		
		<stage num="582" mode="Serial" desc="Load AKA" enabled="true">
			<actions>
			
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading AKA" enabled="true">
					<source database="${sql.staging.db}" schema="dbo" table="specialStatus_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						
						
						DECLARE @today datetime; SET @today = GETDATE();
						SELECT 
						COALESCE('conv', pr.createUserRealName)  as createUserRealName,
						COALESCE('conv', pr.createUsername) as createUsername ,
						COALESCE(@today, pr.dateCreated) as dateCreated,
						COALESCE('conv', pr.lastUpdateUserRealName) as lastUpdateUserRealName,
						COALESCE('conv', pr.lastUpdateUsername) as lastUpdateUsername ,
						COALESCE(@today, pr.lastUpdated) as lastUpdated,
						0 as optlock,
						pr.*,
						pc.tPerson_id
						FROM personRelationship_conv pr
						INNER JOIN person_conv pc
						ON pr.person_id = pc.id
						

						]]>							
						</param>						
					</params>
					<mappings>
						
						<mapping source="optlock" dest="optlock"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
				
						<mapping source="akaType" dest="akaType"/>
						<mapping source="tPerson_id" dest="associatedPerson_id"/>
						<mapping source="firstName" dest="firstName"/>
						<mapping source="middleName" dest="middleName"/>
						<mapping source="lastName" dest="lastName"/>
		
					
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tPersonAKA"/>
				</action>
				
			
			</actions>
		</stage> 			
		
		<stage num="584" mode="Serial" desc="Load Person Special Status" enabled="false">
			<actions>
			
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Person Special Status" enabled="true">
					<source database="${sql.staging.db}" schema="dbo" table="personSpecialStatus_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						
						
						DECLARE @today datetime; SET @today = GETDATE();
						SELECT 
						COALESCE(pss.createUserRealName, 'conv')  as createUserRealName,
						COALESCE(pss.createUsername, 'conv') as createUsername ,
						COALESCE(pss.dateCreated, @today) as dateCreated,
						COALESCE(pss.lastUpdateUserRealName, 'conv') as lastUpdateUserRealName,
						COALESCE(pss.lastUpdateUsername, 'conv') as lastUpdateUsername ,
						COALESCE(pss.lastUpdated, @today) as lastUpdated,
						0 as optlock,
						startDate = GETDATE(),
						pss.*,
						pc.tPerson_id
						FROM personSpecialStatus_conv pss
						INNER JOIN person_conv pc
						ON pss.associatedPerson_id = pc.id
						

						]]>							
						</param>						
					</params>
					<mappings>
						
					<mapping source="id" dest="id"/>
					<mapping source="accessLevel" dest="accessLevel"/>
					<mapping source="createUserRealName" dest="createUserRealName"/>
					<mapping source="createUsername" dest="createUsername"/>
					<mapping source="dateCreated" dest="dateCreated"/>
					<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
					<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
					<mapping source="lastUpdated" dest="lastUpdated"/>
					<mapping source="memo" dest="memo"/>
					<mapping source="optlock" dest="optlock"/>
					<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
					<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
					<mapping source="updateReason" dest="updateReason"/>
					<mapping source="endDate" dest="endDate"/>
					<mapping source="issuerCountry" dest="issuerCountry"/>
					<mapping source="issuerName" dest="issuerName"/>
					<mapping source="issuerState" dest="issuerState"/>
					<mapping source="specialStatusType" dest="specialStatusType"/>
					<mapping source="startDate" dest="startDate"/>
					<mapping source="status" dest="status"/>
					<mapping source="tPerson_id" dest="associatedPerson_id"/>
					<mapping source="category" dest="category"/>
					<mapping source="value" dest="value"/>
					<mapping source="convId" dest="convId"/>
					<mapping source="alert" dest="alert"/>
		
					
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tPersonSpecialStatus"/>
				</action>
				
			
			</actions>
		</stage> 			
		
		<stage num="586" mode="Serial" desc="Load Vehicle" enabled="true">
			<actions>
			
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Vehicle" enabled="true">
					<source database="${sql.staging.db}" schema="dbo" table="vehicle_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						
						
						DECLARE @today datetime; SET @today = GETDATE();
						SELECT 
						'conv' as createUserRealName,
						'conv' as createUsername,
						@today as dateCreated,
						'conv' as lastUpdateUserRealName,
						'conv' as lastUpdateUsername,
						@today as lastUpdated,
						0 as optlock,
						v.*,
						cc.tCase_id
						FROM vehicle_conv v
						INNER JOIN person_conv pc
						ON v.person_id = pc.id
						INNER JOIN case_conv cc
						ON pc.case_id = cc.id
						

						]]>							
						</param>						
					</params>
					<mappings>
						
					<mapping source="createUserRealName" dest="createUserRealName"/>
					<mapping source="createUsername" dest="createUsername"/>
					<mapping source="dateCreated" dest="dateCreated"/>
					<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
					<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
					<mapping source="lastUpdated" dest="lastUpdated"/>
					<mapping source="optlock" dest="optlock"/>
					
					<mapping source="vehicleType" dest="vehicleType"/>
					<mapping source="licensePlate" dest="licensePlate"/>
					<mapping source="model" dest="model"/>
					<mapping source="make" dest="make"/>
					<mapping source="color" dest="color"/>
					<mapping source="cfColor2" dest="cfColor2"/>
					<mapping source="registeredState" dest="registeredState"/>
					<mapping source="year" dest="year"/>
					<mapping source="tCase_id" dest="case_id"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tVehicle"/>
				</action>
				
			
			</actions>
		</stage> 			
		
		<stage num="588" mode="Serial" desc="Load Warrant" enabled="false">
			<actions>
			
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Warrant" enabled="true">
					<source database="${sql.staging.db}" schema="dbo" table="warrant_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						
						
						DECLARE @today datetime; SET @today = GETDATE();
						SELECT 
						'conv' as createUserRealName,
						'conv' as createUsername,
						@today as dateCreated,
						'conv' as lastUpdateUserRealName,
						'conv' as lastUpdateUsername,
						@today as lastUpdated,
						0 as optlock,
						statusDate as startDate,
						'BW' as status,
						cc.tCase_id
						FROM case_conv cc
						WHERE status = 'BW'

						]]>							
						</param>						
					</params>
					<mappings>
						
					<mapping source="createUserRealName" dest="createUserRealName"/>
					<mapping source="createUsername" dest="createUsername"/>
					<mapping source="dateCreated" dest="dateCreated"/>
					<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
					<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
					<mapping source="lastUpdated" dest="lastUpdated"/>
					<mapping source="optlock" dest="optlock"/>
					
					<mapping source="startDate" dest="startDate"/>
					<mapping source="status" dest="status"/>
					<mapping source="tCase_id" dest="case_id"/>
				
					
		
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tSpecialStatus"/>
				</action>
				
			
			</actions>
		</stage> 			
		
		
		<stage num="598" mode="Serial" desc="Load Case Note" enabled="false">
				<actions>
				
					<action handler="SqlServer.Raw" desc="Update AttachedId" progresslabel="Update AttachedId" enabled="false">
					<source database="${sql.staging.db}" schema="dbo">
						<task handler="SqlServer.Script" desc="Update CaseNumber">
						<![CDATA[
						
						UPDATE cn 
						SET AttachedIdLd = tCaseAssignment_id
						FROM dbo.caseNote_conv cn
						LEFT JOIN dbo.caseAssignment_conv cas
						ON cn.attachedId = cas.id AND cs.caseKey = cn.caseKy;
						
						UPDATE cn 
						SET AttachedIdLd = tParty_id
						FROM dbo.caseNote_conv cn
						LEFT JOIN dbo.party_conv pty
						ON cn.attachedId = pty.id AND pty.caseKey = cn.caseKy;
						
						UPDATE cn 
						SET AttachedIdLd = tScheduledEvent_id
						FROM dbo.caseNote_conv cn
						LEFT JOIN dbo.scheduledEvent_conv se
						ON cn.attachedId = se.id AND se.caseKey = cn.caseKy;
					
						
						UPDATE cn 
						SET AttachedIdLd = tScheduledEvent_id
						FROM dbo.caseNote_conv cn
						LEFT JOIN dbo.checklistItem_conv cli
						ON cn.attachedId = cli.id AND cli.caseKey = cn.caseKy;
						
						UPDATE cn 
						SET AttachedIdLd = tDocument_id
						FROM dbo.caseNote_conv cn
						LEFT JOIN dbo.document_conv d
						ON cn.attachedId = d.id AND d.caseKey = cn.caseKy;
						
			
						
						
						
						
							
						]]>
						
						</task>
						
					</source>
				</action>
					

					
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Load Case Note">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	

							SELECT
							cn.*, cn.lastUpdated as noteDateLd, cc.tCase_id
							FROM cnmiStaging.dbo.caseNote_conv cn
							INNER JOIN cnmiStaging.dbo.case_conv cc
							ON cn.case_id = cc.id AND cn.caseKy = cc.idKey
							WHERE  attachedEntity <> 'com.sustain.cases.model.Tracking'

							
								
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="optlock" dest="optlock"/>
							<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
							<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
							<mapping source="updateReason" dest="updateReason"/>
							<mapping source="attachedEntity" dest="attachedEntity"/>
							<mapping source="attachedId" dest="attachedId"/>
							<mapping source="color" dest="color"/>
							<mapping source="completed" dest="completed"/>
							<mapping source="content" dest="content"/>
							<mapping source="dueDate" dest="dueDate"/>
							<mapping source="noteDateLd" dest="noteDate"/>
							<mapping source="sharedToAuthorityNames" dest="sharedToAuthorityNames"/>
							<mapping source="sharedToUsernames" dest="sharedToUsernames"/>
							<mapping source="sharingLevel" dest="sharingLevel"/>
							<mapping source="stripedContent" dest="stripedContent"/>
							<mapping source="title" dest="title"/>
							<mapping source="toDate" dest="toDate"/>
							<mapping source="type" dest="type"/>
							<mapping source="username" dest="username"/>
							<mapping source="assignedUser_id" dest="assignedUser_id"/>
							<mapping source="tCase_id" dest="case_id"/>
							<mapping source="convId" dest="convId"/>
							<mapping source="convId_table" dest="convId_table"/>
						</mappings>
						<destination database="${sql.ecourt.db}" schema="ecourt" table="tCaseNote"/>
					</action>
					
						
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Case Note - Tracking" enabled = "false">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	

							SELECT
							cn.*, cc.tCase_id 
							FROM cnmistaging.dbo.caseNote_conv cn
							LEFT JOIN cnmiStaging.dbo.case_conv cc
							ON cn.case_id = cc.id 
							WHERE attachedEntity = 'com.sustain.cases.model.Tracking'
					
				
							

							
								
							]]>
							</param>
						</params>
						<mappings>
			
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="optlock" dest="optlock"/>
							<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
							<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
							<mapping source="updateReason" dest="updateReason"/>
							<mapping source="attachedEntity" dest="attachedEntity"/>
							<mapping source="attachedId" dest="attachedId"/>
							<mapping source="color" dest="color"/>
							<mapping source="completed" dest="completed"/>
							<mapping source="content" dest="content"/>
							<mapping source="dueDate" dest="dueDate"/>
							<mapping source="noteDate" dest="noteDate"/>
							<mapping source="sharedToAuthorityNames" dest="sharedToAuthorityNames"/>
							<mapping source="sharedToUsernames" dest="sharedToUsernames"/>
							<mapping source="sharingLevel" dest="sharingLevel"/>
							<mapping source="stripedContent" dest="stripedContent"/>
							<mapping source="title" dest="title"/>
							<mapping source="toDate" dest="toDate"/>
							<mapping source="type" dest="type"/>
							<mapping source="username" dest="username"/>
							<mapping source="assignedUser_id" dest="assignedUser_id"/>
							<mapping source="tCase_id" dest="case_id"/>
							<mapping source="convId" dest="convId"/>
							<mapping source="convId_table" dest="convId_table"/>
							<mapping source="cfCorrespondenceType" dest="cfCorrespondenceType"/>
						</mappings>
						<destination database="${sql.ecourt.db}" schema="ecourt" table="tCaseNote"/>
					</action>-
			
					
				</actions>
			</stage> 
			
		
		<stage num="599" mode="Serial" desc="Load Case Cross Reference" enabled="true">
			<actions>
				
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Case Assignment - OtherNumber">
					<source database="${sql.staging.db}" schema="dbo" table="caseAssignment_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						SELECT 
						type = 'REL',
						COALESCE(xr.createUserRealName, 'conv' ) as createUserRealName,
						COALESCE(xr.createUsername, 'conv' ) as createUsername ,
						COALESCE(xr.dateCreated, GETDATE()) as dateCreated,
						COALESCE(xr.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
						COALESCE(xr.lastUpdateUsername, 'conv') as lastUpdateUsername ,
						COALESCE(xr.lastUpdated, GETDATE()) as lastUpdated,
						*, le.tCaseAssignment_id, re.tCaseOtherNumber_id,
						cc.tCase_id		
						FROM ${sql.migrated.db}.ecourt.tCaseCrossReference xr
						INNER JOIN ${sql.staging.db}.dbo.caseAssignment_conv le
						ON xr.lid = le.id AND xr.associatedCase_id = le.case_id
						INNER JOIN ${sql.staging.db}.dbo.caseOtherNumber_conv re
						ON xr.rid = re.id AND xr.associatedCase_id = re.case_id
						LEFT JOIN ${sql.staging.db}.dbo.case_conv cc
						ON xr.associatedCase_id = cc.id 
						WHERE lEntity = 'com.sustain.cases.model.CaseAssignment' AND rentity = 'com.sustain.cases.model.OtherCaseNumber' AND rid IS NOT NULL
						
					
						]]>							
						</param>
				
												
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="date" dest="date"/>
						<mapping source="lEntity" dest="lEntity"/>
						<mapping source="tCaseAssignment_id" dest="lid"/>
						<mapping source="rEntity" dest="rEntity"/>
						<mapping source="tCaseOtherNumber_id" dest="rid"/>
						<mapping source="type" dest="type"/>
						<mapping source="tCase_id" dest="associatedCase_id"/>
						
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tCaseCrossReference"/>
				</action>
				
					
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Case Assignment - Party - JustWare Adjustment">
					<source database="${sql.staging.db}" schema="dbo" table="caseAssignment_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						
						SELECT * FROM 
						(SELECT
						ce.AddDt AS dateCreated
						, ce.ModDt AS lastUpdated
						, appPersonInfo.createUsername AS createUsername
						, appPersonInfo.createUserRealName AS createUserRealName
						, appPersonInfo.lastUpdateUsername as lastUpdateUsername
						, appPersonInfo.lastUpdateUserRealName AS lastUpdateUserRealName
						, 0 AS optlock
						, ce.AddDt AS date
						, 'com.sustain.cases.model.CaseAssignment' AS lEntity
						, ca.id AS rid
						, 'com.sustain.cases.model.Party' AS rEntity
						, p.id AS lid
						, 'REPRESENTEDBY' AS type
						, ca.case_id AS associatedCase_id,
						ce.Involvement
					
					FROM
						justware.dbo.tblCaseInvPers ce	
						JOIN justware.dbo.ctblInvolveType it ON it.Code = ce.Involvement
						CROSS APPLY (
							SELECT
								c.id 
								, c.case_id
							FROM
								JustWareMigrated_full.ecourt.tCaseAssignment c
							WHERE
								c.convId =  ce.ForCaseInvPersID
						) ca
						CROSS APPLY (
							SELECT
								p.id 
							FROM
								JustWareMigrated_full.ecourt.tParty p
							WHERE
								p.convId = ce.CaseInvPersID
						) p
						OUTER APPLY justware.dbo.fn_GetAddByModByInfo(ce.AddBy, ce.ModBy) appPersonInfo
					WHERE
						--it.CodeType NOT IN (5, 6)
						ce.ForCaseInvPersID IS NOT NULL ) xr
						LEFT JOIN ${sql.staging.db}.dbo.caseAssignment_conv le
						ON xr.rid = le.id AND xr.associatedCase_id = le.case_id 
						LEFT JOIN ${sql.staging.db}.dbo.party_conv re
						ON xr.lid = re.id AND xr.associatedCase_id = re.case_id
						LEFT JOIN ${sql.staging.db}.dbo.case_conv cc
						ON xr.associatedCase_id = cc.id 
						
						
						
						--SELECT 
						--type = 'REL',
						--COALESCE(xr.createUserRealName, 'conv' ) as createUserRealName,
						--COALESCE(xr.createUsername, 'conv' ) as createUsername ,
						--COALESCE(xr.dateCreated, GETDATE()) as dateCreated,
						--COALESCE(xr.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
						--COALESCE(xr.lastUpdateUsername, 'conv') as lastUpdateUsername ,
						--COALESCE(xr.lastUpdated, GETDATE()) as lastUpdated,
						--*, le.tCaseAssignment_id, re.tParty_id,
						--cc.tCase_id
						--FROM ${sql.migrated.db}.ecourt.tCaseCrossReference xr
						--LEFT JOIN ${sql.staging.db}.dbo.caseAssignment_conv le
						--ON xr.lid = le.id AND xr.associatedCase_id = le.case_id 
						--LEFT JOIN ${sql.staging.db}.dbo.party_conv re
						--ON xr.rid = re.id AND xr.associatedCase_id = re.case_id
						--LEFT JOIN ${sql.staging.db}.dbo.case_conv cc
						--ON xr.associatedCase_id = cc.id 
						--
						--WHERE lEntity = 'com.sustain.cases.model.CaseAssignment' AND rentity = 'com.sustain.cases.model.Party'
					
					
						]]>							
						</param>
				
												
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="date" dest="date"/>
						<mapping source="lEntity" dest="lEntity"/>
						<mapping source="tCaseAssignment_id" dest="lid"/>
						<mapping source="rEntity" dest="rEntity"/>
						<mapping source="tParty_id" dest="rid"/>
						<mapping source="type" dest="type"/>
						<mapping source="tCase_id" dest="associatedCase_id"/>
						
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tCaseCrossReference"/>
				</action>
				
						<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Case Assignment - Party">
					<source database="${sql.staging.db}" schema="dbo" table="caseAssignment_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						
					
						
						
						SELECT 
						type = 'REPRESENTEDBY',
						COALESCE(xr.createUserRealName, 'conv' ) as createUserRealName,
						COALESCE(xr.createUsername, 'conv' ) as createUsername ,
						COALESCE(xr.dateCreated, GETDATE()) as dateCreated,
						COALESCE(xr.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
						COALESCE(xr.lastUpdateUsername, 'conv') as lastUpdateUsername ,
						COALESCE(xr.lastUpdated, GETDATE()) as lastUpdated,
						*, le.tCaseAssignment_id, re.tParty_id,
						cc.tCase_id
						FROM ${sql.migrated.db}.ecourt.tCaseCrossReference xr
						LEFT JOIN ${sql.staging.db}.dbo.caseAssignment_conv le
						ON xr.lid = le.id AND xr.associatedCase_id = le.case_id 
						LEFT JOIN ${sql.staging.db}.dbo.party_conv re
						ON xr.rid = re.id AND xr.associatedCase_id = re.case_id
						LEFT JOIN ${sql.staging.db}.dbo.case_conv cc
						ON xr.associatedCase_id = cc.id 
						
						WHERE lEntity = 'com.sustain.cases.model.CaseAssignment' AND rentity = 'com.sustain.cases.model.Party'
					
					
						]]>							
						</param>
				
												
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="date" dest="date"/>
						<mapping source="lEntity" dest="lEntity"/>
						<mapping source="tCaseAssignment_id" dest="lid"/>
						<mapping source="rEntity" dest="rEntity"/>
						<mapping source="tParty_id" dest="rid"/>
						<mapping source="type" dest="type"/>
						<mapping source="tCase_id" dest="associatedCase_id"/>
						
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tCaseCrossReference"/>
				</action>
				
							
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Charge-CaseAssignment">
					<source database="${sql.staging.db}" schema="dbo" table="caseAssignment_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						SELECT 
						type = 'REL',
						COALESCE(xr.createUserRealName, 'conv' ) as createUserRealName,
						COALESCE(xr.createUsername, 'conv' ) as createUsername ,
						COALESCE(xr.dateCreated, GETDATE()) as dateCreated,
						COALESCE(xr.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
						COALESCE(xr.lastUpdateUsername, 'conv') as lastUpdateUsername ,
						COALESCE(xr.lastUpdated, GETDATE()) as lastUpdated,
						*, le.tCharge_id, re.tCaseAssignment_id,
						cc.tCase_id
						FROM ${sql.migrated.db}.ecourt.tCaseCrossReference xr
						LEFT JOIN ${sql.staging.db}.dbo.charge_conv le
						ON xr.lid = le.id AND xr.associatedCase_id = le.case_id
						LEFT JOIN ${sql.staging.db}.dbo.caseAssignment_conv re
						ON xr.rid = re.id AND xr.associatedCase_id = re.case_id
						LEFT JOIN ${sql.staging.db}.dbo.case_conv cc
						ON xr.associatedCase_id = cc.id 
						WHERE lEntity = 'com.sustain.cases.model.Charge' AND rentity = 'com.sustain.cases.model.CaseAssignment'
						
					
						]]>							
						</param>
				
												
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="date" dest="date"/>
						<mapping source="lEntity" dest="lEntity"/>
						<mapping source="tCharge_id" dest="lid"/>
						<mapping source="rEntity" dest="rEntity"/>
						<mapping source="tCaseAssignment_id" dest="rid"/>
						<mapping source="type" dest="type"/>
						<mapping source="tCase_id" dest="associatedCase_id"/>
						
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tCaseCrossReference"/>
				</action>
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Charge-Party">
					<source database="${sql.staging.db}" schema="dbo" table="caseAssignment_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						
						
						
						
						
						
						SELECT
						type = 'REL',
						cc.tCase_id,
						COALESCE(xr.createUserRealName, 'conv' ) as createUserRealName,
						COALESCE(xr.createUsername, 'conv' ) as createUsername ,
						COALESCE(xr.dateCreated, GETDATE()) as dateCreated,
						COALESCE(xr.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
						COALESCE(xr.lastUpdateUsername, 'conv') as lastUpdateUsername ,
						COALESCE(xr.lastUpdated, GETDATE()) as lastUpdated,
						*, le.tCharge_id, re.tParty_id FROM ${sql.migrated.db}.ecourt.tCaseCrossReference xr
						LEFT JOIN ${sql.staging.db}.dbo.charge_conv le
						ON xr.lid = le.id AND xr.associatedCase_id = le.case_id
						LEFT JOIN ${sql.staging.db}.dbo.party_conv re
						ON xr.rid = re.id AND xr.associatedCase_id = re.case_id
						LEFT JOIN ${sql.staging.db}.dbo.case_conv cc
						ON xr.associatedCase_id = cc.id 
						WHERE lEntity = 'com.sustain.cases.model.Charge' AND rentity = 'com.sustain.cases.model.Party'
						
					
						]]>							
						</param>
				
												
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="date" dest="date"/>
						<mapping source="lEntity" dest="lEntity"/>
						<mapping source="tCharge_id" dest="lid"/>
						<mapping source="rEntity" dest="rEntity"/>
						<mapping source="tParty_id" dest="rid"/>
						<mapping source="type" dest="type"/>
						<mapping source="tCase_id" dest="associatedCase_id"/>
						
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tCaseCrossReference"/>
				</action>
				
					
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="OtherCaseNumber-Charge">
					<source database="${sql.staging.db}" schema="dbo" table="caseAssignment_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						SELECT 
						type = 'REL',
						cc.tCase_id,
						COALESCE(xr.createUserRealName, 'conv' ) as createUserRealName,
						COALESCE(xr.createUsername, 'conv' ) as createUsername ,
						COALESCE(xr.dateCreated, GETDATE()) as dateCreated,
						COALESCE(xr.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
						COALESCE(xr.lastUpdateUsername, 'conv') as lastUpdateUsername ,
						COALESCE(xr.lastUpdated, GETDATE()) as lastUpdated,
						*, le.tCaseOtherNumber_id, re.tCharge_id FROM ${sql.migrated.db}.ecourt.tCaseCrossReference xr
						INNER JOIN ${sql.staging.db}.dbo.caseOtherNumber_conv le
						ON xr.lid = le.id AND xr.associatedCase_id = le.case_id
						INNER JOIN ${sql.staging.db}.dbo.charge_conv re
						ON xr.rid = re.id AND xr.associatedCase_id = re.case_id
						LEFT JOIN ${sql.staging.db}.dbo.case_conv cc
						ON xr.associatedCase_id = cc.id 
						WHERE lEntity = 'com.sustain.cases.model.OtherCaseNumber' AND rentity = 'com.sustain.cases.model.Charge' 
						
					
						]]>							
						</param>
				
												
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="date" dest="date"/>
						<mapping source="lEntity" dest="lEntity"/>
						<mapping source="tCaseOtherNumber_id" dest="lid"/>
						<mapping source="rEntity" dest="rEntity"/>
						<mapping source="tCharge_id" dest="rid"/>
						<mapping source="type" dest="type"/>
						<mapping source="tCase_id" dest="associatedCase_id"/>
						
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tCaseCrossReference"/>
				</action>
				
							
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Party-Party">
					<source database="${sql.staging.db}" schema="dbo" table="caseAssignment_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						SELECT
						type = 'REL',
						cc.tCase_id,
						COALESCE(xr.createUserRealName, 'conv' ) as createUserRealName,
						COALESCE(xr.createUsername, 'conv' ) as createUsername ,
						COALESCE(xr.dateCreated, GETDATE()) as dateCreated,
						COALESCE(xr.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
						COALESCE(xr.lastUpdateUsername, 'conv') as lastUpdateUsername ,
						COALESCE(xr.lastUpdated, GETDATE()) as lastUpdated,
						*, le.tParty_id, re.tParty_id FROM ${sql.migrated.db}.ecourt.tCaseCrossReference xr
						LEFT JOIN ${sql.staging.db}.dbo.party_conv le
						ON xr.lid = le.id AND xr.associatedCase_id = le.case_id
						LEFT JOIN ${sql.staging.db}.dbo.party_conv re
						ON xr.rid = re.id AND xr.associatedCase_id = re.case_id
						LEFT JOIN ${sql.staging.db}.dbo.case_conv cc
						ON xr.associatedCase_id = cc.id 
						WHERE lEntity = 'com.sustain.cases.model.Party' AND rentity = 'com.sustain.cases.model.Party'
						
					
						]]>							
						</param>
				
												
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="date" dest="date"/>
						<mapping source="lEntity" dest="lEntity"/>
						<mapping source="tParty_id" dest="lid"/>
						<mapping source="rEntity" dest="rEntity"/>
						<mapping source="tParty_id" dest="rid"/>
						<mapping source="type" dest="type"/>
						<mapping source="tCase_id" dest="associatedCase_id"/>
						
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tCaseCrossReference"/>
				</action>
				
									
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Ce_NonCollectibleFinancial-CaseAssignment">
					<source database="${sql.staging.db}" schema="dbo" table="caseAssignment_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						SELECT 
						type = 'REL',
						cc.tCase_id,
						COALESCE(xr.createUserRealName, 'conv' ) as createUserRealName,
						COALESCE(xr.createUsername, 'conv' ) as createUsername ,
						COALESCE(xr.dateCreated, GETDATE()) as dateCreated,
						COALESCE(xr.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
						COALESCE(xr.lastUpdateUsername, 'conv') as lastUpdateUsername ,
						COALESCE(xr.lastUpdated, GETDATE()) as lastUpdated,
						*, le.tCe_NonCollectibleFinancial_id, re.tCaseAssignment_id FROM ${sql.migrated.db}.ecourt.tCaseCrossReference xr
						LEFT JOIN ${sql.staging.db}.dbo.tCe_NonCollectibleFinancial_conv le
						ON xr.lid = le.id AND xr.associatedCase_id = le.case_id
						LEFT JOIN ${sql.staging.db}.dbo.caseAssignment_conv re
						ON xr.rid = re.id AND xr.associatedCase_id = re.case_id
						LEFT JOIN ${sql.staging.db}.dbo.case_conv cc
						ON xr.associatedCase_id = cc.id 
						WHERE lEntity = 'com.sustain.entities.custom.Ce_NonCollectibleFinancial' AND rentity = 'com.sustain.cases.model.CaseAssignment'
						
					
						]]>							
						</param>
				
												
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="date" dest="date"/>
						<mapping source="lEntity" dest="lEntity"/>
						<mapping source="tCe_NonCollectibleFinancial_id" dest="lid"/>
						<mapping source="rEntity" dest="rEntity"/>
						<mapping source="tCaseAssignment_id" dest="rid"/>
						<mapping source="type" dest="type"/>
						<mapping source="tCase_id" dest="associatedCase_id"/>
						
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tCaseCrossReference"/>
				</action>
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Ce_NonCollectibleFinancial-Party">
					<source database="${sql.staging.db}" schema="dbo" table="caseAssignment_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						SELECT 
						type = 'REL',
						COALESCE(xr.createUserRealName, 'conv' ) as createUserRealName,
						COALESCE(xr.createUsername, 'conv' ) as createUsername ,
						COALESCE(xr.dateCreated, GETDATE()) as dateCreated,
						COALESCE(xr.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
						COALESCE(xr.lastUpdateUsername, 'conv') as lastUpdateUsername ,
						COALESCE(xr.lastUpdated, GETDATE()) as lastUpdated,
						*, le.tCe_NonCollectibleFinancial_id, re.tParty_id FROM ${sql.migrated.db}.ecourt.tCaseCrossReference xr
						LEFT JOIN ${sql.staging.db}.dbo.tCe_NonCollectibleFinancial_conv le
						ON xr.lid = le.id AND xr.associatedCase_id = le.case_id
						LEFT JOIN ${sql.staging.db}.dbo.party_conv re
						ON xr.rid = re.id AND xr.associatedCase_id = re.case_id
						WHERE lEntity = 'com.sustain.entities.custom.Ce_NonCollectibleFinancial' AND rentity = 'com.sustain.cases.model.Party'
						
					
						]]>							
						</param>
				
												
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="date" dest="date"/>
						<mapping source="lEntity" dest="lEntity"/>
						<mapping source="tCe_NonCollectibleFinancial_id" dest="lid"/>
						<mapping source="rEntity" dest="rEntity"/>
						<mapping source="tParty_id" dest="rid"/>
						<mapping source="type" dest="type"/>
						<mapping source="associatedCase_id" dest="associatedCase_id"/>
					
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tCaseCrossReference"/>
				</action>
				
				
			</actions>
		</stage> 	
	
		<stage num="700" mode="Serial" desc="Load DocumetFolder" enabled="true">
			<actions>
			
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Document Folder" enabled="true">
					<source database="${sql.staging.db}" schema="dbo" table="documentFolder_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						
						
						DECLARE @today datetime; SET @today = GETDATE();
						SELECT 
						COALESCE(df.createUserRealName, 'conv' ) as createUserRealName,
						COALESCE(df.createUsername, 'conv' ) as createUsername ,
						COALESCE(df.dateCreated, @today) as dateCreated,
						COALESCE(df.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
						COALESCE(df.lastUpdateUsername, 'conv') as lastUpdateUsername ,
						COALESCE(df.lastUpdated, @today) as lastUpdated,
						0 as optlock,
						df.*,
						p.tPerson_id
						FROM documentFolder_conv df
						INNER JOIN person_conv p 
						ON df.person_id = p.id AND df.personKy = p.idKey

						]]>							
						</param>
						<param name="idColumnName">tDocumentFolder_id</param>
						<param name="whereColumnName">idKey</param>	
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="name" dest="name"/>
						<mapping source="case_id" dest="case_id"/>
						<mapping source="parentFolder_id" dest="parentFolder_id"/>
						<mapping source="tPerson_id" dest="person_id"/>
						<mapping source="subCase_id" dest="subCase_id"/>
				
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tDocumentFolder"/>
				</action>
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Document Folder" enabled="true">
					<source database="${sql.staging.db}" schema="dbo" table="documentFolder_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						
						
						DECLARE @today datetime; SET @today = GETDATE();
						SELECT 
						COALESCE(df.createUserRealName, 'conv' ) as createUserRealName,
						COALESCE(df.createUsername, 'conv' ) as createUsername ,
						COALESCE(df.dateCreated, @today) as dateCreated,
						COALESCE(df.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
						COALESCE(df.lastUpdateUsername, 'conv') as lastUpdateUsername ,
						COALESCE(df.lastUpdated, @today) as lastUpdated,
						0 as optlock,
						df.*,
						c.tCase_id
						FROM documentFolder_conv df
						INNER JOIN case_conv c
						ON df.case_id = c.id AND df.caseKy = c.idKey
					

						]]>							
						</param>
						<param name="idColumnName">tDocumentFolder_id</param>
						<param name="whereColumnName">idKey</param>	
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="name" dest="name"/>
						<mapping source="tCase_id" dest="case_id"/>
						<mapping source="parentFolder_id" dest="parentFolder_id"/>
					<!--	<mapping source="tPerson_id" dest="person_id"/> -->
						<mapping source="subCase_id" dest="subCase_id"/>
					
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tDocumentFolder"/>
				</action>
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Document Folder" enabled="true">
					<source database="${sql.staging.db}" schema="dbo" table="documentFolder_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						
						
						DECLARE @today datetime; SET @today = GETDATE();
						SELECT 
						COALESCE(df.createUserRealName, 'conv' ) as createUserRealName,
						COALESCE(df.createUsername, 'conv' ) as createUsername ,
						COALESCE(df.dateCreated, @today) as dateCreated,
						COALESCE(df.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
						COALESCE(df.lastUpdateUsername, 'conv') as lastUpdateUsername ,
						COALESCE(df.lastUpdated, @today) as lastUpdated,
						0 as optlock,
						df.*,
						pf.tDocumentFolder_id as parentFolder
						FROM documentFolder_conv df
						INNER JOIN documentFolder_conv pf
						ON df.parentFolder_id = pf.id 
					

						]]>							
						</param>
						<param name="idColumnName">tDocumentFolder_id</param>
						<param name="whereColumnName">idKey</param>	
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="name" dest="name"/>
				<!---		<mapping source="tCase_id" dest="case_id"/> -->
						<mapping source="parentFolder" dest="parentFolder_id"/>
			<!--			<mapping source="tPerson_id" dest="person_id"/> -->
						<mapping source="subCase_id" dest="subCase_id"/>

					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tDocumentFolder"/>
				</action>
				
			
			</actions>
		</stage> 			
		
		
		<stage num="702" mode="Serial" desc="Load Document" enabled="true">
			<actions>
			
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Document Folder" enabled="true">
					<source database="${sql.staging.db}" schema="dbo" table="document_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						
						
						DECLARE @today datetime; SET @today = GETDATE();
						SELECT 
						COALESCE(d.createUserRealName, 'conv' ) as createUserRealName,
						COALESCE(d.createUsername, 'conv' ) as createUsername ,
						COALESCE(d.dateCreated, @today) as dateCreated,
						COALESCE(d.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
						COALESCE(d.lastUpdateUsername, 'conv') as lastUpdateUsername ,
						COALESCE(d.lastUpdated, @today) as lastUpdated,
						0 as optlock,
						'COMPLETE' as storageStatusLd,
						's3-idm' as storageTypeLd,
						docDefLd = 
						CASE
						WHEN ddf.id IS NOT NULL THEN ddf.id
						ELSE (SELECT id FROM  ${sql.ecourt.db}.ecourt.tDocDef WHERE number = 'CONV')
						END,
						d.*,
						cc.tCase_id,
						df.tDocumentFolder_id,
						status_ld = 'FILED'
						FROM document_conv d
						INNER JOIN case_conv cc
						ON d.case_id = cc.id AND cc.idKey = d.caseKey
						LEFT JOIN ${sql.ecourt.db}.ecourt.tDocDef ddf
						ON d.docNumber = ddf.number
						LEFT JOIN documentFolder_conv df
						ON d.folder_id = df.id AND d.caseKey = df.caseKy

						]]>							
						</param>
						<param name="idColumnName">tDocument_id</param>
						<param name="whereColumnName">idKey</param>							
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="attachmentMethod" dest="attachmentMethod"/>
						<mapping source="batch" dest="batch"/>
						<mapping source="batchSource" dest="batchSource"/>
						<mapping source="customDocPropsStatus" dest="customDocPropsStatus"/>
						<mapping source="dateFiled" dest="dateFiled"/>
						<mapping source="dateReceived" dest="dateReceived"/>
						<mapping source="dispositionDate" dest="dispositionDate"/>
						<mapping source="dispositionType" dest="dispositionType"/>
						<mapping source="effectiveStatus" dest="effectiveStatus"/>
						<mapping source="effectiveStatusDate" dest="effectiveStatusDate"/>
						<mapping source="exParte" dest="exParte"/>
						<mapping source="favorite" dest="favorite"/>
						<mapping source="filedByMethod" dest="filedByMethod"/>
						<mapping source="filedByName" dest="filedByName"/>
						<mapping source="filedByText" dest="filedByText"/>
						<mapping source="filedByType" dest="filedByType"/>
						<mapping source="indexPublishFailedCount" dest="indexPublishFailedCount"/>
						<mapping source="indexPublishFailedError" dest="indexPublishFailedError"/>
						<mapping source="indexPublished" dest="indexPublished"/>
						<mapping source="intendedToAmend" dest="intendedToAmend"/>
						<mapping source="mailingDate" dest="mailingDate"/>
						<mapping source="nameExact" dest="nameExact"/>
						<mapping source="nameExtension" dest="nameExtension"/>
						<mapping source="numberOfPages" dest="numberOfPages"/>
						<mapping source="numberOfUnits" dest="numberOfUnits"/>
						<mapping source="numberOfVolumes" dest="numberOfVolumes"/>
						<mapping source="onDemand" dest="onDemand"/>
						<mapping source="originalFileName" dest="originalFileName"/>
						<mapping source="partNumber" dest="partNumber"/>
						<mapping source="reason" dest="reason"/>
						<mapping source="redactedOn" dest="redactedOn"/>
						<mapping source="referenceDocId" dest="referenceDocId"/>
						<mapping source="refersToText" dest="refersToText"/>
						<mapping source="relatedHearingText" dest="relatedHearingText"/>
						<mapping source="relatedToText" dest="relatedToText"/>
						<mapping source="reportCode" dest="reportCode"/>
						<mapping source="requiresService" dest="requiresService"/>
						<mapping source="reservationReceiptNumber" dest="reservationReceiptNumber"/>
						<mapping source="reviewStatus" dest="reviewStatus"/>
						<mapping source="reviewStatusDate" dest="reviewStatusDate"/>
						<mapping source="scanId" dest="scanId"/>
						<mapping source="searchable" dest="searchable"/>
						<mapping source="serviceCost" dest="serviceCost"/>
						<mapping source="serviceDue" dest="serviceDue"/>
						<mapping source="serviceStatus" dest="serviceStatus"/>
						<mapping source="serviceStatusDate" dest="serviceStatusDate"/>
						<mapping source="serviceType" dest="serviceType"/>
						<mapping source="signedByName" dest="signedByName"/>
						<mapping source="status_ld" dest="status"/>
						<mapping source="dateFiled" dest="statusDate"/>
						<mapping source="storageId" dest="storageId"/>
						<mapping source="storageMimeType" dest="storageMimeType"/>
						<mapping source="storagePageCount" dest="storagePageCount"/>
						<mapping source="storageRev" dest="storageRev"/>
						<mapping source="storageSize" dest="storageSize"/>
						<mapping source="storageStatusLd" dest="storageStatus"/>
						<mapping source="storageTypeLd" dest="storageType"/>
						<mapping source="task" dest="task"/>
						<mapping source="type" dest="type"/>
						<mapping source="unitType" dest="unitType"/>
						<mapping source="untimely" dest="untimely"/>
						<mapping source="wordPropsError" dest="wordPropsError"/>
						<mapping source="workQueueStatus" dest="workQueueStatus"/>
						<mapping source="tCase_id" dest="case_id"/>
						<mapping source="docDefLd" dest="docDef_id"/>
						<mapping source="documentEFilingData_id" dest="documentEFilingData_id"/>
						<mapping source="exhibit_id" dest="exhibit_id"/>
						<mapping source="feeWaiver_id" dest="feeWaiver_id"/>
						<mapping source="tDocumentFolder_id" dest="folder_id"/>
						<mapping source="subCase_id" dest="subCase_id"/>
						<mapping source="submission_id" dest="submission_id"/>
					
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tDocument"/>
				</action>
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Document Folder" enabled="true">
					<source database="${sql.staging.db}" schema="dbo" table="document_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						DECLARE @today datetime; SET @today = GETDATE();
						SELECT
						COALESCE('conv', ds.createUserRealName)  as createUserRealName,
						COALESCE('conv', ds.createUsername) as createUsername ,
						COALESCE(@today, ds.dateCreated) as dateCreated,
						COALESCE('conv', ds.lastUpdateUserRealName) as lastUpdateUserRealName,
						COALESCE('conv', ds.lastUpdateUsername) as lastUpdateUsername ,
						COALESCE(@today, ds.lastUpdated) as lastUpdated,
						ds.*,
						d.tDocument_id
						FROM ${sql.ecourt.db}.ecourt.tDocumentSeal ds
						INNER JOIN ${sql.staging.db}.dbo.document_conv d 
						ON ds.sealedDocument_id = d.id

						]]>							
						</param>
											
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="effectiveFrom" dest="effectiveFrom"/>
						<mapping source="effectiveTo" dest="effectiveTo"/>
						<mapping source="type" dest="type"/>
						<mapping source="tDocument_id" dest="sealedDocument_id"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tDocumentSeal"/>
				</action>
				
			
			</actions>
		</stage> 			
		
		<stage num="704" mode="Serial" desc="Load Person Document" enabled="true">
			<actions>
			
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Person Document" enabled="false">
					<source database="${sql.staging.db}" schema="dbo" table="documentPerson_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						
						
						DECLARE @today datetime; SET @today = GETDATE();
						SELECT 
						COALESCE(pd.createUserRealName, 'conv' ) as createUserRealName,
						COALESCE(pd.createUsername, 'conv' ) as createUsername ,
						COALESCE(pd.dateCreated, @today) as dateCreated,
						COALESCE(pd.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
						COALESCE(pd.lastUpdateUsername, 'conv') as lastUpdateUsername ,
						COALESCE(pd.lastUpdated, @today) as lastUpdated,
						0 as optlock,
						docDefLd = 
						CASE
						WHEN ddf.id IS NOT NULL THEN ddf.id
						ELSE (SELECT id FROM  ${sql.ecourt.db}.ecourt.tDocDef WHERE number = 'CONV')
						END,
						pd.* 
						FROM ${sql.staging.db}.dbo.documentPerson_conv pd
						LEFT JOIN ${sql.ecourt.db}.ecourt.tDocDef ddf
						ON pd.docNumber = ddf.number
						INNER JOIN (SELECT tPerson_id, id, ROW_NUMBER() OVER(PARTITION BY id ORDER BY tPerson_id ASC) rnk FROM ${sql.staging.db}.dbo.person_conv) p 
						ON pd.person_id = p.id AND p.rnk =1 
						 
						]]>							
						</param>
												
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="attachmentMethod" dest="attachmentMethod"/>
						<mapping source="dateFiled" dest="dateFiled"/>
						<mapping source="dateReceived" dest="dateReceived"/>
						<mapping source="filedByType" dest="filedByType"/>
						<mapping source="intendedToAmend" dest="intendedToAmend"/>
						<mapping source="mailingDate" dest="mailingDate"/>
						<mapping source="nameExact" dest="nameExact"/>
						<mapping source="nameExtension" dest="nameExtension"/>
						<mapping source="originalFileName" dest="originalFileName"/>
						<mapping source="scanId" dest="scanId"/>
						<mapping source="serviceType" dest="serviceType"/>
						<mapping source="status" dest="status"/>
						<mapping source="statusDate" dest="statusDate"/>
						<mapping source="storageId" dest="storageId"/>
						<mapping source="storageMimeType" dest="storageMimeType"/>
						<mapping source="storageRev" dest="storageRev"/>
						<mapping source="storageSize" dest="storageSize"/>
						<mapping source="storageStatus" dest="storageStatus"/>
						<mapping source="storageType" dest="storageType"/>
						<mapping source="type" dest="type"/>
						<mapping source="docDefLd" dest="docDef_id"/>
						<mapping source="folder_id" dest="folder_id"/>
						<mapping source="person_id" dest="person_id"/>
						<mapping source="category" dest="category"/>
						<mapping source="notes" dest="notes"/>
						<mapping source="convId" dest="convId"/>
						<mapping source="amount1" dest="amount1"/>
						<mapping source="amount2" dest="amount2"/>
						<mapping source="location" dest="location"/>
						<mapping source="priority" dest="priority"/>
						<mapping source="sealed" dest="sealed"/>
						<mapping source="customDocPropsStatus" dest="customDocPropsStatus"/>
						<mapping source="redactedOn" dest="redactedOn"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tPersonDocument"/>
				</action>
				
					
				
				
				
			</actions>	
			
		</stage> 		
		
			
		<stage num="706" mode="Serial" desc="Load Person Image" enabled="true">
			<actions>
			
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Person Document" enabled="false">
					<source database="${sql.staging.db}" schema="dbo" table="personImage_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						
						
						DECLARE @today datetime; SET @today = GETDATE();
						SELECT 
						COALESCE(pri.createUserRealName, 'conv' ) as createUserRealName,
						COALESCE(pri.createUsername, 'conv' ) as createUsername ,
						COALESCE(pri.dateCreated, @today) as dateCreated,
						COALESCE(pri.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
						COALESCE(pri.lastUpdateUsername, 'conv') as lastUpdateUsername ,
						COALESCE(pri.lastUpdated, @today) as lastUpdated,
						0 as optlock,
						pri.* 
						FROM ${sql.staging.db}.dbo.personImage_conv pri
						WHERE tper

						]]>							
						</param>
												
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="dateTaken" dest="dateTaken"/>
						<mapping source="description" dest="description"/>
						<mapping source="image" dest="image"/>
						<mapping source="imageFileName" dest="imageFileName"/>
						<mapping source="source" dest="source"/>
						<mapping source="type" dest="type"/>
			
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tPersonImage"/>
				</action>
			</actions>	
			
		</stage> 		
		
		<stage num="708" mode="Serial" desc="Load Person Document" enabled="true">
			<actions>
			
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Person Document" enabled="true">
					<source database="${sql.staging.db}" schema="dbo" table="personDocument_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						
						
						DECLARE @today datetime; SET @today = GETDATE();
						SELECT 
						COALESCE(pd.createUserRealName, 'conv' ) as createUserRealName,
						COALESCE(pd.createUsername, 'conv' ) as createUsername ,
						COALESCE(pd.dateCreated, @today) as dateCreated,
						COALESCE(pd.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
						COALESCE(pd.lastUpdateUsername, 'conv') as lastUpdateUsername ,
						COALESCE(pd.lastUpdated, @today) as lastUpdated,
						0 as optlock,
						storageTypeLd = 's3-idm',
						storageStatusLd = 'COMPLETE',
						pd.*, t1.tPerson_id 
						
						FROM ${sql.staging.db}.dbo.documentPerson_conv pd
						INNER JOIN (SELECT  ROW_NUMBER() OVER(PARTITION BY pc.id ORDER BY pc.tPerson_id) rnk, pc.id, pc.tPerson_id FROM ${sql.staging.db}.dbo.person_conv pc LEFT JOIN ${sql.staging.db}.dbo.case_conv cc ON pc.case_id = cc.id ) t1
						ON pd.person_id = t1.id AND rnk =1
					

						]]>							
						</param>
					<!--		<param name="idColumnName">tPersonDocument_id</param>
							<param name="whereColumnName">idKey</param>	-->
					</params>
					<mappings>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="notes" dest="memo"/>
							<mapping source="optlock" dest="optlock"/>
							<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
							<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
							<mapping source="updateReason" dest="updateReason"/>
							<mapping source="attachmentMethod" dest="attachmentMethod"/>
							<mapping source="dateFiled" dest="dateFiled"/>
							<mapping source="dateReceived" dest="dateReceived"/>
							<mapping source="filedByType" dest="filedByType"/>
							<mapping source="intendedToAmend" dest="intendedToAmend"/>
							<mapping source="mailingDate" dest="mailingDate"/>
							<mapping source="nameExact" dest="nameExact"/>
							<mapping source="nameExtension" dest="nameExtension"/>
							<mapping source="originalFileName" dest="originalFileName"/>
							<mapping source="scanId" dest="scanId"/>
							<mapping source="serviceType" dest="serviceType"/>
							<mapping source="status" dest="status"/>
							<mapping source="statusDate" dest="statusDate"/>
							<mapping source="storageId" dest="storageId"/>
							<mapping source="storageMimeType" dest="storageMimeType"/>
							<mapping source="storageRev" dest="storageRev"/>
							<mapping source="storageSize" dest="storageSize"/>
							<mapping source="storageStatusLd" dest="storageStatus"/>
							<mapping source="storageTypeLd" dest="storageType"/>
							<mapping source="type" dest="type"/>
							<mapping source="docDef_id" dest="docDef_id"/>
						<!--	<mapping source="folder_id" dest="folder_id"/> -->
							<mapping source="tPerson_id" dest="person_id"/>
			
						
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tPersonDocument"/>
				</action>
				
				<action handler="SqlServer.Raw" desc="Storage Mime" progresslabel="Document Storage Mime Type" enabled="true">
						<source database="${sql.ecourt.db}" schema="dbo">
							
							
							<task handler="SqlServer.Script" desc="Create Person Special Status table">
							<![CDATA[
							
								UPDATE ecourt.tDocument
						SET
						storageMimeType =
						CASE
							WHEN extension IN ('png', 'jpeg', 'gif', 'jpg', 'bmp') THEN 'image' 
							WHEN extension IN ('pdf', 'PDF') THEN  'application/pdf'
							WHEN extension IN ('TIF', 'tif', 'tiff', 'TIFF') THEN 'image/tiff' 
							WHEN extension IN ('rtf', 'RTF') THEN 'application/rtf' 
							WHEN extension IN ('doc', 'dot', 'DOC', 'DOT') THEN 'application/msword' 
							WHEN extension IN ('docx', 'DOCX') THEN 'application/vnd.openxmlformats-officedocument.wordprocessingml.document' 
							WHEN extension IN ('dotx', 'DOTX') THEN 'application/vnd.openxmlformats-officedocument.wordprocessingml.template'
							WHEN extension IN ('docm', 'DOCM', 'dotm', 'DOTM') THEN 'application/vnd.ms-word.document.macroEnabled.12' 
							WHEN extension IN ('xls', 'xlt', 'xla', 'XLS', 'XLT', 'XLA') THEN 'application/vnd.ms-excel'
							WHEN extension IN ('xlsx', 'XLSX') THEN 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'
							WHEN extension IN ('xltx', 'XLTX') THEN 'application/vnd.openxmlformats-officedocument.spreadsheetml.template' 
							WHEN extension IN ('xlsm', 'XLSM') THEN 'application/vnd.ms-excel.sheet.macroEnabled.12' 
							WHEN extension IN ('xltm', 'XLTM') THEN 'application/vnd.ms-excel.template.macroEnabled.12' 
							WHEN extension IN ('xlam', 'XLAM') THEN 'application/vnd.ms-excel.addin.macroEnabled.12' 
							WHEN extension IN ('xlsb', 'XLSB') THEN 'application/vnd.ms-excel.sheet.binary.macroEnabled.12'
							WHEN extension IN ('ppt', 'pot', 'pps', 'ppa', 'PPT', 'POT', 'PPS', 'PPA') THEN 'application/vnd.ms-powerpoint'
							WHEN extension IN ('pptx', 'PPTX') THEN 'application/vnd.openxmlformats-officedocument.presentationml.presentation' 
							WHEN extension IN ('potx', 'POTX') THEN 'application/vnd.openxmlformats-officedocument.presentationml.template'
							WHEN extension IN ('ppsx', 'PPSX') THEN 'application/vnd.openxmlformats-officedocument.presentationml.slideshow'
							WHEN extension IN ('ppam', 'PPAM') THEN 'application/vnd.ms-powerpoint.addin.macroEnabled.12'
							WHEN extension IN ('pptm', 'PPTM') THEN 'application/vnd.ms-powerpoint.presentation.macroEnabled.12'
							WHEN extension IN ('potm', 'POTM') THEN 'application/vnd.ms-powerpoint.template.macroEnabled.12'
							WHEN extension IN ('ppsm', 'PPSM') THEN 'application/vnd.ms-powerpoint.slideshow.macroEnabled.12'
							WHEN extension IN ('msg', 'MSG') THEN 'application/vnd.ms-outlook' 
							WHEN extension IN ('MP4', 'mp4') THEN 'video/mp4'
							WHEN extension IN ('WEBM', 'web') THEN 'video/webm'
							WHEN extension IN ('mp3') THEN 'audio/mpeg'
							WHEN extension IN ('wma', 'WMA') THEN 'audio/x-ms-wma'
							WHEN extension IN ('flv', 'FLV') THEN 'video/flv'
							WHEN extension IN ('wav', 'WAV') THEN 'audio/x-wav'
							WHEN extension IN ('MPG', 'mpg') THEN 'video/mpeg'
							WHEN extension IN ('csv', 'CSV') THEN 'text/csv'
							WHEN extension IN ('zip', 'ZIP') THEN 'application/zip'
							WHEN extension IN ('wmv', 'WMV') THEN 'video/x-generic'
							WHEN extension IN ('avi', 'AVI') THEN 'video/x-msvideo'
							WHEN extension IN ('mov', 'MOV') THEN 'video/x-generic'
							WHEN extension IN ('M4A', 'm4a') THEN 'application/octet-stream'
							ELSE NULL
						END
						FROM
						ecourt.tDocument d
						INNER JOIN
						(SELECT id, case_id, storageId, storageMimeType,
						extension =
						CASE
						WHEN CHARINDEX('.', REVERSE(storageId)) > 0 THEN REVERSE(LEFT(REVERSE(storageID),CHARINDEX('.',REVERSE(storageId)) -1))
						ELSE CONCAT(storageID, ': ', CHARINDEX('.', REVERSE(storageId)))
						END
						FROM ecourt.tDocument
						--WHERE createUsername = 'CONV' and storageMimeType IS NULL
						) t1
						ON t1.id = d.id
						INNER JOIN ecourt.tCase cs
						ON t1.case_id = cs.id;
				
						UPDATE ecourt.tPersonDocument
						SET
						storageMimeType =
						CASE
							WHEN extension IN ('png', 'jpeg', 'gif', 'jpg', 'bmp') THEN 'image' 
							WHEN extension IN ('pdf', 'PDF') THEN  'application/pdf'
							WHEN extension IN ('TIF', 'tif', 'tiff', 'TIFF') THEN 'image/tiff' 
							WHEN extension IN ('rtf', 'RTF') THEN 'application/rtf' 
							WHEN extension IN ('doc', 'dot', 'DOC', 'DOT') THEN 'application/msword' 
							WHEN extension IN ('docx', 'DOCX') THEN 'application/vnd.openxmlformats-officedocument.wordprocessingml.document' 
							WHEN extension IN ('dotx', 'DOTX') THEN 'application/vnd.openxmlformats-officedocument.wordprocessingml.template'
							WHEN extension IN ('docm', 'DOCM', 'dotm', 'DOTM') THEN 'application/vnd.ms-word.document.macroEnabled.12' 
							WHEN extension IN ('xls', 'xlt', 'xla', 'XLS', 'XLT', 'XLA') THEN 'application/vnd.ms-excel'
							WHEN extension IN ('xlsx', 'XLSX') THEN 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'
							WHEN extension IN ('xltx', 'XLTX') THEN 'application/vnd.openxmlformats-officedocument.spreadsheetml.template' 
							WHEN extension IN ('xlsm', 'XLSM') THEN 'application/vnd.ms-excel.sheet.macroEnabled.12' 
							WHEN extension IN ('xltm', 'XLTM') THEN 'application/vnd.ms-excel.template.macroEnabled.12' 
							WHEN extension IN ('xlam', 'XLAM') THEN 'application/vnd.ms-excel.addin.macroEnabled.12' 
							WHEN extension IN ('xlsb', 'XLSB') THEN 'application/vnd.ms-excel.sheet.binary.macroEnabled.12'
							WHEN extension IN ('ppt', 'pot', 'pps', 'ppa', 'PPT', 'POT', 'PPS', 'PPA') THEN 'application/vnd.ms-powerpoint'
							WHEN extension IN ('pptx', 'PPTX') THEN 'application/vnd.openxmlformats-officedocument.presentationml.presentation' 
							WHEN extension IN ('potx', 'POTX') THEN 'application/vnd.openxmlformats-officedocument.presentationml.template'
							WHEN extension IN ('ppsx', 'PPSX') THEN 'application/vnd.openxmlformats-officedocument.presentationml.slideshow'
							WHEN extension IN ('ppam', 'PPAM') THEN 'application/vnd.ms-powerpoint.addin.macroEnabled.12'
							WHEN extension IN ('pptm', 'PPTM') THEN 'application/vnd.ms-powerpoint.presentation.macroEnabled.12'
							WHEN extension IN ('potm', 'POTM') THEN 'application/vnd.ms-powerpoint.template.macroEnabled.12'
							WHEN extension IN ('ppsm', 'PPSM') THEN 'application/vnd.ms-powerpoint.slideshow.macroEnabled.12'
							WHEN extension IN ('msg', 'MSG') THEN 'application/vnd.ms-outlook' 
							WHEN extension IN ('MP4', 'mp4') THEN 'video/mp4'
							WHEN extension IN ('WEBM', 'web') THEN 'video/webm'
							WHEN extension IN ('mp3') THEN 'audio/mpeg'
							WHEN extension IN ('wma', 'WMA') THEN 'audio/x-ms-wma'
							WHEN extension IN ('flv', 'FLV') THEN 'video/flv'
							WHEN extension IN ('wav', 'WAV') THEN 'audio/x-wav'
							WHEN extension IN ('MPG', 'mpg') THEN 'video/mpeg'
							WHEN extension IN ('csv', 'CSV') THEN 'text/csv'
							WHEN extension IN ('zip', 'ZIP') THEN 'application/zip'
							WHEN extension IN ('wmv', 'WMV') THEN 'video/x-generic'
							WHEN extension IN ('avi', 'AVI') THEN 'video/x-msvideo'
							WHEN extension IN ('mov', 'MOV') THEN 'video/x-generic'
							WHEN extension IN ('M4A', 'm4a') THEN 'application/octet-stream'
							ELSE NULL
						END
						FROM
						ecourt.tPersonDocument d
						INNER JOIN
						(SELECT id, storageId, storageMimeType,
						extension =
						CASE
						WHEN CHARINDEX('.', REVERSE(storageId)) > 0 THEN REVERSE(LEFT(REVERSE(storageID),CHARINDEX('.',REVERSE(storageId)) -1))
						ELSE CONCAT(storageID, ': ', CHARINDEX('.', REVERSE(storageId)))
						END
						FROM ecourt.tPersonDocument
						--WHERE createUsername = 'CONV' and storageMimeType IS NULL
						) t1
						ON t1.id = d.id
					
						
							
						
							]]>
							
							</task>
							
						</source>
					</action>
			</actions>	
			
		</stage> 		
		
		<stage num="799" mode="Serial" desc="Load Case Note" enabled="true">
				<actions>
				
					<action handler="SqlServer.Raw" desc="Update AttachedId" progresslabel="Update AttachedId" enabled="true">
					<source database="${sql.staging.db}" schema="dbo">
						<task handler="SqlServer.Script" desc="Update CaseNumber">
						<![CDATA[
						
						UPDATE cn 
						SET AttachedIdLd = tCaseAssignment_id
						FROM dbo.caseNote_conv cn
						LEFT JOIN dbo.caseAssignment_conv cas
						ON cn.attachedId = cas.id AND cas.caseKey = cn.caseKy
						WHERE attachedEntity = 'com.sustain.cases.model.CaseAssignment'
						
						UPDATE cn 
						SET AttachedIdLd = tParty_id
						FROM dbo.caseNote_conv cn
						LEFT JOIN dbo.party_conv pty
						ON cn.attachedId = pty.id AND pty.caseKey = cn.caseKy
						WHERE attachedEntity = 'com.sustain.cases.model.Party';
						
						UPDATE cn 
						SET AttachedIdLd = tScheduledEvent_id
						FROM dbo.caseNote_conv cn
						LEFT JOIN dbo.scheduledEvent_conv se
						ON cn.attachedId = se.id AND se.caseKey = cn.caseKy
						WHERE attachedEntity = 'com.sustain.calendar.model.ScheduledEvent'
						;
					
						
						UPDATE cn 
						SET AttachedIdLd = tCheckListItem_id
						FROM dbo.caseNote_conv cn
						LEFT JOIN dbo.checklistItem_conv cli
						ON cn.attachedId = cli.id AND cli.caseKey = cn.caseKy
						WHERE attachedEntity = 'com.sustain.checklist.model.CheckListItem';
						
						
						
						UPDATE cn 
						SET AttachedIdLd = tDocument_id
						FROM dbo.caseNote_conv cn
						LEFT JOIN dbo.document_conv d
						ON cn.attachedId = d.id AND d.caseKey = cn.caseKy
						WHERE attachedEntity = 'com.sustain.document.model.Document'
						;
						
							
						--UPDATE cn 
						--SET noteDate = tr.startDate
						--FROM  dbo.caseNote_conv cn
						--LEFT JOIN {sql.migrated.db}.ecourt.tTracking tr
						--ON cn.attachedId = tr.id ;
						
						UPDATE cn 
						SET noteDate = se.startDateTime
						FROM  dbo.caseNote_conv cn
						LEFT JOIN ${sql.migrated.db}.ecourt.tScheduledEvent se
						ON cn.attachedId = se.id
						WHERE attachedEntity = 'com.sustain.calendar.model.ScheduledEvent';
						
						
						UPDATE churchillStaging.dbo.CaseNote_conv 
						SET attachedEntity = 'com.sustain.document.model.Document',
						AttachedIdLd = tDocument_id
						FROM churchillStaging.dbo.caseNote_conv cn  
						INNER JOIN scheduledEvent_conv se
						ON se.id = cn.attachedId AND cn.attachedEntity = 'com.sustain.calendar.model.ScheduledEvent'
						WHERE se.tDocument_id IS NOT NULL
						
						
							
						UPDATE ${sql.ecourt.db}.ecourt.tDocument
						SET
						storageMimeType =
						CASE
							WHEN extension IN ('png', 'jpeg', 'gif', 'jpg', 'bmp') THEN 'image' 
							WHEN extension IN ('pdf', 'PDF') THEN  'application/pdf'
							WHEN extension IN ('TIF', 'tif', 'tiff', 'TIFF') THEN 'image/tiff' 
							WHEN extension IN ('rtf', 'RTF') THEN 'application/rtf' 
							WHEN extension IN ('doc', 'dot', 'DOC', 'DOT') THEN 'application/msword' 
							WHEN extension IN ('docx', 'DOCX') THEN 'application/vnd.openxmlformats-officedocument.wordprocessingml.document' 
							WHEN extension IN ('dotx', 'DOTX') THEN 'application/vnd.openxmlformats-officedocument.wordprocessingml.template'
							WHEN extension IN ('docm', 'DOCM', 'dotm', 'DOTM') THEN 'application/vnd.ms-word.document.macroEnabled.12' 
							WHEN extension IN ('xls', 'xlt', 'xla', 'XLS', 'XLT', 'XLA') THEN 'application/vnd.ms-excel'
							WHEN extension IN ('xlsx', 'XLSX') THEN 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'
							WHEN extension IN ('xltx', 'XLTX') THEN 'application/vnd.openxmlformats-officedocument.spreadsheetml.template' 
							WHEN extension IN ('xlsm', 'XLSM') THEN 'application/vnd.ms-excel.sheet.macroEnabled.12' 
							WHEN extension IN ('xltm', 'XLTM') THEN 'application/vnd.ms-excel.template.macroEnabled.12' 
							WHEN extension IN ('xlam', 'XLAM') THEN 'application/vnd.ms-excel.addin.macroEnabled.12' 
							WHEN extension IN ('xlsb', 'XLSB') THEN 'application/vnd.ms-excel.sheet.binary.macroEnabled.12'
							WHEN extension IN ('ppt', 'pot', 'pps', 'ppa', 'PPT', 'POT', 'PPS', 'PPA') THEN 'application/vnd.ms-powerpoint'
							WHEN extension IN ('pptx', 'PPTX') THEN 'application/vnd.openxmlformats-officedocument.presentationml.presentation' 
							WHEN extension IN ('potx', 'POTX') THEN 'application/vnd.openxmlformats-officedocument.presentationml.template'
							WHEN extension IN ('ppsx', 'PPSX') THEN 'application/vnd.openxmlformats-officedocument.presentationml.slideshow'
							WHEN extension IN ('ppam', 'PPAM') THEN 'application/vnd.ms-powerpoint.addin.macroEnabled.12'
							WHEN extension IN ('pptm', 'PPTM') THEN 'application/vnd.ms-powerpoint.presentation.macroEnabled.12'
							WHEN extension IN ('potm', 'POTM') THEN 'application/vnd.ms-powerpoint.template.macroEnabled.12'
							WHEN extension IN ('ppsm', 'PPSM') THEN 'application/vnd.ms-powerpoint.slideshow.macroEnabled.12'
							WHEN extension IN ('msg', 'MSG') THEN 'application/vnd.ms-outlook' 
							WHEN extension IN ('MP4', 'mp4') THEN 'video/mp4'
							WHEN extension IN ('WEBM', 'web') THEN 'video/webm'
							WHEN extension IN ('mp3') THEN 'audio/mpeg'
							WHEN extension IN ('wma', 'WMA') THEN 'audio/x-ms-wma'
							WHEN extension IN ('flv', 'FLV') THEN 'video/flv'
							WHEN extension IN ('wav', 'WAV') THEN 'audio/x-wav'
							WHEN extension IN ('MPG', 'mpg') THEN 'video/mpeg'
							WHEN extension IN ('csv', 'CSV') THEN 'text/csv'
							WHEN extension IN ('zip', 'ZIP') THEN 'application/zip'
							WHEN extension IN ('wmv', 'WMV') THEN 'video/x-generic'
							WHEN extension IN ('avi', 'AVI') THEN 'video/x-msvideo'
							WHEN extension IN ('mov', 'MOV') THEN 'video/x-generic'
							WHEN extension IN ('M4A', 'm4a') THEN 'application/octet-stream'
							ELSE NULL
						END
						FROM
						${sql.ecourt.db}.ecourt.tDocument d
						INNER JOIN
						(SELECT id, case_id, storageId, storageMimeType,
						extension =
						CASE
						WHEN CHARINDEX('.', REVERSE(storageId)) > 0 THEN REVERSE(LEFT(REVERSE(storageID),CHARINDEX('.',REVERSE(storageId)) -1))
						ELSE CONCAT(storageID, ': ', CHARINDEX('.', REVERSE(storageId)))
						END
						FROM ${sql.ecourt.db}.ecourt.tDocument
						--WHERE createUsername = 'CONV' and storageMimeType IS NULL
						) t1
						ON t1.id = d.id
						INNER JOIN ${sql.ecourt.db}.ecourt.tCase cs
						ON t1.case_id = cs.id;
						
															
						UPDATE ${sql.ecourt.db}.ecourt.tPersonDocument
						SET
						storageMimeType =
						CASE
							WHEN extension IN ('png', 'jpeg', 'gif', 'jpg', 'bmp') THEN 'image' 
							WHEN extension IN ('pdf', 'PDF') THEN  'application/pdf'
							WHEN extension IN ('TIF', 'tif', 'tiff', 'TIFF') THEN 'image/tiff' 
							WHEN extension IN ('rtf', 'RTF') THEN 'application/rtf' 
							WHEN extension IN ('doc', 'dot', 'DOC', 'DOT') THEN 'application/msword' 
							WHEN extension IN ('docx', 'DOCX') THEN 'application/vnd.openxmlformats-officedocument.wordprocessingml.document' 
							WHEN extension IN ('dotx', 'DOTX') THEN 'application/vnd.openxmlformats-officedocument.wordprocessingml.template'
							WHEN extension IN ('docm', 'DOCM', 'dotm', 'DOTM') THEN 'application/vnd.ms-word.document.macroEnabled.12' 
							WHEN extension IN ('xls', 'xlt', 'xla', 'XLS', 'XLT', 'XLA') THEN 'application/vnd.ms-excel'
							WHEN extension IN ('xlsx', 'XLSX') THEN 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'
							WHEN extension IN ('xltx', 'XLTX') THEN 'application/vnd.openxmlformats-officedocument.spreadsheetml.template' 
							WHEN extension IN ('xlsm', 'XLSM') THEN 'application/vnd.ms-excel.sheet.macroEnabled.12' 
							WHEN extension IN ('xltm', 'XLTM') THEN 'application/vnd.ms-excel.template.macroEnabled.12' 
							WHEN extension IN ('xlam', 'XLAM') THEN 'application/vnd.ms-excel.addin.macroEnabled.12' 
							WHEN extension IN ('xlsb', 'XLSB') THEN 'application/vnd.ms-excel.sheet.binary.macroEnabled.12'
							WHEN extension IN ('ppt', 'pot', 'pps', 'ppa', 'PPT', 'POT', 'PPS', 'PPA') THEN 'application/vnd.ms-powerpoint'
							WHEN extension IN ('pptx', 'PPTX') THEN 'application/vnd.openxmlformats-officedocument.presentationml.presentation' 
							WHEN extension IN ('potx', 'POTX') THEN 'application/vnd.openxmlformats-officedocument.presentationml.template'
							WHEN extension IN ('ppsx', 'PPSX') THEN 'application/vnd.openxmlformats-officedocument.presentationml.slideshow'
							WHEN extension IN ('ppam', 'PPAM') THEN 'application/vnd.ms-powerpoint.addin.macroEnabled.12'
							WHEN extension IN ('pptm', 'PPTM') THEN 'application/vnd.ms-powerpoint.presentation.macroEnabled.12'
							WHEN extension IN ('potm', 'POTM') THEN 'application/vnd.ms-powerpoint.template.macroEnabled.12'
							WHEN extension IN ('ppsm', 'PPSM') THEN 'application/vnd.ms-powerpoint.slideshow.macroEnabled.12'
							WHEN extension IN ('msg', 'MSG') THEN 'application/vnd.ms-outlook' 
							WHEN extension IN ('MP4', 'mp4') THEN 'video/mp4'
							WHEN extension IN ('WEBM', 'web') THEN 'video/webm'
							WHEN extension IN ('mp3') THEN 'audio/mpeg'
							WHEN extension IN ('wma', 'WMA') THEN 'audio/x-ms-wma'
							WHEN extension IN ('flv', 'FLV') THEN 'video/flv'
							WHEN extension IN ('wav', 'WAV') THEN 'audio/x-wav'
							WHEN extension IN ('MPG', 'mpg') THEN 'video/mpeg'
							WHEN extension IN ('csv', 'CSV') THEN 'text/csv'
							WHEN extension IN ('zip', 'ZIP') THEN 'application/zip'
							WHEN extension IN ('wmv', 'WMV') THEN 'video/x-generic'
							WHEN extension IN ('avi', 'AVI') THEN 'video/x-msvideo'
							WHEN extension IN ('mov', 'MOV') THEN 'video/x-generic'
							WHEN extension IN ('M4A', 'm4a') THEN 'application/octet-stream'
							ELSE NULL
						END
						FROM
						${sql.ecourt.db}.ecourt.tPersonDocument d
						INNER JOIN
						(SELECT id, person_id, storageId, storageMimeType,
						extension =
						CASE
						WHEN CHARINDEX('.', REVERSE(storageId)) > 0 THEN REVERSE(LEFT(REVERSE(storageID),CHARINDEX('.',REVERSE(storageId)) -1))
						ELSE CONCAT(storageID, ': ', CHARINDEX('.', REVERSE(storageId)))
						END
						FROM ${sql.ecourt.db}.ecourt.tPersonDocument
						--WHERE createUsername = 'CONV' and storageMimeType IS NULL
						) t1
						ON t1.id = d.id
						
						
						
						
						
							
						]]>
						
						</task>
						
					</source>
				</action>
					

					
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Load Case Note">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	

							SELECT
							cn.*, cn.lastUpdated as noteDateLd, cc.tCase_id, CAST(cn.id as varchar(255)) as memoLd, 
							typeLd =
							CASE
								WHEN type = 'WRMHC' THEN 'WRMHC'
								WHEN type = 'YTHCT' THEN 'YTHCT'
								WHEN type = 'WRFDC' THEN 'WRFDC'
								WHEN type = 'DUIDV' THEN 'DUIDV'
								WHEN type = 'ADSNO' THEN 'ADSNO'
								WHEN type = 'CNOTE' THEN 'CNOTE'
								WHEN type = 'WRDRG' THEN 'WRDRG'
								WHEN type = 'ADSJD' THEN 'ADSJD'
								WHEN type = 'CVCAP' THEN 'CVCAP'
								ELSE 'CNOTE'
							END
							FROM ${sql.staging.db}.dbo.caseNote_conv cn
							INNER JOIN ${sql.staging.db}.dbo.case_conv cc
							ON cn.case_id = cc.id AND cn.caseKy = cc.idKey
							WHERE   srcTbl <> 'Tracking' OR srcTbl IS NULL

							
								
							]]>
							</param>
							
						</params>
						<mappings>
							<mapping source="memoLd" dest="memo"/>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
						<!--	<mapping source="memo" dest="memo"/> -->
							<mapping source="optlock" dest="optlock"/>
							<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
							<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
							<mapping source="updateReason" dest="updateReason"/>
							<mapping source="attachedEntity" dest="attachedEntity"/>
							<mapping source="AttachedIdLd" dest="attachedId"/>
							<mapping source="color" dest="color"/>
							<mapping source="completed" dest="completed"/>
							<mapping source="content" dest="content"/>
							<mapping source="dueDate" dest="dueDate"/>
							<mapping source="noteDateLd" dest="noteDate"/>
							<mapping source="sharedToAuthorityNames" dest="sharedToAuthorityNames"/>
							<mapping source="sharedToUsernames" dest="sharedToUsernames"/>
							<mapping source="sharingLevel" dest="sharingLevel"/>
							<mapping source="stripedContent" dest="stripedContent"/>
							<mapping source="title" dest="title"/>
							<mapping source="toDate" dest="toDate"/>
							<mapping source="typeLd" dest="type"/>
							<mapping source="username" dest="username"/>
							<mapping source="assignedUser_id" dest="assignedUser_id"/>
							<mapping source="tCase_id" dest="case_id"/>
						
						</mappings>
						<destination database="${sql.ecourt.db}" schema="ecourt" table="tCaseNote"/>
					</action>
					
						
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Case Note - Tracking">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	

							SELECT
							 'CNOTE' as noteTypeld,
							cn.*, cc.tCase_id, CAST(cn.id as varchar(255)) as memoLd
							FROM ${sql.staging.db}.dbo.caseNote_conv cn
							LEFT JOIN ${sql.staging.db}.dbo.case_conv cc
							ON cn.case_id = cc.id
							WHERE srcTbl = 'Tracking'
							
					
				
							

							
								
							]]>
							</param>
						</params>
						<mappings>
			
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="memoLd" dest="memo"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
					<!--		<mapping source="memo" dest="memo"/> -->
							<mapping source="optlock" dest="optlock"/>
							<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
							<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
							<mapping source="updateReason" dest="updateReason"/>
					<!--		<mapping source="attachedEntity" dest="attachedEntity"/>
							<mapping source="attachedId" dest="attachedId"/> -->
							<mapping source="color" dest="color"/>
							<mapping source="completed" dest="completed"/>
							<mapping source="content" dest="content"/>
							<mapping source="dueDate" dest="dueDate"/>
							<mapping source="noteDate" dest="noteDate"/>
							<mapping source="sharedToAuthorityNames" dest="sharedToAuthorityNames"/>
							<mapping source="sharedToUsernames" dest="sharedToUsernames"/>
							<mapping source="sharingLevel" dest="sharingLevel"/>
							<mapping source="stripedContent" dest="stripedContent"/>
							<mapping source="title" dest="title"/>
							<mapping source="toDate" dest="toDate"/>
							<mapping source="noteTypeld" dest="type"/>
							<mapping source="username" dest="username"/>
							<mapping source="assignedUser_id" dest="assignedUser_id"/>
							<mapping source="tCase_id" dest="case_id"/>
							
						</mappings>
						<destination database="${sql.ecourt.db}" schema="ecourt" table="tCaseNote"/>
					</action>
			
					
				</actions>
			</stage> 
			
		<stage num="800" mode="Serial" desc="Load tblAccount" enabled="true">
			<actions>
			
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading tblAccount" enabled="true">
					<source database="${sql.staging.db}" schema="dbo" table="tblAccount_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						
						
						DECLARE @today datetime; SET @today = GETDATE();
						SELECT *,
						0 as optlock,
						orgUnitName as dirOrgUnitName
						FROM dbo.tblAccount_conv ta
						LEFT JOIN 
						(SELECT id, tPerson_id, ROW_NUMBER() OVER(PARTITION BY id ORDER BY tPerson_id) rnk FROM dbo.person_conv) t1
						ON ta.person_id = t1.id AND rnk = 1
						LEFT JOIN ${sql.migrated.db}.ecourt.tDirOrgUnit dou
						ON ta.dirOrgUnit_id = dou.id 

						]]>							
						</param>
						<param name="idColumnName">tAccount_id</param>
						<param name="whereColumnName">idKey</param>						
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="balance" dest="balance"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="masterCodeAccountType" dest="masterCodeAccountType"/>
						<mapping source="name" dest="name"/> 
						<mapping source="number" dest="number"/> 
						<mapping source="status" dest="status"/> 
						<mapping source="type" dest="type"/>
						<!--<mapping source="dirOrgUnit_id" dest="dirOrgUnit_id"/> -->
						<!--<mapping source="convId" dest="convId"/> -->
						<!--<mapping source="dirPerson_id" dest="dirPerson_id"/>-->
						<mapping source="tPerson_id" dest="person_id"/>
						<mapping source="dirOrgUnitName" dest="dirOrgUnitName"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tCtTblAccount"/>
				</action>
			</actions>	
			
		</stage> 	

		<stage num="802" mode="Serial" desc="Load tblObligation" enabled="true">
			<actions>
			
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading tblObligation" enabled="true">
					<source database="${sql.staging.db}" schema="dbo" table="tblObligation_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						
						
						DECLARE @today datetime; SET @today = GETDATE();
						SELECT tobl.*, cc.tCase_id, taFrom.tAccount_id as fromAccount_id_Ld, taTo.tAccount_id as toAccount_id_Ld,
						tPerson_id as payee_id_ld,
						0 as optlock,
						TRY_CAST(tobl.adjustedAmount as varchar(255)) as adjustedAmountLd,
						TRY_CAST(isJointAndSeveral as varchar(255)) as isJointAndSeveralLd,
						orgUnitName as dirOrgUnitName
						FROM tblObligation_conv tobl
						INNER JOIN dbo.case_conv cc
						ON tobl.case_id = cc.id
						LEFT JOIN dbo.tblAccount_conv taFrom
						ON tobl.fromAccount_id = taFrom.id
						LEFT JOIN dbo.tblAccount_conv taTo
						ON tobl.toAccount_id = taTo.id
						LEFT JOIN person_conv pr
						ON tobl.case_id = pr.case_id and tobl.payee_id = pr.id
						LEFT JOIN ${sql.migrated.db}.ecourt.tDirOrgUnit dou
						ON tobl.dirOrgUnit_id = dou.id  

						]]>							
						</param>
						<param name="idColumnName">tObligation_id</param>
						<param name="whereColumnName">idKey</param>				
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="accountNumber" dest="accountNumber"/>
						<mapping source="adjustedAmountLd" dest="adjustedAmount"/>
						<mapping source="amount" dest="amount"/>
						<mapping source="bank" dest="bank"/>
						<mapping source="dateDue" dest="dateDue"/>
						<mapping source="dateReceived" dest="dateRecieved"/>
						<mapping source="dateWritten" dest="dateWritten"/>
						<mapping source="fromAccountEntryType" dest="fromAccountEntryType"/>
						<mapping source="isJointAndSeveralLd" dest="isJointAndSeveral"/>
						<mapping source="notes" dest="notes"/>
						<mapping source="referenceNumber" dest="referenceNumber"/>
						<mapping source="routingNumber" dest="routingNumber"/>
						<mapping source="toAccountEntryType" dest="toAccountEntryType"/>
						<mapping source="type" dest="type"/>
						<mapping source="unallocAmount" dest="unallocAmount"/>
						<mapping source="tCase_id" dest="case_id"/>
						<mapping source="dirOrgUnitName" dest="dirOrgUnitName"/> 
						<mapping source="fromAccount_id_Ld" dest="fromAccount_id_id"/>
						<mapping source="payee_id_ld" dest="payee_id"/>
						<mapping source="toAccount_id_Ld" dest="toAccount_id_id"/>
						<mapping source="optlock" dest="optlock"/>
			
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tCtTblObligation"/>
				</action>
			</actions>	
			
		</stage> 	
		
		
		<stage num="804" mode="Serial" desc="Load tblPayment" enabled="true">
			<actions>
			
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading tblPayment" enabled="true">
					<source database="${sql.staging.db}" schema="dbo" table="tblPayment_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						
						
						DECLARE @today datetime; SET @today = GETDATE();
						SELECT py.*, tPerson_id, 0 as optlock,
						receivedByLastName = dp.firstName,
						receivedByFirstName = dp.lastName,
						payerName = CONCAT(p.firstName, ' ', p.lastName)
						FROM dbo.tblPayment_conv py
						LEFT JOIN 
						(SELECT id, tPerson_id, ROW_NUMBER() OVER(PARTITION BY id ORDER BY tPerson_id) rnk FROM dbo.person_conv) t1
						ON py.payer_id = t1.id AND rnk = 1
						LEFT JOIN ${sql.migrated.db}.ecourt.tDirPerson dp
						ON py.receivedBy_id = dp.id
						LEFT JOIN ${sql.migrated.db}.ecourt.tPerson p
						ON py.payer_id = dp.id
						]]>							
						</param>
						<param name="idColumnName">tPayment_id</param>
						<param name="whereColumnName">idKey</param>				
					</params>
					<mappings>
						<mapping source="id" dest="id"/>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="amount" dest="amount"/>
						<mapping source="checkCount" dest="checkCount"/>
						<mapping source="dateReceived" dest="dateReceived"/>
						<mapping source="notes" dest="notes"/>
						<mapping source="receiptNumber" dest="receiptNumber"/>
						<mapping source="referenceNumber" dest="referenceNumber"/>
						<mapping source="status" dest="status"/>
						<mapping source="type" dest="type"/>
						<!--<mapping source="tPerson_id" dest="payer_id"/> -->
						<mapping source="payerName" dest="payerName"/> 
						<mapping source="tPerson_id" dest="person_id"/> 
						<mapping source="optlock" dest="optlock"/> 
					<!--	<mapping source="receivedBy_id" dest="receivedBy_id"/> -->
						<mapping source="receivedByLastName" dest="receivedByLastName"/> 
						<mapping source="receivedByFirstName" dest="receivedByFirstName"/> 
					<!--	<mapping source="deposit_id" dest="deposit_id"/> -->
					<!--	<mapping source="dirOrgUnit_id" dest="dirOrgUnit_id"/> -->
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tCtTblPayment"/>
				</action>
			</actions>	
			
		</stage> 	
		
		<stage num="806" mode="Serial" desc="Load tblPaymentSchedule" enabled="true">
			<actions>
			
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading tblPaymentSchedule_conv" enabled="true">
					<source database="${sql.staging.db}" schema="dbo" table="tblPaymentSchedule_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						
						
						DECLARE @today datetime; SET @today = GETDATE();
						SELECT pys.*, 0 as optlock,
						orgUnitName as dirOrgUnitName,
						t1.tPerson_id
						FROM dbo.tblPaymentSchedule_conv pys
						LEFT JOIN ${sql.migrated.db}.ecourt.tDirOrgUnit dou
						ON pys.dirOrgUnit_id = dou.id 
						LEFT JOIN 
						(SELECT id, tPerson_id, ROW_NUMBER() OVER(PARTITION BY id ORDER BY tPerson_id) rnk FROM dbo.person_conv) t1
						ON pys.person_id = t1.id AND rnk = 1 
						]]>							
						</param>
						<param name="idColumnName">tPaymentSchedule_id</param>
						<param name="whereColumnName">idKey</param>				
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="amount" dest="amount"/>
						<mapping source="day1" dest="day1"/>
						<mapping source="day2" dest="day2"/>
						<mapping source="dayOfWeek" dest="dayOfWeek"/>
						<mapping source="dayOfWeek2" dest="dayofWeek2"/>
						<mapping source="description" dest="description"/>
						<mapping source="endDt" dest="endDate"/>
						<mapping source="endType" dest="end_Type"/> 
						<mapping source="nextPaymentAmount" dest="nextPaymentAmount"/>
						<mapping source="nextPaymentDate" dest="nextPaymentDate"/>
						<mapping source="numPayments" dest="numPayments"/>
						<mapping source="origScheduleDesc" dest="origScheduleDesc"/>
						<mapping source="priority" dest="priority"/>
						<mapping source="scheduleType" dest="scheduleType"/>
						<mapping source="startDate" dest="startDate"/>
						<mapping source="subType" dest="subType"/>
					<!--	<mapping source="dirOrgUnit_id" dest="dirOrgUnit_id"/> -->
					<!--	<mapping source="person_id" dest="person_id"/> -->
						<mapping source="tPerson_id" dest="person_id"/> -->
						<mapping source="amountDue" dest="amountDue"/>
						<mapping source="expectedFinalPaymentDt" dest="expectedFinalPaymentDt"/>
						<mapping source="expectedFinalPaymentDtAsDate" dest="expectedFinalPaymentDtAsDate"/>
						<mapping source="outstandingBalance" dest="outstandingBalance"/>
						<mapping source="scheduleDescription" dest="scheduleDescription"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="dirOrgUnitName" dest="dirOrgUnitName"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tCtTblPaymentSchedule"/>
				</action>
			</actions>	
			
		</stage> 	
		
		<stage num="808" mode="Serial" desc="Load tblBond" enabled="true">
			<actions>
			
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading tblBond" enabled="true">
					<source database="${sql.staging.db}" schema="dbo" table="tblBond_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						
						
						DECLARE @today datetime; SET @today = GETDATE();
						SELECT b.*, ta.tAccount_id, c.tCase_id, 0 as optlock,
						orgUnitName as dirOrgUnitName
						FROM dbo.tblBond_conv b
						INNER JOIN dbo.case_conv c
						ON b.case_id = c.id
						LEFT JOIN dbo.tblAccount_conv ta
						ON b.account_id = ta.id 
						LEFT JOIN ${sql.migrated.db}.ecourt.tDirOrgUnit dou
						ON b.dirOrgUnit_id = dou.id  
						]]>							
						</param>
						<param name="idColumnName">tBond_id</param>
						<param name="whereColumnName">idKey</param>				
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="amount" dest="amount"/> 
						<mapping source="amountDue" dest="amountDue"/>
						<mapping source="bondStatus" dest="bondStatus"/>
						<mapping source="bondType" dest="bondType"/>
						<mapping source="notes" dest="notes"/>
						<mapping source="percentage" dest="percentage"/>
						<mapping source="postedDt" dest="postedDate"/>
						<mapping source="setDt" dest="setDate"/>
						<mapping source="tCase_id" dest="case_id"/>
					<!--	<mapping source="dirOrgUnit_id" dest="dirOrgUnit_id"/> -->
					<!--	<mapping source="party_id" dest="party_id"/> -->
					<!--	<mapping source="person_id" dest="person_id"/> -->
						<mapping source="tAccount_id" dest="ctTblAccount_id"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="dirOrgUnitName" dest="dirOrgUnitName"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tCtTblbond"/>
				</action>
			</actions>	
			
		</stage> 	
		
		<stage num="810" mode="Serial" desc="Load tblVoucher" enabled="true">
			<actions>
			
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading tblVoucher" enabled="true">
					<source database="${sql.staging.db}" schema="dbo" table="tblVoucher_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						
						
						DECLARE @today datetime; SET @today = GETDATE();
						SELECT *,
						0 as optlock,
						orgUnitName as dirOrgUnitName,
						dp.firstName as writtenByFirstName,
						dp.lastName as writtenByLastName,
						t1.tPerson_id
						FROM dbo.tblVoucher_conv v
						LEFT JOIN
						(SELECT id, tPerson_id, ROW_NUMBER() OVER(PARTITION BY id ORDER BY tPerson_id) rnk FROM dbo.person_conv) t1
						ON v.person_id = t1.id AND rnk = 1
						LEFT JOIN ${sql.migrated.db}.ecourt.tDirOrgUnit dou
						ON v.dirOrgUnit_id = dou.id  
						LEFT JOIN ${sql.migrated.db}.ecourt.tDirPerson dp
						ON v.writtenBy_id = dp.id
					
						]]>							
						</param>
						<param name="idColumnName">tVoucher_id</param>
						<param name="whereColumnName">idKey</param>				
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="amount" dest="amount"/>
						<mapping source="dateWritten" dest="dateWritten"/>
						<mapping source="notes" dest="notes"/>
						<mapping source="referenceNumber" dest="referenceNumber"/>
						<mapping source="status" dest="status"/>
						<mapping source="type" dest="type"/>
						<!--<mapping source="dirOrgUnit_id" dest="dirOrgUnit_id"/> -->
						<mapping source="tPerson_id" dest="person_id"/> -->
						<mapping source="optlock" dest="optlock"/> -->
						<!--<mapping source="writtenBy_id" dest="writtenBy_id"/> -->
						<mapping source="dirOrgUnitName" dest="dirOrgUnitName"/>
						<mapping source="writtenByFirstName" dest="writtenByFirstName"/>
						<mapping source="writtenByLastName" dest="writtenByLastName"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tCtTblVoucher"/>
				</action>
			</actions>	
			
		</stage> 	
		
		
		<stage num="812" mode="Serial" desc="Load tblTransfer" enabled="true">
			<actions>
			
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading tblTransfer_conv" enabled="true">
					<source database="${sql.staging.db}" schema="dbo" table="tblTransfer_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						
						
						DECLARE @today datetime; SET @today = GETDATE();
						SELECT tt.*, cc.tCase_id, ta.tAccount_id as toAccount, fa.tAccount_id as fromAccount, obl.tObligation_id,  py.tPayment_id,  ps.tPaymentSchedule_id, ta.tAccount_id as toAccount, fa.tAccount_id as fromAccount,  b.tBond_id,
						0 as optlock
					
						
						FROM dbo.tblTransfer_conv tt 
						LEFT JOIN dbo.tblPayment_conv py
						ON tt.payment_id = py.id
						LEFT JOIN dbo.tblObligation_conv obl
						ON tt.obligation_id = obl.id
						LEFT JOIN dbo.tblPaymentSchedule_conv ps
						ON tt.paymentSchedule_id = ps.id
						LEFT JOIN dbo.tblAccount_conv ta
						ON tt.toAccount_id = ta.id 
						LEFT JOIN dbo.tblAccount_conv fa
						ON tt.fromAccount_id = fa.id 
						LEFT JOIN dbo.case_conv cc
						ON tt.case_id = cc.id 
						LEFT JOIN dbo.tblBond_conv b
						ON tt.bond_id = b.id
						WHERE nonCasePayment_id IS NULL
						

						]]>							
						</param>			
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="amount" dest="amount"/>
						<mapping source="codeTypePaymentType" dest="codeTypePaymentType"/>
						<mapping source="fromAccountEntryType" dest="fromAccountEntryType"/>
						<mapping source="masterCodePaymentStatus" dest="masterCodePaymentStatus"/>
						<mapping source="notes" dest="notes"/>
						<mapping source="payerPayment" dest="payerPayment"/>
						<mapping source="psAmtDueOld" dest="psAmtDueOld"/>
						<mapping source="psDueDateNew" dest="psDueDateNew"/>
						<mapping source="psDueDateOld" dest="psDueDateOld"/>
						<mapping source="toAccountEntryType" dest="toAccountEntryType"/>
						<mapping source="type" dest="type"/>
						<mapping source="void" dest="void"/>
						<mapping source="tBond_id" dest="bond_id"/>
						<mapping source="tCase_id" dest="case_id"/> -->
						<mapping source="fromAccount" dest="fromAccount_id_id"/>
					<!--	<mapping source="nonCasePayment_id" dest="nonCasePayment_id"/> -->
						<mapping source="tObligation_id" dest="obligation_id"/> 
						<mapping source="tPayment_id" dest="payment_id"/> -->
						<mapping source="tPaymentSchedule_id" dest="paymentSchedule_id"/> -->
						<mapping source="toAccount" dest="toAccount_id_id"/>
						<mapping source="voucher_id" dest="voucher_id"/>
						<mapping source="optlock" dest="optlock"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tCtTblTransfer"/>
				</action>
			</actions>	
			
		</stage> 	
		
		<stage num="814" mode="Serial" desc="Load tblBondAmend" enabled="true">
			<actions>
			
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading tblondAmend_conv" enabled="true">
					<source database="${sql.staging.db}" schema="dbo" table="tblTransfer_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						
						
						DECLARE @today datetime; SET @today = GETDATE();
						SELECT ba.*, b.tBond_id, ta.tAccount_id,
						0 as optlock,
						orgUnitName as dirOrgUnitName
						FROM dbo.tblBondAmend_conv ba
						LEFT JOIN dbo.tblBond_conv b
						ON ba.bond_id = b.id
						LEFT JOIN dbo.tblAccount_conv ta
						ON ba.account_id = ta.id
						LEFT JOIN ${sql.migrated.db}.ecourt.tDirOrgUnit dou
						ON b.dirOrgUnit_id = dou.id 
						
						
						

						]]>							
						</param>			
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="amendDt" dest="amendDate"/>
						<mapping source="amount" dest="amount"/>
						<mapping source="amountDue" dest="amountDue"/>
						<mapping source="bondStatus" dest="bondStatus"/>
						<mapping source="bondType" dest="bondType"/>
						<mapping source="notes" dest="notes"/>
						<mapping source="percentage" dest="percentage"/>
						<mapping source="postedDt" dest="postedDate"/>
						<mapping source="setDt" dest="setDate"/>
						<mapping source="tAccount_id" dest="ctTblAccount_id"/>
						<mapping source="tBond_id" dest="bond_id"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="dirOrgUnitName" dest="dirOrgUnitName"/>
					<!--	<mapping source="dirOrgUnit_id" dest="dirOrgUnit_id"/> -->
					<!--	<mapping source="party_id" dest="party_id"/> -->
					<!--	<mapping source="person_id" dest="person_id"/> -->
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tCtTblBondAmend"/>
				</action>
			</actions>	
			
		</stage> 	
		
				
		<stage num="816" mode="Serial" desc="Transform StagingInvoices" enabled="true">
			<actions>
				
				<action handler="SqlServer.Raw" desc="Creating StagingInvoices" progresslabel="Creating  StagingInvoices" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create StagingInvoices">
							IF OBJECT_ID('StagingInvoices', 'U') IS NOT NULL 
							DROP TABLE [dbo].[StagingInvoices];

				
							</task>
							
							<task handler="SqlServer.Script" desc="Create StagingInvoices table">
							<![CDATA[

							CREATE TABLE [dbo].[StagingInvoices](
								[id] numeric(19, 0) IDENTITY(1,1) NOT NULL,	
								[tInvoice_id] numeric(19, 0) NULL,			
								[tParty_id] numeric(19, 0) NULL,				
								[tAssessmentGroup_id] numeric(19, 0) NULL,	
								[assessmentMap] varchar(255) NULL,														
								[rescindCode] varchar(255) NULL,				
								[description] varchar(255) NULL,				
								[createdDate] datetime NULL,					
								[dueDate] datetime NULL,						
								[error] varchar(max) NULL,
								assessment_id_source numeric(19,0),
								assessmentGroup_id_source numeric(19,0),
								assessment_id NUMERIC(19,0),
								amount float
								);
								
		
						
						
							]]>
							
							</task>
							
						</source>
					</action>
					
					<action handler="SqlServer.Raw" desc="Creating StagingInvoices" progresslabel="Creating  StagingInvoices" enabled="true">
						<source database="${sql.source.db}" schema="dbo">
						
							
							<task handler="SqlServer.Script" desc="Create StagingInvoices table">
							<![CDATA[
							
							INSERT INTO JustWareMigrated_full.ecourt.tStagingInvoices (obligationType, [description], dueDate, amount, party_id, assessment_id, assessmentGroup_id, dateCreated, lastUpdated, createUsername, createUserRealName, lastUpdateUsername, lastUpdateUserRealName, convId)
							SELECT
								o.[Type] AS obligationType
								, ot.Description AS [description]
								, o.DateDue AS dueDate
								, o.UnallocAmount AS amount
								, ch.associatedParty_id AS party_id
								, a.id AS assessment_id
								, ag.id AS assessmentGroup_id
								, o.AddDt AS dateCreated
								, o.ModDt AS lastUpdated
								, appPersonInfo.createUsername AS createUsername
								, appPersonInfo.createUserRealName AS createUserRealName
								, appPersonInfo.lastUpdateUsername as lastUpdateUsername
								, appPersonInfo.lastUpdateUserRealName AS lastUpdateUserRealName
								, o.ObligationID AS convId
							FROM
								dbo.tblObligation o
								JOIN dbo.ctblAmtDueType ot ON ot.Code = o.[Type]
								LEFT JOIN AmtDueTypeConversion tc ON tc.AmtDueTypeCode = ot.Code
								JOIN dbo.tblObligationCountInvPers ocntip ON ocntip.ObligationID = o.ObligationID
								JOIN JustWareMigrated_full.ecourt.tCharge ch ON ch.convId_CountInvPers = ocntip.CountInvPersID
								JOIN JustWareMigrated_full.ecourt.tAssessment a ON a.code = o.[Type]
								JOIN JustWareMigrated_full.ecourt.tAssessmentGroup ag ON ag.code = o.[Type]
								OUTER APPLY dbo.fn_GetAddByModByInfo(o.AddBy, o.ModBy) appPersonInfo
							WHERE
								o.UnallocAmount > 0
								AND (tc.ConversionType = 1 OR tc.AmtDueTypeCode IS NULL)
							
						
							]]>
							
							</task>
							
						</source>
					</action>
				
					
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Staging Invoices">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	
						
							SELECT assessment_idLd =
							CASE
								WHEN assessment_id = 3 THEN 10719
								WHEN assessment_id = 4 THEN 10673
								WHEN assessment_id = 6 THEN 10718
								WHEN assessment_id = 76 THEN 10672
								WHEN assessment_id = 84 THEN 10720
								WHEN assessment_id = 86 THEN 10724
								WHEN assessment_id = 93 THEN 10667
								WHEN assessment_id = 123 THEN 10671
								WHEN assessment_id = 146 THEN 10669
								WHEN assessment_id = 139 THEN 10728
								WHEN assessment_id = 134 THEN 10896
								WHEN assessment_id IN (106, 152) THEN NULL
							END,
							assessmentGroup_idLd = 
							CASE 
							WHEN assessment_id = 139 THEN 1251
							WHEN assessment_id = 134 THEN 1345
							ELSE 1234
							END,
							
							pty.tParty_id, si.* FROM ecourt.tStagingInvoices si
							LEFT JOIN ${sql.staging.db}.dbo.party_conv pty
							ON si.party_id = pty.id
							
						 
							
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="assessment_idLd" dest="assessment_id"/>
							<mapping source="tParty_id" dest="tParty_id"/>
							<mapping source="assessmentGroup_idLd" dest="tAssessmentGroup_id"/>
							<mapping source="dateCreated" dest="createdDate"/>
							<mapping source="description" dest="description"/>
							<mapping source="assessment_id" dest="assessment_id_source"/>
							<mapping source="assessmentGroup_id" dest="assessmentGroup_id_source"/>
							<mapping source="amount" dest="amount"/>
				
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="StagingInvoices"/>
					</action>
					
					<action handler="SqlServer.Raw" desc="Creating StagingInvoices" progresslabel="Fix assessmentMap" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
						
							
							<task handler="SqlServer.Script" desc="Create StagingInvoices table">
							<![CDATA[
						
							
							UPDATE dbo.StagingInvoices
							SET assessmentMap = CONCAT(assessment_id,':',amount)
						
						
							]]>
							
							</task>
							
						</source>
					</action>
			
			
				</actions>
			</stage> 
		
			
		<stage num="850" mode="Serial" desc="Load StagingInvoices" enabled="false">
			<actions>
			
							
			
			
			
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading StagingInvoices" enabled="true">
					<source database="${sql.staging.db}" schema="dbo" table="tblTransfer_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						
						
						DECLARE @today datetime; SET @today = GETDATE();
						SELECT si.*, pty.tParty_id, assessmentMapLd = CONCAT(assessment_id,':',amount)
						FROM CNMI_eCourt_full.ecourt.tStagingInvoices si
						LEFT JOIN cnmiStaging.dbo.party_conv pty
						ON si.party_id = pty.id
						
						
						
						

						]]>							
						</param>			
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="assessmentMapLd" dest="assessmentMap"/>
						<mapping source="convId" dest="convId"/>
						<mapping source="description" dest="description"/>
						<mapping source="dueDate" dest="dueDate"/>
						<mapping source="error" dest="error"/>
						<mapping source="rescindCode" dest="rescindCode"/>
						<mapping source="assessmentGroup_id" dest="assessmentGroup_id"/>
						<mapping source="invoice_id" dest="invoice_id"/>
						<mapping source="tParty_id" dest="party_id"/>
						<mapping source="amount" dest="amount"/>
						<mapping source="assessment_id" dest="assessment_id"/>
						<mapping source="obligationType" dest="obligationType"/>
					
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tStagingInvoices"/>
				</action>
			</actions>	
			
		</stage> 	
		
		
		
	<!-- Financial Processing -->
			
		<stage num="899" mode="Serial" desc="Restart SQL" enabled= "true">
			<actions>
			
				<action handler="DCU.TaskHost" desc="Restart SQL" progresslabel="Restart SQL" enabled="true">
					<source>
						<task handler="DCU.RestartService">
							<args service="${sql.service.name}"></args>
						</task>
					</source>
				</action>
				
				<action handler="DCU.TaskHost" progresslabel="60-second delay" enabled="true">
					<source>
						<task handler="DCU.Wait">60</task>
					</source>
				</action>
			
				<action handler="DCU.TaskHost" desc="Start Tomcat" progresslabel="Start Tomcat">
					<source>
						<task handler="DCU.StartService">
							<args service="${tomcat.service.name}"></args>
						</task>
					</source>
				</action>
			
				<action handler="DCU.TaskHost" progresslabel="360-second delay" enabled ="true">
					<source>
						<task handler="DCU.Wait">360</task>
					</source>
				</action>
				
				<action handler="DCU.TaskHost" progresslabel="Check eCourt is online" onerror="Halt">
					<source>
						<task handler="DCU.WaitForPageLoad">
							<args url="http://localhost:8080/login.jsp" timeoutSeconds="900"/>
						</task>
					</source>
				</action>
			</actions>
		</stage>

		
		
		<stage num="900" mode="Serial" desc="Create Invoices" enabled="true">
				<actions>
				

					<action handler="Ecourt.ExecuteRuleWithLoop" desc="Looping REST rule call" verbose="${verbose}" progresslabel="CONVERSION_CREATE_INVOICES" enabled="true" onerror="Continue">
						<source database="${sql.staging.db}"/>
						<params>
							<param name="url">${rest.url}</param>
							<param name="username">${rest.username}</param>
							<param name="password">${rest.password}</param>
							
							<param name="json">{"inputParams":{"params":
															[{"name":"jdbcConnParams","value":"[url:'jdbc:jtds:sqlserver://EC2AMAZ-UUQ2CH0:1433;databaseName=churchillStaging;', user:'ecourt', password:'dbpass', driver:'net.sourceforge.jtds.jdbc.Driver']"},
															 {"name":"threads","value":"8"},
															 {"name":"sqlSelect","value":"SELECT id, tParty_id, tAssessmentGroup_id, assessmentMap, description, createdDate, dueDate, rescindCode FROM dbo.StagingInvoices WITH (nolock) WHERE tParty_id is not null and assessmentMap is not null and Coalesce(tInvoice_id, -1) = -1 ORDER BY tParty_id, id"},
															 {"name":"tableName","value":"StagingInvoices"},
															 {"name":"verifyTsAndWf","value":"true"}]},
												"ruleCode":"CONVERSION_INVOICE"}</param>
												
												
							<!--<param name="json">{"inputParams":{"params":[{"jdbcConnParams":"[url:'jdbc:jtds:sqlserver://dccmsconv:1433;databaseName=JISData;', user:'ecourt', password:'3c0urt', driver:'net.sourceforge.jtds.jdbc.Driver']",
																		  "threads":"8",
																		  "sqlSelect": "SELECT top 1 id, tParty_id, tAssessmentGroup_id, assessmentMap, description, createdDate, dueDate, rescindCode FROM dbo.CVSC_Invoices_conv WITH (nolock) WHERE tParty_id is not null and assessmentMap is not null and Coalesce(tInvoice_id, -1) = -1 ORDER BY tParty_id, id"
																		  "tableName":"dbo.CVSC_Invoices_conv",
																		  "verifyTsAndWf":"true"}]},
												"ruleCode":"CONVERSION_INVOICES_P2"}</param> -->					
				
							<param name="timeout">0</param>
        
							<param name="tasks">
								<task handler="DCU.LogInfo">REST result: $[result]</task>
								<task handler="Comm.Slack"><args url="${slack.url}" message="$[result]" from="DCU"/></task>
							</param>
        
							<param name="maxloops">5</param>
        
							<param name="looptest">
								<task handler="Tests.TestRowCount">
									<args count="0">SELECT Count(1) FROM dbo.stagingInvoices WHERE error is not null;</args>
								</task>
							</param>
        
							<param name="looptasks">
								
							</param>
        
						<!-- <param name="finaltasks">
						<task handler="SqlServer.Script">UPDATE dbo.sjeInvoice SET tInvoice_id = null, error = null WHERE error is not null;</task>
						</param> -->
        
							<param name="progress.sqlStartCount">SELECT count(1) FROM dbo.stagingInvoices WITH (nolock) WHERE tParty_id is not null and AssessmentMap is not null and tInvoice_id is null; </param> 
							<param name="progress.sqlProgressCount">SELECT count(1) FROM dbo.stagingInvoices WITH (nolock) WHERE tParty_id is not null and AssessmentMap is not null and tInvoice_id is NOT null;</param>
							<param name="progress.pollInterval">30</param> 
						</params>
				</action>
				
			
				
			</actions>
		</stage>
		
		<stage num="952" mode="Serial" desc="Pay Plans" enabled="true">
			<actions>
			
				<action handler="DCU.TaskHost" desc="Restart SQL" progresslabel="Restart SQL" enabled="false">
					<source>
						<task handler="DCU.RestartService">
							<args service="${sql.service.name}" timeout="600"></args>
						</task>
					</source>
				</action>
			
				<action handler="DCU.TaskHost" progresslabel="30-second delay" enabled="false">
					<source>
						<task handler="DCU.Wait">30</task>
					</source>
				</action>
				
				<action handler="SqlServer.Raw" desc="Update PayPlans" progresslabel="Update PayPlans" enabled="true">
					<source database="${sql.staging.db}" schema="dbo">
						<task handler="SqlServer.Script" desc="Update PayPlans">
					
						IF OBJECT_ID('StagingPayPlan', 'U') IS NOT NULL 
						DROP TABLE [dbo].[StagingPayPlan];

						</task>
						<task handler="SqlServer.Script" desc="Update PayPlans">
						

						CREATE TABLE dbo.StagingPayPlan(
							id numeric(19, 0) IDENTITY(1,1) NOT NULL,	
							tParty_id numeric(19,0) NULL,				
							startDate datetime NULL,					
							recurringCents bigint NULL,				
							dayOfMonth tinyint NULL,					
							numPayments int NULL,						
							tPayplan_id numeric(19,0) NULL,				
							error varchar(max) NULL,
							description varchar(max),
							person_id NUMERIC(19,0),
							balance float
						) ON [PRIMARY]
						</task>
					
					
					</source>
				</action>
			
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading tblPaymentSchedule_conv" enabled="true">
					<source database="${sql.staging.db}" schema="dbo" table="tblPaymentSchedule_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						
						SELECT tParty_id, ps.*, recurringCents = (amount * 100)  FROM JustWareMigrated_full.ecourt.tTblPaymentSchedule ps
						LEFT JOIN churchillStaging.dbo.party_conv pc
						ON ps.description = pc.caseNumber AND ps.person_id = pc.person_id;
						
	
						
						
						]]>							
						</param>
								
					</params>
					<mappings>
						<mapping source="tParty_id" dest="tParty_id"/>
						<mapping source="startDate" dest="startDate"/>
						<mapping source="recurringCents" dest="recurringCents"/>
						<mapping source="day1" dest="dayOfMonth"/>
						<mapping source="description" dest="description"/>
						<mapping source="person_id" dest="person_id"/>
				
						
					</mappings>
					<destination database="${sql.staging.db}" schema="dbo" table="StagingPayPlan"/>
				</action>
				
				<action handler="SqlServer.Raw" desc="Update PayPlans" progresslabel="Update PayPlans" enabled="true">
					<source database="${sql.staging.db}" schema="dbo">
						
						<task handler="SqlServer.Script" desc="Update PayPlans">
						
						<![CDATA[
						
						UPDATE churchillStaging.dbo.StagingPayPlan
						SET tParty_id = pc.tParty_id
						FROM churchillStaging.dbo.StagingPayPlan sp
						LEFT JOIN churchillStaging.dbo.party_conv pc
						ON CONCAT('CR00', sp.description) = pc.caseNumber AND sp.person_id = pc.person_id
						WHERE sp.tParty_id IS NULL;
						
						UPDATE ChurchillStaging.dbo.StagingPayPlan
						SET numPayments = CEILING(si.balance/(recurringCents/100)),
						balance = si.balance
						FROM ChurchillStaging.dbo.StagingPayPlan SP
						LEFT JOIN (SELECT tParty_id, SUM(amount) as balance FROM ChurchillStaging.dbo.StagingInvoices GROUP BY tParty_id) si
						ON sp.tParty_id = si.tParty_id;
						
						UPDATE sp
						SET startDate =
						CASE
							WHEN startDate > GETDATE() THEN startDate
							WHEN DAY(startDate) > DAY(GETDATE()) AND DAY(startDate) <= DAY(EOMONTH(GETDATE())) THEN DATEFROMPARTS(YEAR(GETDATE()), MONTH(GETDATE()), DAY(startDate))
							WHEN DAY(startDate) > DAY(GETDATE()) AND DAY(startDate) > DAY(EOMONTH(GETDATE())) THEN DATEFROMPARTS(YEAR(GETDATE()), MONTH(GETDATE()), DAY(EOMONTH(GETDATE())))
							WHEN DAY(startDate) <= DAY(GETDATE()) THEN DATEADD(M,1,DATEFROMPARTS(YEAR(GETDATE()), MONTH(GETDATE()), DAY(startDate)))
						END
						FROM churchillStaging.dbo.StagingPayPlan sp;
						]]>	
						
						</task>
					
					
					</source>
				</action>
			
				<action handler="Ecourt.ExecuteRuleWithLoop" desc="Looping REST rule call" verbose="${verbose}" progresslabel="CONVERSION_PAY_PLANS_P2" enabled="true" onerror="Continue">
				<source database="${sql.staging.db}"/>
					<params>
						<param name="url">${rest.url}</param>
						<param name="username">${rest.username}</param>
						<param name="password">${rest.password}</param>
						
						<param name="json">{"inputParams":{"params":
														[{"name":"jdbcConnParams","value":"[url:'jdbc:jtds:sqlserver://EC2AMAZ-UUQ2CH0:1433;databaseName=churchillStaging;', user:'ecourt', password:'dbpass', driver:'net.sourceforge.jtds.jdbc.Driver']"},
														 {"name":"threads","value":"8"},
														 {"name":"sqlSelect","value":"SELECT  id, tParty_id, startDate, recurringCents, dayOfMonth, numPayments FROM StagingPayPlan WITH (nolock) WHERE tParty_id is not null and startDate is not null and recurringCents is not null and dayOfMonth is not null and Coalesce(tPayPlan_id, -1) = -1 ORDER BY tParty_id, id"},
														 {"name":"tableName","value":"dbo.StagingPayPlan"},
														 {"name":"invoiceFilter","value":"invoices[balance > 0]"},
														 {"name":"restitutionFilter","value":""},
														 {"name":"verifyTsAndWf","value":"true"}]},
											"ruleCode":"CONVERSION_PAYPLANS"}</param>
											
											
						<!--<param name="json">{"inputParams":{"params":[{"jdbcConnParams":"[url:'jdbc:jtds:sqlserver://dccmsconv:1433;databaseName=JISData;', user:'ecourt', password:'3c0urt', driver:'net.sourceforge.jtds.jdbc.Driver']",
																	  "threads":"8",
																	  "sqlSelect": "SELECT top 1 id, tParty_id, tAssessmentGroup_id, assessmentMap, description, createdDate, dueDate, rescindCode FROM dbo.CVSC_Invoices_conv WITH (nolock) WHERE tParty_id is not null and assessmentMap is not null and Coalesce(tInvoice_id, -1) = -1 ORDER BY tParty_id, id"
																	  "tableName":"dbo.CVSC_Invoices_conv",
																	  "verifyTsAndWf":"true"}]},
											"ruleCode":"CONVERSION_INVOICES_P2"}</param> -->					
			
						<param name="timeout">0</param>
        
						<param name="tasks">
							<task handler="DCU.LogInfo">REST result: $[result]</task>
							<task handler="Comm.Slack"><args url="${slack.url}" message="$[result]" from="DCU"/></task>
						</param>
        
						<param name="maxloops">5</param>
        
						<param name="looptest">
							<task handler="Tests.TestRowCount">
								<args count="0">SELECT Count(1) FROM dbo.stagingPayPlan WHERE error is not null;</args>
							</task>
						</param>
        
						<param name="looptasks">
							<task handler="SqlServer.Script">UPDATE dbo.stagingPayPlan SET tPayPlan_id = null, error = null WHERE error is not null;</task>
						</param>
        
					<!-- <param name="finaltasks">
					<task handler="SqlServer.Script">UPDATE dbo.sjeInvoice SET tInvoice_id = null, error = null WHERE error is not null;</task>
					</param> -->
        
						<param name="progress.sqlStartCount">SELECT count(1) FROM dbo.stagingPayPlan WITH (nolock) WHERE tParty_id is not null  and tPayPlan_id is null; </param> 
						<param name="progress.sqlProgressCount">SELECT count(1) FROM dbo.stagingPayPlan WITH (nolock) WHERE tParty_id is not null  and tPayPlan_id is NOT null;</param>
						<param name="progress.pollInterval">30</param> 
					</params>
			</action>
				
				
			<action handler="Comm.Slack" progresslabel="Send a Slack message">
				<params>
					<param name="url">${slack.url}</param>
					<param name="from">DCU</param>
					<param name="message">Financial - Phase Completed</param>
				</params>
			</action>
				

				
			</actions>
		</stage>
		
		
		
		<stage num="9999" desc="Set Versioning - Part I" mode="Serial" enabled = "true">
			<actions>
			
				

				<action handler="Ecourt.CreateVersionRecords" desc="populate version tables" verbose="true" progresslabel="create version records">
					<source database="${sql.ecourt.db}"/>
						<params>
						<param name="revquery">SELECT MIN(id) FROM ecourt.tAuditLog</param>
						<!-- <resource desc="REV (tAuditLog.id) value for version records" name="rev"></resource> -->
						<param name="revtype" desc="REVTYPE values for version records (0,1,2)">0</param>
						<param name="mode" desc="(optional, parallel is default) processing mode"></param>
						<param name="workers" desc="(optional, 8 is default) number of parallel threads to use (1-10)">10</param>
						<param name="tables" desc="comma separated list of tables">tCaseOtherNumber,tTracking,tSubCase,tBail,tCaseSeal,tCaseStatus,tCaseTrack,tScheduledEvent,tScheduledEvent_assignments,tIdentification,tScheduledEvent_parties,tCe_ChargeIntoxicant,tCe_NonCollectibleFinancial,tCe_PersonEvent,tCe_PersonTracking,tPerson,tExhibit,tCharge,tExhibitTracking,tAddress,tChargeCharacteristic,tJudgment,tJudgmentAward,tPersonAKA,tChargeRelated,tTelephone,tCase,tSentence,tSentenceCondition,tPersonIdentifier,tCheckListItem,tSpecialStatus,tArrest,tCaseAssignment,tCaseContact,tPersonNote,tVehicle,tCaseCrossReference,tCaseDisposition,tCaseJoinder,tPersonProfile,tCaseJoinedItem,tPersonSpecialStatus,tParty,tCaseNote</param>
						<param name="prefix" desc="(optional, V_ is default) version table prefix">V_</param>
						<param name="findstartid" desc="(optional, false is default) indicates to find the starting id in the version table (because we only want to add records that aren't already there)">true</param>
						<param name="handler" desc="(optional, defaults to SqlServer.BulkCopyToSqlServer) indicates the bulkcopy action handler to use">SqlServer.BulkCopyToSqlServer_DRC</param>
						</params>
					<destination database="${sql.ecourt.db}"/>
				</action>
				
				<action handler="SqlServer.Raw" desc="Get final ecourt row counts for all tables" progresslabel="final table counts" enabled="false">
					<source database="${sql.ecourt.db}">
						<task handler="SqlServer.TableCounts"><args savePath="${log.folder}\endingCounts.xml"/></task>
					</source>
				</action>
				
				<action handler="SqlServer.Raw" desc="Create final counts report" progresslabel="compare counts" enabled="false"> 
					<source database="${sql.ecourt.db}">
						<task handler="SqlServer.TableCountComparison">
							<args 
								reportPath1="${log.folder}\startingCounts.xml" 
								reportPath2="${log.folder}\endingCounts.xml" 
								savePath="${log.folder}\save\load summary{0:M-d-yyyy_hhmmss}.xml"/><!-- special save location and date formatted filename prevent overwrite/loss -->
						</task>
					</source>
				</action>

				
			
				
				
			</actions>	
		</stage>

	</stages>
  <post>
		<actions> 
		

		
			<action handler="DCU.WriteLogFile" desc="write log" progresslabel="write log file">
				<params>
					<param name="logfolder">${log.folder}</param>
				</params>
			</action>
			
			
			<action handler="Comm.Slack" progresslabel="Send a Slack message" enabled="false">
				<params>
					<param name="url">${slack.url}</param>
					<param name="from">DCU</param>
					<param name="message">$[conv.result]: [$[conv.filename]] script finished running.\r\nStart: $[conv.start:MM-dd-yyyy hh:mm:ss tt]\r\nEnd: $[conv.end:MM-dd-yyyy hh:mm:ss tt]\r\nElapsed time: $[conv.duration]</param>
				</params>
			</action>
			
				
			<action handler="DCU.TaskHost" desc="Restart SQL" progresslabel="Restart SQL" enabled="false">
					<source>
						<task handler="DCU.RestartService">
							<args service="${sql.service.name}" timeout="600"></args>
						</task>
					</source>
			</action>
			
		
			
		</actions>		
	</post>
</conversion>			

			