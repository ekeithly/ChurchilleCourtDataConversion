<?xml version="1.0" encoding="utf-8"?>

<conversion>
  <properties src="C:\eSeries\eCourt\ConversionFiles\Scripts\Includes.xml"/>	
  <databases>
		<database name="${sql.migrated.db}" description="MiCourt - Source Data" type="SqlServer" version="2017">${migrated.string}</database>
		<database name="${sql.staging.db}" description="Staging - Source Data" type="SqlServer" version="2017">${staging.string}</database>
		<database name="${sql.ecourt.db}" description="eCourt - Destination" type="SqlServer" version="2017">${ecourt.string}</database>
		<database name="${sql.source.db}" description="Source" type="SqlServer" version="2017">${source.string}</database>
		<database name="${sql.master.db}" description="Master" type="SqlServer" version="2017">${master.string}</database>
	</databases>
  <pre>
		<actions>
			<action handler="Ecourt.SetVersionTables" progresslabel="get version list">
				<params>
					<param name="database">${sql.ecourt.db}</param>
					<param name="exclude" desc="remove these from the version process because I handled them manually">tCe_OtherNumber</param>
					<param name="include" desc="add these to the version process"></param>
				</params>
			</action> 
			
			
		</actions> 
  
  </pre>
  <stages>
		
		
		<stage num="0" mode="Serial" desc="Stop Tomcat and restart SQL" enabled="true">
			<actions>
			
				<action handler="DCU.TaskHost" progresslabel="delay" enabled="false">
					<source>
						<task handler="DCU.Wait">${delay.timer}</task>
					</source>
				</action>

				
				<action handler="DCU.TaskHost" desc="Restart SQL" progresslabel="Restart SQL" enabled="false">
					<source>
						<task handler="DCU.RestartService">
							<args service="${sql.service.name}" timeout="600"></args>
						</task>
					</source>
				</action>
				
				<action handler="DCU.TaskHost" progresslabel="30-second delay" enabled="false">
					<source>
						<task handler="DCU.Wait">30</task>
					</source>
				</action>
				
				<action handler="DCU.TaskHost" desc="Stopping Tomcat" progresslabel="Stopping Tomcat">
					<source>
						<task handler="DCU.StopService">
							<args service="${tomcat.service.name}"></args>
						</task>
					</source>
				</action>
				
				
				
				
				
			</actions>
		</stage>
		
		<stage num="3" mode="Serial" desc="Delete Logs/Past Final Back-ups">
			<actions>
				<action handler="Workspace.DeleteFiles" desc="Clear past Logs">
					<params>
						<param name="directory">${log.folder}</param>
						<param name="pattern">*.xml</param>
					</params>
				</action>
					
				<action handler="Workspace.DeleteFiles" desc="Clear past Final Backups" enabled="false">
					<params>
						<param name="directory">G:\SQL\Backups\3-Finish</param>
						<param name="pattern">*.bak</param>
					</params>
				</action>
				
			</actions>
		</stage>
		
		<stage num="4" mode="Serial" desc="Fix Orphaned Users" enabled="false">
		
		
			<actions>

				<action handler="SqlServer.Raw" desc="Fix Users" progresslabel="Fixing orphaned Users">
					<source database="${sql.master.db}" schema="dbo">
						<task handler="SqlServer.Script" desc="Fix Orphans">
						USE [${sql.ecourt.db}] EXEC sp_change_users_login 'Auto_Fix', 'ecourt';
						USE [${sql.staging.db}] EXEC sp_change_users_login 'Auto_Fix', 'ecourt';
						USE [${sql.migrated.db}] EXEC sp_change_users_login 'Auto_Fix', 'ecourt';
			
						</task>
					</source>
				</action>
				
				
				<action handler="SqlServer.TestConnection" desc="Verify connectivity - Master"  progresslabel="Verify connectivity - Master">
					<source database="${sql.master.db}" />
				</action>
				
				<action handler="SqlServer.TestConnection" desc="Verify connectivity - eCourt" progresslabel="Verify connectivity - eCourt">
					<source database="${sql.ecourt.db}" />
				</action>
				
				<action handler="SqlServer.TestConnection" desc="Verify connectivity - Source" progresslabel="Verify connectivity - Source">
					<source database="${sql.source.db}" />
				</action>
				
				<action handler="SqlServer.TestConnection" desc="Verify connectivity - Staging" progresslabel="Verify connectivity - Staging">
					<source database="${sql.staging.db}" />
				</action>
				
				
			</actions>
		</stage>
		
		<stage num="5" mode="Serial" desc="Verfiy Connectivity">
			<actions>
				<action handler="SqlServer.TestConnection" desc="Verify connectivity - Source" progresslabel="Verify connectivity - Migrated">
					<source database="${sql.migrated.db}" />
				</action>
				
				<action handler="SqlServer.TestConnection" desc="Verify connectivity - Source" progresslabel="Verify connectivity - eCourt">
					<source database="${sql.ecourt.db}" />
				</action>
				
				<action handler="SqlServer.TestConnection" desc="Verify connectivity - Source" progresslabel="Verify connectivity - Staging">
					<source database="${sql.staging.db}" />
				</action>
				
				<action handler="SqlServer.TestConnection" desc="Verify connectivity - Source" progresslabel="Verify connectivity - Source">
					<source database="${sql.source.db}" />
				</action>
				
				
				
			</actions>
		</stage>
		
		<stage num="7" mode="Serial" desc="Clean eCourt">
			<actions>
				<action handler = "Ecourt.ClearCaseData" desc="clear case data" verbose="true" progresslabel="Clear Cases" enabled="true">
					<source database="${sql.ecourt.db}"/>
					<params>
						<param name="excludeEmptyTables" desc="Optional: indicates to ignore empty tables in the process (default is false)">false</param>
						<param name="saveFilePath" desc="Optional: if a full filename is specified, it will write out the sql script"></param>
					<param name="scriptOnly" desc="Optional: indicates to not execute the generated sql (default is false)">false</param>
					</params>
				</action>
			</actions>
		</stage>
		
	
		<stage num="9" mode="Parallel" desc="Shrink and Set Recovery Mode to Simple">
			<actions>
				
				<action handler="SqlServer.Raw" desc="Setting Recovery Mode to Simple and Shrinking - eCourt" progresslabel="Setting Recovery Mode to Simple and Shrinking - eCourt">
					<source database="${sql.ecourt.db}" schema="ecourt">
						<task handler="SqlServer.DB.SetRecoveryMode">simple</task>
						<task handler="SqlServer.DB.Shrink">${sql.ecourt.db}</task> 
					</source>
				</action>
				
				<action handler="SqlServer.Raw" desc="Setting Recovery Mode - Staging" progresslabel="Setting Recovery Mode to Simple - Staging">
					<source database="${sql.staging.db}" schema="dbo">
						<task handler="SqlServer.DB.SetRecoveryMode">simple</task>
					</source>
				</action>
								
			</actions>
		</stage>
		
		<stage num="10" desc="Stop and Save Workflows/Timestands" mode="Serial">
			<actions>
		
			
				<action handler="Ecourt.DisableWorkFlowAndTimeStandards" progresslabel="disable workflow and timestandards">
					<source database="${sql.ecourt.db}" />
					<params>
						<param name="saveLocation">${log.folder}</param>
					</params>
				</action>
			
			</actions>

			
		</stage>

		<stage num="14" mode="Serial" desc="Build List for converted cases">
			<actions>
				
				<action handler="SqlServer.Raw" desc="Creating Table" progresslabel="Creating Table for different loads">
					<source database="${sql.staging.db}" schema="dbo">
						<task handler="SqlServer.Script" desc="Add Case List Table">
						IF OBJECT_ID('convertCases_conv', 'U') IS NOT NULL 
						DROP TABLE [dbo].[convertCases_conv];
						</task>
						<task handler="SqlServer.Script" desc="Add Case List Table">
							<![CDATA[
							CREATE TABLE [dbo].[convertCases_conv](
							[CaseNumber] VARCHAR(255) NOT NULL PRIMARY KEY,
							caseGroup VARCHAR(255),
							case_id NUMERIC(19,0)

							);
							]]>
						</task>			
						<task handler="SqlServer.Script" desc="Add Partial Build Cases" enabled="${partial.build}">
							<![CDATA[
								INSERT INTO convertCases_conv (caseNumber) SELECT 'XXFELYYYYY00';
								INSERT INTO convertCases_conv (caseNumbere) SELECT 'XXFELYYYYY02';
								INSERT INTO convertCases_conv (caseNumber) SELECT 'XXFELYYYYY03';
							]]>
						</task>
						<task handler="SqlServer.Script" desc="Add Full Build Cases" enabled="${full.build}">
						<![CDATA[
							INSERT INTO dbo.convertCases_conv
							SELECT LTRIM(RTRIM(cas.caseNumber)),
							caseGroup = 
								CASE
									WHEN cas.caseType IN  ('TRBSR','TRBSS','TRBST','FCWWR','FCWWS','CRIFR','CRIFS','CRIFT','CRIMR','CRIMS','CRIMT','CRFLJ','INFFR','JUVVR','JUVVS','JUVVT','TNPPR','TNPPS','TNPPT','TRMSR','TRMSS','TRMST','TREPS') THEN 'CR'
								--	WHEN cas.caseType IN ('CS','CV','DM','FO','LR','MARSP','PO','PR','RS','SD','SP','WL') THEN 'CV'
									ELSE 'NA'
								END,
							cas.id as case_id 
							FROM CNMI_eCourt_full.ecourt.tCase cas;
							
						
						]]>	
						</task>
					</source>
				</action>
			</actions>
		</stage>
			
		<stage num="20" mode="Serial" desc="Transform Case" enabled="true">
			<actions>
			
				<action handler="SqlServer.Raw" desc="Creating Case_conv table" progresslabel="Creating Case Table" enabled="true">
					<source database="${sql.staging.db}" schema="dbo">
						<task handler="SqlServer.Script" desc="Create Case_conv table">
						IF OBJECT_ID('case_conv', 'U') IS NOT NULL 
						DROP TABLE [dbo].[case_conv];
						
						</task>
						
						<task handler="SqlServer.Script" desc="Create Case_Conv table">
						<![CDATA[
						
						CREATE TABLE [dbo].[case_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 
							[id] [numeric](19, 0),
							[accessLevel] [int] NULL,
							[createUserRealName] [varchar](255) NULL,
							[createUsername] [varchar](255) NULL,
							[dateCreated] [datetime] NULL,
							[lastUpdateUserRealName] [varchar](255) NULL,
							[lastUpdateUsername] [varchar](255) NULL,
							[lastUpdated] [datetime] NULL,
							[memo] [varchar](512) NULL,
							[optlock] [int] NOT NULL,
							[roaAccessLevel] [int] NULL,
							[sourceCaseNumber] [varchar](255) NULL,
							[updateReason] [varchar](255) NULL,
							[asbestos] [tinyint] NULL,
							[assignedTrack] [varchar](255) NULL,
							[caseJurisdiction] [varchar](255) NULL,
							[caseName] [varchar](255) NULL,
							[caseNumber] [varchar](255),
							[caseNumberSequence] [numeric](19, 0) NULL,
							[caseReason] [varchar](255) NULL,
							[caseShortName] [varchar](255) NULL,
							[caseSubType] [varchar](255) NULL,
							[caseType] [varchar](255) NULL,
							[category] [varchar](255) NULL,
							[ceqa] [tinyint] NULL,
							[classAction] [tinyint] NULL,
							[complexFeeAssessedAmountCents] [numeric](19, 0) NULL,
							[complexLitigation] [tinyint] NULL,
							[conditionallySealed] [tinyint] NULL,
							[consolidationType] [varchar](255) NULL,
							[county] [varchar](255) NULL,
							[demandAmount] [float] NULL,
							[demandAmountType] [varchar](255) NULL,
							[dispositionDate] [datetime] NULL,
							[dispositionManner] [varchar](255) NULL,
							[dispositionType] [varchar](255) NULL,
							[dmvDocketId] [varchar](255) NULL,
							[documentAccessLevel] [int] NULL,
							[eFileCitationDate] [datetime] NULL,
							[eFileCitationNumber] [varchar](255) NULL,
							[efmEFiled] [tinyint] NULL,
							[efmLegacyCase] [tinyint] NULL,
							[excludeFromEFiling] [tinyint] NULL,
							[filingAgency] [varchar](255) NULL,
							[filingDate] [datetime] NULL,
							[filingStatus] [varchar](255) NULL,
							[filingType] [varchar](255) NULL,
							[hearingRequestedDate] [datetime] NULL,
							[hearingRequestedTime] [varchar](255) NULL,
							[hearingRequestedType] [varchar](255) NULL,
							[incidentZip] [varchar](255) NULL,
							[ivrCaseNumber] [varchar](255) NULL,
							[ivrCitationNumber] [varchar](255) NULL,
							[ivrDLNumber] [varchar](255) NULL,
							[jccpCaseNumber] [varchar](255) NULL,
							[joined] [varchar](255) NULL,
							[judicialOfficer] [varchar](255) NULL,
							[jurisdictionalAmount] [varchar](255) NULL,
							[latitude] [varchar](255) NULL,
							[location] [varchar](255) NULL,
							[locationAddress1] [varchar](255) NULL,
							[locationAddress2] [varchar](255) NULL,
							[locationCity] [varchar](255) NULL,
							[locationDept] [varchar](255) NULL,
							[locationState] [varchar](255) NULL,
							[locationZip] [varchar](255) NULL,
							[longitude] [varchar](255) NULL,
							[memo2] [varchar](255) NULL,
							[noFeeCase] [tinyint] NULL,
							[noFeeCaseSection] [varchar](255) NULL,
							[noOfParcels] [float] NULL,
							[originalFiledDate] [datetime] NULL,
							[originalVerdictDate] [datetime] NULL,
							[receivedDate] [datetime] NULL,
							[referenceNumber] [varchar](255) NULL,
							[status] [varchar](255) NULL,
							[statusDate] [datetime] NULL,
							[statusUpdateReason] [varchar](255) NULL,
							[subJurisdiction] [varchar](255) NULL,
							[workflowCaseAttribute] [varchar](255) NULL,
							[workflowLocation] [varchar](255) NULL,
							[workflowLocation2] [varchar](255) NULL,
							[workflowLocation3] [varchar](255) NULL,
							[caseUnit] [varchar](255) NULL,
							[filingAgencyCaseNumber] [varchar](255) NULL,
							[convId] [varchar](13) NULL,
							[caseSealType] [varchar](16) NULL,
							[caseOrigination] [varchar](255) NULL,
							tCase_id NUMERIC(19,0),
							person_id NUMERIC(19,0),
							party_id NUMERIC(19,0),
							caseCategory varchar(255),
							parsedCategory VARCHAR(255),
							splitCase NUMERIC(19,0),
							caseGroup VARCHAR(255),
							tCaseJoinder_id NUMERIC(19,0),
							tCaseJoinedItem_id NUMERIC(19,0),
							caseType_ld VARCHAR(255),
							cfLotNum VARCHAR(7500),
							attachedIdLoad NUMERIC(19,0)
										
					
							);				
						]]>
						
						</task>
						
					</source>
				</action>
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform General Case">
					<source database="${sql.migrated.db}" schema="dbo"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							
						SELECT  [id]
						,[accessLevel]
						,[createUserRealName]
						,[createUsername]
						,[dateCreated]
						,[lastUpdateUserRealName]
						,[lastUpdateUsername]
						,[lastUpdated]
						,[memo]
						,[optlock]
						,[roaAccessLevel]
						,cc.caseNumber as sourceCaseNumber
						,[updateReason]
						,[asbestos]
						,[assignedTrack]
						,caseJurisdictionLd =
						CASE
							WHEN caseJurisdiction <> 'SUPRC' THEN 'SUPEC' 
							ELSE 'SUPRC'
						END
						,[caseName]
						,COALESCE(cn.caseOtherNum, cc.caseNumber) as caseNumber
						,[caseNumberSequence]
						,[caseReason]
						,[caseShortName]
						,[caseSubType]
						,[caseType]
						,[category]
						,[ceqa]
						,[classAction]
						,[complexFeeAssessedAmountCents]
						,[complexLitigation]
						,[conditionallySealed]
						,[consolidationType]
						,[county]
						,[demandAmount]
						,[demandAmountType]
						,[dispositionDate]
						,[dispositionManner]
						,[dispositionType]
						,[dmvDocketId]
						,[documentAccessLevel]
						,[eFileCitationDate]
						,[eFileCitationNumber]
						,[efmEFiled]
						,[efmLegacyCase]
						,[excludeFromEFiling]
						,[filingAgency]
						,receivedDate as filingDate
						,[filingStatus]
						,[filingType]
						,[hearingRequestedDate]
						,[hearingRequestedTime]
						,[hearingRequestedType]
						,[incidentZip]
						,[ivrCaseNumber]
						,[ivrCitationNumber]
						,[ivrDLNumber]
						,[jccpCaseNumber]
						,[joined]
						,[judicialOfficer]
						,[jurisdictionalAmount]
						,[latitude]
						,[location]
						,[locationAddress1]
						,[locationAddress2]
						,[locationCity]
						,[locationDept]
						,[locationState]
						,[locationZip]
						,[longitude]
						,[memo2]
						,[noFeeCase]
						,[noFeeCaseSection]
						,[noOfParcels]
						,[originalFiledDate]
						,[originalVerdictDate]
						,[receivedDate]
						,rn.caseOtherNum as ReferenceNumberLd
						,[status]
						,[statusDate]
						,[statusUpdateReason]
						,caseJurisdiction as subJurisdiction
						,[workflowCaseAttribute]
						,[workflowLocation]
						,[workflowLocation2]
						,[workflowLocation3]
						,[caseUnit]
						,[filingAgencyCaseNumber]
						,[convId]
						,[caseSealType]
						,[caseOrigination]
						, splitCase = 0,
						cc.caseGroup
						FROM [CNMI_eCourt_full].[ecourt].[tCase] cs
						INNER JOIN cnmiStaging.dbo.convertCases_conv cc
						ON cs.caseNumber = cc.caseNumber 
						LEFT JOIN (SELECT case_id, MAX(number) caseOtherNum FROM CNMI_eCourt_full.ecourt.tCaseOtherNumber cn WHERE type = 'CRT' AND lead = 1 GROUP BY case_id) cn
						ON cs.id = cn.case_id
						LEFT JOIN (SELECT case_id, MAX(number) caseOtherNum FROM CNMI_eCourt_full.ecourt.tCaseOtherNumber cn WHERE type = 'LAW' AND lead = 1 GROUP BY case_id) rn
						ON cs.id = rn.case_id
						WHERE caseGroup <> 'CR' 
					
							
						]]>
							
							
					

						</param>				
					</params>
					<mappings>
						<mapping source="id" dest="id"/>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="asbestos" dest="asbestos"/>
						<mapping source="assignedTrack" dest="assignedTrack"/>
						<mapping source="caseJurisdictionLd" dest="caseJurisdiction"/>
						<mapping source="caseName" dest="caseName"/>
						<mapping source="caseNumber" dest="caseNumber"/>
						<mapping source="caseNumberSequence" dest="caseNumberSequence"/>
						<mapping source="caseReason" dest="caseReason"/>
						<mapping source="caseShortName" dest="caseShortName"/>
						<mapping source="caseSubType" dest="caseSubType"/>
						<mapping source="caseType" dest="caseType"/>
						<mapping source="category" dest="category"/>
						<mapping source="ceqa" dest="ceqa"/>
						<mapping source="classAction" dest="classAction"/>
						<mapping source="complexFeeAssessedAmountCents" dest="complexFeeAssessedAmountCents"/>
						<mapping source="complexLitigation" dest="complexLitigation"/>
						<mapping source="conditionallySealed" dest="conditionallySealed"/>
						<mapping source="consolidationType" dest="consolidationType"/>
						<mapping source="county" dest="county"/>
						<mapping source="demandAmount" dest="demandAmount"/>
						<mapping source="demandAmountType" dest="demandAmountType"/>
						<mapping source="dispositionDate" dest="dispositionDate"/>
						<mapping source="dispositionManner" dest="dispositionManner"/>
						<mapping source="dispositionType" dest="dispositionType"/>
						<mapping source="dmvDocketId" dest="dmvDocketId"/>
						<mapping source="documentAccessLevel" dest="documentAccessLevel"/>
						<mapping source="eFileCitationDate" dest="eFileCitationDate"/>
						<mapping source="eFileCitationNumber" dest="eFileCitationNumber"/>
						<mapping source="efmEFiled" dest="efmEFiled"/>
						<mapping source="efmLegacyCase" dest="efmLegacyCase"/>
						<mapping source="excludeFromEFiling" dest="excludeFromEFiling"/>
						<mapping source="filingAgency" dest="filingAgency"/>
						<mapping source="filingDate" dest="filingDate"/>
						<mapping source="filingStatus" dest="filingStatus"/>
						<mapping source="filingType" dest="filingType"/>
						<mapping source="hearingRequestedDate" dest="hearingRequestedDate"/>
						<mapping source="hearingRequestedTime" dest="hearingRequestedTime"/>
						<mapping source="hearingRequestedType" dest="hearingRequestedType"/>
						<mapping source="incidentZip" dest="incidentZip"/>
						<mapping source="ivrCaseNumber" dest="ivrCaseNumber"/>
						<mapping source="ivrCitationNumber" dest="ivrCitationNumber"/>
						<mapping source="ivrDLNumber" dest="ivrDLNumber"/>
						<mapping source="jccpCaseNumber" dest="jccpCaseNumber"/>
						<mapping source="joined" dest="joined"/>
						<mapping source="judicialOfficer" dest="judicialOfficer"/>
						<mapping source="jurisdictionalAmount" dest="jurisdictionalAmount"/>
						<mapping source="latitude" dest="latitude"/>
						<mapping source="location" dest="location"/>
						<mapping source="locationAddress1" dest="locationAddress1"/>
						<mapping source="locationAddress2" dest="locationAddress2"/>
						<mapping source="locationCity" dest="locationCity"/>
						<mapping source="locationDept" dest="locationDept"/>
						<mapping source="locationState" dest="locationState"/>
						<mapping source="locationZip" dest="locationZip"/>
						<mapping source="longitude" dest="longitude"/>
						<mapping source="memo2" dest="memo2"/>
						<mapping source="noFeeCase" dest="noFeeCase"/>
						<mapping source="noFeeCaseSection" dest="noFeeCaseSection"/>
						<mapping source="noOfParcels" dest="noOfParcels"/>
						<mapping source="originalFiledDate" dest="originalFiledDate"/>
						<mapping source="originalVerdictDate" dest="originalVerdictDate"/>
						<mapping source="receivedDate" dest="receivedDate"/>
						<mapping source="ReferenceNumberLd" dest="referenceNumber"/>
						<mapping source="status" dest="status"/>
						<mapping source="statusDate" dest="statusDate"/>
						<mapping source="statusUpdateReason" dest="statusUpdateReason"/>
						<mapping source="subJurisdiction" dest="subJurisdiction"/>
						<mapping source="workflowCaseAttribute" dest="workflowCaseAttribute"/>
						<mapping source="workflowLocation" dest="workflowLocation"/>
						<mapping source="workflowLocation2" dest="workflowLocation2"/>
						<mapping source="workflowLocation3" dest="workflowLocation3"/>
						<mapping source="caseUnit" dest="caseUnit"/>
						<mapping source="filingAgencyCaseNumber" dest="filingAgencyCaseNumber"/>
						<mapping source="convId" dest="convId"/>
						<mapping source="caseSealType" dest="caseSealType"/>
						<mapping source="caseOrigination" dest="caseOrigination"/>
						<mapping source="splitCase" dest="splitCase"/>
						<mapping source="caseGroup" dest="caseGroup"/>
					</mappings>
					<destination database="${sql.staging.db}" schema="dbo" table="case_conv"/>
				</action>

						
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform CR Case">
					<source database="${sql.migrated.db}" schema="dbo"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							
						SELECT  [id]
						,[accessLevel]
						,[createUserRealName]
						,[createUsername]
						,[dateCreated]
						,[lastUpdateUserRealName]
						,[lastUpdateUsername]
						,[lastUpdated]
						,[memo]
						,[optlock]
						,[roaAccessLevel]
						,cc.caseNumber as sourceCaseNumber
						,[updateReason]
						,[asbestos]
						,[assignedTrack]
						,caseJurisdiction =
						CASE
							WHEN caseJurisdiction <> 'SUPRC' THEN 'SUPEC' 
							ELSE 'SUPRC'
						END
						,[caseName],
						caseNumber =
						CASE
							WHEN t1.rnk = 1 THEN COALESCE(cn.caseOtherNum, cc.caseNumber)
							WHEN t1.rnk > 1 THEN CONCAT(COALESCE(cn.caseOtherNum, cc.caseNumber), '--',(rnk-1))
							ELSE COALESCE(cn.caseOtherNum, cc.caseNumber)
						END
						,[caseNumberSequence]
						,[caseReason]
						,[caseShortName]
						,[caseSubType]
						,[caseType]
						,[category]
						,[ceqa]
						,[classAction]
						,[complexFeeAssessedAmountCents]
						,[complexLitigation]
						,[conditionallySealed]
						,[consolidationType]
						,[county]
						,[demandAmount]
						,[demandAmountType]
						,[dispositionDate]
						,[dispositionManner]
						,[dispositionType]
						,[dmvDocketId]
						,[documentAccessLevel]
						,[eFileCitationDate]
						,[eFileCitationNumber]
						,[efmEFiled]
						,[efmLegacyCase]
						,[excludeFromEFiling]
						,[filingAgency]
						,receivedDate as filingDate
						,[filingStatus]
						,[filingType]
						,[hearingRequestedDate]
						,[hearingRequestedTime]
						,[hearingRequestedType]
						,[incidentZip]
						,[ivrCaseNumber]
						,[ivrCitationNumber]
						,[ivrDLNumber]
						,[jccpCaseNumber]
						,[joined]
						,[judicialOfficer]
						,[jurisdictionalAmount]
						,[latitude]
						,[location]
						,[locationAddress1]
						,[locationAddress2]
						,[locationCity]
						,[locationDept]
						,[locationState]
						,[locationZip]
						,[longitude]
						,[memo2]
						,[noFeeCase]
						,[noFeeCaseSection]
						,[noOfParcels]
						,[originalFiledDate]
						,[originalVerdictDate]
						,[receivedDate]
						,rn.caseOtherNum as ReferenceNumberLd
						,[status]
						,[statusDate]
						,[statusUpdateReason]
						,caseJurisdiction as subJurisdiction
						,[workflowCaseAttribute]
						,[workflowLocation]
						,[workflowLocation2]
						,[workflowLocation3]
						,[caseUnit]
						,[filingAgencyCaseNumber]
						,[convId]
						,[caseSealType]
						,[caseOrigination]
						,t1.person_id
						,t1.party_id,
						cc.caseGroup
						FROM CNMI_eCourt_full.ecourt.tCase cs
						INNER JOIN cnmiStaging.dbo.convertCases_conv cc
						ON cs.caseNumber = cc.CaseNumber
						LEFT JOIN (SELECT case_id, person_id, pty.id as party_id, ROW_NUMBER() OVER(PARTITION BY case_id ORDER BY pty.id) rnk, charges  FROM CNMI_eCourt_full.ecourt.tParty pty INNER JOIN (SELECT associatedParty_id, STRING_AGG(id,',') as charges FROM CNMI_eCourt_full.ecourt.tCharge GROUP BY associatedParty_id) chg  on  pty.id = chg.associatedParty_id) t1
						ON cs.id = t1.case_id
						LEFT JOIN (SELECT case_id, MAX(number) caseOtherNum FROM CNMI_eCourt_full.ecourt.tCaseOtherNumber cn WHERE type = 'CRT' and lead = 1 GROUP BY case_id HAVING count(1) =1) cn
						ON cs.id = cn.case_id
						LEFT JOIN (SELECT case_id, MAX(number) caseOtherNum FROM CNMI_eCourt_full.ecourt.tCaseOtherNumber cn WHERE type = 'LAW' AND lead = 1 GROUP BY case_id) rn
						ON cs.id = rn.case_id
						WHERE caseGroup = 'CR'
						
					
					
					
							
						]]>
							
							
					

						</param>				
					</params>
					<mappings>
						<mapping source="id" dest="id"/>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="asbestos" dest="asbestos"/>
						<mapping source="assignedTrack" dest="assignedTrack"/>
						<mapping source="caseJurisdiction" dest="caseJurisdiction"/>
						<mapping source="caseName" dest="caseName"/>
						<mapping source="caseNumber" dest="caseNumber"/>
						<mapping source="caseNumberSequence" dest="caseNumberSequence"/>
						<mapping source="caseReason" dest="caseReason"/>
						<mapping source="caseShortName" dest="caseShortName"/>
						<mapping source="caseSubType" dest="caseSubType"/>
						<mapping source="caseType" dest="caseType"/>
						<mapping source="category" dest="category"/>
						<mapping source="ceqa" dest="ceqa"/>
						<mapping source="classAction" dest="classAction"/>
						<mapping source="complexFeeAssessedAmountCents" dest="complexFeeAssessedAmountCents"/>
						<mapping source="complexLitigation" dest="complexLitigation"/>
						<mapping source="conditionallySealed" dest="conditionallySealed"/>
						<mapping source="consolidationType" dest="consolidationType"/>
						<mapping source="county" dest="county"/>
						<mapping source="demandAmount" dest="demandAmount"/>
						<mapping source="demandAmountType" dest="demandAmountType"/>
						<mapping source="dispositionDate" dest="dispositionDate"/>
						<mapping source="dispositionManner" dest="dispositionManner"/>
						<mapping source="dispositionType" dest="dispositionType"/>
						<mapping source="dmvDocketId" dest="dmvDocketId"/>
						<mapping source="documentAccessLevel" dest="documentAccessLevel"/>
						<mapping source="eFileCitationDate" dest="eFileCitationDate"/>
						<mapping source="eFileCitationNumber" dest="eFileCitationNumber"/>
						<mapping source="efmEFiled" dest="efmEFiled"/>
						<mapping source="efmLegacyCase" dest="efmLegacyCase"/>
						<mapping source="excludeFromEFiling" dest="excludeFromEFiling"/>
						<mapping source="filingAgency" dest="filingAgency"/>
						<mapping source="filingDate" dest="filingDate"/>
						<mapping source="filingStatus" dest="filingStatus"/>
						<mapping source="filingType" dest="filingType"/>
						<mapping source="hearingRequestedDate" dest="hearingRequestedDate"/>
						<mapping source="hearingRequestedTime" dest="hearingRequestedTime"/>
						<mapping source="hearingRequestedType" dest="hearingRequestedType"/>
						<mapping source="incidentZip" dest="incidentZip"/>
						<mapping source="ivrCaseNumber" dest="ivrCaseNumber"/>
						<mapping source="ivrCitationNumber" dest="ivrCitationNumber"/>
						<mapping source="ivrDLNumber" dest="ivrDLNumber"/>
						<mapping source="jccpCaseNumber" dest="jccpCaseNumber"/>
						<mapping source="joined" dest="joined"/>
						<mapping source="judicialOfficer" dest="judicialOfficer"/>
						<mapping source="jurisdictionalAmount" dest="jurisdictionalAmount"/>
						<mapping source="latitude" dest="latitude"/>
						<mapping source="location" dest="location"/>
						<mapping source="locationAddress1" dest="locationAddress1"/>
						<mapping source="locationAddress2" dest="locationAddress2"/>
						<mapping source="locationCity" dest="locationCity"/>
						<mapping source="locationDept" dest="locationDept"/>
						<mapping source="locationState" dest="locationState"/>
						<mapping source="locationZip" dest="locationZip"/>
						<mapping source="longitude" dest="longitude"/>
						<mapping source="memo2" dest="memo2"/>
						<mapping source="noFeeCase" dest="noFeeCase"/>
						<mapping source="noFeeCaseSection" dest="noFeeCaseSection"/>
						<mapping source="noOfParcels" dest="noOfParcels"/>
						<mapping source="originalFiledDate" dest="originalFiledDate"/>
						<mapping source="originalVerdictDate" dest="originalVerdictDate"/>
						<mapping source="receivedDate" dest="receivedDate"/>
						<mapping source="ReferenceNumberLd" dest="referenceNumber"/>
						<mapping source="status" dest="status"/>
						<mapping source="statusDate" dest="statusDate"/>
						<mapping source="statusUpdateReason" dest="statusUpdateReason"/>
						<mapping source="subJurisdiction" dest="subJurisdiction"/>
						<mapping source="workflowCaseAttribute" dest="workflowCaseAttribute"/>
						<mapping source="workflowLocation" dest="workflowLocation"/>
						<mapping source="workflowLocation2" dest="workflowLocation2"/>
						<mapping source="workflowLocation3" dest="workflowLocation3"/>
						<mapping source="caseUnit" dest="caseUnit"/>
						<mapping source="filingAgencyCaseNumber" dest="filingAgencyCaseNumber"/>
						<mapping source="convId" dest="convId"/>
						<mapping source="caseSealType" dest="caseSealType"/>
						<mapping source="caseOrigination" dest="caseOrigination"/>
						<mapping source="person_id" dest="person_id"/>
						<mapping source="party_id" dest="party_id"/>
						<mapping source="caseGroup" dest="caseGroup"/>
					</mappings>
					<destination database="${sql.staging.db}" schema="dbo" table="case_conv"/>
				</action>

	
				<action handler="SqlServer.Raw" desc="Creating Case_conv table" progresslabel="Adjust Case Type" enabled="true">
					<source database="${sql.migrated.db}" schema="dbo">
						<task handler="SqlServer.Script" desc="Adjust Case Type">
						<![CDATA[
						UPDATE cnmiStaging.dbo.case_conv
						SET caseType_ld = 
						case
							WHEN caseType = 'FADDR' THEN 'FADD'
							WHEN caseType = 'FADDS' THEN 'FADD'
							WHEN caseType = 'FADDT' THEN 'FADD'
							WHEN caseType = 'FALLS' THEN 'FALL'
							WHEN caseType = 'FANNR' THEN 'FANN'
							WHEN caseType = 'FANNS' THEN 'FANN'
							WHEN caseType = 'FANNT' THEN 'FANN'
							WHEN caseType = 'APPPR' THEN 'APPP'
							WHEN caseType = 'APPPS' THEN 'APPP'
							WHEN caseType = 'ZAPPL' THEN 'ZAPPL'
							WHEN caseType = 'BADDR' THEN 'BADD'
							WHEN caseType = 'BADDS' THEN 'BADD'
							WHEN caseType = 'BADDT' THEN 'BADD'
							WHEN caseType = 'ZPHV' THEN 'ZPHV'
							WHEN caseType = 'TRBSR' THEN 'TRBS'
							WHEN caseType = 'TRBSS' THEN 'TRBS'
							WHEN caseType = 'TRBST' THEN 'TRBS'
							WHEN caseType = 'BCCR' THEN 'BCC'
							WHEN caseType = 'BCCS' THEN 'BCC'
							WHEN caseType = 'BCCT' THEN 'BCC'
							WHEN caseType = 'ZCERT' THEN 'ZCERT'
							WHEN caseType = 'FCNNR' THEN 'FCNN'
							WHEN caseType = 'FCNNS' THEN 'FCNN'
							WHEN caseType = 'FCNNT' THEN 'FCNN'
							WHEN caseType = 'FCWWR' THEN 'FCWW'
							WHEN caseType = 'FCWWS' THEN 'FCWW'
							WHEN caseType = 'CHIDR' THEN 'CHID'
							WHEN caseType = 'CHIDS' THEN 'CHID'
							WHEN caseType = 'CHIDT' THEN 'CHID'
							WHEN caseType = 'FCCCS' THEN 'FCCC'
							WHEN caseType = 'FCCCT' THEN 'FCCC'
							WHEN caseType = 'CLAMR' THEN 'CLAM'
							WHEN caseType = 'CLAMS' THEN 'CLAM'
							WHEN caseType = 'CLAMT' THEN 'CLAM'
							WHEN caseType = 'CONNR' THEN 'CONN'
							WHEN caseType = 'CONNS' THEN 'CONN'
							WHEN caseType = 'CMCCS' THEN 'CMCC'
							WHEN caseType = 'CRIFR' THEN 'CRIF'
							WHEN caseType = 'CRIFS' THEN 'CRIF'
							WHEN caseType = 'CRIFT' THEN 'CRIF'
							WHEN caseType = 'CRIMR' THEN 'CRIM'
							WHEN caseType = 'CRIMS' THEN 'CRIM'
							WHEN caseType = 'CRIMT' THEN 'CRIM'
							WHEN caseType = 'DAMGR' THEN 'DAMG'
							WHEN caseType = 'DAMGS' THEN 'DAMG'
							WHEN caseType = 'DAMGT' THEN 'DAMG'
							WHEN caseType = 'DEAHR' THEN 'DEAH'
							WHEN caseType = 'DEAHS' THEN 'DEAH'
							WHEN caseType = 'DISSS' THEN 'DISS'
							WHEN caseType = 'DISST' THEN 'DISS'
							WHEN caseType = 'FDIIR' THEN 'FDII'
							WHEN caseType = 'FDIIS' THEN 'FDII'
							WHEN caseType = 'FDIIT' THEN 'FDII'
							WHEN caseType = 'DOMSR' THEN 'DOMS'
							WHEN caseType = 'DOMSS' THEN 'DOMS'
							WHEN caseType = 'DOMST' THEN 'DOMS'
							WHEN caseType = 'EJETR' THEN 'EJET'
							WHEN caseType = 'EJETS' THEN 'EJET'
							WHEN caseType = 'ELCCR' THEN 'ELCC'
							WHEN caseType = 'ELCCS' THEN 'ELCC'
							WHEN caseType = 'EMAPS' THEN 'EMAP'
							WHEN caseType = 'EDOOS' THEN 'EDOO'
							WHEN caseType = 'EAOOS' THEN 'EAOO'
							WHEN caseType = 'EAOOT' THEN 'EAOO'
							WHEN caseType = 'FFPPR' THEN 'FFPP'
							WHEN caseType = 'FFPPS' THEN 'FFPP'
							WHEN caseType = 'FFPPT' THEN 'FFPP'
							WHEN caseType = 'CRFLJ' THEN 'CRFLJ'
							WHEN caseType = 'FJJS' THEN 'FJJ'							
							WHEN caseType = 'GEGGR' THEN 'GEGG'
							WHEN caseType = 'GEGGS' THEN 'GEGG'
							WHEN caseType = 'GEGGT' THEN 'GEGG'
							WHEN caseType = 'FGAAR' THEN 'FGAA'
							WHEN caseType = 'FGAAS' THEN 'FGAA'
							WHEN caseType = 'FGAAT' THEN 'FGAA'
							WHEN caseType = 'FGUUR' THEN 'FGUU'
							WHEN caseType = 'FGUUS' THEN 'FGUU'
							WHEN caseType = 'FGUUT' THEN 'FGUU'
							WHEN caseType = 'HOTAS' THEN 'HOTA'
							WHEN caseType = 'HOTAT' THEN 'HOTA'
							WHEN caseType = 'CVIMR' THEN 'CVIM'
							WHEN caseType = 'CVIMS' THEN 'CVIM'
							WHEN caseType = 'CVIMT' THEN 'CVIM'
							WHEN caseType = 'INFFR' THEN 'INFF'
							WHEN caseType = 'INJNR' THEN 'INJN'
							WHEN caseType = 'INJNS' THEN 'INJN'
							WHEN caseType = 'INJNT' THEN 'INJN'
							WHEN caseType = 'JRRR' THEN 'JRR'
							WHEN caseType = 'JRRS' THEN 'JRR'
							WHEN caseType = 'JRRT' THEN 'JRR'
							WHEN caseType = 'JUVVR' THEN 'JUVV'
							WHEN caseType = 'JUVVS' THEN 'JUVV'
							WHEN caseType = 'JUVVT' THEN 'JUVV'
							WHEN caseType = 'FJUUJ' THEN 'FJUUJ'							
							WHEN caseType = 'LABRR' THEN 'LABR'
							WHEN caseType = 'LABRS' THEN 'LABR'
							WHEN caseType = 'LABRT' THEN 'LABR'
							WHEN caseType = 'CVLNR' THEN 'CVLN'
							WHEN caseType = 'CVLNS' THEN 'CVLN'
							WHEN caseType = 'CVLNT' THEN 'CVLN'							
							WHEN caseType = 'MELIR' THEN 'MELI'
							WHEN caseType = 'MELIS' THEN 'MELI'
							WHEN caseType = 'NEGGS' THEN 'NEGG'
							WHEN caseType = 'NLPPR' THEN 'NLPP'
							WHEN caseType = 'FPAAR' THEN 'FPAA'
							WHEN caseType = 'FPAAS' THEN 'FPAA'
							WHEN caseType = 'FPAAT' THEN 'FPAA'
							WHEN caseType = 'PIIR' THEN 'PII'
							WHEN caseType = 'PIIS' THEN 'PII'
							WHEN caseType = 'PIIT' THEN 'PII'
							WHEN caseType = 'PERES' THEN 'PERE'
							WHEN caseType = 'PERET' THEN 'PERE'
							WHEN caseType = 'ZWRIT' THEN 'ZWRIT'							
							WHEN caseType = 'COMRS' THEN 'COMR'
							WHEN caseType = 'PRIOR' THEN 'PRIO'
							WHEN caseType = 'CVPOR' THEN 'CVPO'
							WHEN caseType = 'CVPOS' THEN 'CVPO'
							WHEN caseType = 'CVPOT' THEN 'CVPO'
							WHEN caseType = 'QUTIR' THEN 'QUTI'
							WHEN caseType = 'QUTIS' THEN 'QUTI'
							WHEN caseType = 'QUTIT' THEN 'QUTI'
							WHEN caseType = 'SLANR' THEN 'SLAN'
							WHEN caseType = 'SLANS' THEN 'SLAN'
							WHEN caseType = 'SCCR' THEN 'SCC'
							WHEN caseType = 'SCCS' THEN 'SCC'
							WHEN caseType = 'SCCT' THEN 'SCC'
							WHEN caseType = 'SPPOR' THEN 'SPPO'
							WHEN caseType = 'SPPOS' THEN 'SPPO'
							WHEN caseType = 'SPPOT' THEN 'SPPO'
							WHEN caseType = 'TAXAR' THEN 'TAXA'
							WHEN caseType = 'TAXAS' THEN 'TAXA'
							WHEN caseType = 'TRODR' THEN 'TROD'
							WHEN caseType = 'TRODS' THEN 'TROD'
							WHEN caseType = 'TRODT' THEN 'TROD'
							WHEN caseType = 'CVTRR' THEN 'CVTR'
							WHEN caseType = 'CVTRS' THEN 'CVTR'
							WHEN caseType = 'TNPPR' THEN 'TNPP'
							WHEN caseType = 'TNPPS' THEN 'TNPP'
							WHEN caseType = 'TNPPT' THEN 'TNPP'
							WHEN caseType = 'TRMSR' THEN 'TRMS'
							WHEN caseType = 'TRMSS' THEN 'TRMS'
							WHEN caseType = 'TRMST' THEN 'TRMS'
							WHEN caseType = 'TREPS' THEN 'TREP'
							WHEN caseType = 'FUCCS' THEN 'FUCC'
							WHEN caseType = 'UIFFS' THEN 'UIFF'
							WHEN caseType = 'UNK' THEN 'UNK'
							WHEN caseType = 'UNKKS' THEN 'UNK'							
							WHEN caseType = 'FURRR' THEN 'FURR'
							WHEN caseType = 'FURRS' THEN 'FURR'
							WHEN caseType = 'FURRT' THEN 'FURR'
							WHEN caseType = 'URINR' THEN 'URIN'
							WHEN caseType = 'URINR' THEN 'URIN'
							WHEN caseType = 'URENS' THEN 'UREN'
							WHEN caseType = 'URENT' THEN 'UREN'
							WHEN caseType = 'FWSSR' THEN 'FWSS'
							WHEN caseType = 'FWSSS' THEN 'FWSS'
							WHEN caseType = 'FWSST' THEN 'FWSS'
							WHEN caseType = 'WRITS' THEN 'WRIT'
							WHEN caseType = 'WDDS' THEN 'WDD'
							WHEN caseType = 'WDDT' THEN 'WDD'
							WHEN caseType = 'ZADM' THEN 'ZADM'
							ELSE caseType
						end,
						location = 
						CASE
							WHEN RIGHT(caseType,1) = 'R' THEN 'ROT'
							WHEN RIGHT(caseType,1) = 'T' THEN 'TIN'
							WHEN RIGHT(caseType,1) = 'S' THEN 'SPN'
							ELSE NULL	
						END
						
						
						
						
						]]>
						
						
						</task>
						
					</source>
				</action>
				
	
					
				<action handler="SqlServer.Raw" desc="Update CaseNumber" progresslabel="Update CaseNumber" enabled="true">
					<source database="${sql.staging.db}" schema="dbo">
						
						
						<task handler="SqlServer.Script" desc="Update CaseNumber">
						<![CDATA[
						
						UPDATE cc
						SET caseNumber = sourceCaseNumber FROM cnmiStaging.dbo.case_conv cc
						INNER JOIN 
						(SELECT caseNumber FROM cnmiStaging.dbo.case_conv GROUP BY caseNumber HAVING count(1) > 1) t1
						ON cc.caseNumber = t1.caseNumber
						WHERE cc.caseGroup <> 'CR';
						
						UPDATE cnmiStaging.dbo.case_conv
						SET caseType =
						case
							WHEN convId = '13-14301' THEN 'CF'
							WHEN convId = '16-14501' THEN 'SD'
						END
						WHERE convID IN ('13-14301','16-14501');
						
						UPDATE cc
						SET Status = 'CL'
						FROM cnmiStaging.dbo.case_conv cc
						WHERE status = 'ZZZZZ'
										
							
						]]>
						
						</task>
						
					</source>
				</action>
			
	
			</actions>
		</stage>
	
			
		<stage num="21" mode="Serial" desc="Transform Case - Traffic Clearance" enabled="false">
			<actions>
			
				<action handler="SqlServer.Raw" desc="Creating Case_conv table" progresslabel="Creating Case Table" enabled="true">
					<source database="${sql.staging.db}" schema="dbo">
						<task handler="SqlServer.Script" desc="Create Case_conv table">
						IF OBJECT_ID('caseTR_conv', 'U') IS NOT NULL 
						DROP TABLE [dbo].[caseTR_conv];
						
						</task>
						
						<task handler="SqlServer.Script" desc="Create Case_Conv table">
						<![CDATA[
						
						CREATE TABLE [dbo].[caseTR_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 
							[id] [numeric](19, 0),
							caseNumber VARCHAR(255),
							caseType VARCHAR(255),
							caseName VARCHAR(255),
							tCase_id NUMERIC(19,0),
							filingDate datetime,
							firstName VARCHAR(255),
							middleName VARCHAR(255),
							lastName VARCHAR(255),
							nameSuffix VARCHAR(255),
							namePrefix VARCHAR(255),
							tSubCase_id NUMERIC(19,0),
							tPID NUMERIC(19,0),
							tPerson_id NUMERIC(19,0),
							tParty_id NUMERIC(19,0)
										
					
							);				
						]]>
						
						</task>
						
					</source>
				</action>
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform General Case">
					<source database="${sql.migrated.db}" schema="dbo"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							
						SELECT 
						'TCRP' as caseType,
						firstName,
						middleName,
						lastName,
						nameSuffix,
						namePrefix,
						caseNumber = CONCAT(RIGHT(TRY_CAST(YEAR(pr.dateCreated) as VARCHAR(255)),2), '-', pr.id, '-TCRP'),
						caseName = CONCAT('[',firstName, ' ', middleName, ' ' , lastName,']', ' Traffic Clearance Report'),
						filingDate = pr.dateCreated,
						* FROM ecourt.tPerson pr
						LEFT JOIN ecourt.tParty pty
						ON pr.id = pty.person_id
						WHERE pty.id IS NULL;
					
					
							
						]]>
							
							
					

						</param>				
					</params>
					<mappings>
						<mapping source="caseNumber" dest="caseNumber"/>
						<mapping source="caseName" dest="caseName"/>
						<mapping source="filingDate" dest="filingDate"/>
						<mapping source="caseType" dest="caseType"/>
						<mapping source="firstName" dest="firstName"/>
						<mapping source="middleName" dest="middleName"/>
						<mapping source="lastName" dest="lastName"/>
						<mapping source="nameSuffix" dest="nameSuffix"/>
						<mapping source="namePrefix" dest="namePrefix"/>
					</mappings>
					<destination database="${sql.staging.db}" schema="dbo" table="caseTR_conv"/>
				</action>

			
			</actions>
		</stage>
	
		
		<stage num="22" mode="Serial" desc="Transform SubCase" enabled="true">
			<actions>
			
				<action handler="SqlServer.Raw" desc="Creating subcase_conv table" progresslabel="Creating subcase_conv Table" enabled="true">
					<source database="${sql.staging.db}" schema="dbo">
						<task handler="SqlServer.Script" desc="Create subcase_conv table">
						IF OBJECT_ID('subcase_conv', 'U') IS NOT NULL 
						DROP TABLE [dbo].[subcase_conv];
						
						</task>
						
						<task handler="SqlServer.Script" desc="Create subcase_conv table">
						<![CDATA[
						
						CREATE TABLE [subcase_conv](
						idKey [NUMERIC] (19,0) IDENTITY, 
						[id] [numeric](19, 0)  NULL,
						[accessLevel] [int] NULL,
						[createUserRealName] [varchar](255) NULL,
						[createUsername] [varchar](255) NULL,
						[dateCreated] [datetime] NULL,
						[lastUpdateUserRealName] [varchar](255) NULL,
						[lastUpdateUsername] [varchar](255) NULL,
						[lastUpdated] [datetime] NULL,
						[memo] [varchar](7500) NULL,
						[optlock] [int] NOT NULL,
						[roaAccessLevel] [int] NULL,
						[sourceCaseNumber] [varchar](255) NULL,
						[updateReason] [varchar](255) NULL,
						[caseUnit] [varchar](255) NULL,
						[category] [varchar](255) NULL,
						[dateIncurred] [datetime] NULL,
						[dateOfMarriage] [datetime] NULL,
						[dateOfSeparation] [datetime] NULL,
						[demandAmount] [float] NULL,
						[demandAmountType] [varchar](255) NULL,
						[dispositionDate] [datetime] NULL,
						[dispositionManner] [varchar](255) NULL,
						[dispositionType] [varchar](255) NULL,
						[dmvDocketId] [varchar](255) NULL,
						[documentAccessLevel] [int] NULL,
						[does] [varchar](255) NULL,
						[efmReferenceId] [varchar](255) NULL,
						[exemption] [varchar](255) NULL,
						[filingAgency] [varchar](255) NULL,
						[filingDate] [datetime] NULL,
						[filingType] [varchar](255) NULL,
						[hearingRequestedDate] [datetime] NULL,
						[heldToAnswerDate] [datetime] NULL,
						[indianChildWelfare] [varchar](255) NULL,
						[interstateCompact] [varchar](255) NULL,
						[jurisdictionalAmount] [varchar](255) NULL,
						[location] [varchar](255) NULL,
						[locationAddress1] [varchar](255) NULL,
						[locationAddress2] [varchar](255) NULL,
						[locationCity] [varchar](255) NULL,
						[locationState] [varchar](255) NULL,
						[locationZip] [varchar](255) NULL,
						[otherCaseNumber] [varchar](255) NULL,
						[otherCaseNumberType] [varchar](255) NULL,
						[ownersResponsibility] [varchar](255) NULL,
						[paternityFiling] [varchar](255) NULL,
						[referenceNumber] [varchar](255) NULL,
						[roes] [varchar](255) NULL,
						[shortName] [varchar](255) NULL,
						[status] [varchar](255) NULL,
						[statusDate] [datetime] NULL,
						[subCaseName] [varchar](255) NULL,
						[subCaseNumber] [varchar](255) NULL,
						[subCaseReason] [varchar](255) NULL,
						[subCaseSource] [varchar](255) NULL,
						[subCaseType] [varchar](255) NULL,
						[terminationDate] [datetime] NULL,
						[terminationType] [varchar](255) NULL,
						[violationDate] [datetime] NULL,
						[case_id] [numeric](19, 0) NOT NULL,
						[receivedDate] [datetime] NULL,
						[efmMoreThan12Claims] [tinyint] NULL,
						[originalVerdictDate] [datetime] NULL,
						tSubCase_id NUMERIC(19,0),
						convSubCaseType VARCHAR(255),
						caseNumber VARCHAR(255),
						caseGroup VARCHAR(255)
						
							);				
						]]>
						
						</task>
						
					</source>
				</action>
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform SubCase">
					<source database="${sql.migrated.db}" schema="dbo"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	

							SELECT  sc.[id]
						,sc.[accessLevel]
						,sc.[createUserRealName]
						,sc.[createUsername]
						,sc.[dateCreated]
						,sc.[lastUpdateUserRealName]
						,sc.[lastUpdateUsername]
						,sc.[lastUpdated]
						,sc.[memo]
						,sc.[optlock]
						,sc.[roaAccessLevel]
						,sc.[sourceCaseNumber]
						,sc.[updateReason]
						,sc.[caseUnit]
						,sc.[category]
						,sc.[dateIncurred]
						,sc.[dateOfMarriage]
						,sc.[dateOfSeparation]
						,sc.[demandAmount]
						,sc.[demandAmountType]
						,sc.[dispositionDate]
						,sc.[dispositionManner]
						,sc.[dispositionType]
						,sc.[dmvDocketId]
						,sc.[documentAccessLevel]
						,sc.[does]
						,sc.[efmReferenceId]
						,sc.[exemption]
						,sc.[filingAgency]
						,sc.[filingDate]
						,sc.[filingType]
						,sc.[hearingRequestedDate]
						,sc.[heldToAnswerDate]
						,sc.[indianChildWelfare]
						,sc.[interstateCompact]
						,sc.[jurisdictionalAmount]
						,sc.[location]
						,sc.[locationAddress1]
						,sc.[locationAddress2]
						,sc.[locationCity]
						,sc.[locationState]
						,sc.[locationZip]
						,sc.[otherCaseNumber]
						,sc.[otherCaseNumberType]
						,sc.[ownersResponsibility]
						,sc.[paternityFiling]
						,sc.[referenceNumber]
						,sc.[roes]
						,sc.[shortName]
						,sc.[status]
						,sc.[statusDate]
						,sc.[subCaseName]
						,sc.[subCaseNumber]
						,sc.[subCaseReason]
						,sc.[subCaseSource]
						,sc.[subCaseType]
						,sc.[terminationDate]
						,sc.[terminationType]
						,sc.[violationDate]
						,sc.[case_id]
						,sc.[receivedDate]
						,sc.[efmMoreThan12Claims]
						,sc.[originalVerdictDate]
						,convSubCaseType = 'MAIN'
						,cs.caseNumber 
						FROM [ecourt].[tSubCase] sc
						INNER JOIN cnmiStaging.dbo.convertCases_conv cc
						ON sc.case_id = cc.case_id
						INNER JOIN
						(SELECT MIN(id) id  FROM ecourt.tSubCase sc GROUP BY case_id) t1
						ON sc.id = t1.id
						LEFT JOIN cnmiStaging.dbo.case_conv CS
						ON sc.case_id = cs.id
						
							
						]]>
						</param>
					</params>
					<mappings>
						<mapping source="id" dest="id"/>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="caseUnit" dest="caseUnit"/>
						<mapping source="category" dest="category"/>
						<mapping source="dateIncurred" dest="dateIncurred"/>
						<mapping source="dateOfMarriage" dest="dateOfMarriage"/>
						<mapping source="dateOfSeparation" dest="dateOfSeparation"/>
						<mapping source="demandAmount" dest="demandAmount"/>
						<mapping source="demandAmountType" dest="demandAmountType"/>
						<mapping source="dispositionDate" dest="dispositionDate"/>
						<mapping source="dispositionManner" dest="dispositionManner"/>
						<mapping source="dispositionType" dest="dispositionType"/>
						<mapping source="dmvDocketId" dest="dmvDocketId"/>
						<mapping source="documentAccessLevel" dest="documentAccessLevel"/>
						<mapping source="does" dest="does"/>
						<mapping source="efmReferenceId" dest="efmReferenceId"/>
						<mapping source="exemption" dest="exemption"/>
						<mapping source="filingAgency" dest="filingAgency"/>
						<mapping source="filingDate" dest="filingDate"/>
						<mapping source="filingType" dest="filingType"/>
						<mapping source="hearingRequestedDate" dest="hearingRequestedDate"/>
						<mapping source="heldToAnswerDate" dest="heldToAnswerDate"/>
						<mapping source="indianChildWelfare" dest="indianChildWelfare"/>
						<mapping source="interstateCompact" dest="interstateCompact"/>
						<mapping source="jurisdictionalAmount" dest="jurisdictionalAmount"/>
						<mapping source="location" dest="location"/>
						<mapping source="locationAddress1" dest="locationAddress1"/>
						<mapping source="locationAddress2" dest="locationAddress2"/>
						<mapping source="locationCity" dest="locationCity"/>
						<mapping source="locationState" dest="locationState"/>
						<mapping source="locationZip" dest="locationZip"/>
						<mapping source="otherCaseNumber" dest="otherCaseNumber"/>
						<mapping source="otherCaseNumberType" dest="otherCaseNumberType"/>
						<mapping source="ownersResponsibility" dest="ownersResponsibility"/>
						<mapping source="paternityFiling" dest="paternityFiling"/>
						<mapping source="referenceNumber" dest="referenceNumber"/>
						<mapping source="roes" dest="roes"/>
						<mapping source="shortName" dest="shortName"/>
						<mapping source="status" dest="status"/>
						<mapping source="statusDate" dest="statusDate"/>
						<mapping source="subCaseName" dest="subCaseName"/>
						<mapping source="subCaseNumber" dest="subCaseNumber"/>
						<mapping source="subCaseReason" dest="subCaseReason"/>
						<mapping source="subCaseSource" dest="subCaseSource"/>
						<mapping source="subCaseType" dest="subCaseType"/>
						<mapping source="terminationDate" dest="terminationDate"/>
						<mapping source="terminationType" dest="terminationType"/>
						<mapping source="violationDate" dest="violationDate"/>
						<mapping source="case_id" dest="case_id"/>
						<mapping source="receivedDate" dest="receivedDate"/>
						<mapping source="efmMoreThan12Claims" dest="efmMoreThan12Claims"/>
						<mapping source="originalVerdictDate" dest="originalVerdictDate"/>
						<mapping source="convSubCaseType" dest="convSubCaseType"/>
						<mapping source="caseNumber" dest="caseNumber"/>
					</mappings>
					<destination database="${sql.staging.db}" schema="dbo" table="subCase_conv"/>
				</action>

				
				
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform SubCase - Cross Parties">
					<source database="${sql.migrated.db}" schema="dbo"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	

							SELECT  sc.[id]
						,[accessLevel]
						,[createUserRealName]
						,[createUsername]
						,[dateCreated]
						,[lastUpdateUserRealName]
						,[lastUpdateUsername]
						,[lastUpdated]
						,[memo]
						,[optlock]
						,[roaAccessLevel]
						,[sourceCaseNumber]
						,[updateReason]
						,[caseUnit]
						,[category]
						,[dateIncurred]
						,[dateOfMarriage]
						,[dateOfSeparation]
						,[demandAmount]
						,[demandAmountType]
						,[dispositionDate]
						,[dispositionManner]
						,[dispositionType]
						,[dmvDocketId]
						,[documentAccessLevel]
						,[does]
						,[efmReferenceId]
						,[exemption]
						,[filingAgency]
						,[filingDate]
						,[filingType]
						,[hearingRequestedDate]
						,[heldToAnswerDate]
						,[indianChildWelfare]
						,[interstateCompact]
						,[jurisdictionalAmount]
						,[location]
						,[locationAddress1]
						,[locationAddress2]
						,[locationCity]
						,[locationState]
						,[locationZip]
						,[otherCaseNumber]
						,[otherCaseNumberType]
						,[ownersResponsibility]
						,[paternityFiling]
						,[referenceNumber]
						,[roes]
						,[shortName]
						,[status]
						,[statusDate]
						,[subCaseName]
						,[subCaseNumber]
						,[subCaseReason]
						,[subCaseSource]
						,[subCaseType]
						,[terminationDate]
						,[terminationType]
						,[violationDate]
						,sc.[case_id]
						,[receivedDate]
						,[efmMoreThan12Claims]
						,[originalVerdictDate]
						,convSubCaseType = 'CROSS'
						,cc.caseNumber
						FROM  cnmiStaging.dbo.subcase_conv sc
						INNER JOIN cnmiStaging.dbo.convertCases_conv cc
						ON sc.case_id = cc.case_id
						INNER JOIN
						(SELECT case_id  FROM ecourt.tParty WHERE partyType IN ('DEFT5', 'PLTF5', 'SCDCA', 'SCDAC', 'SCI10', 'SCI11', 'SCPAC', 'SCPCA') GROUP BY case_id) t1
						ON sc.case_id = t1.case_id
						WHERE cc.caseGroup = 'CV'
						
						
							
						]]>
						</param>
					</params>
					<mappings>
						<mapping source="id" dest="id"/>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="caseUnit" dest="caseUnit"/>
						<mapping source="category" dest="category"/>
						<mapping source="dateIncurred" dest="dateIncurred"/>
						<mapping source="dateOfMarriage" dest="dateOfMarriage"/>
						<mapping source="dateOfSeparation" dest="dateOfSeparation"/>
						<mapping source="demandAmount" dest="demandAmount"/>
						<mapping source="demandAmountType" dest="demandAmountType"/>
						<mapping source="dispositionDate" dest="dispositionDate"/>
						<mapping source="dispositionManner" dest="dispositionManner"/>
						<mapping source="dispositionType" dest="dispositionType"/>
						<mapping source="dmvDocketId" dest="dmvDocketId"/>
						<mapping source="documentAccessLevel" dest="documentAccessLevel"/>
						<mapping source="does" dest="does"/>
						<mapping source="efmReferenceId" dest="efmReferenceId"/>
						<mapping source="exemption" dest="exemption"/>
						<mapping source="filingAgency" dest="filingAgency"/>
						<mapping source="filingDate" dest="filingDate"/>
						<mapping source="filingType" dest="filingType"/>
						<mapping source="hearingRequestedDate" dest="hearingRequestedDate"/>
						<mapping source="heldToAnswerDate" dest="heldToAnswerDate"/>
						<mapping source="indianChildWelfare" dest="indianChildWelfare"/>
						<mapping source="interstateCompact" dest="interstateCompact"/>
						<mapping source="jurisdictionalAmount" dest="jurisdictionalAmount"/>
						<mapping source="location" dest="location"/>
						<mapping source="locationAddress1" dest="locationAddress1"/>
						<mapping source="locationAddress2" dest="locationAddress2"/>
						<mapping source="locationCity" dest="locationCity"/>
						<mapping source="locationState" dest="locationState"/>
						<mapping source="locationZip" dest="locationZip"/>
						<mapping source="otherCaseNumber" dest="otherCaseNumber"/>
						<mapping source="otherCaseNumberType" dest="otherCaseNumberType"/>
						<mapping source="ownersResponsibility" dest="ownersResponsibility"/>
						<mapping source="paternityFiling" dest="paternityFiling"/>
						<mapping source="referenceNumber" dest="referenceNumber"/>
						<mapping source="roes" dest="roes"/>
						<mapping source="shortName" dest="shortName"/>
						<mapping source="status" dest="status"/>
						<mapping source="statusDate" dest="statusDate"/>
						<mapping source="subCaseName" dest="subCaseName"/>
						<mapping source="subCaseNumber" dest="subCaseNumber"/>
						<mapping source="subCaseReason" dest="subCaseReason"/>
						<mapping source="subCaseSource" dest="subCaseSource"/>
						<mapping source="subCaseType" dest="subCaseType"/>
						<mapping source="terminationDate" dest="terminationDate"/>
						<mapping source="terminationType" dest="terminationType"/>
						<mapping source="violationDate" dest="violationDate"/>
						<mapping source="case_id" dest="case_id"/>
						<mapping source="receivedDate" dest="receivedDate"/>
						<mapping source="efmMoreThan12Claims" dest="efmMoreThan12Claims"/>
						<mapping source="originalVerdictDate" dest="originalVerdictDate"/>
						<mapping source="convSubCaseType" dest="convSubCaseType"/>
						<mapping source="caseNumber" dest="caseNumber"/>
					</mappings>
					<destination database="${sql.staging.db}" schema="dbo" table="subCase_conv"/>
				</action>

							
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform SubCase - Counter Parties">
					<source database="${sql.migrated.db}" schema="dbo"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	

							SELECT  sc.[id]
						,[accessLevel]
						,[createUserRealName]
						,[createUsername]
						,[dateCreated]
						,[lastUpdateUserRealName]
						,[lastUpdateUsername]
						,[lastUpdated]
						,[memo]
						,[optlock]
						,[roaAccessLevel]
						,[sourceCaseNumber]
						,[updateReason]
						,[caseUnit]
						,[category]
						,[dateIncurred]
						,[dateOfMarriage]
						,[dateOfSeparation]
						,[demandAmount]
						,[demandAmountType]
						,[dispositionDate]
						,[dispositionManner]
						,[dispositionType]
						,[dmvDocketId]
						,[documentAccessLevel]
						,[does]
						,[efmReferenceId]
						,[exemption]
						,[filingAgency]
						,[filingDate]
						,[filingType]
						,[hearingRequestedDate]
						,[heldToAnswerDate]
						,[indianChildWelfare]
						,[interstateCompact]
						,[jurisdictionalAmount]
						,[location]
						,[locationAddress1]
						,[locationAddress2]
						,[locationCity]
						,[locationState]
						,[locationZip]
						,[otherCaseNumber]
						,[otherCaseNumberType]
						,[ownersResponsibility]
						,[paternityFiling]
						,[referenceNumber]
						,[roes]
						,[shortName]
						,[status]
						,[statusDate]
						,[subCaseName]
						,[subCaseNumber]
						,[subCaseReason]
						,[subCaseSource]
						,[subCaseType]
						,[terminationDate]
						,[terminationType]
						,[violationDate]
						,sc.[case_id]
						,[receivedDate]
						,[efmMoreThan12Claims]
						,[originalVerdictDate],
						convSubCaseType = 'COUNTER'
						,cc.caseNumber
						FROM cnmiStaging.dbo.subcase_conv sc
						INNER JOIN cnmiStaging.dbo.convertCases_conv cc
						ON sc.case_id = cc.case_id
						INNER JOIN
						(SELECT case_id  FROM ecourt.tParty WHERE partyType IN ('DEFT4', 'PLTF4') GROUP BY case_id) t1
						ON sc.case_id = t1.case_id
						WHERE cc.caseGroup = 'CV'
						
						
							
						]]>
						</param>
					</params>
					<mappings>
						<mapping source="id" dest="id"/>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="caseUnit" dest="caseUnit"/>
						<mapping source="category" dest="category"/>
						<mapping source="dateIncurred" dest="dateIncurred"/>
						<mapping source="dateOfMarriage" dest="dateOfMarriage"/>
						<mapping source="dateOfSeparation" dest="dateOfSeparation"/>
						<mapping source="demandAmount" dest="demandAmount"/>
						<mapping source="demandAmountType" dest="demandAmountType"/>
						<mapping source="dispositionDate" dest="dispositionDate"/>
						<mapping source="dispositionManner" dest="dispositionManner"/>
						<mapping source="dispositionType" dest="dispositionType"/>
						<mapping source="dmvDocketId" dest="dmvDocketId"/>
						<mapping source="documentAccessLevel" dest="documentAccessLevel"/>
						<mapping source="does" dest="does"/>
						<mapping source="efmReferenceId" dest="efmReferenceId"/>
						<mapping source="exemption" dest="exemption"/>
						<mapping source="filingAgency" dest="filingAgency"/>
						<mapping source="filingDate" dest="filingDate"/>
						<mapping source="filingType" dest="filingType"/>
						<mapping source="hearingRequestedDate" dest="hearingRequestedDate"/>
						<mapping source="heldToAnswerDate" dest="heldToAnswerDate"/>
						<mapping source="indianChildWelfare" dest="indianChildWelfare"/>
						<mapping source="interstateCompact" dest="interstateCompact"/>
						<mapping source="jurisdictionalAmount" dest="jurisdictionalAmount"/>
						<mapping source="location" dest="location"/>
						<mapping source="locationAddress1" dest="locationAddress1"/>
						<mapping source="locationAddress2" dest="locationAddress2"/>
						<mapping source="locationCity" dest="locationCity"/>
						<mapping source="locationState" dest="locationState"/>
						<mapping source="locationZip" dest="locationZip"/>
						<mapping source="otherCaseNumber" dest="otherCaseNumber"/>
						<mapping source="otherCaseNumberType" dest="otherCaseNumberType"/>
						<mapping source="ownersResponsibility" dest="ownersResponsibility"/>
						<mapping source="paternityFiling" dest="paternityFiling"/>
						<mapping source="referenceNumber" dest="referenceNumber"/>
						<mapping source="roes" dest="roes"/>
						<mapping source="shortName" dest="shortName"/>
						<mapping source="status" dest="status"/>
						<mapping source="statusDate" dest="statusDate"/>
						<mapping source="subCaseName" dest="subCaseName"/>
						<mapping source="subCaseNumber" dest="subCaseNumber"/>
						<mapping source="subCaseReason" dest="subCaseReason"/>
						<mapping source="subCaseSource" dest="subCaseSource"/>
						<mapping source="subCaseType" dest="subCaseType"/>
						<mapping source="terminationDate" dest="terminationDate"/>
						<mapping source="terminationType" dest="terminationType"/>
						<mapping source="violationDate" dest="violationDate"/>
						<mapping source="case_id" dest="case_id"/>
						<mapping source="receivedDate" dest="receivedDate"/>
						<mapping source="efmMoreThan12Claims" dest="efmMoreThan12Claims"/>
						<mapping source="originalVerdictDate" dest="originalVerdictDate"/>
						<mapping source="convSubCaseType" dest="convSubCaseType"/>
						<mapping source="caseNumber" dest="caseNumber"/>
					</mappings>
					<destination database="${sql.staging.db}" schema="dbo" table="subCase_conv"/>
				</action>

								
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform SubCase - TP Parties">
					<source database="${sql.migrated.db}" schema="dbo"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	

							SELECT  sc.[id]
						,[accessLevel]
						,[createUserRealName]
						,[createUsername]
						,[dateCreated]
						,[lastUpdateUserRealName]
						,[lastUpdateUsername]
						,[lastUpdated]
						,[memo]
						,[optlock]
						,[roaAccessLevel]
						,[sourceCaseNumber]
						,[updateReason]
						,[caseUnit]
						,[category]
						,[dateIncurred]
						,[dateOfMarriage]
						,[dateOfSeparation]
						,[demandAmount]
						,[demandAmountType]
						,[dispositionDate]
						,[dispositionManner]
						,[dispositionType]
						,[dmvDocketId]
						,[documentAccessLevel]
						,[does]
						,[efmReferenceId]
						,[exemption]
						,[filingAgency]
						,[filingDate]
						,[filingType]
						,[hearingRequestedDate]
						,[heldToAnswerDate]
						,[indianChildWelfare]
						,[interstateCompact]
						,[jurisdictionalAmount]
						,[location]
						,[locationAddress1]
						,[locationAddress2]
						,[locationCity]
						,[locationState]
						,[locationZip]
						,[otherCaseNumber]
						,[otherCaseNumberType]
						,[ownersResponsibility]
						,[paternityFiling]
						,[referenceNumber]
						,[roes]
						,[shortName]
						,[status]
						,[statusDate]
						,[subCaseName]
						,[subCaseNumber]
						,[subCaseReason]
						,[subCaseSource]
						,[subCaseType]
						,[terminationDate]
						,[terminationType]
						,[violationDate]
						,sc.[case_id]
						,[receivedDate]
						,[efmMoreThan12Claims]
						,[originalVerdictDate]
						,convSubCaseType = 'TP'
						,cc.caseNumber
						FROM  cnmiStaging.dbo.subcase_conv sc
						INNER JOIN cnmiStaging.dbo.convertCases_conv cc
						ON sc.case_id = cc.case_id
						INNER JOIN
						(SELECT case_id  FROM ecourt.tParty WHERE partyType IN ('DEFT3', 'PLTF3') GROUP BY case_id) t1
						ON sc.case_id = t1.case_id
						WHERE cc.caseGroup = 'CV'
						
						
							
						]]>
						</param>
					</params>
					<mappings>
						<mapping source="id" dest="id"/>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="caseUnit" dest="caseUnit"/>
						<mapping source="category" dest="category"/>
						<mapping source="dateIncurred" dest="dateIncurred"/>
						<mapping source="dateOfMarriage" dest="dateOfMarriage"/>
						<mapping source="dateOfSeparation" dest="dateOfSeparation"/>
						<mapping source="demandAmount" dest="demandAmount"/>
						<mapping source="demandAmountType" dest="demandAmountType"/>
						<mapping source="dispositionDate" dest="dispositionDate"/>
						<mapping source="dispositionManner" dest="dispositionManner"/>
						<mapping source="dispositionType" dest="dispositionType"/>
						<mapping source="dmvDocketId" dest="dmvDocketId"/>
						<mapping source="documentAccessLevel" dest="documentAccessLevel"/>
						<mapping source="does" dest="does"/>
						<mapping source="efmReferenceId" dest="efmReferenceId"/>
						<mapping source="exemption" dest="exemption"/>
						<mapping source="filingAgency" dest="filingAgency"/>
						<mapping source="filingDate" dest="filingDate"/>
						<mapping source="filingType" dest="filingType"/>
						<mapping source="hearingRequestedDate" dest="hearingRequestedDate"/>
						<mapping source="heldToAnswerDate" dest="heldToAnswerDate"/>
						<mapping source="indianChildWelfare" dest="indianChildWelfare"/>
						<mapping source="interstateCompact" dest="interstateCompact"/>
						<mapping source="jurisdictionalAmount" dest="jurisdictionalAmount"/>
						<mapping source="location" dest="location"/>
						<mapping source="locationAddress1" dest="locationAddress1"/>
						<mapping source="locationAddress2" dest="locationAddress2"/>
						<mapping source="locationCity" dest="locationCity"/>
						<mapping source="locationState" dest="locationState"/>
						<mapping source="locationZip" dest="locationZip"/>
						<mapping source="otherCaseNumber" dest="otherCaseNumber"/>
						<mapping source="otherCaseNumberType" dest="otherCaseNumberType"/>
						<mapping source="ownersResponsibility" dest="ownersResponsibility"/>
						<mapping source="paternityFiling" dest="paternityFiling"/>
						<mapping source="referenceNumber" dest="referenceNumber"/>
						<mapping source="roes" dest="roes"/>
						<mapping source="shortName" dest="shortName"/>
						<mapping source="status" dest="status"/>
						<mapping source="statusDate" dest="statusDate"/>
						<mapping source="subCaseName" dest="subCaseName"/>
						<mapping source="subCaseNumber" dest="subCaseNumber"/>
						<mapping source="subCaseReason" dest="subCaseReason"/>
						<mapping source="subCaseSource" dest="subCaseSource"/>
						<mapping source="subCaseType" dest="subCaseType"/>
						<mapping source="terminationDate" dest="terminationDate"/>
						<mapping source="terminationType" dest="terminationType"/>
						<mapping source="violationDate" dest="violationDate"/>
						<mapping source="case_id" dest="case_id"/>
						<mapping source="receivedDate" dest="receivedDate"/>
						<mapping source="efmMoreThan12Claims" dest="efmMoreThan12Claims"/>
						<mapping source="originalVerdictDate" dest="originalVerdictDate"/>
						<mapping source="convSubCaseType" dest="convSubCaseType"/>
						<mapping source="caseNumber" dest="caseNumber"/>
					</mappings>
					<destination database="${sql.staging.db}" schema="dbo" table="subCase_conv"/>
				</action>

					
			
				

			</actions>
		</stage>
	
					
		<stage num="24" mode="Serial" desc="Transform Person/Party" enabled="true">
			<actions>
			
				<action handler="SqlServer.Raw" desc="Creating subcase_conv table" progresslabel="Creating person_conv Table" enabled="true">
					<source database="${sql.staging.db}" schema="dbo">
						<task handler="SqlServer.Script" desc="Create subcase_conv table">
						IF OBJECT_ID('person_conv', 'U') IS NOT NULL 
						DROP TABLE [dbo].[person_conv];
						
						IF OBJECT_ID('party_conv', 'U') IS NOT NULL 
						DROP TABLE [dbo].[party_conv];
						</task>
						
						<task handler="SqlServer.Script" desc="Create subcase_conv table">
						<![CDATA[
						
						CREATE TABLE [person_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 
							id NUMERIC(19,0),
							[accessLevel] [int] NULL,
							[createUserRealName] [varchar](255) NULL,
							[createUsername] [varchar](255) NULL,
							[dateCreated] [datetime] NULL,
							[lastUpdateUserRealName] [varchar](255) NULL,
							[lastUpdateUsername] [varchar](255) NULL,
							[lastUpdated] [datetime] NULL,
							[memo] [varchar](512) NULL,
							[optlock] [int] NOT NULL,
							[roaAccessLevel] [int] NULL,
							[sourceCaseNumber] [varchar](255) NULL,
							[updateReason] [varchar](255) NULL,
							[addressAccessLevel] [int] NULL,
							[collectionAssignedDate] [datetime] NULL,
							[efmErroneouslySued] [tinyint] NULL,
							[efmExemptionType] [varchar](255) NULL,
							[efmFeeExemptionRequestType] [varchar](255) NULL,
							[efmFeeExemptionType] [varchar](255) NULL,
							[efmInterpreterLanguage] [varchar](255) NULL,
							[efmTrueName] [varchar](255) NULL,
							[efspFeeWaiverFiled] [tinyint] NULL,
							[efspFirstAppearancePaid] [tinyint] NULL,
							[efspGovernmentExempt] [tinyint] NULL,
							[electronicPinNumber] [varchar](255) NULL,
							[email] [varchar](255) NULL,
							[firstAppearancePaid] [tinyint] NULL,
							[firstName] [varchar](255) NULL,
							[governmentAgency] [tinyint] NULL,
							[jobTitle] [varchar](255) NULL,
							[lastName] [varchar](255) NULL,
							[lastName2] [varchar](255) NULL,
							[legalName] [varchar](255) NULL,
							[middleName] [varchar](255) NULL,
							[nameExact] [varchar](255) NULL,
							[nameExtension] [varchar](255) NULL,
							[namePrefix] [varchar](255) NULL,
							[nameSuffix] [varchar](255) NULL,
							[organization] [tinyint] NULL,
							[organizationName] [varchar](255) NULL,
							[organizationSuffix] [varchar](255) NULL,
							[personCode] [varchar](255) NULL,
							[personId] [numeric](19, 0) NULL,
							[personSource] [varchar](255) NULL,
							[personSubType] [varchar](255) NULL,
							[personType] [varchar](255) NULL,
							[pinNumber] [varchar](255) NULL,
							[searchableInitials] [varchar](255) NULL,
							[status] [varchar](255) NULL,
							[statusDate] [datetime] NULL,
							[collectionAgency_id] [numeric](19, 0) NULL,
							[mergedToPerson_id] [numeric](19, 0) NULL,
							[personIdentifier_id] [numeric](19, 0)  NULL,
							[convId] [int] NULL,
							[efspEService] [tinyint] NULL,
							[efspEmail] [varchar](255) NULL,
							[electronicService] [tinyint] NULL,
							[eftAccountName] [varchar](255) NULL,
							[eftAccountNo] [varchar](255) NULL,
							[eftRoutingNo] [varchar](255) NULL,
							tPID NUMERIC(19,0),
							tPerson_id NUMERIC(19,0),
							case_id NUMERIC(19,0),
							caseNumber VARCHAR(255),
							partyTypeFlg NUMERIC(19,0),
							caseNumberTR VARCHAR(255),
							tCaseTR_id NUMERIC(19,0),
							tSubCaseTR_id NUMERIC(19,0),
							tPartyTR_id NUMERIC(19,0),
							caseNameTR VARCHAR(255),
							filingDateTR datetime,
							caseTypeTR VARCHAR(255),
							fileNames VARCHAR(5000)
							
							);				
							
							CREATE TABLE [party_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 
							[id] [numeric](19, 0) NULL,
							[accessLevel] [int] NULL,
							[createUserRealName] [varchar](255) NULL,
							[createUsername] [varchar](255) NULL,
							[dateCreated] [datetime] NULL,
							[lastUpdateUserRealName] [varchar](255) NULL,
							[lastUpdateUsername] [varchar](255) NULL,
							[lastUpdated] [datetime] NULL,
							[memo] [varchar](512) NULL,
							[optlock] [int] NOT NULL,
							[roaAccessLevel] [int] NULL,
							[sourceCaseNumber] [varchar](255) NULL,
							[updateReason] [varchar](255) NULL,
							[allowPublicAccess] [tinyint] NULL,
							[cmsReferenceId] [varchar](255) NULL,
							[crsExemptOverride] [tinyint] NULL,
							[dispositionDate] [datetime] NULL,
							[dispositionManner] [varchar](255) NULL,
							[dispositionType] [varchar](255) NULL,
							[efmReferenceId] [varchar](255) NULL,
							[endDate] [datetime] NULL,
							[exemptEligible] [varchar](255) NULL,
							[formerRepresentationText] [varchar](255) NULL,
							[nonMonApplication] [varchar](255) NOT NULL,
							[partyDesignationType] [varchar](255) NULL,
							[partyNumber] [varchar](255) NULL,
							[partySource] [varchar](255) NULL,
							[partySubType] [varchar](255) NULL,
							[partyType] [varchar](255) NULL,
							[representationText] [varchar](255) NULL,
							[representingPartyType] [varchar](255) NULL,
							[selfRepresented] [varchar](255) NULL,
							[startDate] [datetime] NULL,
							[status] [varchar](255) NULL,
							[statusDate] [datetime] NULL,
							[stayDate] [datetime] NULL,
							[stayEndDate] [datetime] NULL,
							[stayStatus] [varchar](255) NULL,
							[case_id] [numeric](19, 0) NOT NULL,
							[exportBatch_id] [numeric](19, 0) NULL,
							[exportCompletedBatch_id] [numeric](19, 0) NULL,
							[exportFailedBatch_id] [numeric](19, 0) NULL,
							[person_id] [numeric](19, 0) NOT NULL,
							[subCase_id] [numeric](19, 0) NULL,
							[convId] [int] NULL,
							[flag1] [tinyint] NULL,
							[flag2] [tinyint] NULL,
							[flag3] [tinyint] NULL,
							[flag4] [tinyint] NULL,
							[flag5] [tinyint] NULL,
							[notes] [varchar](7500) NULL,
							[notification] [tinyint] NULL,
							[dirOrgUnit_id] [numeric](19, 0) NULL,
							[eventInvPersConvId] [int] NULL,
							tParty_id NUMERIC(19,0),
							charges VARCHAR(255),
							caseNumber VARCHAR(255),
							caseKey NUMERIC(19,0)
							);
							
						]]>
						
						</task>
						
					</source>
				</action>
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Person">
					<source database="${sql.migrated.db}" schema="dbo"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	

						SELECT pr.*, pty.case_id, cc.caseNumber,
						partyTypeFlg =
						CASE
							WHEN partyType LIKE ('%AMDMI%') THEN 1
							WHEN partyType LIKE ('%APCA%') THEN 1
							WHEN partyType LIKE ('%APCAT%') THEN 1
							WHEN partyType LIKE ('%ATPT%') THEN 1
							WHEN partyType LIKE ('%ATRP%') THEN 1
							WHEN partyType LIKE ('%ATRPI%') THEN 1
							WHEN partyType LIKE ('%ATTY%') THEN 1
							WHEN partyType LIKE ('%ETHPR%') THEN 1
							WHEN partyType LIKE ('%EventAssignment%') THEN 1
							WHEN partyType LIKE ('%PA%') THEN 1
							ELSE 0
						END
						FROM ecourt.tPerson pr
						LEFT JOIN (SELECT pty.case_id, pty.person_id, STRING_AGG(chg.id,',') as charges, STRING_AGG(partyType,',') partyType FROM ecourt.tParty pty 
									LEFT JOIN ecourt.tCharge chg 
									ON pty.id = chg.associatedParty_id
									GROUP BY pty.case_id, pty.person_id ) pty
						ON pr.id = pty.person_id
						LEFT JOIN cnmiStaging.dbo.case_conv cc
						ON pty.case_id = cc.id
						WHERE charges IS NULL or cc.person_id IS NULL
						



						
							
						]]>

						</param>				
					</params>
					<mappings>
						<mapping source="id" dest="id"/>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="addressAccessLevel" dest="addressAccessLevel"/>
						<mapping source="collectionAssignedDate" dest="collectionAssignedDate"/>
						<mapping source="efmErroneouslySued" dest="efmErroneouslySued"/>
						<mapping source="efmExemptionType" dest="efmExemptionType"/>
						<mapping source="efmFeeExemptionRequestType" dest="efmFeeExemptionRequestType"/>
						<mapping source="efmFeeExemptionType" dest="efmFeeExemptionType"/>
						<mapping source="efmInterpreterLanguage" dest="efmInterpreterLanguage"/>
						<mapping source="efmTrueName" dest="efmTrueName"/>
						<mapping source="efspFeeWaiverFiled" dest="efspFeeWaiverFiled"/>
						<mapping source="efspFirstAppearancePaid" dest="efspFirstAppearancePaid"/>
						<mapping source="efspGovernmentExempt" dest="efspGovernmentExempt"/>
						<mapping source="electronicPinNumber" dest="electronicPinNumber"/>
						<mapping source="email" dest="email"/>
						<mapping source="firstAppearancePaid" dest="firstAppearancePaid"/>
						<mapping source="firstName" dest="firstName"/>
						<mapping source="governmentAgency" dest="governmentAgency"/>
						<mapping source="jobTitle" dest="jobTitle"/>
						<mapping source="lastName" dest="lastName"/>
						<mapping source="lastName2" dest="lastName2"/>
						<mapping source="legalName" dest="legalName"/>
						<mapping source="middleName" dest="middleName"/>
						<mapping source="nameExact" dest="nameExact"/>
						<mapping source="nameExtension" dest="nameExtension"/>
						<mapping source="namePrefix" dest="namePrefix"/>
						<mapping source="nameSuffix" dest="nameSuffix"/>
						<mapping source="organization" dest="organization"/>
						<mapping source="organizationName" dest="organizationName"/>
						<mapping source="organizationSuffix" dest="organizationSuffix"/>
						<mapping source="personCode" dest="personCode"/>
						<mapping source="personId" dest="personId"/>
						<mapping source="personSource" dest="personSource"/>
						<mapping source="personSubType" dest="personSubType"/>
						<mapping source="personType" dest="personType"/>
						<mapping source="pinNumber" dest="pinNumber"/>
						<mapping source="searchableInitials" dest="searchableInitials"/>
						<mapping source="status" dest="status"/>
						<mapping source="statusDate" dest="statusDate"/>
						<mapping source="collectionAgency_id" dest="collectionAgency_id"/>
						<mapping source="mergedToPerson_id" dest="mergedToPerson_id"/>
						<mapping source="personIdentifier_id" dest="personIdentifier_id"/>
						<mapping source="convId" dest="convId"/>
						<mapping source="efspEService" dest="efspEService"/>
						<mapping source="efspEmail" dest="efspEmail"/>
						<mapping source="electronicService" dest="electronicService"/>
						<mapping source="eftAccountName" dest="eftAccountName"/>
						<mapping source="eftAccountNo" dest="eftAccountNo"/>
						<mapping source="eftRoutingNo" dest="eftRoutingNo"/>						
						<mapping source="case_id" dest="case_id"/>						
						<mapping source="caseNumber" dest="caseNumber"/>
						<mapping source="partyTypeFlg" dest="partyTypeFlg"/>								
					</mappings>
					<destination database="${sql.staging.db}" schema="dbo" table="person_conv"/>
				</action>
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Person" enabled="true">
					<source database="${sql.migrated.db}" schema="dbo"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	

						SELECT pr.*, pty.case_id, cc.caseNumber,
						partyTypeFlg =
						CASE
							WHEN partyType LIKE ('%AMDMI%') THEN 1
							WHEN partyType LIKE ('%APCA%') THEN 1
							WHEN partyType LIKE ('%APCAT%') THEN 1
							WHEN partyType LIKE ('%ATPT%') THEN 1
							WHEN partyType LIKE ('%ATRP%') THEN 1
							WHEN partyType LIKE ('%ATRPI%') THEN 1
							WHEN partyType LIKE ('%ATTY%') THEN 1
							WHEN partyType LIKE ('%ETHPR%') THEN 1
							WHEN partyType LIKE ('%EventAssignment%') THEN 1
							WHEN partyType LIKE ('%PA%') THEN 1
							ELSE 0
						END
						FROM ecourt.tPerson pr
						INNER JOIN (SELECT pty.case_id, pty.person_id, STRING_AGG(partyType,',') partyType FROM ecourt.tParty pty 
									INNER JOIN ecourt.tCharge chg 
									ON pty.id = associatedParty_id
									GROUP BY pty.case_id, pty.person_id ) pty
						ON pr.id = pty.person_id
						LEFT JOIN cnmiStaging.dbo.case_conv cc
						ON pty.case_id = cc.id AND cc.person_id = pr.id
						WHERE cc.person_id IS NOT NULL
						



						
							
						]]>

						</param>				
					</params>
					<mappings>
						<mapping source="id" dest="id"/>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="addressAccessLevel" dest="addressAccessLevel"/>
						<mapping source="collectionAssignedDate" dest="collectionAssignedDate"/>
						<mapping source="efmErroneouslySued" dest="efmErroneouslySued"/>
						<mapping source="efmExemptionType" dest="efmExemptionType"/>
						<mapping source="efmFeeExemptionRequestType" dest="efmFeeExemptionRequestType"/>
						<mapping source="efmFeeExemptionType" dest="efmFeeExemptionType"/>
						<mapping source="efmInterpreterLanguage" dest="efmInterpreterLanguage"/>
						<mapping source="efmTrueName" dest="efmTrueName"/>
						<mapping source="efspFeeWaiverFiled" dest="efspFeeWaiverFiled"/>
						<mapping source="efspFirstAppearancePaid" dest="efspFirstAppearancePaid"/>
						<mapping source="efspGovernmentExempt" dest="efspGovernmentExempt"/>
						<mapping source="electronicPinNumber" dest="electronicPinNumber"/>
						<mapping source="email" dest="email"/>
						<mapping source="firstAppearancePaid" dest="firstAppearancePaid"/>
						<mapping source="firstName" dest="firstName"/>
						<mapping source="governmentAgency" dest="governmentAgency"/>
						<mapping source="jobTitle" dest="jobTitle"/>
						<mapping source="lastName" dest="lastName"/>
						<mapping source="lastName2" dest="lastName2"/>
						<mapping source="legalName" dest="legalName"/>
						<mapping source="middleName" dest="middleName"/>
						<mapping source="nameExact" dest="nameExact"/>
						<mapping source="nameExtension" dest="nameExtension"/>
						<mapping source="namePrefix" dest="namePrefix"/>
						<mapping source="nameSuffix" dest="nameSuffix"/>
						<mapping source="organization" dest="organization"/>
						<mapping source="organizationName" dest="organizationName"/>
						<mapping source="organizationSuffix" dest="organizationSuffix"/>
						<mapping source="personCode" dest="personCode"/>
						<mapping source="personId" dest="personId"/>
						<mapping source="personSource" dest="personSource"/>
						<mapping source="personSubType" dest="personSubType"/>
						<mapping source="personType" dest="personType"/>
						<mapping source="pinNumber" dest="pinNumber"/>
						<mapping source="searchableInitials" dest="searchableInitials"/>
						<mapping source="status" dest="status"/>
						<mapping source="statusDate" dest="statusDate"/>
						<mapping source="collectionAgency_id" dest="collectionAgency_id"/>
						<mapping source="mergedToPerson_id" dest="mergedToPerson_id"/>
						<mapping source="personIdentifier_id" dest="personIdentifier_id"/>
						<mapping source="convId" dest="convId"/>
						<mapping source="efspEService" dest="efspEService"/>
						<mapping source="efspEmail" dest="efspEmail"/>
						<mapping source="electronicService" dest="electronicService"/>
						<mapping source="eftAccountName" dest="eftAccountName"/>
						<mapping source="eftAccountNo" dest="eftAccountNo"/>
						<mapping source="eftRoutingNo" dest="eftRoutingNo"/>						
						<mapping source="case_id" dest="case_id"/>						
						<mapping source="caseNumber" dest="caseNumber"/>						
						<mapping source="partyTypeFlg" dest="partyTypeFlg"/>						
					</mappings>
					<destination database="${sql.staging.db}" schema="dbo" table="person_conv"/>
				</action>
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Party" enabled="true">
					<source database="${sql.migrated.db}" schema="dbo"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	

						SELECT pty.*, cc.CaseNumber, cc.idKey as caseKey
						FROM
						ecourt.tParty pty
						LEFT JOIN cnmiStaging.dbo.case_conv cc
						ON pty.case_id = cc.id
						LEFT JOIN (SELECT associatedParty_id, STRING_AGG(statute_id, ',') charges FROM ecourt.tCharge chg GROUP BY associatedParty_id) chg
						ON pty.id = chg.associatedParty_id
						WHERE --partyType NOT IN ('AMDMI', 'APCA', 'APCAT', 'ATPT', 'ATRP', 'ATRPI', 'ATTY', 'ETHPR', 'EventAssignment', 'PA')
						 (charges IS NULL or cc.person_id IS NULL)
						
							
						]]>

						</param>				
					</params>
					<mappings>
						<mapping source="id" dest="id"/>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="allowPublicAccess" dest="allowPublicAccess"/>
						<mapping source="cmsReferenceId" dest="cmsReferenceId"/>
						<mapping source="crsExemptOverride" dest="crsExemptOverride"/>
						<mapping source="dispositionDate" dest="dispositionDate"/>
						<mapping source="dispositionManner" dest="dispositionManner"/>
						<mapping source="dispositionType" dest="dispositionType"/>
						<mapping source="efmReferenceId" dest="efmReferenceId"/>
						<mapping source="endDate" dest="endDate"/>
						<mapping source="exemptEligible" dest="exemptEligible"/>
						<mapping source="formerRepresentationText" dest="formerRepresentationText"/>
						<mapping source="nonMonApplication" dest="nonMonApplication"/>
						<mapping source="partyDesignationType" dest="partyDesignationType"/>
						<mapping source="partyNumber" dest="partyNumber"/>
						<mapping source="partySource" dest="partySource"/>
						<mapping source="partySubType" dest="partySubType"/>
						<mapping source="partyType" dest="partyType"/>
						<mapping source="representationText" dest="representationText"/>
						<mapping source="representingPartyType" dest="representingPartyType"/>
						<mapping source="selfRepresented" dest="selfRepresented"/>
						<mapping source="startDate" dest="startDate"/>
						<mapping source="status" dest="status"/>
						<mapping source="statusDate" dest="statusDate"/>
						<mapping source="stayDate" dest="stayDate"/>
						<mapping source="stayEndDate" dest="stayEndDate"/>
						<mapping source="stayStatus" dest="stayStatus"/>
						<mapping source="case_id" dest="case_id"/>
						<mapping source="exportBatch_id" dest="exportBatch_id"/>
						<mapping source="exportCompletedBatch_id" dest="exportCompletedBatch_id"/>
						<mapping source="exportFailedBatch_id" dest="exportFailedBatch_id"/>
						<mapping source="person_id" dest="person_id"/>
						<mapping source="subCase_id" dest="subCase_id"/>
						<mapping source="convId" dest="convId"/>
						<mapping source="flag1" dest="flag1"/>
						<mapping source="flag2" dest="flag2"/>
						<mapping source="flag3" dest="flag3"/>
						<mapping source="flag4" dest="flag4"/>
						<mapping source="flag5" dest="flag5"/>
						<mapping source="notes" dest="notes"/>
						<mapping source="notification" dest="notification"/>
						<mapping source="dirOrgUnit_id" dest="dirOrgUnit_id"/>
						<mapping source="eventInvPersConvId" dest="eventInvPersConvId"/>
						<mapping source="caseNumber" dest="caseNumber"/>
						<mapping source="caseKey" dest="caseKey"/>
					</mappings>
					<destination database="${sql.staging.db}" schema="dbo" table="party_conv"/>
				</action>
				
					
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Party" enabled="true">
					<source database="${sql.migrated.db}" schema="dbo"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	

						SELECT pty.*, cc.CaseNumber, cc.idKey as caseKey
						FROM
						ecourt.tParty pty
						LEFT JOIN cnmiStaging.dbo.case_conv cc
						ON pty.case_id = cc.id AND cc.person_id = pty.person_id
						INNER JOIN (SELECT associatedParty_id, STRING_AGG(statute_id, ',') charges FROM ecourt.tCharge chg GROUP BY associatedParty_id) chg
						ON pty.id = chg.associatedParty_id
						WHERE 
						--partyType NOT IN ('AMDMI', 'APCA', 'APCAT', 'ATPT', 'ATRP', 'ATRPI', 'ATTY', 'ETHPR', 'EventAssignment', 'PA')
						 (charges IS NOT  NULL AND  cc.person_id IS NOT NULL)
						
							
						]]>

						</param>				
					</params>
					<mappings>
						<mapping source="id" dest="id"/>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="allowPublicAccess" dest="allowPublicAccess"/>
						<mapping source="cmsReferenceId" dest="cmsReferenceId"/>
						<mapping source="crsExemptOverride" dest="crsExemptOverride"/>
						<mapping source="dispositionDate" dest="dispositionDate"/>
						<mapping source="dispositionManner" dest="dispositionManner"/>
						<mapping source="dispositionType" dest="dispositionType"/>
						<mapping source="efmReferenceId" dest="efmReferenceId"/>
						<mapping source="endDate" dest="endDate"/>
						<mapping source="exemptEligible" dest="exemptEligible"/>
						<mapping source="formerRepresentationText" dest="formerRepresentationText"/>
						<mapping source="nonMonApplication" dest="nonMonApplication"/>
						<mapping source="partyDesignationType" dest="partyDesignationType"/>
						<mapping source="partyNumber" dest="partyNumber"/>
						<mapping source="partySource" dest="partySource"/>
						<mapping source="partySubType" dest="partySubType"/>
						<mapping source="partyType" dest="partyType"/>
						<mapping source="representationText" dest="representationText"/>
						<mapping source="representingPartyType" dest="representingPartyType"/>
						<mapping source="selfRepresented" dest="selfRepresented"/>
						<mapping source="startDate" dest="startDate"/>
						<mapping source="status" dest="status"/>
						<mapping source="statusDate" dest="statusDate"/>
						<mapping source="stayDate" dest="stayDate"/>
						<mapping source="stayEndDate" dest="stayEndDate"/>
						<mapping source="stayStatus" dest="stayStatus"/>
						<mapping source="case_id" dest="case_id"/>
						<mapping source="exportBatch_id" dest="exportBatch_id"/>
						<mapping source="exportCompletedBatch_id" dest="exportCompletedBatch_id"/>
						<mapping source="exportFailedBatch_id" dest="exportFailedBatch_id"/>
						<mapping source="person_id" dest="person_id"/>
						<mapping source="subCase_id" dest="subCase_id"/>
						<mapping source="convId" dest="convId"/>
						<mapping source="flag1" dest="flag1"/>
						<mapping source="flag2" dest="flag2"/>
						<mapping source="flag3" dest="flag3"/>
						<mapping source="flag4" dest="flag4"/>
						<mapping source="flag5" dest="flag5"/>
						<mapping source="notes" dest="notes"/>
						<mapping source="notification" dest="notification"/>
						<mapping source="dirOrgUnit_id" dest="dirOrgUnit_id"/>
						<mapping source="eventInvPersConvId" dest="eventInvPersConvId"/>
						<mapping source="caseNumber" dest="caseNumber"/>
						<mapping source="caseKey" dest="caseKey"/>
					</mappings>
					<destination database="${sql.staging.db}" schema="dbo" table="party_conv"/>
				</action>
				
				
				
				<action handler="SqlServer.Raw" desc="Charged Parties" progresslabel="Charged Parties" enabled="false">
					<source database="${sql.migrated.db}" schema="dbo">
						<task handler="SqlServer.Script" desc="Adjust Case Category">
						<![CDATA[
						
						UPDATE pty 
						set charges = 
						CASE 
							WHEN t1.associatedParty_id IS NOT NULL THEN 1 
							ELSE 0
						END
						FROM cnmiStaging.dbo.party_conv pty
						INNER JOIN cnmiStaging.dbo.convertCases_conv cc
						ON pty.case_id = cc.case_id
						LEFT JOIN (SELECT associatedParty_id FROM CNMI_eCourt_full.ecourt.tCharge chg GROUP BY associatedParty_id) t1
						ON pty.id = t1.associatedParty_id
						WHERE caseGroup = 'CR'
						
						
						
						]]>
						
						
						</task>
						
					</source>
				</action>
				
				<action handler="SqlServer.Raw" desc="Flag excessive PID" progresslabel="Flag excessive PID" enabled="true">
					<source database="${sql.migrated.db}" schema="dbo">
						<task handler="SqlServer.Script" desc="Flag excessive PID">
						<![CDATA[
						
						
						UPDATE pr
						SET partyTypeFlg = 1
						FROM cnmiStaging.dbo.person_conv pr
						INNER JOIN (SELECT id FROM  cnmiStaging.dbo.person_conv pr WHERE partyTypeFlg = 0 GROUP BY id having count(1) > 500) t1
						ON pr.id = t1.id;
						
						UPDATE cnmiStaging.dbo.party_conv
						SET selfRepresented =
						CASE 
							WHEN flag1 = 1 THEN 'Y'
							WHEN partyType = 'SELFR' THEN 'Y'
							ELSE NULL
						END,
						status = 
						CASE 
							WHEN flag2 = 1 THEN 'TR'
							WHEN flag3 = 1 THEN 'DQ'
						END,
						statusDate = 
						CASE
							WHEN flag1 = 1 THEN GETDATE()
							WHEN flag2 = 1 THEN GETDATE()
							WHEN flag3 = 1 THEN GETDATE()
						END
						FROM cnmiStaging.dbo.party_conv;
						
						
						]]>
						
						
						</task>
						
					</source>
				</action>
				
					
				<action handler="SqlServer.Raw" desc="Updates for TR Cases" progresslabel="Updates for TR Cases" enabled="true">
					<source database="${sql.staging.db}" schema="dbo">
						
						
						<task handler="SqlServer.Script" desc="Create subcase_conv table">
						<![CDATA[
						
						
						UPDATE person_conv 
						SET
						caseTypeTR = 'PH',
						caseNumberTR = CONCAT(RIGHT(TRY_CAST(YEAR(pr.dateCreated) as VARCHAR(255)),2), '-', pr.id, '-PH'),
						caseNameTR = CONCAT(firstName, ' ', middleName, ' ' , lastName, ' Person History'),
						filingDateTR = pr.dateCreated,
						fileNames = t1.fileNames
						FROM person_conv pr
						LEFT JOIN
						(SELECT person_id, STRING_AGG(originalFileName,',') fileNames FROM personDocument_conv group by person_id) t1
						ON pr.id = t1.person_id
						WHERE case_id IS NULL;
							
						]]>
						
						</task>
						
					</source>
				</action>
				
				
			</actions>
		</stage>
	
					
		<stage num="26" mode="Serial" desc="Transform Address" enabled="true">
			<actions>
			
				<action handler="SqlServer.Raw" desc="Index Creation" progresslabel="Index Creation" enabled="true">
					<source database="${sql.staging.db}" schema="dbo">
						
						
						<task handler="SqlServer.Script" desc="Index Creation">
						<![CDATA[
						
						
						]]>
						
						</task>
						
					</source>
				</action>
				
			
				<action handler="SqlServer.Raw" desc="Creating address_conv table" progresslabel="Creating address_conv Table" enabled="true">
					<source database="${sql.staging.db}" schema="dbo">
						<task handler="SqlServer.Script" desc="Create address_conv table">
						IF OBJECT_ID('address1_conv', 'U') IS NOT NULL 
						DROP TABLE [dbo].[address1_conv];
						
						IF OBJECT_ID('address2_conv', 'U') IS NOT NULL 
						DROP TABLE [dbo].[address2_conv];
						
						</task>
						
						<task handler="SqlServer.Script" desc="Create address_conv table">
						<![CDATA[
						
						CREATE TABLE [address1_conv](
						idKey [NUMERIC] (19,0) IDENTITY, 
						[id] [numeric](19, 0),
						[accessLevel] [int] NULL,
						[createUserRealName] [varchar](255) NULL,
						[createUsername] [varchar](255) NULL,
						[dateCreated] [datetime] NULL,
						[lastUpdateUserRealName] [varchar](255) NULL,
						[lastUpdateUsername] [varchar](255) NULL,
						[lastUpdated] [datetime] NULL,
						[memo] [varchar](512) NULL,
						[optlock] [int] NOT NULL,
						[roaAccessLevel] [int] NULL,
						[sourceCaseNumber] [varchar](255) NULL,
						[updateReason] [varchar](255) NULL,
						[address1] [varchar](255) NULL,
						[address2] [varchar](255) NULL,
						[addressType] [varchar](255) NULL,
						[city] [varchar](255) NULL,
						[country] [varchar](255) NULL,
						[county] [varchar](255) NULL,
						[effectiveFrom] [datetime] NULL,
						[effectiveTo] [datetime] NULL,
						[forNotification] [tinyint] NULL,
						[hundredBlock] [varchar](255) NULL,
						[intersection] [varchar](255) NULL,
						[intersectionAbbr] [varchar](255) NULL,
						[latitude] [varchar](255) NULL,
						[longitude] [varchar](255) NULL,
						[number] [varchar](255) NULL,
						[numberPrefix] [varchar](255) NULL,
						[numberSuffix] [varchar](255) NULL,
						[pin] [varchar](255) NULL,
						[preferred] [tinyint] NULL,
						[sourceId] [varchar](255) NULL,
						[state] [varchar](255) NULL,
						[status] [varchar](255) NULL,
						[statusDate] [datetime] NULL,
						[streetName] [varchar](255) NULL,
						[streetNamePostDirectional] [varchar](255) NULL,
						[streetNamePostType] [varchar](255) NULL,
						[streetNamePreDirectional] [varchar](255) NULL,
						[streetNamePreType] [varchar](255) NULL,
						[structure] [varchar](255) NULL,
						[subDivision] [varchar](255) NULL,
						[taxCode] [varchar](255) NULL,
						[township] [varchar](255) NULL,
						[verificationStatus] [varchar](255) NULL,
						[zip] [varchar](255) NULL,
						[zip4] [varchar](255) NULL,
						[zoning] [varchar](255) NULL,
						[addressIdentifier_id] [numeric](19, 0) NULL,
						[associatedPerson_id] [numeric](19, 0) NOT NULL,
						[notes] [varchar](7500) NULL,
						[convId] [int] NULL
							);			


						CREATE TABLE [address2_conv](
						idKey [NUMERIC] (19,0) IDENTITY, 
						[id] [numeric](19, 0),
						[accessLevel] [int] NULL,
						[createUserRealName] [varchar](255) NULL,
						[createUsername] [varchar](255) NULL,
						[dateCreated] [datetime] NULL,
						[lastUpdateUserRealName] [varchar](255) NULL,
						[lastUpdateUsername] [varchar](255) NULL,
						[lastUpdated] [datetime] NULL,
						[memo] [varchar](512) NULL,
						[optlock] [int] NOT NULL,
						[roaAccessLevel] [int] NULL,
						[sourceCaseNumber] [varchar](255) NULL,
						[updateReason] [varchar](255) NULL,
						[address1] [varchar](255) NULL,
						[address2] [varchar](255) NULL,
						[addressType] [varchar](255) NULL,
						[city] [varchar](255) NULL,
						[country] [varchar](255) NULL,
						[county] [varchar](255) NULL,
						[effectiveFrom] [datetime] NULL,
						[effectiveTo] [datetime] NULL,
						[forNotification] [tinyint] NULL,
						[hundredBlock] [varchar](255) NULL,
						[intersection] [varchar](255) NULL,
						[intersectionAbbr] [varchar](255) NULL,
						[latitude] [varchar](255) NULL,
						[longitude] [varchar](255) NULL,
						[number] [varchar](255) NULL,
						[numberPrefix] [varchar](255) NULL,
						[numberSuffix] [varchar](255) NULL,
						[pin] [varchar](255) NULL,
						[preferred] [tinyint] NULL,
						[sourceId] [varchar](255) NULL,
						[state] [varchar](255) NULL,
						[status] [varchar](255) NULL,
						[statusDate] [datetime] NULL,
						[streetName] [varchar](255) NULL,
						[streetNamePostDirectional] [varchar](255) NULL,
						[streetNamePostType] [varchar](255) NULL,
						[streetNamePreDirectional] [varchar](255) NULL,
						[streetNamePreType] [varchar](255) NULL,
						[structure] [varchar](255) NULL,
						[subDivision] [varchar](255) NULL,
						[taxCode] [varchar](255) NULL,
						[township] [varchar](255) NULL,
						[verificationStatus] [varchar](255) NULL,
						[zip] [varchar](255) NULL,
						[zip4] [varchar](255) NULL,
						[zoning] [varchar](255) NULL,
						[addressIdentifier_id] [numeric](19, 0) NULL,
						[associatedPerson_id] [numeric](19, 0) NOT NULL,
						[notes] [varchar](7500) NULL,
						[convId] [int] NULL,
						case_id NUMERIC(19,0)
							);					
						]]>
						
						</task>
						
					</source>
				</action>
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform address_conv">
					<source database="${sql.migrated.db}" schema="dbo"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	

						SELECT  
				
						ad.[accessLevel]
						,ad.[createUserRealName]
						,ad.[createUsername]
						,ad.[dateCreated]
						,ad.[lastUpdateUserRealName]
						,ad.[lastUpdateUsername]
						,ad.[lastUpdated]
						,ad.[memo]
						,ad.[optlock]
						,ad.[roaAccessLevel]
						,ad.[sourceCaseNumber]
						,ad.[updateReason]
						,ad.[address1]
						,ad.[address2]
						,ad.[addressType]
						,ad.[city]
						,ad.[country]
						,ad.[county]
						,MIN(ad.[effectiveFrom]) as effectiveFrom
						,MAX(ad.[effectiveTo]) as effectiveTo
						,ad.[forNotification]
						,ad.[hundredBlock]
						,ad.[intersection]
						,ad.[intersectionAbbr]
						,ad.[latitude]
						,ad.[longitude]
						,ad.[number]
						,ad.[numberPrefix]
						,ad.[numberSuffix]
						,ad.[pin]
						,ad.[preferred]
						,ad.[sourceId]
						,ad.[state]
						,ad.[status]
						,ad.[statusDate]
						,ad.[streetName]
						,ad.[streetNamePostDirectional]
						,ad.[streetNamePostType]
						,ad.[streetNamePreDirectional]
						,ad.[streetNamePreType]
						,ad.[structure]
						,ad.[subDivision]
						,ad.[taxCode]
						,ad.[township]
						,ad.[verificationStatus]
						,ad.[zip]
						,ad.[zip4]
						,ad.[zoning]
						,ad.[addressIdentifier_id]
						,ad.[associatedPerson_id]
						,ad.[notes]

						FROM [ecourt].[tAddress] ad
						GROUP BY ad.[accessLevel],ad.[createUserRealName],ad.[createUsername],ad.[dateCreated],ad.[lastUpdateUserRealName],ad.[lastUpdateUsername]
						,ad.[lastUpdated],ad.[memo],ad.[optlock]
						,ad.[roaAccessLevel]
						,ad.[sourceCaseNumber]
						,ad.[updateReason]
						,ad.[address1]
						,ad.[address2]
						,ad.[addressType]
						,ad.[city]
						,ad.[country]
						,ad.[county]
						,ad.[forNotification]
						,ad.[hundredBlock]
						,ad.[intersection]
						,ad.[intersectionAbbr]
						,ad.[latitude]
						,ad.[longitude]
						,ad.[number]
						,ad.[numberPrefix]
						,ad.[numberSuffix]
						,ad.[pin]
						,ad.[preferred]
						,ad.[sourceId]
						,ad.[state]
						,ad.[status]
						,ad.[statusDate]
						,ad.[streetName]
						,ad.[streetNamePostDirectional]
						,ad.[streetNamePostType]
						,ad.[streetNamePreDirectional]
						,ad.[streetNamePreType]
						,ad.[structure]
						,ad.[subDivision]
						,ad.[taxCode]
						,ad.[township]
						,ad.[verificationStatus]
						,ad.[zip]
						,ad.[zip4]
						,ad.[zoning]
						,ad.[addressIdentifier_id]
						,ad.[associatedPerson_id]
						,ad.[notes]
				
						
							
						]]>
						</param>
					</params>
					<mappings>
			
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="address1" dest="address1"/>
						<mapping source="address2" dest="address2"/>
						<mapping source="addressType" dest="addressType"/>
						<mapping source="city" dest="city"/>
						<mapping source="country" dest="country"/>
						<mapping source="county" dest="county"/>
						<mapping source="effectiveFrom" dest="effectiveFrom"/>
						<mapping source="effectiveTo" dest="effectiveTo"/>
						<mapping source="forNotification" dest="forNotification"/>
						<mapping source="hundredBlock" dest="hundredBlock"/>
						<mapping source="intersection" dest="intersection"/>
						<mapping source="intersectionAbbr" dest="intersectionAbbr"/>
						<mapping source="latitude" dest="latitude"/>
						<mapping source="longitude" dest="longitude"/>
						<mapping source="number" dest="number"/>
						<mapping source="numberPrefix" dest="numberPrefix"/>
						<mapping source="numberSuffix" dest="numberSuffix"/>
						<mapping source="pin" dest="pin"/>
						<mapping source="preferred" dest="preferred"/>
						<mapping source="sourceId" dest="sourceId"/>
						<mapping source="state" dest="state"/>
						<mapping source="status" dest="status"/>
						<mapping source="statusDate" dest="statusDate"/>
						<mapping source="streetName" dest="streetName"/>
						<mapping source="streetNamePostDirectional" dest="streetNamePostDirectional"/>
						<mapping source="streetNamePostType" dest="streetNamePostType"/>
						<mapping source="streetNamePreDirectional" dest="streetNamePreDirectional"/>
						<mapping source="streetNamePreType" dest="streetNamePreType"/>
						<mapping source="structure" dest="structure"/>
						<mapping source="subDivision" dest="subDivision"/>
						<mapping source="taxCode" dest="taxCode"/>
						<mapping source="township" dest="township"/>
						<mapping source="verificationStatus" dest="verificationStatus"/>
						<mapping source="zip" dest="zip"/>
						<mapping source="zip4" dest="zip4"/>
						<mapping source="zoning" dest="zoning"/>
						<mapping source="addressIdentifier_id" dest="addressIdentifier_id"/>
						<mapping source="associatedPerson_id" dest="associatedPerson_id"/>
						<mapping source="notes" dest="notes"/>
	
					</mappings>
					<destination database="${sql.staging.db}" schema="dbo" table="address1_conv"/>
				</action>
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform address_conv">
					<source database="${sql.staging.db}" schema="dbo"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	

						SELECT ad.* FROM address1_conv ad
			
					
						
							
						]]>
						</param>
					</params>
					<mappings>
			
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="address1" dest="address1"/>
						<mapping source="address2" dest="address2"/>
						<mapping source="addressType" dest="addressType"/>
						<mapping source="city" dest="city"/>
						<mapping source="country" dest="country"/>
						<mapping source="county" dest="county"/>
						<mapping source="effectiveFrom" dest="effectiveFrom"/>
						<mapping source="effectiveTo" dest="effectiveTo"/>
						<mapping source="forNotification" dest="forNotification"/>
						<mapping source="hundredBlock" dest="hundredBlock"/>
						<mapping source="intersection" dest="intersection"/>
						<mapping source="intersectionAbbr" dest="intersectionAbbr"/>
						<mapping source="latitude" dest="latitude"/>
						<mapping source="longitude" dest="longitude"/>
						<mapping source="number" dest="number"/>
						<mapping source="numberPrefix" dest="numberPrefix"/>
						<mapping source="numberSuffix" dest="numberSuffix"/>
						<mapping source="pin" dest="pin"/>
						<mapping source="preferred" dest="preferred"/>
						<mapping source="sourceId" dest="sourceId"/>
						<mapping source="state" dest="state"/>
						<mapping source="status" dest="status"/>
						<mapping source="statusDate" dest="statusDate"/>
						<mapping source="streetName" dest="streetName"/>
						<mapping source="streetNamePostDirectional" dest="streetNamePostDirectional"/>
						<mapping source="streetNamePostType" dest="streetNamePostType"/>
						<mapping source="streetNamePreDirectional" dest="streetNamePreDirectional"/>
						<mapping source="streetNamePreType" dest="streetNamePreType"/>
						<mapping source="structure" dest="structure"/>
						<mapping source="subDivision" dest="subDivision"/>
						<mapping source="taxCode" dest="taxCode"/>
						<mapping source="township" dest="township"/>
						<mapping source="verificationStatus" dest="verificationStatus"/>
						<mapping source="zip" dest="zip"/>
						<mapping source="zip4" dest="zip4"/>
						<mapping source="zoning" dest="zoning"/>
						<mapping source="addressIdentifier_id" dest="addressIdentifier_id"/>
						<mapping source="associatedPerson_id" dest="associatedPerson_id"/>
						<mapping source="notes" dest="notes"/>

	
					</mappings>
					<destination database="${sql.staging.db}" schema="dbo" table="address2_conv"/>
				</action>

			</actions>
		</stage>
	
		<stage num="28" mode="Serial" desc="Transform Telephone" enabled="true">
			<actions>
			
				<action handler="SqlServer.Raw" desc="Creating address_conv table" progresslabel="Creating address_conv Table" enabled="true">
					<source database="${sql.staging.db}" schema="dbo">
						<task handler="SqlServer.Script" desc="Create address_conv table">
						IF OBJECT_ID('telephone1_conv', 'U') IS NOT NULL 
						DROP TABLE [dbo].[telephone1_conv];
						
						IF OBJECT_ID('telephone2_conv', 'U') IS NOT NULL 
						DROP TABLE [dbo].[telephone2_conv];
						
						</task>
						
						<task handler="SqlServer.Script" desc="Create address_conv table">
						<![CDATA[
						
						CREATE TABLE [telephone1_conv](
						idKey [NUMERIC] (19,0) IDENTITY, 
						[id] [numeric](19, 0),
						[accessLevel] [int] NULL,
						[createUserRealName] [varchar](255) NULL,
						[createUsername] [varchar](255) NULL,
						[dateCreated] [datetime] NULL,
						[lastUpdateUserRealName] [varchar](255) NULL,
						[lastUpdateUsername] [varchar](255) NULL,
						[lastUpdated] [datetime] NULL,
						[memo] [varchar](512) NULL,
						[optlock] [int] NOT NULL,
						[roaAccessLevel] [int] NULL,
						[sourceCaseNumber] [varchar](255) NULL,
						[updateReason] [varchar](255) NULL,
						[areaCode] [varchar](255) NULL,
						[countryCode] [varchar](255) NULL,
						[effectiveFrom] [datetime] NULL,
						[effectiveTo] [datetime] NULL,
						[extension] [varchar](255) NULL,
						[forNotification] [tinyint] NULL,
						[preferred] [tinyint] NULL,
						[telephoneNumber] [varchar](255) NULL,
						[telephoneType] [varchar](255) NULL,
						[associatedPerson_id] [numeric](19, 0) NOT NULL,
						[notes] [varchar](7500) NULL,
						[convId] [int] NULL
						
							);			


						CREATE TABLE [telephone2_conv](
						idKey [NUMERIC] (19,0) IDENTITY, 
						[id] [numeric](19, 0),
						[accessLevel] [int] NULL,
						[createUserRealName] [varchar](255) NULL,
						[createUsername] [varchar](255) NULL,
						[dateCreated] [datetime] NULL,
						[lastUpdateUserRealName] [varchar](255) NULL,
						[lastUpdateUsername] [varchar](255) NULL,
						[lastUpdated] [datetime] NULL,
						[memo] [varchar](512) NULL,
						[optlock] [int] NOT NULL,
						[roaAccessLevel] [int] NULL,
						[sourceCaseNumber] [varchar](255) NULL,
						[updateReason] [varchar](255) NULL,
						[areaCode] [varchar](255) NULL,
						[countryCode] [varchar](255) NULL,
						[effectiveFrom] [datetime] NULL,
						[effectiveTo] [datetime] NULL,
						[extension] [varchar](255) NULL,
						[forNotification] [tinyint] NULL,
						[preferred] [tinyint] NULL,
						[telephoneNumber] [varchar](255) NULL,
						[telephoneType] [varchar](255) NULL,
						[associatedPerson_id] [numeric](19, 0) NOT NULL,
						[notes] [varchar](7500) NULL,
						[convId] [int] NULL,
						
							);					
						]]>
						
						</task>
						
					</source>
				</action>
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Telephone">
					<source database="${sql.migrated.db}" schema="dbo"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	

						SELECT
						MIN(id) as id,
						'conv' as createUserRealName,
						'conv' as createUsername,
						GETDATE() as dateCreated,
						'conv' as lastUpdateUserRealName,
						'conv' as lastUpdateUsername,
						GETDATE() as lastUpdated
						,t.memo
						,t.optlock
						,t.roaAccessLevel
						,t.sourceCaseNumber
						,t.updateReason
						,t.areaCode
						,t.countryCode
						,MIN(t.effectiveFrom) effectiveFrom
						,MAX(t.effectiveTo) effectiveTo
						,t.extension
						,t.forNotification
						,t.preferred
						,t.telephoneNumber
						,t.telephoneType
						,t.associatedPerson_id
						,STRING_AGG(t.notes,'|') as notes
						FROM ecourt.tTelephone t
						GROUP BY
						t.memo
						,t.optlock
						,t.roaAccessLevel
						,t.sourceCaseNumber
						,t.updateReason
						,t.areaCode
						,t.countryCode
						,t.extension
						,t.forNotification
						,t.preferred
						,t.telephoneNumber
						,t.telephoneType
						,t.associatedPerson_id,
						effectiveTo,
						effectiveFrom
	
						
							
						]]>
						</param>
					</params>
					<mappings>
			
						
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="areaCode" dest="areaCode"/>
						<mapping source="countryCode" dest="countryCode"/>
						<mapping source="effectiveFrom" dest="effectiveFrom"/>
						<mapping source="effectiveTo" dest="effectiveTo"/>
						<mapping source="extension" dest="extension"/>
						<mapping source="forNotification" dest="forNotification"/>
						<mapping source="preferred" dest="preferred"/>
						<mapping source="telephoneNumber" dest="telephoneNumber"/>
						<mapping source="telephoneType" dest="telephoneType"/>
						<mapping source="associatedPerson_id" dest="associatedPerson_id"/>
						<mapping source="notes" dest="notes"/>
			
					</mappings>
					<destination database="${sql.staging.db}" schema="dbo" table="telephone1_conv"/>
				</action>
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Telephone">
					<source database="${sql.staging.db}" schema="dbo"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	

						Select * FROM telephone1_conv
							
						]]>
						</param>
					</params>
					<mappings>
						<mapping source="id" dest="id"/>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="areaCode" dest="areaCode"/>
						<mapping source="countryCode" dest="countryCode"/>
						<mapping source="effectiveFrom" dest="effectiveFrom"/>
						<mapping source="effectiveTo" dest="effectiveTo"/>
						<mapping source="extension" dest="extension"/>
						<mapping source="forNotification" dest="forNotification"/>
						<mapping source="preferred" dest="preferred"/>
						<mapping source="telephoneNumber" dest="telephoneNumber"/>
						<mapping source="telephoneType" dest="telephoneType"/>
						<mapping source="associatedPerson_id" dest="associatedPerson_id"/>
						<mapping source="notes" dest="notes"/>
						<mapping source="convId" dest="convId"/>
					</mappings>
					<destination database="${sql.staging.db}" schema="dbo" table="telephone2_conv"/>
				</action>

			</actions>
		</stage>
	
			
		<stage num="30" mode="Serial" desc="Transform PersonProfile" enabled="true">
			<actions>
			
				<action handler="SqlServer.Raw" desc="Creating address_conv table" progresslabel="Creating address_conv Table" enabled="true">
					<source database="${sql.staging.db}" schema="dbo">
						<task handler="SqlServer.Script" desc="Create address_conv table">
						IF OBJECT_ID('personProfile_conv', 'U') IS NOT NULL 
						DROP TABLE [dbo].[personProfile_conv];
						
			
						</task>
						
						<task handler="SqlServer.Script" desc="Create address_conv table">
						<![CDATA[
						
						CREATE TABLE [personProfile_conv](
						idKey [NUMERIC] (19,0) IDENTITY, 	
						id NUMERIC(19,0),
						[accessLevel] [int] NULL,
						[createUserRealName] [varchar](255) NULL,
						[createUsername] [varchar](255) NULL,
						[dateCreated] [datetime] NULL,
						[lastUpdateUserRealName] [varchar](255) NULL,
						[lastUpdateUsername] [varchar](255) NULL,
						[lastUpdated] [datetime] NULL,
						[memo] [varchar](7500) NULL,
						[optlock] [int] NOT NULL,
						[roaAccessLevel] [int] NULL,
						[sourceCaseNumber] [varchar](255) NULL,
						[updateReason] [varchar](255) NULL,
						[canRead] [varchar](255) NULL,
						[canWrite] [varchar](255) NULL,
						[citizenship] [varchar](255) NULL,
						[dateOfBirth] [datetime] NULL,
						[dateOfBirth2] [datetime] NULL,
						[dateOfBirth3] [datetime] NULL,
						[dateOfDeath] [datetime] NULL,
						[dateOfMajority] [datetime] NULL,
						[ethnicity] [varchar](255) NULL,
						[eyeColor] [varchar](255) NULL,
						[gender] [varchar](255) NULL,
						[hairColor] [varchar](255) NULL,
						[hasIEP] [varchar](255) NULL,
						[height] [varchar](255) NULL,
						[maritalStatus] [varchar](255) NULL,
						[militaryStatus] [varchar](255) NULL,
						[occupation] [varchar](255) NULL,
						[placeOfBirth] [varchar](255) NULL,
						[placeOfDeath] [varchar](255) NULL,
						[primaryLanguage] [varchar](255) NULL,
						[profileType] [varchar](255) NULL,
						[religion] [varchar](255) NULL,
						[secondaryLanguage] [varchar](255) NULL,
						[weight] [int] NULL,
						[associatedPerson_id] [numeric](19, 0) NOT NULL,
						[convId] [int] NULL,
						[race] [varchar](255) NULL,
						[dateOfMarriage] [datetime] NULL,
						[dateOfSeparation] [datetime] NULL,
						[dateOfBirthStatus] [varchar](255) NULL,
						[dateOfDeathStatus] [varchar](255) NULL
						
							);			


						]]>
						
						</task>
						
					</source>
				</action>
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform PersonProfile">
					<source database="${sql.migrated.db}" schema="dbo"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	

						SELECT
						pp.*
						
						FROM ecourt.tPersonProfile pp
						WHERE NOT (weight IS NULL AND height IS NULL AND dateOfBirth IS NULL AND dateOfDeath IS NULL AND ethnicity IS NULL AND eyeColor IS NULL AND gender IS NULL AND hairColor IS NULL)
						
							
						]]>
						</param>
					</params>
					<mappings>
						<mapping source="id" dest="id"/>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="canRead" dest="canRead"/>
						<mapping source="canWrite" dest="canWrite"/>
						<mapping source="citizenship" dest="citizenship"/>
						<mapping source="dateOfBirth" dest="dateOfBirth"/>
						<mapping source="dateOfBirth2" dest="dateOfBirth2"/>
						<mapping source="dateOfBirth3" dest="dateOfBirth3"/>
						<mapping source="dateOfDeath" dest="dateOfDeath"/>
						<mapping source="dateOfMajority" dest="dateOfMajority"/>
						<mapping source="ethnicity" dest="ethnicity"/>
						<mapping source="eyeColor" dest="eyeColor"/>
						<mapping source="gender" dest="gender"/>
						<mapping source="hairColor" dest="hairColor"/>
						<mapping source="hasIEP" dest="hasIEP"/>
						<mapping source="height" dest="height"/>
						<mapping source="maritalStatus" dest="maritalStatus"/>
						<mapping source="militaryStatus" dest="militaryStatus"/>
						<mapping source="occupation" dest="occupation"/>
						<mapping source="placeOfBirth" dest="placeOfBirth"/>
						<mapping source="placeOfDeath" dest="placeOfDeath"/>
						<mapping source="primaryLanguage" dest="primaryLanguage"/>
						<mapping source="profileType" dest="profileType"/>
						<mapping source="religion" dest="religion"/>
						<mapping source="secondaryLanguage" dest="secondaryLanguage"/>
						<mapping source="weight" dest="weight"/>
						<mapping source="associatedPerson_id" dest="associatedPerson_id"/>
						<mapping source="convId" dest="convId"/>
						<mapping source="race" dest="race"/>
						<mapping source="dateOfMarriage" dest="dateOfMarriage"/>
						<mapping source="dateOfSeparation" dest="dateOfSeparation"/>
						<mapping source="dateOfBirthStatus" dest="dateOfBirthStatus"/>
						<mapping source="dateOfDeathStatus" dest="dateOfDeathStatus"/>
					</mappings>
					<destination database="${sql.staging.db}" schema="dbo" table="personProfile_conv"/>
				</action>
		
			</actions>
		</stage>
	
					
		<stage num="32" mode="Serial" desc="Transform Case Contact" enabled="true">
			<actions>
			
				<action handler="SqlServer.Raw" desc="Creating address_conv table" progresslabel="Creating address_conv Table" enabled="true">
					<source database="${sql.staging.db}" schema="dbo">
						<task handler="SqlServer.Script" desc="Create address_conv table">
						IF OBJECT_ID('caseContact_conv', 'U') IS NOT NULL 
						DROP TABLE [dbo].[caseContact_conv];
						
			
						</task>
						
						<task handler="SqlServer.Script" desc="Create address_conv table">
						<![CDATA[
						
						CREATE TABLE [caseContact_conv](
						idKey [NUMERIC] (19,0) IDENTITY, 	
						id NUMERIC(19,0),
						[accessLevel] [int] NULL,
						[createUserRealName] [varchar](255) NULL,
						[createUsername] [varchar](255) NULL,
						[dateCreated] [datetime] NULL,
						[lastUpdateUserRealName] [varchar](255) NULL,
						[lastUpdateUsername] [varchar](255) NULL,
						[lastUpdated] [datetime] NULL,
						[memo] [varchar](512) NULL,
						[optlock] [int] NOT NULL,
						[roaAccessLevel] [int] NULL,
						[sourceCaseNumber] [varchar](255) NULL,
						[updateReason] [varchar](255) NULL,
						[contact] [varchar](255) NULL,
						[effectiveFrom] [datetime] NULL,
						[effectiveTo] [datetime] NULL,
						[forNotification] [tinyint] NULL,
						[type] [varchar](255) NULL,
						[associatedPerson_id] [numeric](19, 0) NOT NULL,
						[notes] [varchar](7500) NULL,
						[convId] [int] NULL,
						[preferred] [tinyint] NULL
						
							);			


						]]>
						
						</task>
						
					</source>
				</action>
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Case Contact">
					<source database="${sql.migrated.db}" schema="dbo"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	

						SELECT
						c.*
						FROM ecourt.tCaseContact c

						
							
						]]>
						</param>
					</params>
					<mappings>
						<mapping source="id" dest="id"/>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="contact" dest="contact"/>
						<mapping source="effectiveFrom" dest="effectiveFrom"/>
						<mapping source="effectiveTo" dest="effectiveTo"/>
						<mapping source="forNotification" dest="forNotification"/>
						<mapping source="type" dest="type"/>
						<mapping source="associatedPerson_id" dest="associatedPerson_id"/>
						<mapping source="notes" dest="notes"/>
						<mapping source="convId" dest="convId"/>
						<mapping source="preferred" dest="preferred"/>
					</mappings>
					<destination database="${sql.staging.db}" schema="dbo" table="caseContact_conv"/>
				</action>
		
			</actions>
		</stage>
	
		<stage num="34" mode="Serial" desc="Transform Identification" enabled="true">
			<actions>
			
				<action handler="SqlServer.Raw" desc="Creating address_conv table" progresslabel="Creating address_conv Table" enabled="true">
					<source database="${sql.staging.db}" schema="dbo">
						<task handler="SqlServer.Script" desc="Create address_conv table">
						IF OBJECT_ID('identification_conv', 'U') IS NOT NULL 
						DROP TABLE [dbo].[identification_conv];
						
			
						</task>
						
						<task handler="SqlServer.Script" desc="Create address_conv table">
						<![CDATA[
						
						CREATE TABLE [identification_conv](
						idKey [NUMERIC] (19,0) IDENTITY, 	
						id NUMERIC(19,0),
						[accessLevel] [int] NULL,
						[createUserRealName] [varchar](255) NULL,
						[createUsername] [varchar](255) NULL,
						[dateCreated] [datetime] NULL,
						[lastUpdateUserRealName] [varchar](255) NULL,
						[lastUpdateUsername] [varchar](255) NULL,
						[lastUpdated] [datetime] NULL,
						[memo] [varchar](512) NULL,
						[optlock] [int] NOT NULL,
						[roaAccessLevel] [int] NULL,
						[sourceCaseNumber] [varchar](255) NULL,
						[updateReason] [varchar](255) NULL,
						[effectiveFrom] [datetime] NULL,
						[effectiveTo] [datetime] NULL,
						[identificationClass] [varchar](255) NULL,
						[identificationNumber] [varchar](255) NULL,
						[identificationType] [varchar](255) NULL,
						[issuerCity] [varchar](255) NULL,
						[issuerCountry] [varchar](255) NULL,
						[issuerName] [varchar](255) NULL,
						[issuerState] [varchar](255) NULL,
						[ivrDlNumber] [numeric](19, 0) NULL,
						[status] [varchar](255) NULL,
						[statusDate] [datetime] NULL,
						[associatedPerson_id] [numeric](19, 0) NOT NULL,
						[notes] [varchar](7500) NULL,
						[convId] [int] NULL
						
							);			


						]]>
						
						</task>
						
					</source>
				</action>
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Case Contact">
					<source database="${sql.migrated.db}" schema="dbo"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	

						SELECT
						i.*
						FROM ecourt.tIdentification i

						
							
						]]>
						</param>
					</params>
					<mappings>
						<mapping source="id" dest="id"/>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="effectiveFrom" dest="effectiveFrom"/>
						<mapping source="effectiveTo" dest="effectiveTo"/>
						<mapping source="identificationClass" dest="identificationClass"/>
						<mapping source="identificationNumber" dest="identificationNumber"/>
						<mapping source="identificationType" dest="identificationType"/>
						<mapping source="issuerCity" dest="issuerCity"/>
						<mapping source="issuerCountry" dest="issuerCountry"/>
						<mapping source="issuerName" dest="issuerName"/>
						<mapping source="issuerState" dest="issuerState"/>
						<mapping source="ivrDlNumber" dest="ivrDlNumber"/>
						<mapping source="status" dest="status"/>
						<mapping source="statusDate" dest="statusDate"/>
						<mapping source="associatedPerson_id" dest="associatedPerson_id"/>
						<mapping source="notes" dest="notes"/>
						<mapping source="convId" dest="convId"/>
					</mappings>
					<destination database="${sql.staging.db}" schema="dbo" table="identification_conv"/>
				</action>
		
			</actions>
		</stage>

		<stage num="36" mode="Serial" desc="Transform Scheduled Event" enabled="true">
			<actions>
			
				<action handler="SqlServer.Raw" desc="Creating Scheduled Event table" progresslabel="Creating Scheduled Event Table" enabled="true">
					<source database="${sql.staging.db}" schema="dbo">
						<task handler="SqlServer.Script" desc="Create Scheduled Event table">
						IF OBJECT_ID('scheduledEvent_conv', 'U') IS NOT NULL 
						DROP TABLE [dbo].[scheduledEvent_conv];
						
			
						</task>
						
						<task handler="SqlServer.Script" desc="Create Scheduled Event table">
						<![CDATA[
						
						CREATE TABLE [scheduledEvent_conv](
						idKey [NUMERIC] (19,0) IDENTITY, 	
						id NUMERIC(19,0),
						[accessLevel] [int] NULL,
						[createUserRealName] [varchar](255) NULL,
						[createUsername] [varchar](255) NULL,
						[dateCreated] [datetime] NULL,
						[lastUpdateUserRealName] [varchar](255) NULL,
						[lastUpdateUsername] [varchar](255) NULL,
						[lastUpdated] [datetime] NULL,
						[memo] [varchar](512) NULL,
						[optlock] [int] NOT NULL,
						[roaAccessLevel] [int] NULL,
						[sourceCaseNumber] [varchar](255) NULL,
						[updateReason] [varchar](255) NULL,
						[addOn] [tinyint] NULL,
						[addOnNumber] [int] NULL,
						[appearanceMethod] [varchar](255) NULL,
						[assigneeCode] [varchar](255) NULL,
						[assigneeName] [varchar](255) NULL,
						[calendarNote] [varchar](255) NULL,
						[caseUnit] [varchar](255) NULL,
						[checkedIn] [tinyint] NULL,
						[cmsReferenceId] [numeric](19, 0) NULL,
						[concurrentCase] [varchar](255) NULL,
						[concurrentEvent] [varchar](255) NULL,
						[consecutiveCase] [varchar](255) NULL,
						[consecutiveEvent] [varchar](255) NULL,
						[crsBalance] [float] NULL,
						[crsContactName] [varchar](255) NULL,
						[crsNumber] [varchar](255) NULL,
						[crsNumberOfMotions] [int] NULL,
						[crsPartyNames] [varchar](255) NULL,
						[csrContactEmail] [varchar](255) NULL,
						[csrContactSecondaryEmail] [varchar](255) NULL,
						[csrContactTelephone] [varchar](255) NULL,
						[daysExcluded] [int] NULL,
						[daysOut] [int] NULL,
						[daysToExpiry] [int] NULL,
						[description] [varchar](255) NULL,
						[displayColor] [varchar](255) NULL,
						[docketNumber] [int] NULL,
						[durationMinutes] [int] NULL,
						[efmNewEvent] [tinyint] NULL,
						[efmReferenceId] [numeric](19, 0) NULL,
						[endDateTime] [datetime] NULL,
						[estimatedDays] [int] NULL,
						[estimatedHours] [int] NULL,
						[estimatedMinutes] [int] NULL,
						[eventCategory] [varchar](255) NULL,
						[eventStatus] [varchar](255) NULL,
						[exParte] [tinyint] NULL,
						[exchangeId] [varchar](255) NULL,
						[exportToExchange] [tinyint] NULL,
						[languagesMemo] [varchar](255) NULL,
						[masterCalendar] [tinyint] NULL,
						[minutesLocked] [tinyint] NULL,
						[minutesMode] [varchar](255) NULL,
						[minutesReviewType] [varchar](255) NULL,
						[minutesStatus] [varchar](255) NOT NULL,
						[multiFilerCode] [varchar](255) NULL,
						[multiMotion] [tinyint] NOT NULL,
						[nameExtension] [varchar](255) NULL,
						[orderValue] [int] NULL,
						[partOfDocket] [tinyint] NULL,
						[publish] [varchar](255) NULL,
						[recurrenceKey] [varchar](255) NULL,
						[resultCausedBy] [varchar](255) NULL,
						[resultDate] [datetime] NULL,
						[resultMemo] [varchar](255) NULL,
						[resultReason] [varchar](255) NULL,
						[resultRequestedBy] [varchar](255) NULL,
						[resultType] [varchar](255) NULL,
						[standardDuration] [int] NULL,
						[startDateTime] [datetime] NULL,
						[subType] [varchar](255) NULL,
						[timeSlotCount] [int] NULL,
						[trialType] [varchar](255) NULL,
						[type] [varchar](255) NULL,
						[case_id] [numeric](19, 0) NOT NULL,
						[eventLocation_id] [numeric](19, 0) NULL,
						[lastMinutesOrder_id] [numeric](19, 0) NULL,
						[lastMinutesResult_id] [numeric](19, 0) NULL,
						[meeting_id] [numeric](19, 0) NULL,
						[minutesRelatedParent_id] [numeric](19, 0) NULL,
						[proceeding_id] [numeric](19, 0) NULL,
						[rescheduledTo_id] [numeric](19, 0) NULL,
						[subCase_id] [numeric](19, 0) NULL,
						[convId] [int] NULL,
						[notes] [varchar](7500) NULL,
						[slotCode] [varchar](255) NULL,
						[slotId] [numeric](19, 0) NULL,
						[joinStatus] [int] NULL,
						[tentativeAttached] [tinyint] NULL,
						[lastTentativeMinutesOrder_id] [numeric](19, 0) NULL,
						[source] [varchar](255) NULL,
						[isRecurringEvent] [tinyint] NULL,
						[tsTemplateCode] [varchar](255) NULL,
						[weight] [int] NULL,
						[task] [varchar](255) NULL,
						[cf_date] [datetime] NULL,
						[googleCalendarId] [varchar](255) NULL,
						[probateNotesAttached] [tinyint] NULL,
						[lastProbateNotes_id] [numeric](19, 0) NULL,
						[addOnType] [varchar](255) NULL,
						tScheduledEvent_id NUMERIC(19,0),
						dirLocation_Load NUMERIC(19,0),
						caseKey NUMERIC(19,0)
							);			


						]]>
						
						</task>
						
					</source>
				</action>
			
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Scheduled Event">
					<source database="${sql.migrated.db}" schema="dbo"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	

						SELECT
						se.*, 
						cc.idKey caseKey
						FROM ecourt.tScheduledEvent se
						INNER JOIN cnmiStaging.dbo.case_conv cc
						ON se.case_id  = cc.id

						
							
						]]>
						</param>
					</params>
					<mappings>
						<mapping source="id" dest="id"/>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="addOn" dest="addOn"/>
						<mapping source="addOnNumber" dest="addOnNumber"/>
						<mapping source="appearanceMethod" dest="appearanceMethod"/>
						<mapping source="assigneeCode" dest="assigneeCode"/>
						<mapping source="assigneeName" dest="assigneeName"/>
						<mapping source="calendarNote" dest="calendarNote"/>
						<mapping source="caseUnit" dest="caseUnit"/>
						<mapping source="checkedIn" dest="checkedIn"/>
						<mapping source="cmsReferenceId" dest="cmsReferenceId"/>
						<mapping source="concurrentCase" dest="concurrentCase"/>
						<mapping source="concurrentEvent" dest="concurrentEvent"/>
						<mapping source="consecutiveCase" dest="consecutiveCase"/>
						<mapping source="consecutiveEvent" dest="consecutiveEvent"/>
						<mapping source="crsBalance" dest="crsBalance"/>
						<mapping source="crsContactName" dest="crsContactName"/>
						<mapping source="crsNumber" dest="crsNumber"/>
						<mapping source="crsNumberOfMotions" dest="crsNumberOfMotions"/>
						<mapping source="crsPartyNames" dest="crsPartyNames"/>
						<mapping source="csrContactEmail" dest="csrContactEmail"/>
						<mapping source="csrContactSecondaryEmail" dest="csrContactSecondaryEmail"/>
						<mapping source="csrContactTelephone" dest="csrContactTelephone"/>
						<mapping source="daysExcluded" dest="daysExcluded"/>
						<mapping source="daysOut" dest="daysOut"/>
						<mapping source="daysToExpiry" dest="daysToExpiry"/>
						<mapping source="description" dest="description"/>
						<mapping source="displayColor" dest="displayColor"/>
						<mapping source="docketNumber" dest="docketNumber"/>
						<mapping source="durationMinutes" dest="durationMinutes"/>
						<mapping source="efmNewEvent" dest="efmNewEvent"/>
						<mapping source="efmReferenceId" dest="efmReferenceId"/>
						<mapping source="endDateTime" dest="endDateTime"/>
						<mapping source="estimatedDays" dest="estimatedDays"/>
						<mapping source="estimatedHours" dest="estimatedHours"/>
						<mapping source="estimatedMinutes" dest="estimatedMinutes"/>
						<mapping source="eventCategory" dest="eventCategory"/>
						<mapping source="eventStatus" dest="eventStatus"/>
						<mapping source="exParte" dest="exParte"/>
						<mapping source="exchangeId" dest="exchangeId"/>
						<mapping source="exportToExchange" dest="exportToExchange"/>
						<mapping source="languagesMemo" dest="languagesMemo"/>
						<mapping source="masterCalendar" dest="masterCalendar"/>
						<mapping source="minutesLocked" dest="minutesLocked"/>
						<mapping source="minutesMode" dest="minutesMode"/>
						<mapping source="minutesReviewType" dest="minutesReviewType"/>
						<mapping source="minutesStatus" dest="minutesStatus"/>
						<mapping source="multiFilerCode" dest="multiFilerCode"/>
						<mapping source="multiMotion" dest="multiMotion"/>
						<mapping source="nameExtension" dest="nameExtension"/>
						<mapping source="orderValue" dest="orderValue"/>
						<mapping source="partOfDocket" dest="partOfDocket"/>
						<mapping source="publish" dest="publish"/>
						<mapping source="recurrenceKey" dest="recurrenceKey"/>
						<mapping source="resultCausedBy" dest="resultCausedBy"/>
						<mapping source="resultDate" dest="resultDate"/>
						<mapping source="resultMemo" dest="resultMemo"/>
						<mapping source="resultReason" dest="resultReason"/>
						<mapping source="resultRequestedBy" dest="resultRequestedBy"/>
						<mapping source="resultType" dest="resultType"/>
						<mapping source="standardDuration" dest="standardDuration"/>
						<mapping source="startDateTime" dest="startDateTime"/>
						<mapping source="subType" dest="subType"/>
						<mapping source="timeSlotCount" dest="timeSlotCount"/>
						<mapping source="trialType" dest="trialType"/>
						<mapping source="type" dest="type"/>
						<mapping source="case_id" dest="case_id"/>
						<mapping source="eventLocation_id" dest="eventLocation_id"/> 
						<mapping source="lastMinutesOrder_id" dest="lastMinutesOrder_id"/>
						<mapping source="lastMinutesResult_id" dest="lastMinutesResult_id"/>
						<mapping source="meeting_id" dest="meeting_id"/>
						<mapping source="minutesRelatedParent_id" dest="minutesRelatedParent_id"/>
						<mapping source="proceeding_id" dest="proceeding_id"/>
						<mapping source="rescheduledTo_id" dest="rescheduledTo_id"/>
						<mapping source="subCase_id" dest="subCase_id"/>
						<mapping source="convId" dest="convId"/>
						<mapping source="notes" dest="notes"/>
						<mapping source="slotCode" dest="slotCode"/>
						<mapping source="slotId" dest="slotId"/>
						<mapping source="joinStatus" dest="joinStatus"/>
						<mapping source="tentativeAttached" dest="tentativeAttached"/>
						<mapping source="lastTentativeMinutesOrder_id" dest="lastTentativeMinutesOrder_id"/>
						<mapping source="source" dest="source"/>
						<mapping source="isRecurringEvent" dest="isRecurringEvent"/>
						<mapping source="tsTemplateCode" dest="tsTemplateCode"/>
						<mapping source="weight" dest="weight"/>
						<mapping source="task" dest="task"/>
						<mapping source="cf_date" dest="cf_date"/>
						<mapping source="googleCalendarId" dest="googleCalendarId"/>
						<mapping source="probateNotesAttached" dest="probateNotesAttached"/>
						<mapping source="lastProbateNotes_id" dest="lastProbateNotes_id"/>
						<mapping source="addOnType" dest="addOnType"/>
						<mapping source="caseKey" dest="caseKey"/>
	
					</mappings>
					<destination database="${sql.staging.db}" schema="dbo" table="scheduledEvent_conv"/>
				</action>
				
				<action handler="SqlServer.Raw" desc="Creating Case_conv table" progresslabel="Adjust Case Category" enabled="true">
					<source database="${sql.migrated.db}" schema="dbo">
						<task handler="SqlServer.Script" desc="Adjust Case Category">
						<![CDATA[
						UPDATE se 
						SET  dirLocation_Load =
						CASE 
					
							WHEN eventLocation_id = 351 THEN 351
							WHEN eventLocation_id = 495 THEN 237
							WHEN eventLocation_id = 435 THEN 391
							WHEN eventLocation_id = 441 THEN 237
							WHEN eventLocation_id = 329 THEN 237
							WHEN eventLocation_id = 369 THEN 243
							WHEN eventLocation_id = 357 THEN 393
							WHEN eventLocation_id = 439 THEN 395
							WHEN eventLocation_id = 309 THEN 351
							WHEN eventLocation_id = 393 THEN 393
							WHEN eventLocation_id = 373 THEN 391
							WHEN eventLocation_id = 427 THEN 351
							WHEN eventLocation_id = 397 THEN 237
							WHEN eventLocation_id = 383 THEN 401
							WHEN eventLocation_id = 347 THEN 351
							WHEN eventLocation_id = 489 THEN 391
							WHEN eventLocation_id = 389 THEN 3481
							WHEN eventLocation_id = 491 THEN 393
							WHEN eventLocation_id = 333 THEN 395
							WHEN eventLocation_id = 387 THEN 243
							WHEN eventLocation_id = 381 THEN 239
							WHEN eventLocation_id = 503 THEN 243
							WHEN eventLocation_id = 651 THEN 649
							WHEN eventLocation_id = 377 THEN 395
							WHEN eventLocation_id = 379 THEN 237
							WHEN eventLocation_id = 399 THEN 239
							WHEN eventLocation_id = 391 THEN 391
							WHEN eventLocation_id = 395 THEN 395
							WHEN eventLocation_id = 363 THEN 239
							WHEN eventLocation_id = 437 THEN 393
							WHEN eventLocation_id = 361 THEN 237
							WHEN eventLocation_id = 331 THEN 393
							WHEN eventLocation_id = 365 THEN 401
							WHEN eventLocation_id = 355 THEN 391
							WHEN eventLocation_id = 375 THEN 393
							WHEN eventLocation_id = 337 THEN 239
							WHEN eventLocation_id = 433 THEN 351
							WHEN eventLocation_id = 349 THEN 351
							WHEN eventLocation_id = 359 THEN 395
							WHEN eventLocation_id = 335 THEN 237
							WHEN eventLocation_id = 493 THEN 395
						END
						FROM cnmiStaging.dbo.scheduledEvent_conv se
						
						

						]]>
						
						
						</task>
						
					</source>
				</action>
				
		
			</actions>
		</stage> 
	
		<stage num="38" mode="Serial" desc="Transform Case Seal" enabled="true">
			<actions>
			
				<action handler="SqlServer.Raw" desc="Creating Case Seal" progresslabel="Creating Case Seal" enabled="true">
					<source database="${sql.staging.db}" schema="dbo">
						<task handler="SqlServer.Script" desc="Create Case Seal table">
						IF OBJECT_ID('caseSeal_conv', 'U') IS NOT NULL 
						DROP TABLE [dbo].[caseSeal_conv];
						
			
						</task>
						
						<task handler="SqlServer.Script" desc="Create Case Seal table">
						<![CDATA[
						
						CREATE TABLE [caseSeal_conv](
						idKey [NUMERIC] (19,0) IDENTITY, 	
						id NUMERIC(19,0),
						[accessLevel] [int] NULL,
						[createUserRealName] [varchar](255) NULL,
						[createUsername] [varchar](255) NULL,
						[dateCreated] [datetime] NULL,
						[lastUpdateUserRealName] [varchar](255) NULL,
						[lastUpdateUsername] [varchar](255) NULL,
						[lastUpdated] [datetime] NULL,
						[memo] [varchar](7500) NULL,
						[optlock] [int] NOT NULL,
						[roaAccessLevel] [int] NULL,
						[sourceCaseNumber] [varchar](255) NULL,
						[updateReason] [varchar](255) NULL,
						[effectiveFrom] [datetime] NULL,
						[effectiveTo] [datetime] NULL,
						[type] [varchar](255) NULL,
						[case_id] [numeric](19, 0) NOT NULL,
						[convId] [varchar](12) NULL,
						
							);			


						]]>
						
						</task>
						
					</source>
				</action>
			
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Case Seal">
					<source database="${sql.migrated.db}" schema="dbo"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	

						SELECT
						se.*
						FROM ecourt.tCaseSeal se
						INNER JOIN cnmiStaging.dbo.convertCases_conv cc
						ON se.case_id  = cc.case_id

						
							
						]]>
						</param>
					</params>
					<mappings>
						<mapping source="id" dest="id"/>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="effectiveFrom" dest="effectiveFrom"/>
						<mapping source="effectiveTo" dest="effectiveTo"/>
						<mapping source="type" dest="type"/>
						<mapping source="case_id" dest="case_id"/>
						<mapping source="convId" dest="convId"/>
					</mappings>
					<destination database="${sql.staging.db}" schema="dbo" table="caseSeal_conv"/>
				</action>-
		
			</actions>
		</stage> 
	
		<stage num="40" mode="Serial" desc="Transform Case Note" enabled="true">
				<actions>
				
					<action handler="SqlServer.Raw" desc="Creating Case Note" progresslabel="Creating  Case Note" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create  Case Note table">
							IF OBJECT_ID('caseNote_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[caseNote_conv];
							
				
							</task>
							
							<task handler="SqlServer.Script" desc="Create  Case Note table">
							<![CDATA[
							
							CREATE TABLE [caseNote_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							[accessLevel] [int] NULL,
							[createUserRealName] [varchar](255) NULL,
							[createUsername] [varchar](255) NULL,
							[dateCreated] [datetime] NULL,
							[lastUpdateUserRealName] [varchar](255) NULL,
							[lastUpdateUsername] [varchar](255) NULL,
							[lastUpdated] [datetime] NULL,
							[memo] [varchar](7500) NULL,
							[optlock] [int] NOT NULL,
							[roaAccessLevel] [int] NULL,
							[sourceCaseNumber] [varchar](255) NULL,
							[updateReason] [varchar](255) NULL,
							[attachedEntity] [varchar](255) NULL,
							[attachedId] [numeric](19, 0) NULL,
							[color] [varchar](255) NOT NULL,
							[completed] [tinyint] NULL,
							[content] [text] NULL,
							[dueDate] [datetime] NULL,
							[noteDate] [datetime] NULL,
							[sharedToAuthorityNames] [varchar](255) NULL,
							[sharedToUsernames] [varchar](255) NULL,
							[sharingLevel] [int] NOT NULL,
							[stripedContent] [text] NULL,
							[title] [varchar](255) NULL,
							[toDate] [datetime] NULL,
							[type] [varchar](255) NULL,
							[username] [varchar](255) NULL,
							[assignedUser_id] [numeric](19, 0) NULL,
							[case_id] [numeric](19, 0) NOT NULL,
							[convId] [int] NULL,
							[convId_table] [varchar](255) NULL,
							cfCorrespondenceType VARCHAR(255),
							caseKy NUMERIC(19,0),
							AttachedIdLd NUMERIC(19,0),
							srcTbl VARCHAR(255)
							
								);			


							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Case Note">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	

							SELECT
							cn.*,  cn.lastUpdated as noteDateLd, cc.idKey as caseKy
							FROM ecourt.tCaseNote cn
							LEFT JOIN cnmiStaging.dbo.case_conv cc 
							ON cn.case_id = cc.id
							WHERE  attachedEntity <> 'com.sustain.cases.model.Tracking' OR attachedEntity IS NULL

							
								
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="id" dest="id"/>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="optlock" dest="optlock"/>
							<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
							<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
							<mapping source="updateReason" dest="updateReason"/>
							<mapping source="attachedEntity" dest="attachedEntity"/>
							<mapping source="attachedId" dest="attachedId"/>
							<mapping source="color" dest="color"/>
							<mapping source="completed" dest="completed"/>
							<mapping source="content" dest="content"/>
							<mapping source="dueDate" dest="dueDate"/>
							<mapping source="noteDateLd" dest="noteDate"/>
							<mapping source="sharedToAuthorityNames" dest="sharedToAuthorityNames"/>
							<mapping source="sharedToUsernames" dest="sharedToUsernames"/>
							<mapping source="sharingLevel" dest="sharingLevel"/>
							<mapping source="stripedContent" dest="stripedContent"/>
							<mapping source="title" dest="title"/>
							<mapping source="toDate" dest="toDate"/>
							<mapping source="type" dest="type"/>
							<mapping source="username" dest="username"/>
							<mapping source="assignedUser_id" dest="assignedUser_id"/>
							<mapping source="case_id" dest="case_id"/>
							<mapping source="convId" dest="convId"/>
							<mapping source="convId_table" dest="convId_table"/>
							<mapping source="caseKy" dest="caseKy"/>
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="caseNote_conv"/>
					</action>-
					
						
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Case Note - Tracking" enabled = "true">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	

							SELECT
							COALESCE(cn.accessLevel, tr.accessLevel) as accessLevel ,
							COALESCE(cn.createUserRealName, tr.createUserRealName) as createUserRealName,
							COALESCE(cn.createUserName, tr.createUserName) as createUserName,
							COALESCE(cn.dateCreated, tr.dateCreated) as dateCreated,
							COALESCE(cn.lastUpdateUserRealName, tr.lastUpdateUserRealName) as lastUpdateUserRealName,
							COALESCE(cn.lastUpdateUsername, tr.lastUpdateUsername) lastUpdateUsername,
							COALESCE(cn.lastUpdated, tr.lastUpdated) lastUpdated,
							COALESCE(cn.optlock, tr.optlock,0) optlock,
							COALESCE(cn.color, 'WHITE') color,
							COALESCE(cn.sharingLevel, 0) sharingLevel,
							COALESCE(cn.case_id, tr.case_id) case_id,
							cn.*, tr.startDate as noteDateLd, cfCorrespondenceType = t1.label, 
							srcTbl = 'Tracking'
							FROM ecourt.tTracking Tr
							LEFT JOIN ecourt.tCaseNote cn
							ON cn.attachedId = tr.id AND attachedEntity = 'com.sustain.cases.model.Tracking'
							LEFT JOIN (SELECT code, label FROM ecourt.tLookupItem li INNER JOIN ecourt.tLookupList ll ON  li.lookupList_id = ll.id WHERE ll.id = 368) t1
							ON tr.trackingType = t1.code
							WHERE (attachedEntity = 'com.sustain.cases.model.Tracking' OR cn.AttachedId IS NULL)
							

							
								
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="id" dest="id"/>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="optlock" dest="optlock"/>
							<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
							<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
							<mapping source="updateReason" dest="updateReason"/>
							<mapping source="attachedEntity" dest="attachedEntity"/>
							<mapping source="attachedId" dest="attachedId"/>
							<mapping source="color" dest="color"/>
							<mapping source="completed" dest="completed"/>
							<mapping source="content" dest="content"/>
							<mapping source="dueDate" dest="dueDate"/>
							<mapping source="noteDateLd" dest="noteDate"/>
							<mapping source="sharedToAuthorityNames" dest="sharedToAuthorityNames"/>
							<mapping source="sharedToUsernames" dest="sharedToUsernames"/>
							<mapping source="sharingLevel" dest="sharingLevel"/>
							<mapping source="stripedContent" dest="stripedContent"/>
							<mapping source="title" dest="title"/>
							<mapping source="toDate" dest="toDate"/>
							<mapping source="type" dest="type"/>
							<mapping source="username" dest="username"/>
							<mapping source="assignedUser_id" dest="assignedUser_id"/>
							<mapping source="case_id" dest="case_id"/>
							<mapping source="convId" dest="convId"/>
							<mapping source="convId_table" dest="convId_table"/>
							<mapping source="cfCorrespondenceType" dest="cfCorrespondenceType"/>
							<mapping source="srcTbl" dest="srcTbl"/>
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="caseNote_conv"/>
					</action>-
			
					
				</actions>
			</stage> 
								
		
		<stage num="42" mode="Serial" desc="Transform Exhibit" enabled="true">
				<actions>
				
					<action handler="SqlServer.Raw" desc="Creating Case Note" progresslabel="Creating  Case Note" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create  Case Note table">
							IF OBJECT_ID('exhibit_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[exhibit_conv];
							
							IF OBJECT_ID('exhibitTracking_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[exhibitTracking_conv];
							
				
							</task>
							
							<task handler="SqlServer.Script" desc="Create  Case Note table">
							<![CDATA[
							
							CREATE TABLE [exhibit_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							[accessLevel] [int] NULL,
							[createUserRealName] [varchar](255) NULL,
							[createUsername] [varchar](255) NULL,
							[dateCreated] [datetime] NULL,
							[lastUpdateUserRealName] [varchar](255) NULL,
							[lastUpdateUsername] [varchar](255) NULL,
							[lastUpdated] [datetime] NULL,
							[memo] [varchar](512) NULL,
							[optlock] [int] NOT NULL,
							[roaAccessLevel] [int] NULL,
							[sourceCaseNumber] [varchar](255) NULL,
							[updateReason] [varchar](255) NULL,
							[dateReceived] [datetime] NULL,
							[description] [varchar](255) NULL,
							[disposalRequired] [varchar](255) NULL,
							[disposeBy] [datetime] NULL,
							[disposition] [varchar](255) NULL,
							[exhibitNumber] [varchar](255) NULL,
							[exhibitNumberInt] [numeric](19, 0) NULL,
							[exhibitSubType] [varchar](255) NULL,
							[exhibitType] [varchar](255) NULL,
							[status] [varchar](255) NULL,
							[statusDate] [datetime] NULL,
							[submittedBy] [varchar](255) NULL,
							[case_id] [numeric](19, 0) NOT NULL,
							[proceeding_id] [numeric](19, 0) NULL,
							[subCase_id] [numeric](19, 0) NULL,
							[convId] [int] NULL,
							[notes] [varchar](7500) NULL,
							[value] [varchar](255) NULL,
							[dirPerson_id] [numeric](19, 0) NULL,
							texhibit_id NUMERIC(19,0),
							caseNumber VARCHAR(255)
								);	

							CREATE TABLE [exhibitTracking_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							[accessLevel] [int] NULL,
							[createUserRealName] [varchar](255) NULL,
							[createUsername] [varchar](255) NULL,
							[dateCreated] [datetime] NULL,
							[lastUpdateUserRealName] [varchar](255) NULL,
							[lastUpdateUsername] [varchar](255) NULL,
							[lastUpdated] [datetime] NULL,
							[memo] [varchar](512) NULL,
							[optlock] [int] NOT NULL,
							[roaAccessLevel] [int] NULL,
							[sourceCaseNumber] [varchar](255) NULL,
							[updateReason] [varchar](255) NULL,
							[dateEntered] [datetime] NULL,
							[enteredBy] [varchar](255) NULL,
							[notes] [varchar](255) NULL,
							[status] [varchar](255) NULL,
							[statusDate] [datetime] NULL,
							[timeEntered] [datetime] NULL,
							[viewedBy] [varchar](255) NULL,
							[viewedByFirstName] [varchar](255) NULL,
							[viewedByLastName] [varchar](255) NULL,
							[exhibit_id] [numeric](19, 0) NULL,
							[location_id] [numeric](19, 0) NULL,
							[convId] [int] NULL,
							[dirPerson_id] [numeric](19, 0) NULL,
								);		


							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Exhibit">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	

							SELECT
							e.*, c.caseNumber
							FROM ecourt.tExhibit e
							INNER JOIN cnmiStaging.dbo.case_conv c
							ON e.case_id = c.id 

							
								
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="id" dest="id"/>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="optlock" dest="optlock"/>
							<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
							<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
							<mapping source="updateReason" dest="updateReason"/>
							<mapping source="dateReceived" dest="dateReceived"/>
							<mapping source="description" dest="description"/>
							<mapping source="disposalRequired" dest="disposalRequired"/>
							<mapping source="disposeBy" dest="disposeBy"/>
							<mapping source="disposition" dest="disposition"/>
							<mapping source="exhibitNumber" dest="exhibitNumber"/>
							<mapping source="exhibitNumberInt" dest="exhibitNumberInt"/>
							<mapping source="exhibitSubType" dest="exhibitSubType"/>
							<mapping source="exhibitType" dest="exhibitType"/>
							<mapping source="status" dest="status"/>
							<mapping source="statusDate" dest="statusDate"/>
							<mapping source="submittedBy" dest="submittedBy"/>
							<mapping source="case_id" dest="case_id"/>
							<mapping source="proceeding_id" dest="proceeding_id"/>
							<mapping source="subCase_id" dest="subCase_id"/>
							<mapping source="convId" dest="convId"/>
							<mapping source="notes" dest="notes"/>
							<mapping source="value" dest="value"/>
							<mapping source="dirPerson_id" dest="dirPerson_id"/>
							<mapping source="caseNumber" dest="caseNumber"/>
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="exhibit_conv"/>
					</action>
					
							
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Exhibit Tracking">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	

							SELECT
							et.*
							FROM ecourt.tExhibitTracking et
						
							
								
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="id" dest="id"/>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="optlock" dest="optlock"/>
							<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
							<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
							<mapping source="updateReason" dest="updateReason"/>
							<mapping source="dateEntered" dest="dateEntered"/>
							<mapping source="enteredBy" dest="enteredBy"/>
							<mapping source="notes" dest="notes"/>
							<mapping source="status" dest="status"/>
							<mapping source="statusDate" dest="statusDate"/>
							<mapping source="timeEntered" dest="timeEntered"/>
							<mapping source="viewedBy" dest="viewedBy"/>
							<mapping source="viewedByFirstName" dest="viewedByFirstName"/>
							<mapping source="viewedByLastName" dest="viewedByLastName"/>
							<mapping source="exhibit_id" dest="exhibit_id"/>
							<mapping source="location_id" dest="location_id"/>
							<mapping source="convId" dest="convId"/>
							<mapping source="dirPerson_id" dest="dirPerson_id"/>
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="exhibitTracking_conv"/>
					</action>
			
				</actions>
			</stage> 
			
		<stage num="44" mode="Serial" desc="Transform Person Note" enabled="true">
				<actions>
				
					<action handler="SqlServer.Raw" desc="Creating Person Note" progresslabel="Creating  Person Note" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create   Person table">
							IF OBJECT_ID('personNote_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[personNote_conv];
							
				
							</task>
							
							<task handler="SqlServer.Script" desc="Create  Person Note table">
							<![CDATA[
							
							CREATE TABLE [personNote_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							[accessLevel] [int] NULL,
							[createUserRealName] [varchar](255) NULL,
							[createUsername] [varchar](255) NULL,
							[dateCreated] [datetime] NULL,
							[lastUpdateUserRealName] [varchar](255) NULL,
							[lastUpdateUsername] [varchar](255) NULL,
							[lastUpdated] [datetime] NULL,
							[memo] [varchar](7500) NULL,
							[optlock] [int] NOT NULL,
							[roaAccessLevel] [int] NULL,
							[sourceCaseNumber] [varchar](255) NULL,
							[updateReason] [varchar](255) NULL,
							[attachedEntity] [varchar](255) NULL,
							[attachedId] [numeric](19, 0) NULL,
							[color] [varchar](255) NOT NULL,
							[completed] [tinyint] NULL,
							[content] [text] NULL,
							[dueDate] [datetime] NULL,
							[noteDate] [datetime] NULL,
							[sharedToAuthorityNames] [varchar](255) NULL,
							[sharedToUsernames] [varchar](255) NULL,
							[sharingLevel] [int] NOT NULL,
							[stripedContent] [text] NULL,
							[title] [varchar](255) NULL,
							[toDate] [datetime] NULL,
							[type] [varchar](255) NULL,
							[username] [varchar](255) NULL,
							[assignedUser_id] [numeric](19, 0) NULL,
							[person_id] [numeric](19, 0) NOT NULL,
							[convId] [int] NULL,
							
								);			


							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Person Note">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	

							SELECT
							pn.*
							FROM ecourt.tPersonNote pn
						

							
								
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="optlock" dest="optlock"/>
							<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
							<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
							<mapping source="updateReason" dest="updateReason"/>
							<mapping source="attachedEntity" dest="attachedEntity"/>
							<mapping source="attachedId" dest="attachedId"/>
							<mapping source="color" dest="color"/>
							<mapping source="completed" dest="completed"/>
							<mapping source="content" dest="content"/>
							<mapping source="dueDate" dest="dueDate"/>
							<mapping source="noteDate" dest="noteDate"/>
							<mapping source="sharedToAuthorityNames" dest="sharedToAuthorityNames"/>
							<mapping source="sharedToUsernames" dest="sharedToUsernames"/>
							<mapping source="sharingLevel" dest="sharingLevel"/>
							<mapping source="stripedContent" dest="stripedContent"/>
							<mapping source="title" dest="title"/>
							<mapping source="toDate" dest="toDate"/>
							<mapping source="type" dest="type"/>
							<mapping source="username" dest="username"/>
							<mapping source="assignedUser_id" dest="assignedUser_id"/>
							<mapping source="person_id" dest="person_id"/>
							<mapping source="convId" dest="convId"/>
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="personNote_conv"/>
					</action>-
			
				</actions>
			</stage> 
			
		<stage num="46" mode="Serial" desc="Transform tCaseOtherNumber" enabled="true">
				<actions>
				
					<action handler="SqlServer.Raw" desc="Creating tCaseOtherNumber" progresslabel="Creating  tCaseOtherNumber" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create  tCaseOtherNumber">
							IF OBJECT_ID('caseOtherNumber_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[caseOtherNumber_conv];
							
				
							</task>
							
							<task handler="SqlServer.Script" desc="Create tCaseOtherNumber table">
							<![CDATA[
							
							CREATE TABLE [caseOtherNumber_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							[accessLevel] [int] NULL,
							[createUserRealName] [varchar](255) NULL,
							[createUsername] [varchar](255) NULL,
							[dateCreated] [datetime] NULL,
							[lastUpdateUserRealName] [varchar](255) NULL,
							[lastUpdateUsername] [varchar](255) NULL,
							[lastUpdated] [datetime] NULL,
							[memo] [varchar](512) NULL,
							[optlock] [int] NOT NULL,
							[roaAccessLevel] [int] NULL,
							[sourceCaseNumber] [varchar](255) NULL,
							[updateReason] [varchar](255) NULL,
							[endDate] [datetime] NULL,
							[number] [varchar](255) NULL,
							[startDate] [datetime] NULL,
							[type] [varchar](255) NULL,
							[case_id] [numeric](19, 0) NOT NULL,
							[subCase_id] [numeric](19, 0) NULL,
							[convId] [int] NULL,
							[active] [tinyint] NULL,
							[lead] [tinyint] NULL,
							[notes] [varchar](7500) NULL,
							[dirOrgUnit_id] [numeric](19, 0) NULL,
							tCaseOtherNumber_id NUMERIC(19,0),
							caseKey NUMERIC(19,0)
							
								);			


							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Person Note">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	

							SELECT
							con.*,
							cc.idKey as caseKey
							FROM ecourt.tCaseOtherNumber con
							INNER JOIN cnmiStaging.dbo.case_conv cc
							ON con.case_id = cc.id
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="optlock" dest="optlock"/>
							<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
							<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
							<mapping source="updateReason" dest="updateReason"/>
							<mapping source="endDate" dest="endDate"/>
							<mapping source="number" dest="number"/>
							<mapping source="startDate" dest="startDate"/>
							<mapping source="type" dest="type"/>
							<mapping source="case_id" dest="case_id"/>
							<mapping source="subCase_id" dest="subCase_id"/>
							<mapping source="convId" dest="convId"/>
							<mapping source="active" dest="active"/>
							<mapping source="lead" dest="lead"/>
							<mapping source="notes" dest="notes"/>
							<mapping source="dirOrgUnit_id" dest="dirOrgUnit_id"/>
							<mapping source="caseKey" dest="caseKey"/>
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="caseOtherNumber_conv"/>
					</action>-
			
				</actions>
			</stage> 
			
		<stage num="48" mode="Serial" desc="Transform tArrest" enabled="true">
			<actions>
				
					<action handler="SqlServer.Raw" desc="Creating tArrest" progresslabel="Creating  tArrest" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create  tArrest">
							IF OBJECT_ID('arrest_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[arrest_conv];
							
				
							</task>
							
							<task handler="SqlServer.Script" desc="Create tArrest table">
							<![CDATA[
							
							CREATE TABLE [arrest_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							[accessLevel] [int] NULL,
							[createUserRealName] [varchar](255) NULL,
							[createUsername] [varchar](255) NULL,
							[dateCreated] [datetime] NULL,
							[lastUpdateUserRealName] [varchar](255) NULL,
							[lastUpdateUsername] [varchar](255) NULL,
							[lastUpdated] [datetime] NULL,
							[memo] [varchar](7500) NULL,
							[optlock] [int] NOT NULL,
							[roaAccessLevel] [int] NULL,
							[sourceCaseNumber] [varchar](255) NULL,
							[updateReason] [varchar](255) NULL,
							[arrestDate] [datetime] NULL,
							[arrestTime] [datetime] NULL,
							[arrestType] [varchar](255) NULL,
							[arrestingAgencyFileNumber] [varchar](255) NULL,
							[bookingNumber] [varchar](255) NULL,
							[location] [varchar](255) NULL,
							[statusDate] [datetime] NULL,
							[arrestingAgency_id] [numeric](19, 0) NULL,
							[associatedParty_id] [numeric](19, 0) NULL,
							[bookingAgency_id] [numeric](19, 0) NULL,
							[officer_id] [numeric](19, 0) NULL,
							[convId] [int] NULL,
													
								);			


							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Person Note">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	

							SELECT
							a.*
							FROM ecourt.tArrest a
							WHERE arrestDate IS NOT NULL
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="id" dest="id"/>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="optlock" dest="optlock"/>
							<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
							<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
							<mapping source="updateReason" dest="updateReason"/>
							<mapping source="arrestDate" dest="arrestDate"/>
							<mapping source="arrestTime" dest="arrestTime"/>
							<mapping source="arrestType" dest="arrestType"/>
							<mapping source="arrestingAgencyFileNumber" dest="arrestingAgencyFileNumber"/>
							<mapping source="bookingNumber" dest="bookingNumber"/>
							<mapping source="location" dest="location"/>
							<mapping source="statusDate" dest="statusDate"/>
							<mapping source="arrestingAgency_id" dest="arrestingAgency_id"/>
							<mapping source="associatedParty_id" dest="associatedParty_id"/>
							<mapping source="bookingAgency_id" dest="bookingAgency_id"/>
							<mapping source="officer_id" dest="officer_id"/>
							<mapping source="convId" dest="convId"/>
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="arrest_conv"/>
					</action>-
			
				</actions>
			</stage> 
		
		<stage num="50" mode="Serial" desc="Transform tBail" enabled="true">
			<actions>
				
					<action handler="SqlServer.Raw" desc="Creating tCaseOtherNumber" progresslabel="Creating  tBail" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create  tCaseOtherNumber">
							IF OBJECT_ID('bail_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[bail_conv];
							
				
							</task>
							
							<task handler="SqlServer.Script" desc="Create tCaseOtherNumber table">
							<![CDATA[
							
							CREATE TABLE [bail_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							[accessLevel] [int] NULL,
							[createUserRealName] [varchar](255) NULL,
							[createUsername] [varchar](255) NULL,
							[dateCreated] [datetime] NULL,
							[lastUpdateUserRealName] [varchar](255) NULL,
							[lastUpdateUsername] [varchar](255) NULL,
							[lastUpdated] [datetime] NULL,
							[memo] [varchar](512) NULL,
							[optlock] [int] NOT NULL,
							[roaAccessLevel] [int] NULL,
							[sourceCaseNumber] [varchar](255) NULL,
							[updateReason] [varchar](255) NULL,
							[bailAmountAppliedCents] [numeric](19, 0) NOT NULL,
							[bailAmountCents] [numeric](19, 0) NOT NULL,
							[bailType] [varchar](255) NULL,
							[bondAgentAddress1] [varchar](255) NULL,
							[bondAgentAddress2] [varchar](255) NULL,
							[bondAgentCity] [varchar](255) NULL,
							[bondAgentCountry] [varchar](255) NULL,
							[bondAgentNumber] [varchar](255) NULL,
							[bondAgentState] [varchar](255) NULL,
							[bondAgentZip] [varchar](255) NULL,
							[bondForfeitureNumber] [varchar](255) NULL,
							[bondNumber] [varchar](255) NULL,
							[bondType] [varchar](255) NULL,
							[datePosted] [datetime] NULL,
							[effectiveFrom] [datetime] NULL,
							[effectiveTo] [datetime] NULL,
							[bailAmountApplied] [float] NULL,
							[bailAmount] [float] NULL,
							[orderBy] [varchar](255) NULL,
							[refundOrderNumber] [varchar](255) NULL,
							[registerNumber] [varchar](255) NULL,
							[status] [varchar](255) NULL,
							[statusDate] [datetime] NULL,
							[suretyType] [varchar](255) NULL,
							[associatedParty_id] [numeric](19, 0) NOT NULL,
							[bailBondsman_id] [numeric](19, 0) NULL,
							[bondIndemnityCompany_id] [numeric](19, 0) NULL,
							[postedBailParty_id] [numeric](19, 0) NULL,
							[convId] [int] NULL,
							[notes] [varchar](7500) NULL,
							[cf_bailAmount] [float] NULL,
													
								);			


							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Bail">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	

							SELECT
							b.*
							FROM ecourt.tBail b
			
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="id" dest="id"/>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="optlock" dest="optlock"/>
							<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
							<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
							<mapping source="updateReason" dest="updateReason"/>
							<mapping source="bailAmountAppliedCents" dest="bailAmountAppliedCents"/>
							<mapping source="bailAmountCents" dest="bailAmountCents"/>
							<mapping source="bailType" dest="bailType"/>
							<mapping source="bondAgentAddress1" dest="bondAgentAddress1"/>
							<mapping source="bondAgentAddress2" dest="bondAgentAddress2"/>
							<mapping source="bondAgentCity" dest="bondAgentCity"/>
							<mapping source="bondAgentCountry" dest="bondAgentCountry"/>
							<mapping source="bondAgentNumber" dest="bondAgentNumber"/>
							<mapping source="bondAgentState" dest="bondAgentState"/>
							<mapping source="bondAgentZip" dest="bondAgentZip"/>
							<mapping source="bondForfeitureNumber" dest="bondForfeitureNumber"/>
							<mapping source="bondNumber" dest="bondNumber"/>
							<mapping source="bondType" dest="bondType"/>
							<mapping source="datePosted" dest="datePosted"/>
							<mapping source="effectiveFrom" dest="effectiveFrom"/>
							<mapping source="effectiveTo" dest="effectiveTo"/>
							<mapping source="bailAmountApplied" dest="bailAmountApplied"/>
							<mapping source="bailAmount" dest="bailAmount"/>
							<mapping source="orderBy" dest="orderBy"/>
							<mapping source="refundOrderNumber" dest="refundOrderNumber"/>
							<mapping source="registerNumber" dest="registerNumber"/>
							<mapping source="status" dest="status"/>
							<mapping source="statusDate" dest="statusDate"/>
							<mapping source="suretyType" dest="suretyType"/>
							<mapping source="associatedParty_id" dest="associatedParty_id"/>
							<mapping source="bailBondsman_id" dest="bailBondsman_id"/>
							<mapping source="bondIndemnityCompany_id" dest="bondIndemnityCompany_id"/>
							<mapping source="postedBailParty_id" dest="postedBailParty_id"/>
							<mapping source="convId" dest="convId"/>
							<mapping source="notes" dest="notes"/>
							<mapping source="cf_bailAmount" dest="cf_bailAmount"/>
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="bail_conv"/>
					</action>-
			
				</actions>
			</stage> 
		
		
		<stage num="52" mode="Serial" desc="Transform Case Status" enabled="true">
			<actions>
				
					<action handler="SqlServer.Raw" desc="Creating Case Status" progresslabel="Creating  Case Status" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create  Case Status">
							IF OBJECT_ID('caseStatus_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[caseStatus_conv];
							
				
							</task>
							
							<task handler="SqlServer.Script" desc="Create Case Status table">
							<![CDATA[
							
							CREATE TABLE [caseStatus_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							[accessLevel] [int] NULL,
							[createUserRealName] [varchar](255) NULL,
							[createUsername] [varchar](255) NULL,
							[dateCreated] [datetime] NULL,
							[lastUpdateUserRealName] [varchar](255) NULL,
							[lastUpdateUsername] [varchar](255) NULL,
							[lastUpdated] [datetime] NULL,
							[memo] [varchar](512) NULL,
							[optlock] [int] NOT NULL,
							[roaAccessLevel] [int] NULL,
							[sourceCaseNumber] [varchar](255) NULL,
							[updateReason] [varchar](255) NULL,
							[beginDate] [datetime] NULL,
							[endDate] [datetime] NULL,
							[value] [varchar](255) NULL,
							[case_id] [numeric](19, 0) NOT NULL,
							[convId] [int] NULL,
							[notes] [varchar](7500) NULL,
								);			


							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Case Status">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	

							SELECT
							cs.*
							FROM ecourt.tCaseStatus cs
			
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="id" dest="id"/>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="optlock" dest="optlock"/>
							<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
							<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
							<mapping source="updateReason" dest="updateReason"/>
							<mapping source="beginDate" dest="beginDate"/>
							<mapping source="endDate" dest="endDate"/>
							<mapping source="value" dest="value"/>
							<mapping source="case_id" dest="case_id"/>
							<mapping source="convId" dest="convId"/>
							<mapping source="notes" dest="notes"/>
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="caseStatus_conv"/>
					</action>-
			
				</actions>
			</stage> 
		
		
			
		<stage num="54" mode="Serial" desc="Transform Case Track" enabled="true">
			<actions>
				
					<action handler="SqlServer.Raw" desc="Creating Case Track" progresslabel="Creating  Case Track" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create  Case Track">
							IF OBJECT_ID('caseTrack_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[caseTrack_conv];
							
				
							</task>
							
							<task handler="SqlServer.Script" desc="Create Case Track table">
							<![CDATA[
							
							CREATE TABLE [caseTrack_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							[accessLevel] [int] NULL,
							[createUserRealName] [varchar](255) NULL,
							[createUsername] [varchar](255) NULL,
							[dateCreated] [datetime] NULL,
							[lastUpdateUserRealName] [varchar](255) NULL,
							[lastUpdateUsername] [varchar](255) NULL,
							[lastUpdated] [datetime] NULL,
							[memo] [varchar](7500) NULL,
							[optlock] [int] NOT NULL,
							[roaAccessLevel] [int] NULL,
							[sourceCaseNumber] [varchar](255) NULL,
							[updateReason] [varchar](255) NULL,
							[dateTracked] [datetime] NULL,
							[location] [varchar](255) NULL,
							[personName] [varchar](255) NULL,
							[trackingNumber] [varchar](255) NULL,
							[trackingType] [varchar](255) NULL,
							[case_id] [numeric](19, 0) NULL,
							[convId] [int] NULL,
							[cf_trackingLocation] [varchar](255) NULL,
							[notes] [varchar](7500) NULL,
							[dirPerson_id] [numeric](19, 0) NULL
				
								);			


							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Case Track">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	

							SELECT
							ct.*
							FROM ecourt.tCaseTrack ct
							
			
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="id" dest="id"/>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="optlock" dest="optlock"/>
							<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
							<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
							<mapping source="updateReason" dest="updateReason"/>
							<mapping source="dateTracked" dest="dateTracked"/>
							<mapping source="location" dest="location"/>
							<mapping source="personName" dest="personName"/>
							<mapping source="trackingNumber" dest="trackingNumber"/>
							<mapping source="trackingType" dest="trackingType"/>
							<mapping source="case_id" dest="case_id"/>
							<mapping source="convId" dest="convId"/>
							<mapping source="cf_trackingLocation" dest="cf_trackingLocation"/>
							<mapping source="notes" dest="notes"/>
							<mapping source="dirPerson_id" dest="dirPerson_id"/>
				
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="caseTrack_conv"/>
					</action>-
			
				</actions>
			</stage> 
		
		<stage num="56" mode="Serial" desc="Transform Case Joinder" enabled="true">
			<actions>
				
					<action handler="SqlServer.Raw" desc="Creating caseJoinder_conv" progresslabel="Creating  Case Joinder" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create  Case Track">
							IF OBJECT_ID('caseJoinder_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[caseJoinder_conv];
							
				
							</task>
							
							<task handler="SqlServer.Script" desc="Create caseJoinder_conv table">
							<![CDATA[
							
							CREATE TABLE [caseJoinder_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							[accessLevel] [int] NULL,
							[createUserRealName] [varchar](255) NULL,
							[createUsername] [varchar](255) NULL,
							[dateCreated] [datetime] NULL,
							[lastUpdateUserRealName] [varchar](255) NULL,
							[lastUpdateUsername] [varchar](255) NULL,
							[lastUpdated] [datetime] NULL,
							[memo] [varchar](7500) NULL,
							[description] [varchar](512) NULL,
							[effectiveFrom] [datetime] NULL,
							[effectiveTo] [datetime] NULL,
							[name] [varchar](255) NULL,
							[orderDate] [datetime] NULL,
							[type] [varchar](255) NULL,
							[convId] [int] NULL,
							tcaseJoinder_id NUMERIC(19,0)
								);			


							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Case Joinder">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	

							SELECT
							cj.*
							FROM ecourt.tCaseJoinder cj
			
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="id" dest="id"/>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="description" dest="description"/>
							<mapping source="effectiveFrom" dest="effectiveFrom"/>
							<mapping source="effectiveTo" dest="effectiveTo"/>
							<mapping source="name" dest="name"/>
							<mapping source="orderDate" dest="orderDate"/>
							<mapping source="type" dest="type"/>
							<mapping source="convId" dest="convId"/>
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="caseJoinder_conv"/>
					</action>-
			
				</actions>
			</stage> 
				
		<stage num="58" mode="Serial" desc="Transform Joinder Items" enabled="true">
			<actions>
				
					<action handler="SqlServer.Raw" desc="Creating caseJoinder_conv" progresslabel="Creating Joinder Items" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create  Case Track">
							IF OBJECT_ID('caseJoinedItem_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[caseJoinedItem_conv];
							
				
							</task>
							
							<task handler="SqlServer.Script" desc="Create caseJoinedItem_conv table">
							<![CDATA[
							
							CREATE TABLE [caseJoinedItem_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							[accessLevel] [int] NULL,
							[createUserRealName] [varchar](255) NULL,
							[createUsername] [varchar](255) NULL,
							[dateCreated] [datetime] NULL,
							[lastUpdateUserRealName] [varchar](255) NULL,
							[lastUpdateUsername] [varchar](255) NULL,
							[lastUpdated] [datetime] NULL,
							[memo] [varchar](7500) NULL,
							[optlock] [int] NOT NULL,
							[roaAccessLevel] [int] NULL,
							[sourceCaseNumber] [varchar](255) NULL,
							[updateReason] [varchar](255) NULL,
							[effectiveFrom] [datetime] NULL,
							[effectiveTo] [datetime] NULL,
							[primaryCase] [tinyint] NULL,
							[case_id] [numeric](19, 0) NOT NULL,
							[joinder_id] [numeric](19, 0) NOT NULL,
								);			


							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Case Joinded Item">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	

							SELECT
							cji.*
							FROM ecourt.[tCaseJoinedItem] cji
			
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="id" dest="id"/>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="optlock" dest="optlock"/>
							<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
							<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
							<mapping source="updateReason" dest="updateReason"/>
							<mapping source="effectiveFrom" dest="effectiveFrom"/>
							<mapping source="effectiveTo" dest="effectiveTo"/>
							<mapping source="primaryCase" dest="primaryCase"/>
							<mapping source="case_id" dest="case_id"/>
							<mapping source="joinder_id" dest="joinder_id"/>
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="caseJoinedItem_conv"/>
					</action>-
			
				</actions>
			</stage> 
		
		<stage num="60" mode="Serial" desc="Transform tCe_NonCollectibleFinancial" enabled="true">
			<actions>
				
					<action handler="SqlServer.Raw" desc="Creating caseJoinder_conv" progresslabel="Creating tCe_NonCollectibleFinancial_conv" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create tCe_NonCollectibleFinancial_conv">
							IF OBJECT_ID('tCe_NonCollectibleFinancial_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[tCe_NonCollectibleFinancial_conv];
							
				
							</task>
							
							<task handler="SqlServer.Script" desc="Create tCe_NonCollectibleFinancial_conv table">
							<![CDATA[
							
							CREATE TABLE [tCe_NonCollectibleFinancial_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							[accessLevel] [int] NULL,
							[createUserRealName] [varchar](255) NULL,
							[createUsername] [varchar](255) NULL,
							[dateCreated] [datetime] NULL,
							[lastUpdateUserRealName] [varchar](255) NULL,
							[lastUpdateUsername] [varchar](255) NULL,
							[lastUpdated] [datetime] NULL,
							[memo] [varchar](7500) NULL,
							[optlock] [int] NOT NULL,
							[roaAccessLevel] [int] NULL,
							[sourceCaseNumber] [varchar](255) NULL,
							[updateReason] [varchar](255) NULL,
							[allegedAmount] [float] NULL,
							[beginDate] [datetime] NULL,
							[category] [varchar](255) NULL,
							[date] [datetime] NULL,
							[description] [varchar](255) NULL,
							[endDate] [datetime] NULL,
							[location] [varchar](255) NULL,
							[notes] [varchar](7500) NULL,
							[orderedAmount] [float] NULL,
							[priority] [varchar](255) NULL,
							[status] [varchar](255) NULL,
							[type] [varchar](255) NULL,
							[case_id] [numeric](19, 0) NOT NULL,
							[convId] [int] NULL,
							tCe_NonCollectibleFinancial_id NUMERIC(19,0)
								);			


							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Case Joinded Item">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	

							SELECT
							*
							FROM ecourt.tCe_NonCollectibleFinancial
			
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="id" dest="id"/>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="optlock" dest="optlock"/>
							<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
							<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
							<mapping source="updateReason" dest="updateReason"/>
							<mapping source="allegedAmount" dest="allegedAmount"/>
							<mapping source="beginDate" dest="beginDate"/>
							<mapping source="category" dest="category"/>
							<mapping source="date" dest="date"/>
							<mapping source="description" dest="description"/>
							<mapping source="endDate" dest="endDate"/>
							<mapping source="location" dest="location"/>
							<mapping source="notes" dest="notes"/>
							<mapping source="orderedAmount" dest="orderedAmount"/>
							<mapping source="priority" dest="priority"/>
							<mapping source="status" dest="status"/>
							<mapping source="type" dest="type"/>
							<mapping source="case_id" dest="case_id"/>
							<mapping source="convId" dest="convId"/>
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="tCe_NonCollectibleFinancial_conv"/>
					</action>-
			
				</actions>
			</stage> 
		
		
		<!-- Placeholder Stage 62 - if needed -->
		
		<!-- Placeholder Stage 64 - if needed -->
		
		<stage num="66" mode="Serial" desc="Transform Checklist Item" enabled="true">
			<actions>
				
					<action handler="SqlServer.Raw" desc="Creating CheckList Item" progresslabel="Creating  Checklist Item" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create  Case Track">
							IF OBJECT_ID('checklistItem_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[checklistItem_conv];
							
				
							</task>
							
							<task handler="SqlServer.Script" desc="Create Check List Item table">
							<![CDATA[
							
							CREATE TABLE [checklistItem_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							[accessLevel] [int] NULL,
							[createUserRealName] [varchar](255) NULL,
							[createUsername] [varchar](255) NULL,
							[dateCreated] [datetime] NULL,
							[lastUpdateUserRealName] [varchar](255) NULL,
							[lastUpdateUsername] [varchar](255) NULL,
							[lastUpdated] [datetime] NULL,
							[memo] [varchar](512) NULL,
							[optlock] [int] NOT NULL,
							[roaAccessLevel] [int] NULL,
							[sourceCaseNumber] [varchar](255) NULL,
							[updateReason] [varchar](255) NULL,
							[complete] [tinyint] NOT NULL,
							[completeDate] [datetime] NULL,
							[description] [varchar](1024) NULL,
							[dueDate] [datetime] NULL,
							[instructions] [varchar](7500) NULL,
							[startDate] [datetime] NULL,
							[suspended] [tinyint] NOT NULL,
							[case_id] [numeric](19, 0) NULL,
							[checkListItemDef_id] [numeric](19, 0) NULL,
							[completedBy_id] [numeric](19, 0) NULL,
							[dirPerson_id] [numeric](19, 0) NULL,
							[person_id] [numeric](19, 0) NULL,
							[subCase_id] [numeric](19, 0) NULL,
							[convId] [int] NULL,
							[status] [varchar](255) NULL,
							[type] [varchar](255) NULL,
							[dirEntryCode] [varchar](255) NULL,
							[dirPerson_id_Load] [numeric](19, 0) NULL,
							caseKey NUMERIC(19,0),
							tChecklistItem_id NUMERIC(19,0)
						
								);			


							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform checklistItem">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	

							SELECT
							cli.*, cc.idKey as caseKey,
							de.code as dirEntryCode,
							d.id as dirPerson_id_Load,
							memo_ld = 
							CASE
							WHEN dirPerson_id IS NOT NULL THEN CONCAT(de.code, ': ', dp.firstName, ' ', dp.middleName, ' ', dp.lastName)
							ELSE NULL
							END
							FROM ecourt.tChecklistItem cli
							LEFT JOIN cnmiStaging.dbo.case_conv cc
							ON cli.case_id = cc.id 
							LEFT JOIN ecourt.tdirEntry de
							ON cli.dirPerson_id = de.id
							LEFT JOIN cnmieCourtConv.ecourt.tDirEntry d
							ON de.code = d.code
							LEFT JOIN CNMI_eCourt_full.ecourt.tDirPerson dp
							ON cli.dirPerson_id = dp.id;

			
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="id" dest="id"/>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo_ld" dest="memo"/>
							<mapping source="optlock" dest="optlock"/>
							<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
							<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
							<mapping source="updateReason" dest="updateReason"/>
							<mapping source="complete" dest="complete"/>
							<mapping source="completeDate" dest="completeDate"/>
							<mapping source="description" dest="description"/>
							<mapping source="dueDate" dest="dueDate"/>
							<mapping source="instructions" dest="instructions"/>
							<mapping source="startDate" dest="startDate"/>
							<mapping source="suspended" dest="suspended"/>
							<mapping source="case_id" dest="case_id"/>
							<mapping source="checkListItemDef_id" dest="checkListItemDef_id"/>
							<mapping source="completedBy_id" dest="completedBy_id"/>
							<mapping source="dirPerson_id" dest="dirPerson_id"/>
							<mapping source="person_id" dest="person_id"/>
							<mapping source="subCase_id" dest="subCase_id"/>
							<mapping source="convId" dest="convId"/>
							<mapping source="status" dest="status"/>
							<mapping source="type" dest="type"/>
							<mapping source="dirEntryCode" dest="dirEntryCode"/>
							<mapping source="dirPerson_id_Load" dest="dirPerson_id_Load"/>
							<mapping source="caseKey" dest="caseKey"/>
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="checklistItem_conv"/>
					</action>-
			
				</actions>
			</stage> 
				
		<!-- Placeholder Stage 68 - if needed -->
		
		<!-- Placeholder Stage 70 - if needed -->
		
		<!-- Placwholder Stage 72 - if needed -->
		
			
		<stage num="74" mode="Serial" desc="Transform Charge" enabled="true">
			<actions>
				
					<action handler="SqlServer.Raw" desc="Creating Charge" progresslabel="Creating Charge" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create  Charge">
							IF OBJECT_ID('charge_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[charge_conv];
							
				
							</task>
							
							<task handler="SqlServer.Script" desc="Create Charge table">
							<![CDATA[
							
							CREATE TABLE [charge_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							[accessLevel] [int] NULL,
							[createUserRealName] [varchar](255) NULL,
							[createUsername] [varchar](255) NULL,
							[dateCreated] [datetime] NULL,
							[lastUpdateUserRealName] [varchar](255) NULL,
							[lastUpdateUsername] [varchar](255) NULL,
							[lastUpdated] [datetime] NULL,
							[memo] [varchar](512) NULL,
							[optlock] [int] NOT NULL,
							[roaAccessLevel] [int] NULL,
							[sourceCaseNumber] [varchar](255) NULL,
							[updateReason] [varchar](255) NULL,
							[actualSpeed] [float] NULL,
							[agency] [varchar](255) NULL,
							[bac] [varchar](255) NULL,
							[chargeAmount] [float] NULL,
							[chargeDate] [datetime] NULL,
							[chargeDegree] [varchar](255) NULL,
							[chargeNumber] [varchar](255) NULL,
							[chargeTime] [varchar](255) NULL,
							[chargeToDate] [datetime] NULL,
							[chargeToTime] [varchar](255) NULL,
							[chargeType] [varchar](255) NULL,
							[citedSpeed] [float] NULL,
							[condition] [varchar](255) NULL,
							[correctable] [varchar](255) NULL,
							[counts] [int] NULL,
							[dateFiled] [datetime] NULL,
							[declinationMemo] [varchar](255) NULL,
							[description] [varchar](255) NULL,
							[dispositionDate] [datetime] NULL,
							[dispositionManner] [varchar](255) NULL,
							[dispositionReason] [varchar](255) NULL,
							[dispositionType] [varchar](255) NULL,
							[eligible] [varchar](255) NULL,
							[ivrReferenceNumber] [varchar](255) NULL,
							[location] [varchar](255) NULL,
							[mustAppear] [tinyint] NULL,
							[offenseLevel] [int] NULL,
							[plea] [varchar](255) NULL,
							[pleaDate] [datetime] NULL,
							[pleaStatus] [varchar](255) NULL,
							[postedSpeed] [float] NULL,
							[principal] [tinyint] NULL,
							[sentencingCompleted] [tinyint] NULL,
							[stageAdded] [varchar](255) NULL,
							[status] [varchar](255) NULL,
							[statusDate] [datetime] NULL,
							[ticketNumber] [varchar](255) NULL,
							[unitOverage] [float] NULL,
							[weightOverage] [float] NULL,
							[associatedParty_id] [numeric](19, 0) NOT NULL,
							[statute_id] [numeric](19, 0) NULL,
							[inchoateType] [varchar](255) NULL,
							[convId] [int] NULL,
							[chargeDate2] [datetime] NULL,
							[date] [datetime] NULL,
							[locationJurisdiction] [varchar](255) NULL,
							[locationNotes] [varchar](7500) NULL,
							[notes] [varchar](7500) NULL,
							[notes2] [varchar](7500) NULL,
							[pleaDispoNotes] [varchar](7500) NULL,
							[pleaDispoNotes2] [varchar](7500) NULL,
							[convId_CountInvPers] [int] NULL,
							[convId_ChargeHistory] [int] NULL,
							[conviction] [varchar](255) NULL,
							[discount] [varchar](255) NULL,
							[cfAllegationAgainst] [varchar](255) NULL,
							[cfConstructionZone] [tinyint] NULL,
							[cfDismissalReason] [varchar](255) NULL,
							[cfSchoolZone] [tinyint] NULL,
							[charge_id] [numeric](19, 0) NULL,
							[diversion] [tinyint] NULL,
							tCharge_id NUMERIC(19,0),
							caseKey NUMERIC(19,0),
							case_id NUMERIC(19,0),
							stConfigCode VARCHAR(255),
							sentencingCompletedLd NUMERIC(19,0)
						
								);			


							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform charge">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	

							SELECT
							chg.*, pc.caseKey, pc.case_id, st.configCode as stConfigCode
							FROM ecourt.tCharge chg
							LEFT JOIN ecourt.tStatute st 
							ON chg.statute_id = st.id
							INNER JOIN cnmiStaging.dbo.party_conv pc
							ON pc.id = chg.associatedParty_id
							INNER JOIN cnmiStaging.dbo.convertCases_conv cv
							ON pc.case_id = cv.case_id 
							WHERE cv.caseGroup = 'CR'
			
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="id" dest="id"/>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="optlock" dest="optlock"/>
							<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
							<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
							<mapping source="updateReason" dest="updateReason"/>
							<mapping source="actualSpeed" dest="actualSpeed"/>
							<mapping source="agency" dest="agency"/>
							<mapping source="bac" dest="bac"/>
							<mapping source="chargeAmount" dest="chargeAmount"/>
							<mapping source="chargeDate" dest="chargeDate"/>
							<mapping source="chargeDegree" dest="chargeDegree"/>
							<mapping source="chargeNumber" dest="chargeNumber"/>
							<mapping source="chargeTime" dest="chargeTime"/>
							<mapping source="chargeToDate" dest="chargeToDate"/>
							<mapping source="chargeToTime" dest="chargeToTime"/>
							<mapping source="chargeType" dest="chargeType"/>
							<mapping source="citedSpeed" dest="citedSpeed"/>
							<mapping source="condition" dest="condition"/>
							<mapping source="correctable" dest="correctable"/>
							<mapping source="counts" dest="counts"/>
							<mapping source="dateFiled" dest="dateFiled"/>
							<mapping source="declinationMemo" dest="declinationMemo"/>
							<mapping source="description" dest="description"/>
							<mapping source="dispositionDate" dest="dispositionDate"/>
							<mapping source="dispositionManner" dest="dispositionManner"/>
							<mapping source="dispositionReason" dest="dispositionReason"/>
							<mapping source="dispositionType" dest="dispositionType"/>
							<mapping source="eligible" dest="eligible"/>
							<mapping source="ivrReferenceNumber" dest="ivrReferenceNumber"/>
							<mapping source="location" dest="location"/>
							<mapping source="mustAppear" dest="mustAppear"/>
							<mapping source="offenseLevel" dest="offenseLevel"/>
							<mapping source="plea" dest="plea"/>
							<mapping source="pleaDate" dest="pleaDate"/>
							<mapping source="pleaStatus" dest="pleaStatus"/>
							<mapping source="postedSpeed" dest="postedSpeed"/>
							<mapping source="principal" dest="principal"/>
							<mapping source="sentencingCompleted" dest="sentencingCompleted"/>
							<mapping source="stageAdded" dest="stageAdded"/>
							<mapping source="status" dest="status"/>
							<mapping source="statusDate" dest="statusDate"/>
							<mapping source="ticketNumber" dest="ticketNumber"/>
							<mapping source="unitOverage" dest="unitOverage"/>
							<mapping source="weightOverage" dest="weightOverage"/>
							<mapping source="associatedParty_id" dest="associatedParty_id"/>
							<mapping source="statute_id" dest="statute_id"/>
							<mapping source="inchoateType" dest="inchoateType"/>
							<mapping source="convId" dest="convId"/>
							<mapping source="chargeDate2" dest="chargeDate2"/>
							<mapping source="date" dest="date"/>
							<mapping source="locationJurisdiction" dest="locationJurisdiction"/>
							<mapping source="locationNotes" dest="locationNotes"/>
							<mapping source="notes" dest="notes"/>
							<mapping source="notes2" dest="notes2"/>
							<mapping source="pleaDispoNotes" dest="pleaDispoNotes"/>
							<mapping source="pleaDispoNotes2" dest="pleaDispoNotes2"/>
							<mapping source="convId_CountInvPers" dest="convId_CountInvPers"/>
							<mapping source="convId_ChargeHistory" dest="convId_ChargeHistory"/>
							<mapping source="conviction" dest="conviction"/>
							<mapping source="discount" dest="discount"/>
							<mapping source="caseKey" dest="caseKey"/>
							<mapping source="case_id" dest="case_id"/>
							<mapping source="stConfigCode" dest="stConfigCode"/>
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="charge_conv"/>
					</action>-
			
				</actions>
			</stage> 
		
		<stage num="76" mode="Serial" desc="Transform ChargeCharacteristic" enabled="true">
			<actions>
				
					<action handler="SqlServer.Raw" desc="Creating ChargeCharacteristic" progresslabel="Creating ChargeCharacteristic" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create  ChargeCharacteristic">
							IF OBJECT_ID('chargeCharacteristic_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[chargeCharacteristic_conv];
							
				
							</task>
							
							<task handler="SqlServer.Script" desc="Create ChargeCharacteristic table">
							<![CDATA[
							
							CREATE TABLE [chargeCharacteristic_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							[accessLevel] [int] NULL,
							[createUserRealName] [varchar](255) NULL,
							[createUsername] [varchar](255) NULL,
							[dateCreated] [datetime] NULL,
							[lastUpdateUserRealName] [varchar](255) NULL,
							[lastUpdateUsername] [varchar](255) NULL,
							[lastUpdated] [datetime] NULL,
							[memo] [varchar](512) NULL,
							[optlock] [int] NOT NULL,
							[roaAccessLevel] [int] NULL,
							[sourceCaseNumber] [varchar](255) NULL,
							[updateReason] [varchar](255) NULL,
							[characteristic] [varchar](255) NULL,
							[status] [varchar](255) NULL,
							[statusDate] [datetime] NULL,
							[type] [varchar](255) NULL,
							[charge_id] [numeric](19, 0) NOT NULL,
							[convId] [int] NULL,
							[notes] [varchar](7500) NULL,
							[value] [varchar](255) NULL
						
								);			


							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform charge">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	

							SELECT 
							chgc.*
							FROM ecourt.tChargeCharacteristic chgc
			
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="optlock" dest="optlock"/>
							<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
							<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
							<mapping source="updateReason" dest="updateReason"/>
							<mapping source="characteristic" dest="characteristic"/>
							<mapping source="status" dest="status"/>
							<mapping source="statusDate" dest="statusDate"/>
							<mapping source="type" dest="type"/>
							<mapping source="charge_id" dest="charge_id"/>
							<mapping source="convId" dest="convId"/>
							<mapping source="notes" dest="notes"/>
							<mapping source="value" dest="value"/>
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="chargeCharacteristic_conv"/>
					</action>-
			
				</actions>
			</stage> 
		
		<stage num="80" mode="Serial" desc="Transform Sentence" enabled="true">
			<actions>
				
					<action handler="SqlServer.Raw" desc="Creating Sentence" progresslabel="Creating Sentence" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create  Sentence">
							IF OBJECT_ID('sentence_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[sentence_conv];
							
				
							</task>
							
							<task handler="SqlServer.Script" desc="Create ChargeCharacteristic table">
							<![CDATA[
							
							CREATE TABLE [sentence_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							[accessLevel] [int] NULL,
							[createUserRealName] [varchar](255) NULL,
							[createUsername] [varchar](255) NULL,
							[dateCreated] [datetime] NULL,
							[lastUpdateUserRealName] [varchar](255) NULL,
							[lastUpdateUsername] [varchar](255) NULL,
							[lastUpdated] [datetime] NULL,
							[memo] [varchar](512) NULL,
							[optlock] [int] NOT NULL,
							[roaAccessLevel] [int] NULL,
							[sourceCaseNumber] [varchar](255) NULL,
							[updateReason] [varchar](255) NULL,
							[amount] [float] NULL,
							[amountReducedTo] [float] NULL,
							[amountSuspended] [float] NULL,
							[completeBy] [datetime] NULL,
							[creditDays] [int] NULL,
							[description] [varchar](255) NULL,
							[length] [float] NULL,
							[length2] [float] NULL,
							[length3] [float] NULL,
							[length4] [float] NULL,
							[lengthPeriod] [varchar](255) NULL,
							[lengthUnit] [varchar](255) NULL,
							[lengthUnit2] [varchar](255) NULL,
							[lengthUnit3] [varchar](255) NULL,
							[lengthUnit4] [varchar](255) NULL,
							[liabilityType] [varchar](255) NULL,
							[redeemableLength] [float] NULL,
							[sentenceBeginDate] [datetime] NULL,
							[sentenceCompliance] [varchar](255) NULL,
							[sentenceDate] [datetime] NULL,
							[sentenceEndDate] [datetime] NULL,
							[sentenceType] [varchar](255) NULL,
							[serviceMethod] [varchar](255) NULL,
							[status] [varchar](255) NULL,
							[statusDate] [datetime] NULL,
							[statusEndDate] [datetime] NULL,
							[associatedCharge_id] [numeric](19, 0) NOT NULL,
							[official_id] [numeric](19, 0) NULL,
							[convId] [int] NULL,
							[creditAmountFromDesc] [varchar](7500) NULL,
							[creditAmountToDesc] [varchar](7500) NULL,
							[creditDurationDesc] [varchar](7500) NULL,
							[creditNotes] [varchar](7500) NULL,
							[notes] [varchar](7500) NULL,
							[sentenceAmountFromDesc] [varchar](255) NULL,
							[sentenceAmountToDesc] [varchar](255) NULL,
							[sentenceDurationDesc] [varchar](255) NULL,
							[sentenceLocation] [varchar](255) NULL,
							[sentenceSubType] [varchar](255) NULL,
							[suspendAmountFromDesc] [varchar](7500) NULL,
							[suspendAmountToDesc] [varchar](7500) NULL,
							[suspendDays] [int] NULL,
							[suspendDurationDesc] [varchar](7500) NULL,
							[suspendNotes] [varchar](7500) NULL,
							[convId_ObligationID] [int] NULL,
							[cfAggregate] [varchar](255) NULL,
							tSentence_id NUMERIC(19,0)
						
								);			


							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Sentence">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	

							SELECT 
							s.*
							FROM ecourt.tSentence s
			
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="id" dest="id"/>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="optlock" dest="optlock"/>
							<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
							<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
							<mapping source="updateReason" dest="updateReason"/>
							<mapping source="amount" dest="amount"/>
							<mapping source="amountReducedTo" dest="amountReducedTo"/>
							<mapping source="amountSuspended" dest="amountSuspended"/>
							<mapping source="completeBy" dest="completeBy"/>
							<mapping source="creditDays" dest="creditDays"/>
							<mapping source="description" dest="description"/>
							<mapping source="length" dest="length"/>
							<mapping source="length2" dest="length2"/>
							<mapping source="length3" dest="length3"/>
							<mapping source="length4" dest="length4"/>
							<mapping source="lengthPeriod" dest="lengthPeriod"/>
							<mapping source="lengthUnit" dest="lengthUnit"/>
							<mapping source="lengthUnit2" dest="lengthUnit2"/>
							<mapping source="lengthUnit3" dest="lengthUnit3"/>
							<mapping source="lengthUnit4" dest="lengthUnit4"/>
							<mapping source="liabilityType" dest="liabilityType"/>
							<mapping source="redeemableLength" dest="redeemableLength"/>
							<mapping source="sentenceBeginDate" dest="sentenceBeginDate"/>
							<mapping source="sentenceCompliance" dest="sentenceCompliance"/>
							<mapping source="sentenceDate" dest="sentenceDate"/>
							<mapping source="sentenceEndDate" dest="sentenceEndDate"/>
							<mapping source="sentenceType" dest="sentenceType"/>
							<mapping source="serviceMethod" dest="serviceMethod"/>
							<mapping source="status" dest="status"/>
							<mapping source="statusDate" dest="statusDate"/>
							<mapping source="statusEndDate" dest="statusEndDate"/>
							<mapping source="associatedCharge_id" dest="associatedCharge_id"/>
							<mapping source="official_id" dest="official_id"/>
							<mapping source="convId" dest="convId"/>
							<mapping source="creditAmountFromDesc" dest="creditAmountFromDesc"/>
							<mapping source="creditAmountToDesc" dest="creditAmountToDesc"/>
							<mapping source="creditDurationDesc" dest="creditDurationDesc"/>
							<mapping source="creditNotes" dest="creditNotes"/>
							<mapping source="notes" dest="notes"/>
							<mapping source="sentenceAmountFromDesc" dest="sentenceAmountFromDesc"/>
							<mapping source="sentenceAmountToDesc" dest="sentenceAmountToDesc"/>
							<mapping source="sentenceDurationDesc" dest="sentenceDurationDesc"/>
							<mapping source="sentenceLocation" dest="sentenceLocation"/>
							<mapping source="sentenceSubType" dest="sentenceSubType"/>
							<mapping source="suspendAmountFromDesc" dest="suspendAmountFromDesc"/>
							<mapping source="suspendAmountToDesc" dest="suspendAmountToDesc"/>
							<mapping source="suspendDays" dest="suspendDays"/>
							<mapping source="suspendDurationDesc" dest="suspendDurationDesc"/>
							<mapping source="suspendNotes" dest="suspendNotes"/>
							<mapping source="convId_ObligationID" dest="convId_ObligationID"/>
						<!--	<mapping source="cfAggregate" dest="cfAggregate"/> -->
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="sentence_conv"/>
					</action>
					
					<action handler="SqlServer.Raw" desc="Creating Sentence" progresslabel="Set sentencing completed" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">

							<task handler="SqlServer.Script" desc="Create ChargeCharacteristic table">
							<![CDATA[
							
							UPDATE charge_conv
							SET sentencingCompleted =
							CASE
								WHEN sc.ocr IS NULL THEN 0
								ELSE 1
							END
							FROM charge_conv cc 
							LEFT JOIN (SELECT associatedCharge_id, count(1) as ocr FROM sentence_conv sc GROUP BY associatedCharge_id) sc
							ON cc.id = sc.associatedCharge_id

							]]>
							
							</task>
							
						</source>
					</action>
					
			
				</actions>
			</stage> 
		
		<stage num="82" mode="Serial" desc="Transform Sentence Condition" enabled="true">
			<actions>
				
					<action handler="SqlServer.Raw" desc="Creating Sentence" progresslabel="Creating Sentence Condition" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create  Sentence Condition">
							IF OBJECT_ID('sentenceCondition_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[sentenceCondition_conv];
							
				
							</task>
							
							<task handler="SqlServer.Script" desc="Create Sentence Condition table">
							<![CDATA[
							
							CREATE TABLE [sentenceCondition_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							[accessLevel] [int] NULL,
							[createUserRealName] [varchar](255) NULL,
							[createUsername] [varchar](255) NULL,
							[dateCreated] [datetime] NULL,
							[lastUpdateUserRealName] [varchar](255) NULL,
							[lastUpdateUsername] [varchar](255) NULL,
							[lastUpdated] [datetime] NULL,
							[memo] [varchar](512) NULL,
							[optlock] [int] NOT NULL,
							[roaAccessLevel] [int] NULL,
							[sourceCaseNumber] [varchar](255) NULL,
							[updateReason] [varchar](255) NULL,
							[amount] [float] NULL,
							[length] [float] NULL,
							[lengthUnit] [varchar](255) NULL,
							[sentenceConditionBeginDate] [datetime] NULL,
							[sentenceConditionDate] [datetime] NULL,
							[sentenceConditionEndDate] [datetime] NULL,
							[sentenceConditionType] [varchar](255) NULL,
							[status] [varchar](255) NULL,
							[statusDate] [datetime] NULL,
							[associatedSentence_id] [numeric](19, 0) NOT NULL,
							[convId] [int] NULL,
							[amount2] [float] NULL,
							[description] [varchar](255) NULL,
							[length2] [float] NULL,
							[lengthUnit2] [varchar](255) NULL,
							[notes] [varchar](7500) NULL,
							[sentenceConditionAmtFromDesc] [varchar](255) NULL,
							[sentenceConditionAmtToDesc] [varchar](255) NULL,
							[sentenceConditionDurDesc] [varchar](255) NULL,
							[sentenceConditionSubType] [varchar](255) NULL,
							[sentenceConditionLocation] [varchar](255) NULL
						
								);			


							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Sentence">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	

							SELECT 
							sc.*
							FROM ecourt.tSentenceCondition sc
			
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="id" dest="id"/>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="optlock" dest="optlock"/>
							<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
							<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
							<mapping source="updateReason" dest="updateReason"/>
							<mapping source="amount" dest="amount"/>
							<mapping source="length" dest="length"/>
							<mapping source="lengthUnit" dest="lengthUnit"/>
							<mapping source="sentenceConditionBeginDate" dest="sentenceConditionBeginDate"/>
							<mapping source="sentenceConditionDate" dest="sentenceConditionDate"/>
							<mapping source="sentenceConditionEndDate" dest="sentenceConditionEndDate"/>
							<mapping source="sentenceConditionType" dest="sentenceConditionType"/>
							<mapping source="status" dest="status"/>
							<mapping source="statusDate" dest="statusDate"/>
							<mapping source="associatedSentence_id" dest="associatedSentence_id"/>
							<mapping source="convId" dest="convId"/>
							<mapping source="amount2" dest="amount2"/>
							<mapping source="description" dest="description"/>
							<mapping source="length2" dest="length2"/>
							<mapping source="lengthUnit2" dest="lengthUnit2"/>
							<mapping source="notes" dest="notes"/>
							<mapping source="sentenceConditionAmtFromDesc" dest="sentenceConditionAmtFromDesc"/>
							<mapping source="sentenceConditionAmtToDesc" dest="sentenceConditionAmtToDesc"/>
							<mapping source="sentenceConditionDurDesc" dest="sentenceConditionDurDesc"/>
							<mapping source="sentenceConditionSubType" dest="sentenceConditionSubType"/>
							<mapping source="sentenceConditionLocation" dest="sentenceConditionLocation"/>
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="sentenceCondition_conv"/>
					</action>
			
				</actions>
			</stage> 
		
		<stage num="84" mode="Serial" desc="Transform Case Assignment" enabled="true">
			<actions>
				
					<action handler="SqlServer.Raw" desc="Creating Case Assignment" progresslabel="Creating Case Assignment" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create  Case Assignment">
							IF OBJECT_ID('caseAssignment_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[caseAssignment_conv];

				
							</task>
							
							<task handler="SqlServer.Script" desc="Create Sentence Condition table">
							<![CDATA[
							
							CREATE TABLE [caseAssignment_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							[accessLevel] [int] NULL,
							[createUserRealName] [varchar](255) NULL,
							[createUsername] [varchar](255) NULL,
							[dateCreated] [datetime] NULL,
							[lastUpdateUserRealName] [varchar](255) NULL,
							[lastUpdateUsername] [varchar](255) NULL,
							[lastUpdated] [datetime] NULL,
							[memo] [varchar](512) NULL,
							[optlock] [int] NOT NULL,
							[roaAccessLevel] [int] NULL,
							[sourceCaseNumber] [varchar](255) NULL,
							[updateReason] [varchar](255) NULL,
							[allowPublicAccess] [tinyint] NULL,
							[assignmentGroup] [varchar](255) NULL,
							[assignmentKey] [varchar](255) NULL,
							[assignmentKeyComments] [varchar](255) NULL,
							[assignmentMethod] [varchar](255) NULL,
							[assignmentRole] [varchar](255) NULL,
							[assignmentWeight] [int] NULL,
							[assignmentWeightTotal] [int] NULL,
							[dateAssigned] [datetime] NULL,
							[dateOrdered] [datetime] NULL,
							[dateRemoved] [datetime] NULL,
							[dissenting] [varchar](255) NULL,
							[locationCode] [varchar](255) NULL,
							[locationId] [numeric](19, 0) NULL,
							[locationName] [varchar](255) NULL,
							[parentLocationCode] [varchar](255) NULL,
							[parentLocationId] [numeric](19, 0) NULL,
							[parentLocationName] [varchar](255) NULL,
							[parentOrgUnitCode] [varchar](255) NULL,
							[parentOrgUnitId] [numeric](19, 0) NULL,
							[parentOrgUnitName] [varchar](255) NULL,
							[reassignmentWeight] [int] NULL,
							[removalReason] [varchar](255) NULL,
							[removalReasonSubType] [varchar](255) NULL,
							[removalRequestedBy] [varchar](255) NULL,
							[representing] [varchar](255) NULL,
							[status] [varchar](255) NULL,
							[statusDate] [datetime] NULL,
							[writing] [varchar](255) NULL,
							[case_id] [numeric](19, 0) NOT NULL,
							[directoryPerson_id] [numeric](19, 0) NULL,
							[person_id] [numeric](19, 0) NULL,
							[subCase_id] [numeric](19, 0) NULL,
							[assignmentSubRole] [varchar](255) NULL,
							[victim] [tinyint] NULL,
							[convId] [int] NULL,
							[flag1] [tinyint] NULL,
							[flag2] [tinyint] NULL,
							[flag3] [tinyint] NULL,
							[flag4] [tinyint] NULL,
							[flag5] [tinyint] NULL,
							[notes] [varchar](7500) NULL,
							[notification] [tinyint] NULL,
							[cmsReferenceId] [varchar](255) NULL,
							[efmReferenceId] [varchar](255) NULL,
							[dirOrgUnit_id] [numeric](19, 0) NULL,
							[associatedADR_id] [numeric](19, 0) NULL,
							[eventInvPersConvId] [int] NULL,
							dirPerson_id NUMERIC(19,0),
							code VARCHAR(255),
							firstName VARCHAR(255),
							lastName VARCHAR(255),
							middleName VARCHAR(255),
							tPID NUMERIC(19,0),
							tCaseAssignment_id NUMERIC(19,0),
							tPerson_id NUMERIC(19,0),
							caseKey NUMERIC(19,0),
							dirEntryCode VARCHAR(255),
							dirOrgUnit_id_Load NUMERIC(19,0)
						
								);	
							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Case Assignment" enabled="true">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	
								SELECT dp.firstName, dp.lastName, dp.middleName, cs.idKey as caseKey, de.code as dirEntryCode,  cas.*,
								dirOrgUnit_id_Load = 
								CASE
									WHEN dirOrgUnit_id = 19 THEN 3491
									WHEN dirOrgUnit_id = 17 THEN 3491
									WHEN dirOrgUnit_id = 13 THEN 3489
									WHEN dirOrgUnit_id = 27 THEN 3495
									WHEN dirOrgUnit_id = 83 THEN 83
									WHEN dirOrgUnit_id = 77 THEN 77
									WHEN dirOrgUnit_id = 7 THEN 3499
									WHEN dirOrgUnit_id = 65 THEN 65
									WHEN dirOrgUnit_id = 45 THEN 45
									WHEN dirOrgUnit_id = 69 THEN 69
									WHEN dirOrgUnit_id = 29 THEN 3497
									WHEN dirOrgUnit_id = 81 THEN 81
									WHEN dirOrgUnit_id = 49 THEN 3493
									WHEN dirOrgUnit_id = 31 THEN 3497
									WHEN dirOrgUnit_id = 89 THEN 89
									WHEN dirOrgUnit_id = 105 THEN 105
									WHEN dirOrgUnit_id = 5 THEN 3499
									WHEN dirOrgUnit_id = 21 THEN 3493
									WHEN dirOrgUnit_id = 63 THEN 63
									WHEN dirOrgUnit_id = 9 THEN 3489
									WHEN dirOrgUnit_id = 39 THEN 39
									WHEN dirOrgUnit_id = 15 THEN 3491
									WHEN dirOrgUnit_id = 47 THEN 3493
									WHEN dirOrgUnit_id = 35 THEN 35
									WHEN dirOrgUnit_id = 33 THEN 3497
									WHEN dirOrgUnit_id = 103 THEN 103
									WHEN dirOrgUnit_id = 23 THEN 3495
									WHEN dirOrgUnit_id = 3 THEN 3
									WHEN dirOrgUnit_id = 11 THEN 3489
									WHEN dirOrgUnit_id = 95 THEN 95
									WHEN dirOrgUnit_id = 25 THEN 3495
									WHEN dirOrgUnit_id = 41 THEN 41
									WHEN dirOrgUnit_id = 99 THEN 3499
								END
								FROM ecourt.tCaseAssignment cas
								INNER JOIN ecourt.tdirPerson dp
								ON cas.directoryPerson_id = dp.id
								INNER JOIN ecourt.tdirEntry de
								ON dp.id = de.id
								INNER JOIN cnmiStaging.dbo.case_conv cs 
								ON cas.case_id = cs.id
					
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="caseKey" dest="caseKey"/>
							<mapping source="id" dest="id"/>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="optlock" dest="optlock"/>
							<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
							<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
							<mapping source="updateReason" dest="updateReason"/>
							<mapping source="allowPublicAccess" dest="allowPublicAccess"/>
							<mapping source="assignmentGroup" dest="assignmentGroup"/>
							<mapping source="assignmentKey" dest="assignmentKey"/>
							<mapping source="assignmentKeyComments" dest="assignmentKeyComments"/>
							<mapping source="assignmentMethod" dest="assignmentMethod"/>
							<mapping source="assignmentRole" dest="assignmentRole"/>
							<mapping source="assignmentWeight" dest="assignmentWeight"/>
							<mapping source="assignmentWeightTotal" dest="assignmentWeightTotal"/>
							<mapping source="dateAssigned" dest="dateAssigned"/>
							<mapping source="dateOrdered" dest="dateOrdered"/>
							<mapping source="dateRemoved" dest="dateRemoved"/>
							<mapping source="dissenting" dest="dissenting"/>
							<mapping source="locationCode" dest="locationCode"/>
							<mapping source="locationId" dest="locationId"/>
							<mapping source="locationName" dest="locationName"/>
							<mapping source="parentLocationCode" dest="parentLocationCode"/>
							<mapping source="parentLocationId" dest="parentLocationId"/>
							<mapping source="parentLocationName" dest="parentLocationName"/>
							<mapping source="parentOrgUnitCode" dest="parentOrgUnitCode"/>
							<mapping source="parentOrgUnitId" dest="parentOrgUnitId"/>
							<mapping source="parentOrgUnitName" dest="parentOrgUnitName"/>
							<mapping source="reassignmentWeight" dest="reassignmentWeight"/>
							<mapping source="removalReason" dest="removalReason"/>
							<mapping source="removalReasonSubType" dest="removalReasonSubType"/>
							<mapping source="removalRequestedBy" dest="removalRequestedBy"/>
							<mapping source="representing" dest="representing"/>
							<mapping source="status" dest="status"/>
							<mapping source="statusDate" dest="statusDate"/>
							<mapping source="writing" dest="writing"/>
							<mapping source="case_id" dest="case_id"/>
							<mapping source="directoryPerson_id" dest="directoryPerson_id"/>
							<mapping source="person_id" dest="person_id"/>
							<mapping source="subCase_id" dest="subCase_id"/>
							<mapping source="assignmentSubRole" dest="assignmentSubRole"/>
							<mapping source="victim" dest="victim"/>
							<mapping source="convId" dest="convId"/>
							<mapping source="flag1" dest="flag1"/>
							<mapping source="flag2" dest="flag2"/>
							<mapping source="flag3" dest="flag3"/>
							<mapping source="flag4" dest="flag4"/>
							<mapping source="flag5" dest="flag5"/>
							<mapping source="notes" dest="notes"/>
							<mapping source="notification" dest="notification"/>
							<mapping source="cmsReferenceId" dest="cmsReferenceId"/>
							<mapping source="efmReferenceId" dest="efmReferenceId"/>
							<mapping source="dirOrgUnit_id" dest="dirOrgUnit_id"/>
							<mapping source="associatedADR_id" dest="associatedADR_id"/>
							<mapping source="eventInvPersConvId" dest="eventInvPersConvId"/>
							<mapping source="firstName" dest="firstName"/>
							<mapping source="middleName" dest="middleName"/>
							<mapping source="lastName" dest="lastName"/>
							<mapping source="dirEntryCode" dest="dirEntryCode"/>
							<mapping source="dirOrgUnit_id_Load" dest="dirOrgUnit_id_Load"/>
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="caseAssignment_conv"/>
					</action>
			
				</actions>
			</stage> 
		
		<stage num="86" mode="Serial" desc="Transform Case Disposition" enabled="true">
			<actions>
				
					<action handler="SqlServer.Raw" desc="Creating Sentence" progresslabel="Creating Sentence Condition" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create  Sentence Condition">
							IF OBJECT_ID('caseDisposition_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[caseDisposition_conv];

				
							</task>
							
							<task handler="SqlServer.Script" desc="Create Sentence Condition table">
							<![CDATA[
							
							CREATE TABLE [caseDisposition_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							dispositionType VARCHAR(255),
							dispositionDate datetime,
							tCaseDisposition_id NUMERIC(19,0),
							caseKey NUMERIC(19,0),
							partyId NUMERIC(19,0)
						
						
								);	
							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Case Assignment">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	
							
							SELECT chg.dispositionType, chg.dispositionDate, pty.caseKey, pty.id as partyId  FROM ecourt.tCharge chg
							INNER JOIN cnmiStaging.dbo.party_conv pty
							ON chg.associatedParty_id = pty.id
							INNER JOIN cnmiStaging.dbo.convertCases_conv cc
							ON pty.case_id = cc.case_id
							WHERE cc.caseGroup <> 'CR' and chg.dispositionType IS NOT NULL
					
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="dispositionType" dest="dispositionType"/>
							<mapping source="dispositionDate" dest="dispositionDate"/>
							<mapping source="caseKey" dest="caseKey"/>
							<mapping source="partyId" dest="partyId"/>
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="caseDisposition_conv"/>
					</action>
					
					
			
				</actions>
			</stage> 
		
		<stage num="88" mode="Serial" desc="Transform Judgment" enabled="true">
			<actions>
				
					<action handler="SqlServer.Raw" desc="Creating Sentence" progresslabel="Creating Sentence Condition" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create  Sentence Condition">
							IF OBJECT_ID('judgmentSnt_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[judgmentSnt_conv];

				
							</task>
							
							<task handler="SqlServer.Script" desc="Create Sentence Condition table">
							<![CDATA[
							
							CREATE TABLE [judgmentSnt_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							cfAdditionalInfo VARCHAR(MAX),
							sentenceDate datetime,
							charge_id NUMERIC(19,0),
							sentenceId NUMERIC(19,0),
							caseKy NUMERIC(19,0),
							tJudgment_id NUMERIC(19,0),
							tJudgmentAward_id NUMERIC(19,0)
						
								);	
							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Case Assignment">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	
							
							SELECT  li.label, sc.sentenceType, sc.*, CONCAT(li.label, ' - Amt: ', COALESCE(sc.amount, '0'), ' - Sentence Location:', sentenceLocation, '- ', sc.notes) as cfAdditionalInfo, sc.id as sentenceId, 
							c.idKey as caseKy
							FROM cnmiStaging.dbo.convertCases_conv cc
							INNER  JOIN CNMI_eCourt_full.ecourt.tParty pty
							ON cc.case_id = pty.case_id
							INNER JOIN CNMI_eCourt_full.ecourt.tCharge chg
							ON chg.associatedParty_id = pty.id
							INNER JOIN CNMI_eCourt_full.ecourt.tSentence sc
							ON chg.id = sc.associatedCharge_id
							--INNER JOIN CNMI_eCourt_full.ecourt.tSentenceCondition scc
							--ON sc.id = scc.associatedSentence_id
							LEFT JOIN CNMI_eCourt_full.ecourt.tLookupItem li
							ON sc.sentenceType = li.code
							LEFT JOIN CNMI_eCourt_full.ecourt.tLookupList ll
							ON li.lookupList_id = ll.id AND ll.name = 'SENTENCE_TYPE'
							INNER JOIN cnmiStaging.dbo.case_conv c 
							ON cc.case_id = c.id
							WHERE cc.caseGroup = 'CV' and SentenceType IS NOT NULL
					
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="cfAdditionalInfo" dest="cfAdditionalInfo"/>
							<mapping source="associatedCharge_id" dest="charge_id"/>
							<mapping source="sentenceBeginDate" dest="sentenceDate"/>
							<mapping source="sentenceId" dest="id"/>
							<mapping source="caseKy" dest="caseKy"/>
						
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="judgmentSnt_conv"/>
					</action>
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Case Assignment">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	
							
							
							SELECT  li.label, sc.sentenceType, scc.associatedSentence_id, CONCAT(li.label, ' - ', scc.notes) as cfAdditionalInfo, sc.associatedCharge_id, scc.sentenceConditionBeginDate,
							c.idKey as caseKy
							FROM cnmiStaging.dbo.convertCases_conv cc
							INNER  JOIN CNMI_eCourt_full.ecourt.tParty pty
							ON cc.case_id = pty.case_id
							INNER JOIN CNMI_eCourt_full.ecourt.tCharge chg
							ON chg.associatedParty_id = pty.id
							INNER JOIN CNMI_eCourt_full.ecourt.tSentence sc
							ON chg.id = sc.associatedCharge_id
							INNER JOIN CNMI_eCourt_full.ecourt.tSentenceCondition scc
							ON sc.id = scc.associatedSentence_id
							LEFT JOIN CNMI_eCourt_full.ecourt.tLookupItem li
							ON scc.sentenceConditionType = li.code
							LEFT JOIN CNMI_eCourt_full.ecourt.tLookupList ll
							ON li.lookupList_id = ll.id AND ll.name = 'SENTENCE_CONDITION_TYPE'
							INNER JOIN cnmiStaging.dbo.case_conv c 
							ON cc.case_id = c.id
							WHERE cc.caseGroup = 'CV'
					
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="cfAdditionalInfo" dest="cfAdditionalInfo"/>
							<mapping source="associatedCharge_id" dest="charge_id"/>
							<mapping source="sentenceConditionBeginDate" dest="sentenceDate"/>
							<mapping source="associatedSentence_id" dest="sentenceId"/>
							<mapping source="caseKy" dest="caseKy"/>
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="judgmentSnt_conv"/>
					</action>
					
					
					
			
				</actions>
			</stage> 
		
		<stage num="90" mode="Serial" desc="Transform Special Status" enabled="true">
			<actions>
				
					<action handler="SqlServer.Raw" desc="Creating Sentence" progresslabel="Creating Special Status" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create  Special Status">
							IF OBJECT_ID('specialStatus_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[specialStatus_conv];

				
							</task>
							
							<task handler="SqlServer.Script" desc="Create Special Status table">
							<![CDATA[
							
							CREATE TABLE [specialStatus_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							[accessLevel] [int] NULL,
							[createUserRealName] [varchar](255) NULL,
							[createUsername] [varchar](255) NULL,
							[dateCreated] [datetime] NULL,
							[lastUpdateUserRealName] [varchar](255) NULL,
							[lastUpdateUsername] [varchar](255) NULL,
							[lastUpdated] [datetime] NULL,
							[memo] [varchar](512) NULL,
							[optlock] [int] NOT NULL,
							[roaAccessLevel] [int] NULL,
							[sourceCaseNumber] [varchar](255) NULL,
							[updateReason] [varchar](255) NULL,
							[category] [varchar](255) NULL,
							[endDate] [datetime] NULL,
							[startDate] [datetime] NULL,
							[status] [varchar](255) NOT NULL,
							[case_id] [numeric](19, 0) NOT NULL,
							[convId] [int] NULL,
							[value] [varchar](255) NULL,
						
								);	
							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Special Status">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	
							
								SELECT * FROM CNMI_eCourt_full.ecourt.tSpecialStatus ss
			
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="optlock" dest="optlock"/>
							<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
							<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
							<mapping source="updateReason" dest="updateReason"/>
							<mapping source="category" dest="category"/>
							<mapping source="endDate" dest="endDate"/>
							<mapping source="startDate" dest="startDate"/>
							<mapping source="status" dest="status"/>
							<mapping source="case_id" dest="case_id"/>
							<mapping source="convId" dest="convId"/>
							<mapping source="value" dest="value"/>
						
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="specialStatus_conv"/>
					</action>
			
			
				</actions>
			</stage> 
		
		<stage num="92" mode="Serial" desc="Transform Case Seal" enabled="true">
			<actions>
				
					<action handler="SqlServer.Raw" desc="Creating Sentence" progresslabel="Creating Case Seal" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create Case Seal">
							IF OBJECT_ID('caseSeal2_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[caseSeal2_conv];

				
							</task>
							
							<task handler="SqlServer.Script" desc="Create Case Seal table">
							<![CDATA[
							
							CREATE TABLE [caseSeal2_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							type VARCHAR(255),
							effectiveFrom datetime,
							effectiveTo datetime,
							memo varchar(512),
							case_id NUMERIC(19,0)
						
								);	
							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Special Status">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	
							
								SELECT 
								case_id,
								'SEAL' as type,
								MIN(startDate) as effectiveFrom,
								MIN(endDate) as effectiveTo,
								STRING_AGG(value, ' | ') as memo
								
								FROM CNMI_eCourt_full.ecourt.tSpecialStatus ss
								WHERE ss.status = 'SLD'
								GROUP BY case_id
								
								UNION
								
								SELECT 
								case_id,
								'CONF' as type,
								MIN(startDate) as effectiveFrom,
								MIN(endDate) as effectiveTo,
								STRING_AGG(value, ' | ') as memo
								
								FROM CNMI_eCourt_full.ecourt.tSpecialStatus ss
								WHERE ss.status = 'CFD'
								GROUP BY case_id
								
								UNION 
								
								SELECT 
								case_id,
								'EXP' as type,
								MIN(startDate) as effectiveFrom,
								MIN(endDate) as effectiveTo,
								STRING_AGG(value, ' | ') as memo
								
								FROM CNMI_eCourt_full.ecourt.tSpecialStatus ss
								WHERE ss.status = 'EXP'
								GROUP BY case_id
			
			
			
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="case_id" dest="case_id"/>
							<mapping source="type" dest="type"/>
							<mapping source="effectiveFrom" dest="effectiveFrom"/>
							<mapping source="effectiveTo" dest="effectiveTo"/>
							<mapping source="memo" dest="memo"/>

						
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="caseSeal2_conv"/>
					</action>
			
			
				</actions>
			</stage> 
		
			
		<stage num="94" mode="Serial" desc="Transform Person Relationship" enabled="true">
			<actions>
				
					<action handler="SqlServer.Raw" desc="Creating Sentence" progresslabel="Creating Person Relationship" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create Person Relationship">
							IF OBJECT_ID('personRelationship_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[personRelationship_conv];

				
							</task>
							
							<task handler="SqlServer.Script" desc="Create Person Relationship table">
							<![CDATA[
							
							CREATE TABLE [personRelationship_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							akaType VARCHAR(255),
							person_id NUMERIC(19,0),
							firstName VARCHAR(255),
							middleName VARCHAR(255),
							lastName VARCHAR(255),
							[createUserRealName] [varchar](255) NULL,
							[createUsername] [varchar](255) NULL,
							[dateCreated] [datetime] NULL,
							[lastUpdateUserRealName] [varchar](255) NULL,
							[lastUpdateUsername] [varchar](255) NULL,
							[lastUpdated] [datetime] NULL,
							[optlock] [int] NOT NULL,
							
						
								);	
							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Person Relationship">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	
							
							SELECT p.firstName, p.lastName, p.middleName, pr.relationshipType as akaType, pr.parentPerson_id,
							pr.createUserRealName,
							pr.createUsername,
							pr.dateCreated,
							pr.lastUpdateUserRealName,
							pr.lastUpdateUsername,
							pr.lastUpdated,
							pr.optlock

							FROM CNMI_eCourt_full.ecourt.tPersonRelationship pr
							LEFT JOIN CNMI_eCourt_full.ecourt.tPerson p 
							ON pr.relatedPerson_id = p.id
			
			
			
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="akaType" dest="akaType"/>
							<mapping source="parentPerson_id" dest="person_id"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="optlock" dest="optlock"/>
							<mapping source="firstName" dest="firstName"/>
							<mapping source="middleName" dest="middleName"/>
							<mapping source="lastName" dest="lastName"/>

						
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="personRelationship_conv"/>
					</action>
			
			
				</actions>
			</stage> 
		
		<stage num="96" mode="Serial" desc="Transform Person Special Status" enabled="true">
			<actions>
				
					<action handler="SqlServer.Raw" desc="Creating Sentence" progresslabel="Creating  personSpecialStatus_conv" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create Person Special Status">
							IF OBJECT_ID('personSpecialStatus_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[personSpecialStatus_conv];

				
							</task>
							
							<task handler="SqlServer.Script" desc="Create Person Special Status table">
							<![CDATA[
							
							CREATE TABLE [personSpecialStatus_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							[accessLevel] [int] NULL,
							[createUserRealName] [varchar](255) NULL,
							[createUsername] [varchar](255) NULL,
							[dateCreated] [datetime] NULL,
							[lastUpdateUserRealName] [varchar](255) NULL,
							[lastUpdateUsername] [varchar](255) NULL,
							[lastUpdated] [datetime] NULL,
							[memo] [varchar](512) NULL,
							[optlock] [int] NOT NULL,
							[roaAccessLevel] [int] NULL,
							[sourceCaseNumber] [varchar](255) NULL,
							[updateReason] [varchar](255) NULL,
							[endDate] [datetime] NULL,
							[issuerCountry] [varchar](255) NULL,
							[issuerName] [varchar](255) NULL,
							[issuerState] [varchar](255) NULL,
							[specialStatusType] [varchar](255) NULL,
							[startDate] [datetime] NULL,
							[status] [tinyint] NULL,
							[associatedPerson_id] [numeric](19, 0) NOT NULL,
							[category] [varchar](255) NULL,
							[value] [varchar](255) NULL,
							[convId] [int] NULL,
							[alert] [tinyint] NULL,
							
						
								);	
							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Person Special Status">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	
						
							SELECT * FROM ecourt.tPersonSpecialStatus
			
			
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="id" dest="id"/>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="optlock" dest="optlock"/>
							<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
							<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
							<mapping source="updateReason" dest="updateReason"/>
							<mapping source="endDate" dest="endDate"/>
							<mapping source="issuerCountry" dest="issuerCountry"/>
							<mapping source="issuerName" dest="issuerName"/>
							<mapping source="issuerState" dest="issuerState"/>
							<mapping source="specialStatusType" dest="specialStatusType"/>
							<mapping source="startDate" dest="startDate"/>
							<mapping source="status" dest="status"/>
							<mapping source="associatedPerson_id" dest="associatedPerson_id"/>
							<mapping source="category" dest="category"/>
							<mapping source="value" dest="value"/>
							<mapping source="convId" dest="convId"/>
							<mapping source="alert" dest="alert"/>
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="personSpecialStatus_conv"/>
					</action>
			
			
				</actions>
			</stage> 
		
			
		<stage num="98" mode="Serial" desc="Transform Vehicle" enabled="true">
			<actions>
				
					<action handler="SqlServer.Raw" desc="Creating Sentence" progresslabel="Creating  vehicle_conv" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create Person Special Status">
							IF OBJECT_ID('vehicle_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[vehicle_conv];

				
							</task>
							
							<task handler="SqlServer.Script" desc="Create Person Special Status table">
							<![CDATA[
							
							CREATE TABLE [vehicle_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							vehicleType VARCHAR(255),
							registeredYear VARCHAR(255),
							model VARCHAR(255),
							make VARCHAR(255),
							color VARCHAR(255),
							cfColor2 VARCHAR(255),
							registeredState VARCHAR(255),
							year NUMERIC(19,0),
							licensePlate VARCHAR(255),
							person_id NUMERIC(19,0),
							memo varchar(255)
							
						
								);	
							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Person Special Status">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	
						
							SELECT id as person_id, COALESCE(bodyType, 'UNK') as vehicleType, NULLIF(CONCAT(plateYear1, plateYear2),'') as licensePlate, model, make, pColor as color, sColor as cfColor2, vState as registeredState, TRY_CAST(vYear as NUMERIC(19,0)) as year, vYear as memo FROM 
							(SELECT MIN(pr.firstName) firstName, MIN(lastName) lastName, MIN(middleName) middleName, pr.id FROM ecourt.tParty pty
							LEFT JOIN ecourt.tPerson pr
							ON pty.person_id = pr.id
							WHERE partyType = 'VEH'
							GROUP BY pr.id) vh
							LEFT JOIN
							(SELECT MIN(value) bodyType, associatedPerson_id FROM ecourt.tPersonSpecialStatus 
							WHERE specialStatusType = 'VBD'
							GROUP BY associatedPerson_id) t1	
							ON vh.id = t1.associatedPerson_id
							LEFT JOIN
							(SELECT MIN(value) plateYear1, associatedPerson_id FROM ecourt.tPersonSpecialStatus 
							WHERE specialStatusType = 'VEHPY'
							GROUP BY associatedPerson_id) t2
							ON vh.id = t2.associatedPerson_id
							LEFT JOIN 
							(SELECT MIN(value) plateYear2, associatedPerson_id FROM ecourt.tPersonSpecialStatus 
							WHERE specialStatusType = 'VLPY'
							GROUP BY associatedPerson_id) t3
							ON vh.id = t3.associatedPerson_id
							LEFT JOIN
							(SELECT MIN(value) model, associatedPerson_id FROM ecourt.tPersonSpecialStatus 
							WHERE specialStatusType = 'VMD'
							GROUP BY associatedPerson_id) t4
							ON vh.id = t4.associatedPerson_id
							LEFT JOIN
							(SELECT MIN(value)  make, associatedPerson_id FROM ecourt.tPersonSpecialStatus 
							WHERE specialStatusType = 'VMK'
							GROUP BY associatedPerson_id) t5
							ON vh.id = t5.associatedPerson_id
							LEFT JOIN
							(SELECT MIN(value) pColor, associatedPerson_id  FROM ecourt.tPersonSpecialStatus 
							WHERE specialStatusType = 'VPC'
							GROUP BY associatedPerson_id) t6	
							ON vh.id = t6.associatedPerson_id
							LEFT JOIN
							(SELECT MIN(value) sColor, associatedPerson_id  FROM ecourt.tPersonSpecialStatus 
							WHERE specialStatusType = 'VSC'
							GROUP BY associatedPerson_id) t7
							ON vh.id = t7.associatedPerson_id
							LEFT JOIN
							(SELECT MIN(value) vState, associatedPerson_id FROM ecourt.tPersonSpecialStatus 
							WHERE specialStatusType = 'VST'
							GROUP BY associatedPerson_id) t8	
							ON vh.id = t8.associatedPerson_id
							LEFT JOIN
							(SELECT MIN(value) vYear, associatedPerson_id FROM ecourt.tPersonSpecialStatus 
							WHERE specialStatusType = 'VYR'
							GROUP BY associatedPerson_id) t9
							ON vh.id = t9.associatedPerson_id
							WHERE NOT (model IS NULL AND make IS NULL AND pColor IS NULL AND sColor IS NULL AND vState IS NULL AND vYear IS NULL AND plateYear1 IS NULL AND plateYear2 IS NULL AND vYear IS NULL)
			
			
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="vehicleType" dest="vehicleType"/>
							<mapping source="licensePlate" dest="licensePlate"/>
							<mapping source="model" dest="model"/>
							<mapping source="make" dest="make"/>
							<mapping source="color" dest="color"/>
							<mapping source="cfColor2" dest="cfColor2"/>
							<mapping source="registeredState" dest="registeredState"/>
							<mapping source="year" dest="year"/>
							<mapping source="person_id" dest="person_id"/>
							<mapping source="memo" dest="memo"/>
							
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="vehicle_conv"/>
					</action>
			
			
				</actions>
			</stage> 
		
			
		<stage num="100" mode="Serial" desc="Transform Warrant" enabled="false">
			<actions>
				
					<action handler="SqlServer.Raw" desc="Creating Sentence" progresslabel="Creating  warrant_conv" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create Person Special Status">
							IF OBJECT_ID('warrant_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[warrant_conv];

				
							</task>
							
							<task handler="SqlServer.Script" desc="Create Person Special Status table">
							<![CDATA[
							
							CREATE TABLE [warrant_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							type VARCHAR(255),
							status VARCHAR(255),
							startDate datetime,
							personId NUMERIC(19,0),
							caseId NUMERIC(19,0),
							caseKy NUMERIC(19,0)
							
						
								);	
							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Warrant">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	
						
							
					--		SELECT 
					--		'BW' as type, 
					--		statusDate,
					--		requestDate = statusDate,
					--		'active' as status,
					--		associatedPerson_id personId,
					--		cc.id as caseId,
					--		caseKy
					--		FROM cnmiStaging.dbo.case_conv cc
					--		INNER JOIN
					--		(SELECT pty.case_id, associatedPerson_id, caseKey caseKy FROM cnmiStaging.dbo.PersonSpecialStatus_conv pss
					--		INNER JOIN cnmiStaging.dbo.party_conv pty
					--		ON person_id = pss.associatedPerson_id
					--		WHERE specialStatusType = 'BW'
					--		GROUP BY associatedPerson_id, pty.case_id, caseKey) t1
					--		ON cc.id = t1.case_id AND associatedPerson_id = cc.person_id
					--		WHERE status = 'BW'
					
							SELECT 
							'BW' as type,
							'BW' as status,
							statusDate as startDate
							status 
							FROM case_conv cc
							WHERE status = 'BW'
			
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="type" dest="type"/>
							<mapping source="requestDate" dest="requestDate"/>
							<mapping source="status" dest="status"/>
							<mapping source="startDate" dest="startDate"/>
							<mapping source="personId" dest="personId"/>
							<mapping source="caseId" dest="caseId"/>
							<mapping source="caseKy" dest="caseKy"/>
							
							
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="warrant_conv"/>
					</action>
			
			
				</actions>
			</stage> 
		
		
		<stage num="300" mode="Serial" desc="Transform Document Folder" enabled="true">
			<actions>
				
					<action handler="SqlServer.Raw" desc="Creating Sentence" progresslabel="Creating  documentfolder_conv" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create Person Special Status">
							IF OBJECT_ID('documentFolder_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[documentFolder_conv];

				
							</task>
							
							<task handler="SqlServer.Script" desc="Create Person Special Status table">
							<![CDATA[
							
							CREATE TABLE [documentFolder_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							[accessLevel] [int] NULL,
							[createUserRealName] [varchar](255) NULL,
							[createUsername] [varchar](255) NULL,
							[dateCreated] [datetime] NULL,
							[lastUpdateUserRealName] [varchar](255) NULL,
							[lastUpdateUsername] [varchar](255) NULL,
							[lastUpdated] [datetime] NULL,
							[memo] [varchar](7500) NULL,
							[name] [varchar](255) NULL,
							[case_id] [numeric](19, 0) NULL,
							[parentFolder_id] [numeric](19, 0) NULL,
							[person_id] [numeric](19, 0) NULL,
							[subCase_id] [numeric](19, 0) NULL,
							[convId] [int] NULL,
							tDocumentFolder_id NUMERIC(19,0),
							personKy NUMERIC(19,0),
							caseKy NUMERIC(19,0),
							docNumber VARCHAR(255)
							
						
								);	
							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform documentFolder">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	
						
							SELECT df.*, p.idKey as personKy FROM ecourt.tDocumentFolder df
							INNER JOIN cnmiStaging.dbo.person_conv p 
							ON df.person_id = p.id
							
			
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="id" dest="id"/>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="name" dest="name"/>
							<mapping source="case_id" dest="case_id"/>
							<mapping source="parentFolder_id" dest="parentFolder_id"/>
							<mapping source="person_id" dest="person_id"/>
							<mapping source="subCase_id" dest="subCase_id"/>
							<mapping source="convId" dest="convId"/>
							<mapping source="personKy" dest="personKy"/>
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="documentFolder_conv"/>
					</action>
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform documentFolder">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	
						
							SELECT df.*, c.idKey as caseKy FROM ecourt.tDocumentFolder df
							INNER JOIN cnmiStaging.dbo.case_conv c 
							ON df.case_id = c.id
			
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="id" dest="id"/>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="name" dest="name"/>
							<mapping source="case_id" dest="case_id"/>
							<mapping source="parentFolder_id" dest="parentFolder_id"/>
							<mapping source="person_id" dest="person_id"/>
							<mapping source="subCase_id" dest="subCase_id"/>
							<mapping source="convId" dest="convId"/>
							<mapping source="caseKy" dest="caseKy"/>
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="documentFolder_conv"/>
					</action>
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform documentFolder">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	
						
							SELECT df.* FROM ecourt.tDocumentFolder df
							WHERE case_id IS NULL AND person_id IS NULL
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="id" dest="id"/>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="name" dest="name"/>
							<mapping source="case_id" dest="case_id"/>
							<mapping source="parentFolder_id" dest="parentFolder_id"/>
							<mapping source="person_id" dest="person_id"/>
							<mapping source="subCase_id" dest="subCase_id"/>
							<mapping source="convId" dest="convId"/>
						
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="documentFolder_conv"/>
					</action>
			
			
				</actions>
			</stage> 
		
			
		<stage num="302" mode="Serial" desc="Transform Document" enabled="true">
			<actions>
				
					<action handler="SqlServer.Raw" desc="Creating Sentence" progresslabel="Creating  document" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create Person Special Status">
							IF OBJECT_ID('document_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[document_conv];

				
							</task>
							
							<task handler="SqlServer.Script" desc="Create Person Special Status table">
							<![CDATA[
							
							CREATE TABLE [document_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							[accessLevel] [int] NULL,
							[createUserRealName] [varchar](255) NULL,
							[createUsername] [varchar](255) NULL,
							[dateCreated] [datetime] NULL,
							[lastUpdateUserRealName] [varchar](255) NULL,
							[lastUpdateUsername] [varchar](255) NULL,
							[lastUpdated] [datetime] NULL,
							[memo] [varchar](512) NULL,
							[optlock] [int] NOT NULL,
							[roaAccessLevel] [int] NULL,
							[sourceCaseNumber] [varchar](255) NULL,
							[updateReason] [varchar](255) NULL,
							[attachmentMethod] [varchar](255) NULL,
							[batch] [varchar](255) NULL,
							[batchSource] [varchar](255) NULL,
							[customDocPropsStatus] [int] NULL,
							[dateFiled] [datetime] NULL,
							[dateReceived] [datetime] NULL,
							[dispositionDate] [datetime] NULL,
							[dispositionType] [varchar](255) NULL,
							[effectiveStatus] [varchar](255) NULL,
							[effectiveStatusDate] [datetime] NULL,
							[exParte] [tinyint] NULL,
							[favorite] [tinyint] NULL,
							[filedByMethod] [varchar](255) NULL,
							[filedByName] [varchar](255) NULL,
							[filedByText] [varchar](255) NULL,
							[filedByType] [varchar](255) NULL,
							[indexPublishFailedCount] [int] NULL,
							[indexPublishFailedError] [varchar](255) NULL,
							[indexPublished] [datetime] NULL,
							[intendedToAmend] [tinyint] NULL,
							[mailingDate] [datetime] NULL,
							[nameExact] [varchar](255) NULL,
							[nameExtension] [varchar](255) NULL,
							[numberOfPages] [int] NULL,
							[numberOfUnits] [float] NULL,
							[numberOfVolumes] [int] NULL,
							[onDemand] [tinyint] NULL,
							[originalFileName] [varchar](255) NULL,
							[partNumber] [int] NULL,
							[reason] [text] NULL,
							[redactedOn] [datetime] NULL,
							[referenceDocId] [numeric](19, 0) NULL,
							[refersToText] [varchar](255) NULL,
							[relatedHearingText] [varchar](255) NULL,
							[relatedToText] [varchar](255) NULL,
							[reportCode] [varchar](255) NULL,
							[requiresService] [varchar](255) NULL,
							[reservationReceiptNumber] [varchar](255) NULL,
							[reviewStatus] [varchar](255) NULL,
							[reviewStatusDate] [datetime] NULL,
							[scanId] [varchar](255) NULL,
							[searchable] [tinyint] NULL,
							[serviceCost] [float] NULL,
							[serviceDue] [datetime] NULL,
							[serviceStatus] [varchar](255) NULL,
							[serviceStatusDate] [datetime] NULL,
							[serviceType] [varchar](255) NULL,
							[signedByName] [varchar](255) NULL,
							[status] [varchar](255) NULL,
							[statusDate] [datetime] NULL,
							[storageId] [varchar](255) NULL,
							[storageMimeType] [varchar](255) NULL,
							[storagePageCount] [int] NULL,
							[storageRev] [int] NULL,
							[storageSize] [numeric](19, 0) NULL,
							[storageStatus] [varchar](255) NULL,
							[storageType] [varchar](255) NULL,
							[task] [varchar](255) NULL,
							[type] [varchar](255) NULL,
							[unitType] [varchar](255) NULL,
							[untimely] [tinyint] NULL,
							[wordPropsError] [varchar](255) NULL,
							[workQueueStatus] [varchar](8) NULL,
							[case_id] [numeric](19, 0) NOT NULL,
							[docDef_id] [numeric](19, 0) NOT NULL,
							[documentEFilingData_id] [numeric](19, 0) NULL,
							[exhibit_id] [numeric](19, 0) NULL,
							[feeWaiver_id] [numeric](19, 0) NULL,
							[folder_id] [numeric](19, 0) NULL,
							[subCase_id] [numeric](19, 0) NULL,
							[submission_id] [numeric](19, 0) NULL,
							[convId] [int] NULL,
							[amount1] [float] NULL,
							[amount2] [float] NULL,
							[category] [varchar](255) NULL,
							[location] [varchar](255) NULL,
							[notes] [varchar](7500) NULL,
							[priority] [varchar](255) NULL,
							[availableOnline] [tinyint] NULL,
							[joinStatus] [int] NULL,
							[reminder] [tinyint] NULL,
							[expirationDate] [datetime] NULL,
							[submissionDate] [datetime] NULL,
							[submissionMethod] [varchar](255) NULL,
							[printEndorsementChecked] [tinyint] NULL,
							[externalReferenceId] [varchar](255) NULL,
							documentFolderKy NUMERIC(19,0),
							tDocument_id NUMERIC(19,0),
							caseKey NUMERIC(19,0),
							docNumber VARCHAR(255)
						
							
						
								);	
							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform document">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	
						
							SELECT d.*, COALESCE(d.dateFiled, d.dateCreated, GETDATE()) as dateFiled_ld,
							REPLACE(REPLACE(cnmiJustWare.dbo.GetFilePath(d.ConvId), '\\sqldb', 'LegacyDocs'), '\', '/')  as storageId_load,
							cc.idKey as caseKey,
							docNumber = ddf.number
							FROM ecourt.tDocument d 
							LEFT JOIN cnmiStaging.dbo.case_conv cc
							ON d.case_id = cc.id
							LEFT JOIN ecourt.tDocDef ddf
							ON d.docDef_id = ddf.id
			
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="id" dest="id"/>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="optlock" dest="optlock"/>
							<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
							<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
							<mapping source="updateReason" dest="updateReason"/>
							<mapping source="attachmentMethod" dest="attachmentMethod"/>
							<mapping source="batch" dest="batch"/>
							<mapping source="batchSource" dest="batchSource"/>
							<mapping source="customDocPropsStatus" dest="customDocPropsStatus"/>
							<mapping source="dateFiled_ld" dest="dateFiled"/>
							<mapping source="dateReceived" dest="dateReceived"/>
							<mapping source="dispositionDate" dest="dispositionDate"/>
							<mapping source="dispositionType" dest="dispositionType"/>
							<mapping source="effectiveStatus" dest="effectiveStatus"/>
							<mapping source="effectiveStatusDate" dest="effectiveStatusDate"/>
							<mapping source="exParte" dest="exParte"/>
							<mapping source="favorite" dest="favorite"/>
							<mapping source="filedByMethod" dest="filedByMethod"/>
							<mapping source="filedByName" dest="filedByName"/>
							<mapping source="filedByText" dest="filedByText"/>
							<mapping source="filedByType" dest="filedByType"/>
							<mapping source="indexPublishFailedCount" dest="indexPublishFailedCount"/>
							<mapping source="indexPublishFailedError" dest="indexPublishFailedError"/>
							<mapping source="indexPublished" dest="indexPublished"/>
							<mapping source="intendedToAmend" dest="intendedToAmend"/>
							<mapping source="mailingDate" dest="mailingDate"/>
							<mapping source="nameExact" dest="nameExact"/>
							<mapping source="nameExtension" dest="nameExtension"/>
							<mapping source="numberOfPages" dest="numberOfPages"/>
							<mapping source="numberOfUnits" dest="numberOfUnits"/>
							<mapping source="numberOfVolumes" dest="numberOfVolumes"/>
							<mapping source="onDemand" dest="onDemand"/>
							<mapping source="originalFileName" dest="originalFileName"/>
							<mapping source="partNumber" dest="partNumber"/>
							<mapping source="reason" dest="reason"/>
							<mapping source="redactedOn" dest="redactedOn"/>
							<mapping source="referenceDocId" dest="referenceDocId"/>
							<mapping source="refersToText" dest="refersToText"/>
							<mapping source="relatedHearingText" dest="relatedHearingText"/>
							<mapping source="relatedToText" dest="relatedToText"/>
							<mapping source="reportCode" dest="reportCode"/>
							<mapping source="requiresService" dest="requiresService"/>
							<mapping source="reservationReceiptNumber" dest="reservationReceiptNumber"/>
							<mapping source="reviewStatus" dest="reviewStatus"/>
							<mapping source="reviewStatusDate" dest="reviewStatusDate"/>
							<mapping source="scanId" dest="scanId"/>
							<mapping source="searchable" dest="searchable"/>
							<mapping source="serviceCost" dest="serviceCost"/>
							<mapping source="serviceDue" dest="serviceDue"/>
							<mapping source="serviceStatus" dest="serviceStatus"/>
							<mapping source="serviceStatusDate" dest="serviceStatusDate"/>
							<mapping source="serviceType" dest="serviceType"/>
							<mapping source="signedByName" dest="signedByName"/>
							<mapping source="status" dest="status"/>
							<mapping source="statusDate" dest="statusDate"/>
							<mapping source="storageId_load" dest="storageId"/>
							<mapping source="storageMimeType" dest="storageMimeType"/>
							<mapping source="storagePageCount" dest="storagePageCount"/>
							<mapping source="storageRev" dest="storageRev"/>
							<mapping source="storageSize" dest="storageSize"/>
							<mapping source="storageStatus" dest="storageStatus"/>
							<mapping source="storageType" dest="storageType"/>
							<mapping source="task" dest="task"/>
							<mapping source="type" dest="type"/>
							<mapping source="unitType" dest="unitType"/>
							<mapping source="untimely" dest="untimely"/>
							<mapping source="wordPropsError" dest="wordPropsError"/>
							<mapping source="workQueueStatus" dest="workQueueStatus"/>
							<mapping source="case_id" dest="case_id"/>
							<mapping source="docDef_id" dest="docDef_id"/>
							<mapping source="documentEFilingData_id" dest="documentEFilingData_id"/>
							<mapping source="exhibit_id" dest="exhibit_id"/>
							<mapping source="feeWaiver_id" dest="feeWaiver_id"/>
							<mapping source="folder_id" dest="folder_id"/>
							<mapping source="subCase_id" dest="subCase_id"/>
							<mapping source="submission_id" dest="submission_id"/>
							<mapping source="convId" dest="convId"/>
							<mapping source="amount1" dest="amount1"/>
							<mapping source="amount2" dest="amount2"/>
							<mapping source="category" dest="category"/>
							<mapping source="location" dest="location"/>
							<mapping source="notes" dest="notes"/>
							<mapping source="priority" dest="priority"/>
							<mapping source="availableOnline" dest="availableOnline"/>
							<mapping source="joinStatus" dest="joinStatus"/>
							<mapping source="reminder" dest="reminder"/>
							<mapping source="expirationDate" dest="expirationDate"/>
							<mapping source="submissionDate" dest="submissionDate"/>
							<mapping source="submissionMethod" dest="submissionMethod"/>
							<mapping source="printEndorsementChecked" dest="printEndorsementChecked"/>
							<mapping source="externalReferenceId" dest="externalReferenceId"/>
							<mapping source="caseKey" dest="caseKey"/>
							<mapping source="docNumber" dest="docNumber"/>
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="document_conv"/>
					</action>
			
			
				</actions>
			</stage> 
		
	
		<stage num="304" mode="Serial" desc="Transform Document - Person" enabled="true">
			<actions>
				
					<action handler="SqlServer.Raw" desc="Creating Sentence" progresslabel="Creating  document" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create Person Special Status">
							IF OBJECT_ID('documentPerson_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[documentPerson_conv];

				
							</task>
							
							<task handler="SqlServer.Script" desc="Create Person Document table">
							<![CDATA[
							
							CREATE TABLE [documentPerson_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							[accessLevel] [int] NULL,
							[createUserRealName] [varchar](255) NULL,
							[createUsername] [varchar](255) NULL,
							[dateCreated] [datetime] NULL,
							[lastUpdateUserRealName] [varchar](255) NULL,
							[lastUpdateUsername] [varchar](255) NULL,
							[lastUpdated] [datetime] NULL,
							[memo] [varchar](512) NULL,
							[optlock] [int] NOT NULL,
							[roaAccessLevel] [int] NULL,
							[sourceCaseNumber] [varchar](255) NULL,
							[updateReason] [varchar](255) NULL,
							[attachmentMethod] [varchar](255) NULL,
							[dateFiled] [datetime] NULL,
							[dateReceived] [datetime] NULL,
							[filedByType] [varchar](255) NULL,
							[intendedToAmend] [tinyint] NULL,
							[mailingDate] [datetime] NULL,
							[nameExact] [varchar](255) NULL,
							[nameExtension] [varchar](255) NULL,
							[originalFileName] [varchar](255) NULL,
							[scanId] [varchar](255) NULL,
							[serviceType] [varchar](255) NULL,
							[status] [varchar](255) NULL,
							[statusDate] [datetime] NULL,
							[storageId] [varchar](255) NULL,
							[storageMimeType] [varchar](255) NULL,
							[storageRev] [int] NULL,
							[storageSize] [numeric](19, 0) NULL,
							[storageStatus] [varchar](255) NULL,
							[storageType] [varchar](255) NULL,
							[type] [varchar](255) NULL,
							[docDef_id] [numeric](19, 0) NOT NULL,
							[folder_id] [numeric](19, 0) NULL,
							[person_id] [numeric](19, 0) NOT NULL,
							[category] [varchar](255) NULL,
							[notes] [varchar](7500) NULL,
							[convId] [int] NULL,
							[amount1] [float] NULL,
							[amount2] [float] NULL,
							[location] [varchar](255) NULL,
							[priority] [varchar](255) NULL,
							[sealed] [tinyint] NULL,
							[customDocPropsStatus] [int] NULL,
							[redactedOn] [datetime] NULL,
							personKy NUMERIC(19,0),
							docNumber VARCHAR(255)
						
								);	
							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform person document">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	
						
							SELECT pd.*, COALESCE(pd.dateFiled, pd.dateCreated, GETDATE()) as dateFiled_ld,
							REPLACE(REPLACE(cnmiJustWare.dbo.GetFilePath(pd.ConvId), '\\sqldb', 'LegacyDocs'), '\', '/')  as storageId_load,
							docNumber = number
							FROM ecourt.tPersonDocument pd 
							LEFT JOIN ecourt.tDocDef ddf
							ON pd.docDef_id = ddf.id
							
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="optlock" dest="optlock"/>
							<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
							<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
							<mapping source="updateReason" dest="updateReason"/>
							<mapping source="attachmentMethod" dest="attachmentMethod"/>
							<mapping source="dateFiled_ld" dest="dateFiled"/>
							<mapping source="dateReceived" dest="dateReceived"/>
							<mapping source="filedByType" dest="filedByType"/>
							<mapping source="intendedToAmend" dest="intendedToAmend"/>
							<mapping source="mailingDate" dest="mailingDate"/>
							<mapping source="nameExact" dest="nameExact"/>
							<mapping source="nameExtension" dest="nameExtension"/>
							<mapping source="originalFileName" dest="originalFileName"/>
							<mapping source="scanId" dest="scanId"/>
							<mapping source="serviceType" dest="serviceType"/>
							<mapping source="status" dest="status"/>
							<mapping source="statusDate" dest="statusDate"/>
							<mapping source="storageId_load" dest="storageId"/>
							<mapping source="storageMimeType" dest="storageMimeType"/>
							<mapping source="storageRev" dest="storageRev"/>
							<mapping source="storageSize" dest="storageSize"/>
							<mapping source="storageStatus" dest="storageStatus"/>
							<mapping source="storageType" dest="storageType"/>
							<mapping source="type" dest="type"/>
							<mapping source="docDef_id" dest="docDef_id"/>
							<mapping source="folder_id" dest="folder_id"/>
							<mapping source="person_id" dest="person_id"/>
							<mapping source="category" dest="category"/>
							<mapping source="notes" dest="notes"/>
							<mapping source="convId" dest="convId"/>
							<mapping source="amount1" dest="amount1"/>
							<mapping source="amount2" dest="amount2"/>
							<mapping source="location" dest="location"/>
							<mapping source="priority" dest="priority"/>
							<mapping source="sealed" dest="sealed"/>
							<mapping source="customDocPropsStatus" dest="customDocPropsStatus"/>
							<mapping source="redactedOn" dest="redactedOn"/>
							<mapping source="docNumber" dest="docNumber"/>
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="documentPerson_conv"/>
					</action>
			
						<action handler="SqlServer.Raw" desc="Creating Sentence" progresslabel="Creating  document" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create Person Document table">
							<![CDATA[
							UPDATE documentPerson_conv 
							SET storageId = REPLACE(storageId, 'justwaredocs', 'JustWareDocs');
							
							UPDATE documentPerson_conv 
							SET storageId = REPLACE(storageId, 'names', 'Names')
						
							]]>
							
							</task>
						</source>
					</action>
			
				</actions>
			</stage> 
		
		
		<stage num="306" mode="Serial" desc="Transform Person Image" enabled="true">
			<actions>
				
					<action handler="SqlServer.Raw" desc="Creating Sentence" progresslabel="Creating  personImage_conv" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create personImage_conv">
							IF OBJECT_ID('personImage_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[personImage_conv];

				
							</task>
							
							<task handler="SqlServer.Script" desc="CreatepersonImage_conv  table">
							<![CDATA[
							
							CREATE TABLE [personImage_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							[accessLevel] [int] NULL,
							[createUserRealName] [varchar](255) NULL,
							[createUsername] [varchar](255) NULL,
							[dateCreated] [datetime] NULL,
							[lastUpdateUserRealName] [varchar](255) NULL,
							[lastUpdateUsername] [varchar](255) NULL,
							[lastUpdated] [datetime] NULL,
							[memo] [varchar](7500) NULL,
							[optlock] [int] NOT NULL,
							[roaAccessLevel] [int] NULL,
							[sourceCaseNumber] [varchar](255) NULL,
							[updateReason] [varchar](255) NULL,
							[dateTaken] [datetime] NULL,
							[description] [varchar](255) NULL,
							[image] [image] NULL,
							[imageFileName] [varchar](255) NULL,
							[source] [varchar](255) NULL,
							[type] [varchar](255) NULL,
							[associatedPerson_id] [numeric](19, 0) NOT NULL,
							[convId] [int] NULL
						
								);	
							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform personImage_conv">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	
						
							SELECT * FROM ecourt.tPersonImage
			
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="id" dest="id"/>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="optlock" dest="optlock"/>
							<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
							<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
							<mapping source="updateReason" dest="updateReason"/>
							<mapping source="dateTaken" dest="dateTaken"/>
							<mapping source="description" dest="description"/>
							<mapping source="image" dest="image"/>
							<mapping source="imageFileName" dest="imageFileName"/>
							<mapping source="source" dest="source"/>
							<mapping source="type" dest="type"/>
							<mapping source="associatedPerson_id" dest="associatedPerson_id"/>
							<mapping source="convId" dest="convId"/>
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="personImage_conv"/>
					</action>
			
			
				</actions>
			</stage> 
		
			
		<stage num="308" mode="Serial" desc="Transform Person Document" enabled="false">
			<actions>
				
					<action handler="SqlServer.Raw" desc="Creating personDocument_conv" progresslabel="Creating  personDocument_conv" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create personDocument_conv">
							IF OBJECT_ID('personDocument_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[personDocument_conv];

				
							</task>
							
							<task handler="SqlServer.Script" desc="Create personDocument_conv  table">
							<![CDATA[
							
							CREATE TABLE [personDocument_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							[accessLevel] [int] NULL,
							[createUserRealName] [varchar](255) NULL,
							[createUsername] [varchar](255) NULL,
							[dateCreated] [datetime] NULL,
							[lastUpdateUserRealName] [varchar](255) NULL,
							[lastUpdateUsername] [varchar](255) NULL,
							[lastUpdated] [datetime] NULL,
							[memo] [varchar](512) NULL,
							[optlock] [int] NOT NULL,
							[roaAccessLevel] [int] NULL,
							[sourceCaseNumber] [varchar](255) NULL,
							[updateReason] [varchar](255) NULL,
							[attachmentMethod] [varchar](255) NULL,
							[dateFiled] [datetime] NULL,
							[dateReceived] [datetime] NULL,
							[filedByType] [varchar](255) NULL,
							[intendedToAmend] [tinyint] NULL,
							[mailingDate] [datetime] NULL,
							[nameExact] [varchar](255) NULL,
							[nameExtension] [varchar](255) NULL,
							[originalFileName] [varchar](255) NULL,
							[scanId] [varchar](255) NULL,
							[serviceType] [varchar](255) NULL,
							[status] [varchar](255) NULL,
							[statusDate] [datetime] NULL,
							[storageId] [varchar](255) NULL,
							[storageMimeType] [varchar](255) NULL,
							[storageRev] [int] NULL,
							[storageSize] [numeric](19, 0) NULL,
							[storageStatus] [varchar](255) NULL,
							[storageType] [varchar](255) NULL,
							[type] [varchar](255) NULL,
							[docDef_id] [numeric](19, 0) NOT NULL,
							[folder_id] [numeric](19, 0) NULL,
							[person_id] [numeric](19, 0) NOT NULL,
							[category] [varchar](255) NULL,
							[notes] [varchar](7500) NULL,
							[convId] [int] NULL,
							[amount1] [float] NULL,
							[amount2] [float] NULL,
							[location] [varchar](255) NULL,
							[priority] [varchar](255) NULL,
							[sealed] [tinyint] NULL,
							[customDocPropsStatus] [int] NULL,
							[redactedOn] [datetime] NULL,
							tPersonDocument_id NUMERIC(19,0)
								);	
							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform personImage_conv">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	
						
							SELECT * FROM ecourt.tPersonDocument
			
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="id" dest="id"/>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="optlock" dest="optlock"/>
							<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
							<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
							<mapping source="updateReason" dest="updateReason"/>
							<mapping source="attachmentMethod" dest="attachmentMethod"/>
							<mapping source="dateFiled" dest="dateFiled"/>
							<mapping source="dateReceived" dest="dateReceived"/>
							<mapping source="filedByType" dest="filedByType"/>
							<mapping source="intendedToAmend" dest="intendedToAmend"/>
							<mapping source="mailingDate" dest="mailingDate"/>
							<mapping source="nameExact" dest="nameExact"/>
							<mapping source="nameExtension" dest="nameExtension"/>
							<mapping source="originalFileName" dest="originalFileName"/>
							<mapping source="scanId" dest="scanId"/>
							<mapping source="serviceType" dest="serviceType"/>
							<mapping source="status" dest="status"/>
							<mapping source="statusDate" dest="statusDate"/>
							<mapping source="storageId" dest="storageId"/>
							<mapping source="storageMimeType" dest="storageMimeType"/>
							<mapping source="storageRev" dest="storageRev"/>
							<mapping source="storageSize" dest="storageSize"/>
							<mapping source="storageStatus" dest="storageStatus"/>
							<mapping source="storageType" dest="storageType"/>
							<mapping source="type" dest="type"/>
							<mapping source="docDef_id" dest="docDef_id"/>
							<mapping source="folder_id" dest="folder_id"/>
							<mapping source="person_id" dest="person_id"/>
							<mapping source="category" dest="category"/>
							<mapping source="notes" dest="notes"/>
							<mapping source="convId" dest="convId"/>
							<mapping source="amount1" dest="amount1"/>
							<mapping source="amount2" dest="amount2"/>
							<mapping source="location" dest="location"/>
							<mapping source="priority" dest="priority"/>
							<mapping source="sealed" dest="sealed"/>
							<mapping source="customDocPropsStatus" dest="customDocPropsStatus"/>
							<mapping source="redactedOn" dest="redactedOn"/>
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="personDocument_conv"/>
					</action>
			
			
				</actions>
			</stage> 
		
		<stage num="400" mode="Serial" desc="Transform tblAccount" enabled="true">
			<actions>
				
					<action handler="SqlServer.Raw" desc="Creating tblAccount_conv" progresslabel="Creating  tblAccount_conv" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create personImage_conv">
							IF OBJECT_ID('tblAccount_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[tblAccount_conv];

				
							</task>
							
							<task handler="SqlServer.Script" desc="Create tblAccount_conv  table">
							<![CDATA[
							
							CREATE TABLE [tblAccount_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							[accessLevel] [int] NULL,
							[createUserRealName] [varchar](255) NULL,
							[createUsername] [varchar](255) NULL,
							[dateCreated] [datetime] NULL,
							[lastUpdateUserRealName] [varchar](255) NULL,
							[lastUpdateUsername] [varchar](255) NULL,
							[lastUpdated] [datetime] NULL,
							[memo] [varchar](512) NULL,
							[balance] [float] NULL,
							[masterCodeAccountType] [int] NULL,
							[name] [varchar](500) NULL,
							[number] [varchar](255) NULL,
							[status] [varchar](255) NULL,
							[type] [varchar](255) NULL,
							[dirOrgUnit_id] [numeric](19, 0) NULL,
							[convId] [int] NULL,
							[dirPerson_id] [numeric](19, 0) NULL,
							[person_id] [numeric](19, 0) NULL,
							tAccount_id NUMERIC(19,0)
						
								);	
							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform tblAccount_conv">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	
						
							SELECT * FROM ecourt.tTblAccount ta
			
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="id" dest="id"/>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="balance" dest="balance"/>
							<mapping source="masterCodeAccountType" dest="masterCodeAccountType"/>
							<mapping source="name" dest="name"/>
							<mapping source="number" dest="number"/>
							<mapping source="status" dest="status"/>
							<mapping source="type" dest="type"/>
							<mapping source="dirOrgUnit_id" dest="dirOrgUnit_id"/>
							<mapping source="convId" dest="convId"/>
							<mapping source="dirPerson_id" dest="dirPerson_id"/>
							<mapping source="person_id" dest="person_id"/>
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="tblAccount_conv"/>
					</action>
			
			
				</actions>
			</stage> 
		
		<stage num="402" mode="Serial" desc="Transform tblObligation" enabled="true">
			<actions>
				
					<action handler="SqlServer.Raw" desc="Creating tblObligation_conv" progresslabel="Creating  tblObligation_conv" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create personImage_conv">
							IF OBJECT_ID('tblObligation_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[tblObligation_conv];

				
							</task>
							
							<task handler="SqlServer.Script" desc="Create tTblObligation  table">
							<![CDATA[
							
							CREATE TABLE [tblObligation_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							[accessLevel] [int] NULL,
							[createUserRealName] [varchar](255) NULL,
							[createUsername] [varchar](255) NULL,
							[dateCreated] [datetime] NULL,
							[lastUpdateUserRealName] [varchar](255) NULL,
							[lastUpdateUsername] [varchar](255) NULL,
							[lastUpdated] [datetime] NULL,
							[memo] [varchar](512) NULL,
							[accountNumber] [varchar](255) NULL,
							[adjustedAmount] [float] NULL,
							[amount] [float] NULL,
							[bank] [int] NULL,
							[dateDue] [datetime] NULL,
							[dateReceived] [datetime] NULL,
							[dateWritten] [datetime] NULL,
							[fromAccountEntryType] [varchar](255) NULL,
							[isJointAndSeveral] [tinyint] NULL,
							[notes] [varchar](7500) NULL,
							[referenceNumber] [varchar](255) NULL,
							[routingNumber] [varchar](255) NULL,
							[toAccountEntryType] [varchar](255) NULL,
							[type] [varchar](255) NULL,
							[unallocAmount] [float] NULL,
							[case_id] [numeric](19, 0) NULL,
							[dirOrgUnity_id] [numeric](19, 0) NULL,
							[fromAccount_id] [numeric](19, 0) NULL,
							[payee_id] [numeric](19, 0) NULL,
							[toAccount_id] [numeric](19, 0) NULL,
							[convId] [int] NULL,
							tObligation_id NUMERIC(19,0)
												
								);	
							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform tblObligation">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	
						
							SELECT * FROM ecourt.tTblObligation tobl
			
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="id" dest="id"/>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="accountNumber" dest="accountNumber"/>
							<mapping source="adjustedAmount" dest="adjustedAmount"/>
							<mapping source="amount" dest="amount"/>
							<mapping source="bank" dest="bank"/>
							<mapping source="dateDue" dest="dateDue"/>
							<mapping source="dateReceived" dest="dateReceived"/>
							<mapping source="dateWritten" dest="dateWritten"/>
							<mapping source="fromAccountEntryType" dest="fromAccountEntryType"/>
							<mapping source="isJointAndSeveral" dest="isJointAndSeveral"/>
							<mapping source="notes" dest="notes"/>
							<mapping source="referenceNumber" dest="referenceNumber"/>
							<mapping source="routingNumber" dest="routingNumber"/>
							<mapping source="toAccountEntryType" dest="toAccountEntryType"/>
							<mapping source="type" dest="type"/>
							<mapping source="unallocAmount" dest="unallocAmount"/>
							<mapping source="case_id" dest="case_id"/>
							<mapping source="dirOrgUnity_id" dest="dirOrgUnity_id"/>
							<mapping source="fromAccount_id" dest="fromAccount_id"/>
							<mapping source="payee_id" dest="payee_id"/>
							<mapping source="toAccount_id" dest="toAccount_id"/>
							<mapping source="convId" dest="convId"/>
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="tblObligation_conv"/>
					</action>
			
			
				</actions>
			</stage> 
		
		<stage num="404" mode="Serial" desc="Transform tblPayment" enabled="true">
			<actions>
				
					<action handler="SqlServer.Raw" desc="Creating tblPayment_conv" progresslabel="Creating  tblPayment_conv" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create tblPayment_conv">
							IF OBJECT_ID('tblPayment_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[tblPayment_conv];

				
							</task>
							
							<task handler="SqlServer.Script" desc="Create tblPayment_conv  table">
							<![CDATA[
							
							CREATE TABLE [tblPayment_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							[accessLevel] [int] NULL,
							[createUserRealName] [varchar](255) NULL,
							[createUsername] [varchar](255) NULL,
							[dateCreated] [datetime] NULL,
							[lastUpdateUserRealName] [varchar](255) NULL,
							[lastUpdateUsername] [varchar](255) NULL,
							[lastUpdated] [datetime] NULL,
							[memo] [varchar](512) NULL,
							[amount] [float] NULL,
							[checkCount] [int] NULL,
							[dateReceived] [datetime] NULL,
							[notes] [varchar](7500) NULL,
							[receiptNumber] [varchar](255) NULL,
							[referenceNumber] [varchar](255) NULL,
							[status] [varchar](255) NULL,
							[type] [varchar](255) NULL,
							[payer_id] [numeric](19, 0) NULL,
							[person_id] [numeric](19, 0) NULL,
							[receivedBy_id] [numeric](19, 0) NULL,
							[convId] [int] NULL,
							[deposit_id] [numeric](19, 0) NULL,
							[dirOrgUnit_id] [numeric](19, 0) NULL,
							tPayment_id NUMERIC(19,0)					
								);	
							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform tblPayment">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	
						
							SELECT * FROM ecourt.tTblPayment  py
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="id" dest="id"/>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="amount" dest="amount"/>
							<mapping source="checkCount" dest="checkCount"/>
							<mapping source="dateReceived" dest="dateReceived"/>
							<mapping source="notes" dest="notes"/>
							<mapping source="receiptNumber" dest="receiptNumber"/>
							<mapping source="referenceNumber" dest="referenceNumber"/>
							<mapping source="status" dest="status"/>
							<mapping source="type" dest="type"/>
							<mapping source="payer_id" dest="payer_id"/>
							<mapping source="person_id" dest="person_id"/>
							<mapping source="receivedBy_id" dest="receivedBy_id"/>
							<mapping source="convId" dest="convId"/>
							<mapping source="deposit_id" dest="deposit_id"/>
							<mapping source="dirOrgUnit_id" dest="dirOrgUnit_id"/>
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="tblPayment_conv"/>
					</action>
			
			
				</actions>
			</stage> 
		
		<stage num="406" mode="Serial" desc="Transform tblTransfer" enabled="true">
			<actions>
				
					<action handler="SqlServer.Raw" desc="Creating tblPayment_conv" progresslabel="Creating  tblTransfer_conv" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create tblTransfer_conv">
							IF OBJECT_ID('tblTransfer_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[tblTransfer_conv];

				
							</task>
							
							<task handler="SqlServer.Script" desc="Create tblTransfer_conv  table">
							<![CDATA[
							
							CREATE TABLE [tblTransfer_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							[accessLevel] [int] NULL,
							[createUserRealName] [varchar](255) NULL,
							[createUsername] [varchar](255) NULL,
							[dateCreated] [datetime] NULL,
							[lastUpdateUserRealName] [varchar](255) NULL,
							[lastUpdateUsername] [varchar](255) NULL,
							[lastUpdated] [datetime] NULL,
							[memo] [varchar](7500) NULL,
							[amount] [float] NULL,
							[codeTypePaymentType] [int] NULL,
							[fromAccountEntryType] [varchar](255) NULL,
							[masterCodePaymentStatus] [int] NULL,
							[notes] [varchar](7500) NULL,
							[payerPayment] [int] NULL,
							[psAmtDueOld] [float] NULL,
							[psDueDateNew] [datetime] NULL,
							[psDueDateOld] [datetime] NULL,
							[toAccountEntryType] [varchar](255) NULL,
							[type] [varchar](255) NULL,
							[void] [tinyint] NULL,
							[bond_id] [numeric](19, 0) NULL,
							[case_id] [numeric](19, 0) NULL,
							[fromAccount_id] [numeric](19, 0) NULL,
							[nonCasePayment_id] [numeric](19, 0) NULL,
							[obligation_id] [numeric](19, 0) NULL,
							[payment_id] [numeric](19, 0) NULL,
							[paymentSchedule_id] [numeric](19, 0) NULL,
							[toAccount_id] [numeric](19, 0) NULL,
							[voucher_id] [numeric](19, 0) NULL,
							[convId] [int] NULL,				
								);	
							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform tblTransfer_conv">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	
						
							SELECT * FROM ecourt.tTblTransfer  tt
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="id" dest="id"/>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="amount" dest="amount"/>
							<mapping source="codeTypePaymentType" dest="codeTypePaymentType"/>
							<mapping source="fromAccountEntryType" dest="fromAccountEntryType"/>
							<mapping source="masterCodePaymentStatus" dest="masterCodePaymentStatus"/>
							<mapping source="notes" dest="notes"/>
							<mapping source="payerPayment" dest="payerPayment"/>
							<mapping source="psAmtDueOld" dest="psAmtDueOld"/>
							<mapping source="psDueDateNew" dest="psDueDateNew"/>
							<mapping source="psDueDateOld" dest="psDueDateOld"/>
							<mapping source="toAccountEntryType" dest="toAccountEntryType"/>
							<mapping source="type" dest="type"/>
							<mapping source="void" dest="void"/>
							<mapping source="bond_id" dest="bond_id"/>
							<mapping source="case_id" dest="case_id"/>
							<mapping source="fromAccount_id" dest="fromAccount_id"/>
							<mapping source="nonCasePayment_id" dest="nonCasePayment_id"/>
							<mapping source="obligation_id" dest="obligation_id"/>
							<mapping source="payment_id" dest="payment_id"/>
							<mapping source="paymentSchedule_id" dest="paymentSchedule_id"/>
							<mapping source="toAccount_id" dest="toAccount_id"/>
							<mapping source="voucher_id" dest="voucher_id"/>
							<mapping source="convId" dest="convId"/>
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="tblTransfer_conv"/>
					</action>
			
			
				</actions>
			</stage> 
		
		<stage num="408" mode="Serial" desc="Transform tblPaymentSchedule" enabled="true">
			<actions>
				
				<action handler="SqlServer.Raw" desc="Creating tblPaymentSchedule" progresslabel="Creating  tblPaymentSchedule" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create tblPaymentSchedule_conv">
							IF OBJECT_ID('tblPaymentSchedule_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[tblPaymentSchedule_conv];

				
							</task>
							
							<task handler="SqlServer.Script" desc="Create tblPaymentSchedule_conv  table">
							<![CDATA[
							
							CREATE TABLE [tblPaymentSchedule_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							[accessLevel] [int] NULL,
							[createUserRealName] [varchar](255) NULL,
							[createUsername] [varchar](255) NULL,
							[dateCreated] [datetime] NULL,
							[lastUpdateUserRealName] [varchar](255) NULL,
							[lastUpdateUsername] [varchar](255) NULL,
							[lastUpdated] [datetime] NULL,
							[memo] [varchar](512) NULL,
							[amount] [float] NULL,
							[day1] [int] NULL,
							[day2] [int] NULL,
							[dayOfWeek] [int] NULL,
							[dayOfWeek2] [int] NULL,
							[description] [varchar](255) NULL,
							[endDt] [datetime] NULL,
							[endType] [int] NULL,
							[nextPaymentAmount] [float] NULL,
							[nextPaymentDate] [datetime] NULL,
							[numPayments] [int] NULL,
							[origScheduleDesc] [varchar](2000) NULL,
							[priority] [int] NULL,
							[scheduleType] [int] NULL,
							[startDate] [datetime] NULL,
							[subType] [int] NULL,
							[dirOrgUnit_id] [numeric](19, 0) NULL,
							[person_id] [numeric](19, 0) NULL,
							[convId] [int] NULL,
							[amountDue] [float] NULL,
							[expectedFinalPaymentDt] [datetime] NULL,
							[expectedFinalPaymentDtAsDate] [datetime] NULL,
							[outstandingBalance] [float] NULL,
							[scheduleDescription] [varchar](2000) NULL,
							tPaymentSchedule_id NUMERIC(19,0)
								);	
							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform tblPaymentSchedule_conv">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	
						
							SELECT * FROM ecourt.tTblPaymentSchedule  ps
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="id" dest="id"/>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="amount" dest="amount"/>
							<mapping source="day1" dest="day1"/>
							<mapping source="day2" dest="day2"/>
							<mapping source="dayOfWeek" dest="dayOfWeek"/>
							<mapping source="dayOfWeek2" dest="dayOfWeek2"/>
							<mapping source="description" dest="description"/>
							<mapping source="endDt" dest="endDt"/>
							<mapping source="endType" dest="endType"/>
							<mapping source="nextPaymentAmount" dest="nextPaymentAmount"/>
							<mapping source="nextPaymentDate" dest="nextPaymentDate"/>
							<mapping source="numPayments" dest="numPayments"/>
							<mapping source="origScheduleDesc" dest="origScheduleDesc"/>
							<mapping source="priority" dest="priority"/>
							<mapping source="scheduleType" dest="scheduleType"/>
							<mapping source="startDate" dest="startDate"/>
							<mapping source="subType" dest="subType"/>
							<mapping source="dirOrgUnit_id" dest="dirOrgUnit_id"/>
							<mapping source="person_id" dest="person_id"/>
							<mapping source="convId" dest="convId"/>
							<mapping source="amountDue" dest="amountDue"/>
							<mapping source="expectedFinalPaymentDt" dest="expectedFinalPaymentDt"/>
							<mapping source="expectedFinalPaymentDtAsDate" dest="expectedFinalPaymentDtAsDate"/>
							<mapping source="outstandingBalance" dest="outstandingBalance"/>
							<mapping source="scheduleDescription" dest="scheduleDescription"/>
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="tblPaymentSchedule_conv"/>
					</action>
			
			
				</actions>
			</stage> 
		
		<stage num="410" mode="Serial" desc="Transform tblBond" enabled="true">
			<actions>
				
				<action handler="SqlServer.Raw" desc="Creating tblBond" progresslabel="Creating  tblBond" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create tblBond">
							IF OBJECT_ID('tblBond_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[tblBond_conv];

				
							</task>
							
							<task handler="SqlServer.Script" desc="Create tblBond_conv  table">
							<![CDATA[
							
							CREATE TABLE [tblBond_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							[accessLevel] [int] NULL,
							[createUserRealName] [varchar](255) NULL,
							[createUsername] [varchar](255) NULL,
							[dateCreated] [datetime] NULL,
							[lastUpdateUserRealName] [varchar](255) NULL,
							[lastUpdateUsername] [varchar](255) NULL,
							[lastUpdated] [datetime] NULL,
							[memo] [varchar](512) NULL,
							[amount] [float] NULL,
							[amountDue] [float] NULL,
							[bondStatus] [varchar](255) NULL,
							[bondType] [varchar](255) NULL,
							[notes] [varchar](7500) NULL,
							[percentage] [int] NULL,
							[postedDt] [datetime] NULL,
							[setDt] [datetime] NULL,
							[case_id] [numeric](19, 0) NULL,
							[dirOrgUnit_id] [numeric](19, 0) NULL,
							[party_id] [numeric](19, 0) NULL,
							[person_id] [numeric](19, 0) NULL,
							[account_id] [numeric](19, 0) NULL,
							[convId] [int] NULL,
							tBond_id NUMERIC(19,0)
								);	
							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform tblBond_conv">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	
						
							SELECT * FROM ecourt.tTblBond bd
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="id" dest="id"/>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="amount" dest="amount"/>
							<mapping source="amountDue" dest="amountDue"/>
							<mapping source="bondStatus" dest="bondStatus"/>
							<mapping source="bondType" dest="bondType"/>
							<mapping source="notes" dest="notes"/>
							<mapping source="percentage" dest="percentage"/>
							<mapping source="postedDt" dest="postedDt"/>
							<mapping source="setDt" dest="setDt"/>
							<mapping source="case_id" dest="case_id"/>
							<mapping source="dirOrgUnit_id" dest="dirOrgUnit_id"/>
							<mapping source="party_id" dest="party_id"/>
							<mapping source="person_id" dest="person_id"/>
							<mapping source="account_id" dest="account_id"/>
							<mapping source="convId" dest="convId"/>
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="tblBond_conv"/>
					</action>
			
			
				</actions>
			</stage> 
		
		<stage num="412" mode="Serial" desc="Transform tblVoucher" enabled="true">
			<actions>
				
				<action handler="SqlServer.Raw" desc="Creating tblVoucher" progresslabel="Creating  tblVoucher" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create tblVoucher">
							IF OBJECT_ID('tblVoucher_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[tblVoucher_conv];

				
							</task>
							
							<task handler="SqlServer.Script" desc="Create tblVoucher_conv  table">
							<![CDATA[
							
							CREATE TABLE [tblVoucher_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							[accessLevel] [int] NULL,
							[createUserRealName] [varchar](255) NULL,
							[createUsername] [varchar](255) NULL,
							[dateCreated] [datetime] NULL,
							[lastUpdateUserRealName] [varchar](255) NULL,
							[lastUpdateUsername] [varchar](255) NULL,
							[lastUpdated] [datetime] NULL,
							[memo] [varchar](512) NULL,
							[amount] [float] NULL,
							[dateWritten] [datetime] NULL,
							[notes] [varchar](7500) NULL,
							[referenceNumber] [varchar](255) NULL,
							[status] [varchar](255) NULL,
							[type] [varchar](255) NULL,
							[dirOrgUnit_id] [numeric](19, 0) NULL,
							[person_id] [numeric](19, 0) NULL,
							[writtenBy_id] [numeric](19, 0) NULL,
							[convId] [int] NULL,
							tVoucher_id NUMERIC(19,0)
								);	
							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform tblVoucher_conv">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	
						
							SELECT * FROM ecourt.tTblVoucher 
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="id" dest="id"/>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="amount" dest="amount"/>
							<mapping source="dateWritten" dest="dateWritten"/>
							<mapping source="notes" dest="notes"/>
							<mapping source="referenceNumber" dest="referenceNumber"/>
							<mapping source="status" dest="status"/>
							<mapping source="type" dest="type"/>
							<mapping source="dirOrgUnit_id" dest="dirOrgUnit_id"/>
							<mapping source="person_id" dest="person_id"/>
							<mapping source="writtenBy_id" dest="writtenBy_id"/>
							<mapping source="convId" dest="convId"/>
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="tblVoucher_conv"/>
					</action>
			
			
				</actions>
			</stage> 
		
		<stage num="414" mode="Serial" desc="Transform tblBondAmend" enabled="true">
			<actions>
				
				<action handler="SqlServer.Raw" desc="Creating tblBondAmend" progresslabel="Creating  tblBondAmend" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create tblBondAmend">
							IF OBJECT_ID('tblBondAmend_conv', 'U') IS NOT NULL 
							DROP TABLE [dbo].[tblBondAmend_conv];

				
							</task>
							
							<task handler="SqlServer.Script" desc="Create tblBondAmend_conv  table">
							<![CDATA[
							
							CREATE TABLE [tblBondAmend_conv](
							idKey [NUMERIC] (19,0) IDENTITY, 	
							id NUMERIC(19,0),
							[accessLevel] [int] NULL,
							[createUserRealName] [varchar](255) NULL,
							[createUsername] [varchar](255) NULL,
							[dateCreated] [datetime] NULL,
							[lastUpdateUserRealName] [varchar](255) NULL,
							[lastUpdateUsername] [varchar](255) NULL,
							[lastUpdated] [datetime] NULL,
							[memo] [varchar](7500) NULL,
							[amendDt] [datetime] NULL,
							[amount] [float] NULL,
							[amountDue] [float] NULL,
							[bondStatus] [varchar](255) NULL,
							[bondType] [varchar](255) NULL,
							[notes] [varchar](7500) NULL,
							[percentage] [int] NULL,
							[postedDt] [datetime] NULL,
							[setDt] [datetime] NULL,
							[account_id] [numeric](19, 0) NULL,
							[bond_id] [numeric](19, 0) NULL,
							[dirOrgUnit_id] [numeric](19, 0) NULL,
							[party_id] [numeric](19, 0) NULL,
							[person_id] [numeric](19, 0) NULL,
							[convId] [int] NULL
							
							
								);	
							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform tblBondAmend_conv">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	
						
							SELECT * FROM ecourt.tTblBondAmend
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="id" dest="id"/>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="amendDt" dest="amendDt"/>
							<mapping source="amount" dest="amount"/>
							<mapping source="amountDue" dest="amountDue"/>
							<mapping source="bondStatus" dest="bondStatus"/>
							<mapping source="bondType" dest="bondType"/>
							<mapping source="notes" dest="notes"/>
							<mapping source="percentage" dest="percentage"/>
							<mapping source="postedDt" dest="postedDt"/>
							<mapping source="setDt" dest="setDt"/>
							<mapping source="account_id" dest="account_id"/>
							<mapping source="bond_id" dest="bond_id"/>
							<mapping source="dirOrgUnit_id" dest="dirOrgUnit_id"/>
							<mapping source="party_id" dest="party_id"/>
							<mapping source="person_id" dest="person_id"/>
							<mapping source="convId" dest="convId"/>
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="tblBondAmend_conv"/>
					</action>
			
			
				</actions>
			</stage> 

		
		
		<stage num="500" mode="Serial" desc="Load Case" enabled="true">
			<actions>
				
				<action handler="SqlServer.Raw" desc="Get initial ecourt row counts for all tables" progresslabel="Initial table counts" enabled="true">
					<source database="${sql.ecourt.db}">
						<task handler="SqlServer.TableCounts"><args savePath="${log.folder}\startingCounts.xml"/></task>
					</source>
				</action>
			
				<action handler="SqlServer.Raw" verbose="${verbose}">
					<source database="${sql.ecourt.db}" schema="ecourt" table="tAuditLog">
						<task handler="SqlServer.Script" desc="Add tAuditLog row if necessary">
							DECLARE @today datetime; SET @today = GETDATE();
							INSERT INTO ecourt.tAuditLog (username, category, timeStamp, dateCreated, lastUpdated) VALUES ('conv', 'data conversion', @today, @today, @today); --1
					
						</task>
					</source>
				</action>
				
				<action handler="SqlServer.Raw" verbose="${verbose}">
					<source database="${sql.staging.db}" schema="dbo">
						<task handler="SqlServer.DB.StringFixTables">case_conv, subCase_conv, charge_conv, scheduledEvent_conv, party_conv, person_conv, caseSeal_conv, caseAssignment_conv, sentence_conv, sentenceCondition_conv, address1_conv, address2_conv, telephone2_conv</task>
					</source>
				</action>
				

				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Case">
					<source database="${sql.staging.db}" schema="dbo" table="case_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
								

							SELECT
							createUserRealName = COALESCE(cc.createUserRealName, 'conv' ),
							createUsername = COALESCE(cc.createUsername, 'conv' ) ,
							dateCreated = COALESCE(cc.dateCreated, @today),
							lastUpdateUserRealName = COALESCE(cc.lastUpdateUserRealName, 'conv' ),
							lastUpdateUsername = COALESCE(cc.lastUpdateUsername, 'conv') ,
							lastUpdated = COALESCE(cc.lastUpdated, @today),
							cc.*,
							cc.caseNumber,
							caseTypeLd =
							CASE 
								WHEN cc.caseType_ld IN ('FJUUJ','CRFLJ') THEN 'JUVV'
								ELSE cc.caseType_ld
							END,
							caseNumber_load = 
							CASE
								WHEN t1.caseNumber IS NULL THEN  cc.caseNumber
								ELSE  cc.sourceCaseNumber
							END,
							t1.caseNumber,
							sourceCaseNumber
							From cnmiStaging.dbo.case_conv cc
							LEFT JOIN  (SELECT caseNumber, count(1) ocr FROM cnmiStaging.dbo.case_conv GROUP BY caseNumber HAVING count(1) > 1) t1
							ON cc.caseNumber = t1.caseNumber 
						]]>							
						</param>
						<param name="idColumnName">tCase_id</param>
						<param name="whereColumnName">idKey</param>	
												
					</params>
					<mappings>
					
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="asbestos" dest="asbestos"/>
						<mapping source="assignedTrack" dest="assignedTrack"/>
						<mapping source="caseJurisdiction" dest="caseJurisdiction"/>
						<mapping source="caseName" dest="caseName"/>
						<mapping source="caseNumber_load" dest="caseNumber"/>
						<mapping source="caseNumberSequence" dest="caseNumberSequence"/>
						<mapping source="caseReason" dest="caseReason"/>
						<mapping source="caseShortName" dest="caseShortName"/>
						<mapping source="caseSubType" dest="caseSubType"/>
						<mapping source="caseTypeLd" dest="caseType"/>
						<mapping source="caseCategory" dest="category"/>
						<mapping source="ceqa" dest="ceqa"/>
						<mapping source="classAction" dest="classAction"/>
						<mapping source="complexFeeAssessedAmountCents" dest="complexFeeAssessedAmountCents"/>
						<mapping source="complexLitigation" dest="complexLitigation"/>
						<mapping source="conditionallySealed" dest="conditionallySealed"/>
						<mapping source="consolidationType" dest="consolidationType"/>
						<mapping source="county" dest="county"/>
						<mapping source="demandAmount" dest="demandAmount"/>
						<mapping source="demandAmountType" dest="demandAmountType"/>
						<mapping source="dispositionDate" dest="dispositionDate"/>
						<mapping source="dispositionManner" dest="dispositionManner"/>
						<mapping source="dispositionType" dest="dispositionType"/>
						<mapping source="dmvDocketId" dest="dmvDocketId"/>
						<mapping source="documentAccessLevel" dest="documentAccessLevel"/>
						<mapping source="eFileCitationDate" dest="eFileCitationDate"/>
						<mapping source="eFileCitationNumber" dest="eFileCitationNumber"/>
						<mapping source="efmEFiled" dest="efmEFiled"/>
						<mapping source="efmLegacyCase" dest="efmLegacyCase"/>
						<mapping source="excludeFromEFiling" dest="excludeFromEFiling"/>
						<mapping source="filingAgency" dest="filingAgency"/>
						<mapping source="filingDate" dest="filingDate"/>
						<mapping source="filingStatus" dest="filingStatus"/>
						<mapping source="filingType" dest="filingType"/>
						<mapping source="hearingRequestedDate" dest="hearingRequestedDate"/>
						<mapping source="hearingRequestedTime" dest="hearingRequestedTime"/>
						<mapping source="hearingRequestedType" dest="hearingRequestedType"/>
						<mapping source="incidentZip" dest="incidentZip"/>
						<mapping source="ivrCaseNumber" dest="ivrCaseNumber"/>
						<mapping source="ivrCitationNumber" dest="ivrCitationNumber"/>
						<mapping source="ivrDLNumber" dest="ivrDLNumber"/>
						<mapping source="jccpCaseNumber" dest="jccpCaseNumber"/>
						<mapping source="joined" dest="joined"/>
						<mapping source="judicialOfficer" dest="judicialOfficer"/>
						<mapping source="jurisdictionalAmount" dest="jurisdictionalAmount"/>
						<mapping source="latitude" dest="latitude"/>
						<mapping source="location" dest="location"/>
						<mapping source="locationAddress1" dest="locationAddress1"/>
						<mapping source="locationAddress2" dest="locationAddress2"/>
						<mapping source="locationCity" dest="locationCity"/>
						<mapping source="locationDept" dest="locationDept"/>
						<mapping source="locationState" dest="locationState"/>
						<mapping source="locationZip" dest="locationZip"/>
						<mapping source="longitude" dest="longitude"/>
						<mapping source="memo2" dest="memo2"/>
						<mapping source="noFeeCase" dest="noFeeCase"/>
						<mapping source="noFeeCaseSection" dest="noFeeCaseSection"/>
						<mapping source="noOfParcels" dest="noOfParcels"/>
						<mapping source="originalFiledDate" dest="originalFiledDate"/>
						<mapping source="originalVerdictDate" dest="originalVerdictDate"/>
						<mapping source="receivedDate" dest="receivedDate"/>
						<mapping source="referenceNumber" dest="referenceNumber"/>
						<mapping source="status" dest="status"/>
						<mapping source="statusDate" dest="statusDate"/>
						<mapping source="statusUpdateReason" dest="statusUpdateReason"/>
						<mapping source="subJurisdiction" dest="subJurisdiction"/>
						<mapping source="workflowCaseAttribute" dest="workflowCaseAttribute"/>
						<mapping source="workflowLocation" dest="workflowLocation"/>
						<mapping source="workflowLocation2" dest="workflowLocation2"/>
						<mapping source="workflowLocation3" dest="workflowLocation3"/>
						<mapping source="caseUnit" dest="caseUnit"/>
						<mapping source="filingAgencyCaseNumber" dest="filingAgencyCaseNumber"/>
						<mapping source="convId" dest="convId"/>
						<mapping source="caseSealType" dest="caseSealType"/>
						<mapping source="caseOrigination" dest="caseOrigination"/>
					
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tCase"/>
				</action>
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Case Seal Barcinas">
					<source database="${sql.staging.db}" schema="dbo" table="case_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							
							

							SELECT 
							0 as optlock,
							COALESCE(cc.createUserRealName, 'conv' ) as createUserRealName,
							COALESCE(cc.createUsername, 'conv' ) as createUsername ,
							COALESCE(cc.dateCreated, @today) as dateCreated,
							COALESCE(cc.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
							COALESCE(cc.lastUpdateUsername, 'conv') as lastUpdateUsername ,
							COALESCE(cc.lastUpdated, @today) as lastUpdated,
							'SEAL' as sealType, receivedDate as effectiveFrom, cc.* FROM case_conv cc
							WHERE  convID IN ('13-14301','16-14501')
						]]>							
						</param>
						
												
					</params>
					<mappings>
						<mapping source="sealType" dest="type"/>
						<mapping source="effectiveFrom" dest="effectiveFrom"/>
						<mapping source="tCase_id" dest="case_id"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="optlock" dest="optlock"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tCaseSeal"/>
				</action>
				
				<action handler="SqlServer.Raw" desc="Creating Case_conv table" progresslabel="Allow Identity Entry" enabled="false">
					<source database="${sql.ecourt.db}" schema="dbo">
						
						<task handler="SqlServer.Script" desc="Turn off Identity Entry">
						<![CDATA[
						
						UPDATE 
						
									
						]]>
						
						</task>
						
					</source>
				</action>
			</actions>
		</stage>	
		
		
			
		<stage num="501" mode="Serial" desc="Load Case - Traffic Clearance Report" enabled="true">
			<actions>
				
			
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Case TR Clearance">
					<source database="${sql.staging.db}" schema="dbo" table="person_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
								

							SELECT
							createUserRealName =  'conv',
							createUsername =  'conv',
							dateCreated =  @today,
							lastUpdateUserRealName =  'conv',
							lastUpdateUsername = 'conv',
							lastUpdated =  @today,
							0 as optlock,
							pc.*

							
							From cnmiStaging.dbo.person_conv pc
							WHERE case_id IS NULL
						
						]]>							
						</param>
						<param name="idColumnName">tCaseTR_id</param>
						<param name="whereColumnName">idKey</param>	
												
					</params>
					<mappings>				
						<mapping source="caseNumberTR" dest="caseNumber"/>
						<mapping source="caseNameTR" dest="caseName"/>
						<mapping source="caseTypeTR" dest="caseType"/>
						<mapping source="filingDateTR" dest="filingDate"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tCase"/>
				</action>
				
			
			</actions>
		</stage>	
		
		
		<stage num="502" mode="Serial" desc="Load SubCase" enabled="true">
			<actions>
				
				

				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading SubCase">
					<source database="${sql.staging.db}" schema="dbo" table="subCase_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT	
							COALESCE(sc.createUserRealName, 'conv' ) as createUserRealName,
							COALESCE(sc.createUsername, 'conv' ) as createUsername ,
							COALESCE(sc.dateCreated, @today) as dateCreated,
							COALESCE(sc.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
							COALESCE(sc.lastUpdateUsername, 'conv') as lastUpdateUsername ,
							COALESCE(sc.lastUpdated, @today) as lastUpdated,
							sc.*,
							cc.tCase_id,
							cc.caseNumber
							From subcase_conv sc
							INNER JOIN case_conv cc
							ON sc.caseNumber = cc.caseNumber AND cc.caseGroup = 'CR'
					
						]]>							
						</param>
						<param name="idColumnName">tSubCase_id</param>
						<param name="whereColumnName">idKey</param>		
												
					</params>
					<mappings>
						
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="caseUnit" dest="caseUnit"/>
						<mapping source="category" dest="category"/>
						<mapping source="dateIncurred" dest="dateIncurred"/>
						<mapping source="dateOfMarriage" dest="dateOfMarriage"/>
						<mapping source="dateOfSeparation" dest="dateOfSeparation"/>
						<mapping source="demandAmount" dest="demandAmount"/>
						<mapping source="demandAmountType" dest="demandAmountType"/>
						<mapping source="dispositionDate" dest="dispositionDate"/>
						<mapping source="dispositionManner" dest="dispositionManner"/>
						<mapping source="dispositionType" dest="dispositionType"/>
						<mapping source="dmvDocketId" dest="dmvDocketId"/>
						<mapping source="documentAccessLevel" dest="documentAccessLevel"/>
						<mapping source="does" dest="does"/>
						<mapping source="efmReferenceId" dest="efmReferenceId"/>
						<mapping source="exemption" dest="exemption"/>
						<mapping source="filingAgency" dest="filingAgency"/>
						<mapping source="filingDate" dest="filingDate"/>
						<mapping source="filingType" dest="filingType"/>
						<mapping source="hearingRequestedDate" dest="hearingRequestedDate"/>
						<mapping source="heldToAnswerDate" dest="heldToAnswerDate"/>
						<mapping source="indianChildWelfare" dest="indianChildWelfare"/>
						<mapping source="interstateCompact" dest="interstateCompact"/>
						<mapping source="jurisdictionalAmount" dest="jurisdictionalAmount"/>
						<mapping source="location" dest="location"/>
						<mapping source="locationAddress1" dest="locationAddress1"/>
						<mapping source="locationAddress2" dest="locationAddress2"/>
						<mapping source="locationCity" dest="locationCity"/>
						<mapping source="locationState" dest="locationState"/>
						<mapping source="locationZip" dest="locationZip"/>
						<mapping source="otherCaseNumber" dest="otherCaseNumber"/>
						<mapping source="otherCaseNumberType" dest="otherCaseNumberType"/>
						<mapping source="ownersResponsibility" dest="ownersResponsibility"/>
						<mapping source="paternityFiling" dest="paternityFiling"/>
						<mapping source="referenceNumber" dest="referenceNumber"/>
						<mapping source="roes" dest="roes"/>
						<mapping source="shortName" dest="shortName"/>
						<mapping source="status" dest="status"/>
						<mapping source="statusDate" dest="statusDate"/>
						<mapping source="subCaseName" dest="subCaseName"/>
						<mapping source="caseNumber" dest="subCaseNumber"/>
						<mapping source="subCaseReason" dest="subCaseReason"/>
						<mapping source="subCaseSource" dest="subCaseSource"/>
						<mapping source="convSubCaseType" dest="subCaseType"/>
						<mapping source="terminationDate" dest="terminationDate"/>
						<mapping source="terminationType" dest="terminationType"/>
						<mapping source="violationDate" dest="violationDate"/>
						<mapping source="tCase_id" dest="case_id"/>
						<mapping source="receivedDate" dest="receivedDate"/>
						<mapping source="efmMoreThan12Claims" dest="efmMoreThan12Claims"/>
						<mapping source="originalVerdictDate" dest="originalVerdictDate"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tSubCase"/>
				</action>
				
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading SubCase">
					<source database="${sql.staging.db}" schema="dbo" table="subCase_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT	
							COALESCE(sc.createUserRealName, 'conv' ) as createUserRealName,
							COALESCE(sc.createUsername, 'conv' ) as createUsername ,
							COALESCE(sc.dateCreated, @today) as dateCreated,
							COALESCE(sc.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
							COALESCE(sc.lastUpdateUsername, 'conv') as lastUpdateUsername ,
							COALESCE(sc.lastUpdated, @today) as lastUpdated,							
							sc.*,
							cc.tCase_id,
							cc.caseNumber
							From subcase_conv sc
							INNER JOIN case_conv cc
							ON sc.case_id = cc.id AND cc.caseGroup <> 'CR'
						
						]]>							
						</param>
						<param name="idColumnName">tSubCase_id</param>
						<param name="whereColumnName">idKey</param>		
												
					</params>
					<mappings>
						
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="caseUnit" dest="caseUnit"/>
						<mapping source="category" dest="category"/>
						<mapping source="dateIncurred" dest="dateIncurred"/>
						<mapping source="dateOfMarriage" dest="dateOfMarriage"/>
						<mapping source="dateOfSeparation" dest="dateOfSeparation"/>
						<mapping source="demandAmount" dest="demandAmount"/>
						<mapping source="demandAmountType" dest="demandAmountType"/>
						<mapping source="dispositionDate" dest="dispositionDate"/>
						<mapping source="dispositionManner" dest="dispositionManner"/>
						<mapping source="dispositionType" dest="dispositionType"/>
						<mapping source="dmvDocketId" dest="dmvDocketId"/>
						<mapping source="documentAccessLevel" dest="documentAccessLevel"/>
						<mapping source="does" dest="does"/>
						<mapping source="efmReferenceId" dest="efmReferenceId"/>
						<mapping source="exemption" dest="exemption"/>
						<mapping source="filingAgency" dest="filingAgency"/>
						<mapping source="filingDate" dest="filingDate"/>
						<mapping source="filingType" dest="filingType"/>
						<mapping source="hearingRequestedDate" dest="hearingRequestedDate"/>
						<mapping source="heldToAnswerDate" dest="heldToAnswerDate"/>
						<mapping source="indianChildWelfare" dest="indianChildWelfare"/>
						<mapping source="interstateCompact" dest="interstateCompact"/>
						<mapping source="jurisdictionalAmount" dest="jurisdictionalAmount"/>
						<mapping source="location" dest="location"/>
						<mapping source="locationAddress1" dest="locationAddress1"/>
						<mapping source="locationAddress2" dest="locationAddress2"/>
						<mapping source="locationCity" dest="locationCity"/>
						<mapping source="locationState" dest="locationState"/>
						<mapping source="locationZip" dest="locationZip"/>
						<mapping source="otherCaseNumber" dest="otherCaseNumber"/>
						<mapping source="otherCaseNumberType" dest="otherCaseNumberType"/>
						<mapping source="ownersResponsibility" dest="ownersResponsibility"/>
						<mapping source="paternityFiling" dest="paternityFiling"/>
						<mapping source="referenceNumber" dest="referenceNumber"/>
						<mapping source="roes" dest="roes"/>
						<mapping source="shortName" dest="shortName"/>
						<mapping source="status" dest="status"/>
						<mapping source="statusDate" dest="statusDate"/>
						<mapping source="subCaseName" dest="subCaseName"/>
						<mapping source="caseNumber" dest="subCaseNumber"/>
						<mapping source="subCaseReason" dest="subCaseReason"/>
						<mapping source="subCaseSource" dest="subCaseSource"/>
						<mapping source="convSubCaseType" dest="subCaseType"/>
						<mapping source="terminationDate" dest="terminationDate"/>
						<mapping source="terminationType" dest="terminationType"/>
						<mapping source="violationDate" dest="violationDate"/>
						<mapping source="tCase_id" dest="case_id"/>
						<mapping source="receivedDate" dest="receivedDate"/>
						<mapping source="efmMoreThan12Claims" dest="efmMoreThan12Claims"/>
						<mapping source="originalVerdictDate" dest="originalVerdictDate"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tSubCase"/>
				</action>
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading SubCase - TR Clearance">
					<source database="${sql.staging.db}" schema="dbo" table="person_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT	
							'conv' as createUserRealName,
							'conv' as createUsername ,
							@today as dateCreated,
							'conv' as lastUpdateUserRealName,
							'conv' as lastUpdateUsername ,
							@today as lastUpdated,
							0 as optlock,
							pc.*

							From person_conv pc
							WHERE tCaseTR_id IS NOT NULL
					
						]]>							
						</param>
						<param name="idColumnName">tSubCaseTR_id</param>
						<param name="whereColumnName">idKey</param>		
												
					</params>
					<mappings>
						
						
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
	
						<mapping source="optlock" dest="optlock"/>
						<mapping source="caseNameTR" dest="subCaseName"/>
						<mapping source="caseNumberTR" dest="subCaseNumber"/>
						<mapping source="caseTypeTR" dest="subCaseType"/>
						<mapping source="tCaseTR_id" dest="case_id"/>

					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tSubCase"/>
				</action>
				
				<action handler="SqlServer.Raw" desc="Creating Case_conv table" progresslabel="Fixing SubCaseNumber" enabled="true">
					<source database="${sql.ecourt.db}" schema="dbo">
						
						<task handler="SqlServer.Script" desc="Fixing SubCaseNumber">
						<![CDATA[
						
						UPDATE cnmieCourtConv.ecourt.tSubCase 
						SET subCaseNumber = caseNumber
						FROM cnmieCourtConv.ecourt.tSubCase  sc
						INNER JOIN cnmieCourtConv.ecourt.tCase cs
						ON sc.case_id = cs.id
						WHERE caseNumber <> subCaseNumber;
						
									
						]]>
						
						</task>
						
					</source>
				</action>
				
			</actions>
		</stage>	
		
					
		<stage num="504" mode="Serial" desc="Load person/party" enabled="true">
			<actions>
				

				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading PI - Normal">
					<source database="${sql.staging.db}" schema="dbo" table="person_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						DECLARE @today datetime; SET @today = GETDATE();
								

						SELECT
						
						
						'0' as optlock,
						'conv' as createUserRealName,
						'conv' as createUsername,
						'conv' as lastUpdateUserRealName,
						'conv' as lastUpdateUsername,
						@today as dateCreated,
						@today as lastUpdated,
						
						personIdentifier_id 
						FROM person_conv 
						WHERE partyTypeFlg = 0 
						GROUP BY personIdentifier_id
						
						]]>							
						</param>
						<param name="idColumnName">tPID</param>
						<param name="whereColumnName">personIdentifier_id</param>
												
					</params>
					<mappings>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tPersonIdentifier"/>
				</action>
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading PI - Too many/Broken up">
					<source database="${sql.staging.db}" schema="dbo" table="person_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						DECLARE @today datetime; SET @today = GETDATE();
								

						SELECT
						
						
						'0' as optlock,
						'conv' as createUserRealName,
						'conv' as createUsername,
						'conv' as lastUpdateUserRealName,
						'conv' as lastUpdateUsername,
						@today as dateCreated,
						@today as lastUpdated,
						idKey,
						personIdentifier_id
						FROM person_conv 
						WHERE partyTypeFlg = 1
						]]>							
						</param>
						<param name="idColumnName">tPID</param>
						<param name="whereColumnName">idKey</param>
												
					</params>
					<mappings>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tPersonIdentifier"/>
				</action>
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Person">
					<source database="${sql.staging.db}" schema="dbo" table="person_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						SELECT
						COALESCE(createUserRealName, 'conv' ) as createUserRealName,
						COALESCE(createUsername, 'conv' ) as createUsername ,
						COALESCE(dateCreated, GETDATE()) as dateCreated,
						COALESCE(lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
						COALESCE(lastUpdateUsername, 'conv') as lastUpdateUsername ,
						COALESCE(lastUpdated, GETDATE()) as lastUpdated,
						REPLACE(nameSuffix, 'jw-','') as nameSuffixLd,
						REPLACE(namePrefix, 'jw-','') as namePrefixLd,
						lastNameLd =
						CASE 
							WHEN lastName IS NOT NULL and firstName is NOT NULL   THEN lastName
							WHEN lastName IS NOT NULL and firstName is  NULL  THEN NULL
						END,
						organizationNameLd =
						case
							WHEN lastName IS NOT NULL and firstName is NOT  NULL  THEN NULL
							WHEN lastName IS NOT NULL and firstName is  NULL  THEN lastName
						END,
						*
						
						FROM person_conv pc
				
						
						]]>							
						</param>
							<param name="idColumnName">tPerson_id</param>
							<param name="whereColumnName">idKey</param>						
					</params>
					<mappings>					
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="addressAccessLevel" dest="addressAccessLevel"/>
						<mapping source="collectionAssignedDate" dest="collectionAssignedDate"/>
						<mapping source="efmErroneouslySued" dest="efmErroneouslySued"/>
						<mapping source="efmExemptionType" dest="efmExemptionType"/>
						<mapping source="efmFeeExemptionRequestType" dest="efmFeeExemptionRequestType"/>
						<mapping source="efmFeeExemptionType" dest="efmFeeExemptionType"/>
						<mapping source="efmInterpreterLanguage" dest="efmInterpreterLanguage"/>
						<mapping source="efmTrueName" dest="efmTrueName"/>
						<mapping source="efspFeeWaiverFiled" dest="efspFeeWaiverFiled"/>
						<mapping source="efspFirstAppearancePaid" dest="efspFirstAppearancePaid"/>
						<mapping source="efspGovernmentExempt" dest="efspGovernmentExempt"/>
						<mapping source="electronicPinNumber" dest="electronicPinNumber"/>
						<mapping source="email" dest="email"/>
						<mapping source="firstAppearancePaid" dest="firstAppearancePaid"/>
						<mapping source="firstName" dest="firstName"/>
						<mapping source="governmentAgency" dest="governmentAgency"/>
						<mapping source="jobTitle" dest="jobTitle"/>
						<mapping source="lastNameLd" dest="lastName"/>
						<mapping source="lastName2" dest="lastName2"/>
						<mapping source="legalName" dest="legalName"/>
						<mapping source="middleName" dest="middleName"/>
						<mapping source="nameExact" dest="nameExact"/>
						<mapping source="nameExtension" dest="nameExtension"/>
						<mapping source="namePrefixLd" dest="namePrefix"/>
						<mapping source="nameSuffixLd" dest="nameSuffix"/>
						<mapping source="organization" dest="organization"/>
						<mapping source="organizationNameLd" dest="organizationName"/>
						<mapping source="organizationSuffix" dest="organizationSuffix"/>
						<mapping source="personCode" dest="personCode"/>
						<mapping source="personId" dest="personId"/>
						<mapping source="personSource" dest="personSource"/>
						<mapping source="personSubType" dest="personSubType"/>
						<mapping source="personType" dest="personType"/>
						<mapping source="pinNumber" dest="pinNumber"/>
						<mapping source="searchableInitials" dest="searchableInitials"/>
						<mapping source="status" dest="status"/>
						<mapping source="statusDate" dest="statusDate"/>
						<mapping source="collectionAgency_id" dest="collectionAgency_id"/>
						<mapping source="mergedToPerson_id" dest="mergedToPerson_id"/>
						<mapping source="tPID" dest="personIdentifier_id"/>
						<mapping source="convId" dest="convId"/>
						<mapping source="efspEService" dest="efspEService"/>
						<mapping source="efspEmail" dest="efspEmail"/>
						<mapping source="electronicService" dest="electronicService"/>
						<mapping source="eftAccountName" dest="eftAccountName"/>
						<mapping source="eftAccountNo" dest="eftAccountNo"/>
						<mapping source="eftRoutingNo" dest="eftRoutingNo"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tPerson"/>
				</action>
				
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading PI - TR Clearance Report">
					<source database="${sql.staging.db}" schema="dbo" table="caseTR_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						DECLARE @today datetime; SET @today = GETDATE();
								

						SELECT
						
						
						'0' as optlock,
						'conv' as createUserRealName,
						'conv' as createUsername,
						'conv' as lastUpdateUserRealName,
						'conv' as lastUpdateUsername,
						@today as dateCreated,
						@today as lastUpdated,
						idKey
						FROM caseTR_conv
						
						]]>							
						</param>
						<param name="idColumnName">tPID</param>
						<param name="whereColumnName">idKey</param>
												
					</params>
					<mappings>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tPersonIdentifier"/>
				</action>
				
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Party - MAIN" enabled="true">
					<source database="${sql.staging.db}" schema="dbo" table="party_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						SELECT
						COALESCE(pty.createUserRealName, 'conv' ) as createUserRealName,
						COALESCE(pty.createUsername, 'conv' ) as createUsername ,
						COALESCE(pty.dateCreated, GETDATE()) as dateCreated,
						COALESCE(pty.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
						COALESCE(pty.lastUpdateUsername, 'conv') as lastUpdateUsername ,
						COALESCE(pty.lastUpdated, GETDATE()) as lastUpdated,
						pty.*,
						pr.tPerson_id,
						cc.tCase_id,
						sc.tSubCase_id
						FROM party_conv pty
						INNER JOIN person_conv pr
						ON pty.person_id = pr.id AND pty.case_id = pr.case_id
						INNER JOIN case_conv cc
						ON pty.case_id = cc.id
						INNER JOIN convertCases_conv cv
						ON cc.id = cv.case_id
						INNER JOIN subCase_conv sc
						ON cc.id = sc.case_id AND convSubCaseType = 'MAIN'
						WHERE partyType NOT IN ('DEFT5', 'PLTF5', 'SCDCA', 'SCDAC', 'SCI10', 'SCI11', 'SCPAC', 'SCPCA', 'DEFT4', 'PLTF4', 'DEFT3', 'PLTF3') and cv.caseGroup = 'CV'
						]]>							
						</param>
							<param name="idColumnName">tParty_id</param>
							<param name="whereColumnName">idKey</param>						
					</params>
					<mappings>					
						<mapping source="tPerson_id" dest="person_id"/>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="allowPublicAccess" dest="allowPublicAccess"/>
						<mapping source="cmsReferenceId" dest="cmsReferenceId"/>
						<mapping source="crsExemptOverride" dest="crsExemptOverride"/>
						<mapping source="dispositionDate" dest="dispositionDate"/>
						<mapping source="dispositionManner" dest="dispositionManner"/>
						<mapping source="dispositionType" dest="dispositionType"/>
						<mapping source="efmReferenceId" dest="efmReferenceId"/>
						<mapping source="endDate" dest="endDate"/>
						<mapping source="exemptEligible" dest="exemptEligible"/>
						<mapping source="formerRepresentationText" dest="formerRepresentationText"/>
						<mapping source="nonMonApplication" dest="nonMonApplication"/>
						<mapping source="partyDesignationType" dest="partyDesignationType"/>
						<mapping source="partyNumber" dest="partyNumber"/>
						<mapping source="partySource" dest="partySource"/>
						<mapping source="partySubType" dest="partySubType"/>
						<mapping source="partyType" dest="partyType"/>
						<mapping source="representationText" dest="representationText"/>
						<mapping source="representingPartyType" dest="representingPartyType"/>
						<mapping source="selfRepresented" dest="selfRepresented"/>
						<mapping source="startDate" dest="startDate"/>
						<mapping source="status" dest="status"/>
						<mapping source="statusDate" dest="statusDate"/>
						<mapping source="stayDate" dest="stayDate"/>
						<mapping source="stayEndDate" dest="stayEndDate"/>
						<mapping source="stayStatus" dest="stayStatus"/>
						<mapping source="tCase_id" dest="case_id"/>
						<mapping source="exportBatch_id" dest="exportBatch_id"/>
						<mapping source="exportCompletedBatch_id" dest="exportCompletedBatch_id"/>
						<mapping source="exportFailedBatch_id" dest="exportFailedBatch_id"/>
						<mapping source="tSubCase_id" dest="subCase_id"/>
						<mapping source="convId" dest="convId"/>
						<mapping source="flag1" dest="flag1"/>
						<mapping source="flag2" dest="flag2"/>
						<mapping source="flag3" dest="flag3"/>
						<mapping source="flag4" dest="flag4"/>
						<mapping source="flag5" dest="flag5"/>
						<mapping source="notes" dest="notes"/>
						<mapping source="notification" dest="notification"/>
						<mapping source="dirOrgUnit_id" dest="dirOrgUnit_id"/>
						<mapping source="eventInvPersConvId" dest="eventInvPersConvId"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tParty"/>
				</action>
						
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Party - CROSS" enabled="true">
					<source database="${sql.staging.db}" schema="dbo" table="party_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						SELECT
						COALESCE(pty.createUserRealName, 'conv' ) as createUserRealName,
						COALESCE(pty.createUsername, 'conv' ) as createUsername ,
						COALESCE(pty.dateCreated, GETDATE()) as dateCreated,
						COALESCE(pty.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
						COALESCE(pty.lastUpdateUsername, 'conv') as lastUpdateUsername ,
						COALESCE(pty.lastUpdated,GETDATE()) as lastUpdated,
						pty.*,
						pr.tPerson_id,
						cc.tCase_id,
						sc.tSubCase_id
						FROM party_conv pty
						INNER JOIN person_conv pr
						ON pty.person_id = pr.id AND pty.case_id = pr.case_id
						INNER JOIN case_conv cc
						ON pty.case_id = cc.id
						INNER JOIN subCase_conv sc
						ON cc.id = sc.case_id AND convSubCaseType = 'CROSS'
						WHERE partyType  IN ('DEFT5', 'PLTF5', 'SCDCA', 'SCDAC', 'SCI10', 'SCI11', 'SCPAC', 'SCPCA') 
						]]>							
						</param>
							<param name="idColumnName">tParty_id</param>
							<param name="whereColumnName">idKey</param>						
					</params>
					<mappings>					
						<mapping source="tPerson_id" dest="person_id"/>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="allowPublicAccess" dest="allowPublicAccess"/>
						<mapping source="cmsReferenceId" dest="cmsReferenceId"/>
						<mapping source="crsExemptOverride" dest="crsExemptOverride"/>
						<mapping source="dispositionDate" dest="dispositionDate"/>
						<mapping source="dispositionManner" dest="dispositionManner"/>
						<mapping source="dispositionType" dest="dispositionType"/>
						<mapping source="efmReferenceId" dest="efmReferenceId"/>
						<mapping source="endDate" dest="endDate"/>
						<mapping source="exemptEligible" dest="exemptEligible"/>
						<mapping source="formerRepresentationText" dest="formerRepresentationText"/>
						<mapping source="nonMonApplication" dest="nonMonApplication"/>
						<mapping source="partyDesignationType" dest="partyDesignationType"/>
						<mapping source="partyNumber" dest="partyNumber"/>
						<mapping source="partySource" dest="partySource"/>
						<mapping source="partySubType" dest="partySubType"/>
						<mapping source="partyType" dest="partyType"/>
						<mapping source="representationText" dest="representationText"/>
						<mapping source="representingPartyType" dest="representingPartyType"/>
						<mapping source="selfRepresented" dest="selfRepresented"/>
						<mapping source="startDate" dest="startDate"/>
						<mapping source="status" dest="status"/>
						<mapping source="statusDate" dest="statusDate"/>
						<mapping source="stayDate" dest="stayDate"/>
						<mapping source="stayEndDate" dest="stayEndDate"/>
						<mapping source="stayStatus" dest="stayStatus"/>
						<mapping source="tCase_id" dest="case_id"/>
						<mapping source="exportBatch_id" dest="exportBatch_id"/>
						<mapping source="exportCompletedBatch_id" dest="exportCompletedBatch_id"/>
						<mapping source="exportFailedBatch_id" dest="exportFailedBatch_id"/>
						<mapping source="tSubCase_id" dest="subCase_id"/>
						<mapping source="convId" dest="convId"/>
						<mapping source="flag1" dest="flag1"/>
						<mapping source="flag2" dest="flag2"/>
						<mapping source="flag3" dest="flag3"/>
						<mapping source="flag4" dest="flag4"/>
						<mapping source="flag5" dest="flag5"/>
						<mapping source="notes" dest="notes"/>
						<mapping source="notification" dest="notification"/>
						<mapping source="dirOrgUnit_id" dest="dirOrgUnit_id"/>
						<mapping source="eventInvPersConvId" dest="eventInvPersConvId"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tParty"/>
				</action>
				
							
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Party - COUNTER" enabled="true">
					<source database="${sql.staging.db}" schema="dbo" table="party_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						SELECT
						COALESCE(pty.createUserRealName, 'conv' ) as createUserRealName,
						COALESCE(pty.createUsername, 'conv' ) as createUsername ,
						COALESCE(pty.dateCreated, GETDATE()) as dateCreated,
						COALESCE(pty.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
						COALESCE(pty.lastUpdateUsername, 'conv') as lastUpdateUsername ,
						COALESCE(pty.lastUpdated, GETDATE()) as lastUpdated,
						pty.*,
						pr.tPerson_id,
						cc.tCase_id,
						sc.tSubCase_id
						FROM party_conv pty
						INNER JOIN person_conv pr
						ON pty.person_id = pr.id AND pty.case_id = pr.case_id
						INNER JOIN case_conv cc
						ON pty.case_id = cc.id
						INNER JOIN subCase_conv sc
						ON cc.id = sc.case_id AND convSubCaseType = 'COUNTER'
						WHERE partyType  IN  ('DEFT4', 'PLTF4')
						]]>							
						</param>
							<param name="idColumnName">tParty_id</param>
							<param name="whereColumnName">idKey</param>						
					</params>
					<mappings>					
						<mapping source="tPerson_id" dest="person_id"/>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="allowPublicAccess" dest="allowPublicAccess"/>
						<mapping source="cmsReferenceId" dest="cmsReferenceId"/>
						<mapping source="crsExemptOverride" dest="crsExemptOverride"/>
						<mapping source="dispositionDate" dest="dispositionDate"/>
						<mapping source="dispositionManner" dest="dispositionManner"/>
						<mapping source="dispositionType" dest="dispositionType"/>
						<mapping source="efmReferenceId" dest="efmReferenceId"/>
						<mapping source="endDate" dest="endDate"/>
						<mapping source="exemptEligible" dest="exemptEligible"/>
						<mapping source="formerRepresentationText" dest="formerRepresentationText"/>
						<mapping source="nonMonApplication" dest="nonMonApplication"/>
						<mapping source="partyDesignationType" dest="partyDesignationType"/>
						<mapping source="partyNumber" dest="partyNumber"/>
						<mapping source="partySource" dest="partySource"/>
						<mapping source="partySubType" dest="partySubType"/>
						<mapping source="partyType" dest="partyType"/>
						<mapping source="representationText" dest="representationText"/>
						<mapping source="representingPartyType" dest="representingPartyType"/>
						<mapping source="selfRepresented" dest="selfRepresented"/>
						<mapping source="startDate" dest="startDate"/>
						<mapping source="status" dest="status"/>
						<mapping source="statusDate" dest="statusDate"/>
						<mapping source="stayDate" dest="stayDate"/>
						<mapping source="stayEndDate" dest="stayEndDate"/>
						<mapping source="stayStatus" dest="stayStatus"/>
						<mapping source="tCase_id" dest="case_id"/>
						<mapping source="exportBatch_id" dest="exportBatch_id"/>
						<mapping source="exportCompletedBatch_id" dest="exportCompletedBatch_id"/>
						<mapping source="exportFailedBatch_id" dest="exportFailedBatch_id"/>
						<mapping source="tSubCase_id" dest="subCase_id"/>
						<mapping source="convId" dest="convId"/>
						<mapping source="flag1" dest="flag1"/>
						<mapping source="flag2" dest="flag2"/>
						<mapping source="flag3" dest="flag3"/>
						<mapping source="flag4" dest="flag4"/>
						<mapping source="flag5" dest="flag5"/>
						<mapping source="notes" dest="notes"/>
						<mapping source="notification" dest="notification"/>
						<mapping source="dirOrgUnit_id" dest="dirOrgUnit_id"/>
						<mapping source="eventInvPersConvId" dest="eventInvPersConvId"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tParty"/>
				</action>
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Party - TP" enabled="true">
					<source database="${sql.staging.db}" schema="dbo" table="party_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						SELECT
						COALESCE(pty.createUserRealName, 'conv' ) as createUserRealName,
						COALESCE(pty.createUsername, 'conv' ) as createUsername ,
						COALESCE(pty.dateCreated, GETDATE()) as dateCreated,
						COALESCE(pty.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
						COALESCE(pty.lastUpdateUsername, 'conv') as lastUpdateUsername ,
						COALESCE(pty.lastUpdated, GETDATE()) as lastUpdated,
						pty.*,
						pr.tPerson_id,
						cc.tCase_id,
						sc.tSubCase_id
						FROM party_conv pty
						INNER JOIN person_conv pr
						ON pty.person_id = pr.id AND pty.case_id = pr.case_id
						INNER JOIN case_conv cc
						ON pty.case_id = cc.id
						INNER JOIN subCase_conv sc
						ON cc.id = sc.case_id AND convSubCaseType = 'TP'
						WHERE partyType  IN  ('DEFT3', 'PLTF3')
						]]>							
						</param>
							<param name="idColumnName">tParty_id</param>
							<param name="whereColumnName">idKey</param>						
					</params>
					<mappings>					
						<mapping source="tPerson_id" dest="person_id"/>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="allowPublicAccess" dest="allowPublicAccess"/>
						<mapping source="cmsReferenceId" dest="cmsReferenceId"/>
						<mapping source="crsExemptOverride" dest="crsExemptOverride"/>
						<mapping source="dispositionDate" dest="dispositionDate"/>
						<mapping source="dispositionManner" dest="dispositionManner"/>
						<mapping source="dispositionType" dest="dispositionType"/>
						<mapping source="efmReferenceId" dest="efmReferenceId"/>
						<mapping source="endDate" dest="endDate"/>
						<mapping source="exemptEligible" dest="exemptEligible"/>
						<mapping source="formerRepresentationText" dest="formerRepresentationText"/>
						<mapping source="nonMonApplication" dest="nonMonApplication"/>
						<mapping source="partyDesignationType" dest="partyDesignationType"/>
						<mapping source="partyNumber" dest="partyNumber"/>
						<mapping source="partySource" dest="partySource"/>
						<mapping source="partySubType" dest="partySubType"/>
						<mapping source="partyType" dest="partyType"/>
						<mapping source="representationText" dest="representationText"/>
						<mapping source="representingPartyType" dest="representingPartyType"/>
						<mapping source="selfRepresented" dest="selfRepresented"/>
						<mapping source="startDate" dest="startDate"/>
						<mapping source="status" dest="status"/>
						<mapping source="statusDate" dest="statusDate"/>
						<mapping source="stayDate" dest="stayDate"/>
						<mapping source="stayEndDate" dest="stayEndDate"/>
						<mapping source="stayStatus" dest="stayStatus"/>
						<mapping source="tCase_id" dest="case_id"/>
						<mapping source="exportBatch_id" dest="exportBatch_id"/>
						<mapping source="exportCompletedBatch_id" dest="exportCompletedBatch_id"/>
						<mapping source="exportFailedBatch_id" dest="exportFailedBatch_id"/>
						<mapping source="tSubCase_id" dest="subCase_id"/>
						<mapping source="convId" dest="convId"/>
						<mapping source="flag1" dest="flag1"/>
						<mapping source="flag2" dest="flag2"/>
						<mapping source="flag3" dest="flag3"/>
						<mapping source="flag4" dest="flag4"/>
						<mapping source="flag5" dest="flag5"/>
						<mapping source="notes" dest="notes"/>
						<mapping source="notification" dest="notification"/>
						<mapping source="dirOrgUnit_id" dest="dirOrgUnit_id"/>
						<mapping source="eventInvPersConvId" dest="eventInvPersConvId"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tParty"/>
				</action>
				
					
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Party - CR" enabled="true">
					<source database="${sql.staging.db}" schema="dbo" table="party_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						SELECT
						COALESCE(pty.createUserRealName, 'conv' ) as createUserRealName,
						COALESCE(pty.createUsername, 'conv' ) as createUsername ,
						COALESCE(pty.dateCreated, GETDATE()) as dateCreated,
						COALESCE(pty.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
						COALESCE(pty.lastUpdateUsername, 'conv') as lastUpdateUsername ,
						COALESCE(pty.lastUpdated, GETDATE()) as lastUpdated,
						pty.*,
						pr.tPerson_id,
						cc.tCase_id,
						sc.tSubCase_id
						FROM party_conv pty
						INNER JOIN person_conv pr
						ON pty.person_id = pr.id AND pty.caseNumber = pr.caseNumber
						INNER JOIN case_conv cc
						ON cc.caseNumber = pty.CaseNumber
						INNER JOIN convertCases_conv cv
						ON cc.id = cv.case_id
						INNER JOIN subCase_conv sc
						ON cc.id = sc.case_id AND cc.caseNumber = sc.caseNumber
						WHERE  cv.caseGroup = 'CR' 
						]]>							
						</param>
							<param name="idColumnName">tParty_id</param>
							<param name="whereColumnName">idKey</param>						
					</params>
					<mappings>					
						<mapping source="tPerson_id" dest="person_id"/>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="allowPublicAccess" dest="allowPublicAccess"/>
						<mapping source="cmsReferenceId" dest="cmsReferenceId"/>
						<mapping source="crsExemptOverride" dest="crsExemptOverride"/>
						<mapping source="dispositionDate" dest="dispositionDate"/>
						<mapping source="dispositionManner" dest="dispositionManner"/>
						<mapping source="dispositionType" dest="dispositionType"/>
						<mapping source="efmReferenceId" dest="efmReferenceId"/>
						<mapping source="endDate" dest="endDate"/>
						<mapping source="exemptEligible" dest="exemptEligible"/>
						<mapping source="formerRepresentationText" dest="formerRepresentationText"/>
						<mapping source="nonMonApplication" dest="nonMonApplication"/>
						<mapping source="partyDesignationType" dest="partyDesignationType"/>
						<mapping source="partyNumber" dest="partyNumber"/>
						<mapping source="partySource" dest="partySource"/>
						<mapping source="partySubType" dest="partySubType"/>
						<mapping source="partyType" dest="partyType"/>
						<mapping source="representationText" dest="representationText"/>
						<mapping source="representingPartyType" dest="representingPartyType"/>
						<mapping source="selfRepresented" dest="selfRepresented"/>
						<mapping source="startDate" dest="startDate"/>
						<mapping source="status" dest="status"/>
						<mapping source="statusDate" dest="statusDate"/>
						<mapping source="stayDate" dest="stayDate"/>
						<mapping source="stayEndDate" dest="stayEndDate"/>
						<mapping source="stayStatus" dest="stayStatus"/>
						<mapping source="tCase_id" dest="case_id"/>
						<mapping source="exportBatch_id" dest="exportBatch_id"/>
						<mapping source="exportCompletedBatch_id" dest="exportCompletedBatch_id"/>
						<mapping source="exportFailedBatch_id" dest="exportFailedBatch_id"/>
						<mapping source="tSubCase_id" dest="subCase_id"/>
						<mapping source="convId" dest="convId"/>
						<mapping source="flag1" dest="flag1"/>
						<mapping source="flag2" dest="flag2"/>
						<mapping source="flag3" dest="flag3"/>
						<mapping source="flag4" dest="flag4"/>
						<mapping source="flag5" dest="flag5"/>
						<mapping source="notes" dest="notes"/>
						<mapping source="notification" dest="notification"/>
						<mapping source="dirOrgUnit_id" dest="dirOrgUnit_id"/>
						<mapping source="eventInvPersConvId" dest="eventInvPersConvId"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tParty"/>
				</action>
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Party - NA" enabled="true">
					<source database="${sql.staging.db}" schema="dbo" table="party_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						SELECT
						COALESCE(pty.createUserRealName, 'conv' ) as createUserRealName,
						COALESCE(pty.createUsername, 'conv' ) as createUsername ,
						COALESCE(pty.dateCreated, GETDATE()) as dateCreated,
						COALESCE(pty.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
						COALESCE(pty.lastUpdateUsername, 'conv') as lastUpdateUsername ,
						COALESCE(pty.lastUpdated, GETDATE()) as lastUpdated,
						pty.*,
						pr.tPerson_id,
						cc.tCase_id,
						sc.tSubCase_id
						FROM party_conv pty
						INNER JOIN person_conv pr
						ON pty.person_id = pr.id AND pty.caseNumber = pr.caseNumber
						INNER JOIN case_conv cc
						ON cc.caseNumber = pty.CaseNumber
						INNER JOIN convertCases_conv cv
						ON cc.id = cv.case_id
						INNER JOIN subCase_conv sc
						ON cc.id = sc.case_id AND cc.caseNumber = sc.caseNumber
						WHERE  cv.caseGroup = 'NA' 
						]]>							
						</param>
							<param name="idColumnName">tParty_id</param>
							<param name="whereColumnName">idKey</param>						
					</params>
					<mappings>					
						<mapping source="tPerson_id" dest="person_id"/>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="allowPublicAccess" dest="allowPublicAccess"/>
						<mapping source="cmsReferenceId" dest="cmsReferenceId"/>
						<mapping source="crsExemptOverride" dest="crsExemptOverride"/>
						<mapping source="dispositionDate" dest="dispositionDate"/>
						<mapping source="dispositionManner" dest="dispositionManner"/>
						<mapping source="dispositionType" dest="dispositionType"/>
						<mapping source="efmReferenceId" dest="efmReferenceId"/>
						<mapping source="endDate" dest="endDate"/>
						<mapping source="exemptEligible" dest="exemptEligible"/>
						<mapping source="formerRepresentationText" dest="formerRepresentationText"/>
						<mapping source="nonMonApplication" dest="nonMonApplication"/>
						<mapping source="partyDesignationType" dest="partyDesignationType"/>
						<mapping source="partyNumber" dest="partyNumber"/>
						<mapping source="partySource" dest="partySource"/>
						<mapping source="partySubType" dest="partySubType"/>
						<mapping source="partyType" dest="partyType"/>
						<mapping source="representationText" dest="representationText"/>
						<mapping source="representingPartyType" dest="representingPartyType"/>
						<mapping source="selfRepresented" dest="selfRepresented"/>
						<mapping source="startDate" dest="startDate"/>
						<mapping source="status" dest="status"/>
						<mapping source="statusDate" dest="statusDate"/>
						<mapping source="stayDate" dest="stayDate"/>
						<mapping source="stayEndDate" dest="stayEndDate"/>
						<mapping source="stayStatus" dest="stayStatus"/>
						<mapping source="tCase_id" dest="case_id"/>
						<mapping source="exportBatch_id" dest="exportBatch_id"/>
						<mapping source="exportCompletedBatch_id" dest="exportCompletedBatch_id"/>
						<mapping source="exportFailedBatch_id" dest="exportFailedBatch_id"/>
						<mapping source="tSubCase_id" dest="subCase_id"/>
						<mapping source="convId" dest="convId"/>
						<mapping source="flag1" dest="flag1"/>
						<mapping source="flag2" dest="flag2"/>
						<mapping source="flag3" dest="flag3"/>
						<mapping source="flag4" dest="flag4"/>
						<mapping source="flag5" dest="flag5"/>
						<mapping source="notes" dest="notes"/>
						<mapping source="notification" dest="notification"/>
						<mapping source="dirOrgUnit_id" dest="dirOrgUnit_id"/>
						<mapping source="eventInvPersConvId" dest="eventInvPersConvId"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tParty"/>
				</action>
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Person - TR Clearance Report" enabled="false">
					<source database="${sql.staging.db}" schema="dbo" table="caseTR_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						SELECT
						'conv' as createUserRealName,
						'conv' as createUsername ,
						GETDATE() as dateCreated,
						'conv' as lastUpdateUserRealName,
						'conv' as lastUpdateUsername ,
						GETDATE() as lastUpdated,
						0 as optlock,
						firstName,
						middleName,
						lastName,
						nameSuffix,
						namePrefix,
						idKey,
						tPID as personIdentifier_id
						FROM caseTR_conv
						
						]]>							
						</param>
							<param name="idColumnName">tPerson_id</param>
							<param name="whereColumnName">idKey</param>						
					</params>
					<mappings>					

						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="firstName" dest="firstName"/>
						<mapping source="middleName" dest="middleName"/>
						<mapping source="lastName" dest="lastName"/>
						<mapping source="nameSuffix" dest="nameSuffix"/>
						<mapping source="namePrefix" dest="namePrefix"/>
						<mapping source="personIdentifier_id" dest="personIdentifier_id"/>
					
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tPerson"/>
				</action>
				
				
					
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Part - TR Clearance Report" enabled="true">
					<source database="${sql.staging.db}" schema="dbo" table="person_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						SELECT
						'conv' as createUserRealName,
						'conv' as createUsername ,
						GETDATE() as dateCreated,
						'conv' as lastUpdateUserRealName,
						'conv' as lastUpdateUsername ,
						GETDATE() as lastUpdated,
						0 as optlock,
						'INTP' as partyType,
						tCaseTR_id,
						tPerson_id,
						idKey,
						'ANY' nonMonApplication,
						tSubCaseTR_id as subCase_id

						FROM person_conv WHERE tCaseTR_id IS NOT NULL
						
						]]>							
						</param>
							<param name="idColumnName">tPartyTR_id</param>
							<param name="whereColumnName">idKey</param>						
					</params>
					<mappings>					

						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="partyType" dest="partyType"/>
						<mapping source="tCaseTR_id" dest="case_id"/>
						<mapping source="tPerson_id" dest="person_id"/>
						<mapping source="nonMonApplication" dest="nonMonApplication"/>
						<mapping source="subCase_id" dest="subCase_id"/>
					
					
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tParty"/>
				</action>
				
				
				
			</actions>
		</stage>	
		
		<stage num="506" mode="Serial" desc="Load address" enabled="true">
			<actions>
				
						
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Address">
					<source database="${sql.staging.db}" schema="dbo" table="address2_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT 
							createUserRealName = COALESCE(ad.createUserRealName, 'conv' ),
							createUsername = COALESCE(ad.createUsername, 'conv' ) ,
							dateCreated = COALESCE(ad.dateCreated, @today),
							lastUpdateUserRealName = COALESCE(ad.lastUpdateUserRealName, 'conv' ),
							lastUpdateUsername = COALESCE(ad.lastUpdateUsername, 'conv') ,
							lastUpdated = COALESCE(ad.lastUpdated, @today),
							*, pc.tPerson_id FROM cnmiStaging.dbo.address2_conv ad
							LEFT JOIN cnmiStaging.dbo.person_conv pc
							ON ad.associatedPerson_id = pc.id
							
							
						]]>							
						</param>	
												
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="address1" dest="address1"/>
						<mapping source="address2" dest="address2"/>
						<mapping source="addressType" dest="addressType"/>
						<mapping source="city" dest="city"/>
						<mapping source="country" dest="country"/>
						<mapping source="county" dest="county"/>
						<mapping source="effectiveFrom" dest="effectiveFrom"/>
						<mapping source="effectiveTo" dest="effectiveTo"/>
						<mapping source="forNotification" dest="forNotification"/>
						<mapping source="hundredBlock" dest="hundredBlock"/>
						<mapping source="intersection" dest="intersection"/>
						<mapping source="intersectionAbbr" dest="intersectionAbbr"/>
						<mapping source="latitude" dest="latitude"/>
						<mapping source="longitude" dest="longitude"/>
						<mapping source="number" dest="number"/>
						<mapping source="numberPrefix" dest="numberPrefix"/>
						<mapping source="numberSuffix" dest="numberSuffix"/>
						<mapping source="pin" dest="pin"/>
						<mapping source="preferred" dest="preferred"/>
						<mapping source="sourceId" dest="sourceId"/>
						<mapping source="state" dest="state"/>
						<mapping source="status" dest="status"/>
						<mapping source="statusDate" dest="statusDate"/>
						<mapping source="streetName" dest="streetName"/>
						<mapping source="streetNamePostDirectional" dest="streetNamePostDirectional"/>
						<mapping source="streetNamePostType" dest="streetNamePostType"/>
						<mapping source="streetNamePreDirectional" dest="streetNamePreDirectional"/>
						<mapping source="streetNamePreType" dest="streetNamePreType"/>
						<mapping source="structure" dest="structure"/>
						<mapping source="subDivision" dest="subDivision"/>
						<mapping source="taxCode" dest="taxCode"/>
						<mapping source="township" dest="township"/>
						<mapping source="verificationStatus" dest="verificationStatus"/>
						<mapping source="zip" dest="zip"/>
						<mapping source="zip4" dest="zip4"/>
						<mapping source="zoning" dest="zoning"/>
						<mapping source="addressIdentifier_id" dest="addressIdentifier_id"/>
						<mapping source="tPerson_id" dest="associatedPerson_id"/>
						<mapping source="notes" dest="notes"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tAddress"/>
				</action>
				

			</actions>
		</stage>	
		
		<stage num="508" mode="Serial" desc="Load telephone" enabled="true">
			<actions>
				
						
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Address">
					<source database="${sql.staging.db}" schema="dbo" table="telephone2_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT 
							COALESCE(t.createUserRealName, 'conv' ) as createUserRealName,
							COALESCE(t.createUsername, 'conv' ) as createUsername ,
							COALESCE(t.dateCreated, @today) as dateCreated,
							COALESCE(t.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
							COALESCE(t.lastUpdateUsername, 'conv') as lastUpdateUsername ,
							COALESCE(t.lastUpdated, @today) as lastUpdated,
							*, pc.tPerson_id FROM cnmiStaging.dbo.telephone2_conv t
							LEFT JOIN cnmiStaging.dbo.person_conv pc
							ON t.associatedPerson_id = pc.id
							
							
						]]>							
						</param>	
												
					</params>
					<mappings>
						<mapping source="id" dest="id"/>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="areaCode" dest="areaCode"/>
						<mapping source="countryCode" dest="countryCode"/>
						<mapping source="effectiveFrom" dest="effectiveFrom"/>
						<mapping source="effectiveTo" dest="effectiveTo"/>
						<mapping source="extension" dest="extension"/>
						<mapping source="forNotification" dest="forNotification"/>
						<mapping source="preferred" dest="preferred"/>
						<mapping source="telephoneNumber" dest="telephoneNumber"/>
						<mapping source="telephoneType" dest="telephoneType"/>
						<mapping source="tPerson_id" dest="associatedPerson_id"/>
						<mapping source="notes" dest="notes"/>
						<mapping source="convId" dest="convId"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tTelephone"/>
				</action>
				

			</actions>
		</stage>	
		
		<stage num="510" mode="Serial" desc="Load PersonProfile" enabled="true">
			<actions>
				
						
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading PersonProfile">
					<source database="${sql.staging.db}" schema="dbo"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT
							COALESCE(pp.createUserRealName, 'conv' ) as createUserRealName,
							COALESCE(pp.createUsername, 'conv' ) as createUsername ,
							COALESCE(pp.dateCreated, @today) as dateCreated,
							COALESCE(pp.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
							COALESCE(pp.lastUpdateUsername, 'conv') as lastUpdateUsername ,
							COALESCE(pp.lastUpdated, @today) as lastUpdated,
							*, pc.tPerson_id FROM cnmiStaging.dbo.personProfile_conv pp
							LEFT JOIN cnmiStaging.dbo.person_conv pc
							ON pp.associatedPerson_id = pc.id
							
							
						]]>							
						</param>	
												
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="canRead" dest="canRead"/>
						<mapping source="canWrite" dest="canWrite"/>
						<mapping source="citizenship" dest="citizenship"/>
						<mapping source="dateOfBirth" dest="dateOfBirth"/>
						<mapping source="dateOfBirth2" dest="dateOfBirth2"/>
						<mapping source="dateOfBirth3" dest="dateOfBirth3"/>
						<mapping source="dateOfDeath" dest="dateOfDeath"/>
						<mapping source="dateOfMajority" dest="dateOfMajority"/>
						<mapping source="ethnicity" dest="ethnicity"/>
						<mapping source="eyeColor" dest="eyeColor"/>
						<mapping source="gender" dest="gender"/>
						<mapping source="hairColor" dest="hairColor"/>
						<mapping source="hasIEP" dest="hasIEP"/>
						<mapping source="height" dest="height"/>
						<mapping source="maritalStatus" dest="maritalStatus"/>
						<mapping source="militaryStatus" dest="militaryStatus"/>
						<mapping source="occupation" dest="occupation"/>
						<mapping source="placeOfBirth" dest="placeOfBirth"/>
						<mapping source="placeOfDeath" dest="placeOfDeath"/>
						<mapping source="primaryLanguage" dest="primaryLanguage"/>
						<mapping source="profileType" dest="profileType"/>
						<mapping source="religion" dest="religion"/>
						<mapping source="secondaryLanguage" dest="secondaryLanguage"/>
						<mapping source="weight" dest="weight"/>
						<mapping source="tPerson_id" dest="associatedPerson_id"/>
						<mapping source="convId" dest="convId"/>
						<mapping source="race" dest="race"/>
						<mapping source="dateOfMarriage" dest="dateOfMarriage"/>
						<mapping source="dateOfSeparation" dest="dateOfSeparation"/>
						<mapping source="dateOfBirthStatus" dest="dateOfBirthStatus"/>
						<mapping source="dateOfDeathStatus" dest="dateOfDeathStatus"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tPersonProfile"/>
				</action>
				

			</actions>
		</stage>	
		
		<stage num="512" mode="Serial" desc="Load CaseContact" enabled="true">
			<actions>
				
						
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading PersonProfile">
					<source database="${sql.staging.db}" schema="dbo"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT 
							COALESCE(cc.createUserRealName, 'conv' ) as createUserRealName,
							COALESCE(cc.createUsername, 'conv' ) as createUsername ,
							COALESCE(cc.dateCreated, @today) as dateCreated,
							COALESCE(cc.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
							COALESCE(cc.lastUpdateUsername, 'conv') as lastUpdateUsername ,
							COALESCE(cc.lastUpdated, @today) as lastUpdated,
							*, pc.tPerson_id FROM cnmiStaging.dbo.caseContact_conv cc
							LEFT JOIN cnmiStaging.dbo.person_conv pc
							ON cc.associatedPerson_id = pc.id
							
							
						]]>							
						</param>	
												
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="contact" dest="contact"/>
						<mapping source="effectiveFrom" dest="effectiveFrom"/>
						<mapping source="effectiveTo" dest="effectiveTo"/>
						<mapping source="forNotification" dest="forNotification"/>
						<mapping source="type" dest="type"/>
						<mapping source="tPerson_id" dest="associatedPerson_id"/>
						<mapping source="notes" dest="notes"/>
						<mapping source="convId" dest="convId"/>
						<mapping source="preferred" dest="preferred"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tCaseContact"/>
				</action>
				

			</actions>
		</stage>	
		
		<stage num="514" mode="Serial" desc="Load Identification" enabled="true">
			<actions>
				
						
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading PersonProfile">
					<source database="${sql.staging.db}" schema="dbo"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT 
							COALESCE(i.createUserRealName, 'conv' ) as createUserRealName,
							COALESCE(i.createUsername, 'conv' ) as createUsername ,
							COALESCE(i.dateCreated, @today) as dateCreated,
							COALESCE(i.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
							COALESCE(i.lastUpdateUsername, 'conv') as lastUpdateUsername ,
							COALESCE(i.lastUpdated, @today) as lastUpdated,
							*, pc.tPerson_id FROM cnmiStaging.dbo.identification_conv i
							LEFT JOIN cnmiStaging.dbo.person_conv pc
							ON i.associatedPerson_id = pc.id
							
							
						]]>							
						</param>	
												
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="effectiveFrom" dest="effectiveFrom"/>
						<mapping source="effectiveTo" dest="effectiveTo"/>
						<mapping source="identificationClass" dest="identificationClass"/>
						<mapping source="identificationNumber" dest="identificationNumber"/>
						<mapping source="identificationType" dest="identificationType"/>
						<mapping source="issuerCity" dest="issuerCity"/>
						<mapping source="issuerCountry" dest="issuerCountry"/>
						<mapping source="issuerName" dest="issuerName"/>
						<mapping source="issuerState" dest="issuerState"/>
						<mapping source="ivrDlNumber" dest="ivrDlNumber"/>
						<mapping source="status" dest="status"/>
						<mapping source="statusDate" dest="statusDate"/>
						<mapping source="tPerson_id" dest="associatedPerson_id"/>
						<mapping source="notes" dest="notes"/>
						<mapping source="convId" dest="convId"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tIdentification"/>
				</action>
				

			</actions>
		</stage>	
		
		<stage num="516" mode="Serial" desc="Load Scheduled Event" enabled="true">
			<actions>
				
						
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading scheduledEvent">
					<source database="${sql.staging.db}" schema="dbo" table="scheduledEvent_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT 
							COALESCE(se.createUserRealName, 'conv' ) as createUserRealName,
							COALESCE(se.createUsername, 'conv' ) as createUsername ,
							COALESCE(se.dateCreated, @today) as dateCreated,
							COALESCE(se.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
							COALESCE(se.lastUpdateUsername, 'conv') as lastUpdateUsername ,
							COALESCE(se.lastUpdated, @today) as lastUpdated,
							se.*, cc.tCase_id FROM cnmiStaging.dbo.scheduledEvent_conv se
							LEFT JOIN cnmiStaging.dbo.case_conv cc
							ON se.case_id = cc.id AND se.caseKey = cc.idKey
							WHERE tCase_id IS NOT NULL
							
						]]>							
						</param>	
						<param name="idColumnName">tScheduledEvent_id</param>
						<param name="whereColumnName">idKey</param>					
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="addOn" dest="addOn"/>
						<mapping source="addOnNumber" dest="addOnNumber"/>
						<mapping source="appearanceMethod" dest="appearanceMethod"/>
						<mapping source="assigneeCode" dest="assigneeCode"/>
						<mapping source="assigneeName" dest="assigneeName"/>
						<mapping source="calendarNote" dest="calendarNote"/>
						<mapping source="caseUnit" dest="caseUnit"/>
						<mapping source="checkedIn" dest="checkedIn"/>
						<mapping source="cmsReferenceId" dest="cmsReferenceId"/>
						<mapping source="concurrentCase" dest="concurrentCase"/>
						<mapping source="concurrentEvent" dest="concurrentEvent"/>
						<mapping source="consecutiveCase" dest="consecutiveCase"/>
						<mapping source="consecutiveEvent" dest="consecutiveEvent"/>
						<mapping source="crsBalance" dest="crsBalance"/>
						<mapping source="crsContactName" dest="crsContactName"/>
						<mapping source="crsNumber" dest="crsNumber"/>
						<mapping source="crsNumberOfMotions" dest="crsNumberOfMotions"/>
						<mapping source="crsPartyNames" dest="crsPartyNames"/>
						<mapping source="csrContactEmail" dest="csrContactEmail"/>
						<mapping source="csrContactSecondaryEmail" dest="csrContactSecondaryEmail"/>
						<mapping source="csrContactTelephone" dest="csrContactTelephone"/>
						<mapping source="daysExcluded" dest="daysExcluded"/>
						<mapping source="daysOut" dest="daysOut"/>
						<mapping source="daysToExpiry" dest="daysToExpiry"/>
						<mapping source="description" dest="description"/>
						<mapping source="displayColor" dest="displayColor"/>
						<mapping source="docketNumber" dest="docketNumber"/>
						<mapping source="durationMinutes" dest="durationMinutes"/>
						<mapping source="efmNewEvent" dest="efmNewEvent"/>
						<mapping source="efmReferenceId" dest="efmReferenceId"/>
						<mapping source="endDateTime" dest="endDateTime"/>
						<mapping source="estimatedDays" dest="estimatedDays"/>
						<mapping source="estimatedHours" dest="estimatedHours"/>
						<mapping source="estimatedMinutes" dest="estimatedMinutes"/>
						<mapping source="eventCategory" dest="eventCategory"/>
						<mapping source="eventStatus" dest="eventStatus"/>
						<mapping source="exParte" dest="exParte"/>
						<mapping source="exchangeId" dest="exchangeId"/>
						<mapping source="exportToExchange" dest="exportToExchange"/>
						<mapping source="languagesMemo" dest="languagesMemo"/>
						<mapping source="masterCalendar" dest="masterCalendar"/>
						<mapping source="minutesLocked" dest="minutesLocked"/>
						<mapping source="minutesMode" dest="minutesMode"/>
						<mapping source="minutesReviewType" dest="minutesReviewType"/>
						<mapping source="minutesStatus" dest="minutesStatus"/>
						<mapping source="multiFilerCode" dest="multiFilerCode"/>
						<mapping source="multiMotion" dest="multiMotion"/>
						<mapping source="nameExtension" dest="nameExtension"/>
						<mapping source="orderValue" dest="orderValue"/>
						<mapping source="partOfDocket" dest="partOfDocket"/>
						<mapping source="publish" dest="publish"/>
						<mapping source="recurrenceKey" dest="recurrenceKey"/>
						<mapping source="resultCausedBy" dest="resultCausedBy"/>
						<mapping source="resultDate" dest="resultDate"/>
						<mapping source="resultMemo" dest="resultMemo"/>
						<mapping source="resultReason" dest="resultReason"/>
						<mapping source="resultRequestedBy" dest="resultRequestedBy"/>
						<mapping source="resultType" dest="resultType"/>
						<mapping source="standardDuration" dest="standardDuration"/>
						<mapping source="startDateTime" dest="startDateTime"/>
						<mapping source="subType" dest="subType"/>
						<mapping source="timeSlotCount" dest="timeSlotCount"/>
						<mapping source="trialType" dest="trialType"/>
						<mapping source="type" dest="type"/>
						<mapping source="tCase_id" dest="case_id"/>
						<mapping source="dirLocation_Load" dest="eventLocation_id"/>
						<mapping source="lastMinutesOrder_id" dest="lastMinutesOrder_id"/>
						<mapping source="lastMinutesResult_id" dest="lastMinutesResult_id"/>
						<mapping source="meeting_id" dest="meeting_id"/>
						<mapping source="minutesRelatedParent_id" dest="minutesRelatedParent_id"/>
						<mapping source="proceeding_id" dest="proceeding_id"/>
						<mapping source="rescheduledTo_id" dest="rescheduledTo_id"/>
						<mapping source="subCase_id" dest="subCase_id"/>
						<mapping source="convId" dest="convId"/>
						<mapping source="notes" dest="notes"/>
						<mapping source="slotCode" dest="slotCode"/>
						<mapping source="slotId" dest="slotId"/>
						<mapping source="joinStatus" dest="joinStatus"/>
						<mapping source="tentativeAttached" dest="tentativeAttached"/>
						<mapping source="lastTentativeMinutesOrder_id" dest="lastTentativeMinutesOrder_id"/>
						<mapping source="source" dest="source"/>
						<mapping source="isRecurringEvent" dest="isRecurringEvent"/>
						<mapping source="tsTemplateCode" dest="tsTemplateCode"/>
						<mapping source="weight" dest="weight"/>
						<mapping source="task" dest="task"/>
						<mapping source="cf_date" dest="cf_date"/>
						<mapping source="googleCalendarId" dest="googleCalendarId"/>
						<mapping source="probateNotesAttached" dest="probateNotesAttached"/>
						<mapping source="lastProbateNotes_id" dest="lastProbateNotes_id"/>
						<mapping source="addOnType" dest="addOnType"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tScheduledEvent"/>
				</action>
				

			</actions>
		</stage> 	
		
		<stage num="518" mode="Serial" desc="Load Case Seal" enabled="true">
			<actions>
				
						
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Case Seal">
					<source database="${sql.staging.db}" schema="dbo"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT 
							COALESCE(se.createUserRealName, 'conv' ) as createUserRealName,
							COALESCE(se.createUsername, 'conv' ) as createUsername ,
							COALESCE(se.dateCreated, @today) as dateCreated,
							COALESCE(se.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
							COALESCE(se.lastUpdateUsername, 'conv') as lastUpdateUsername ,
							COALESCE(se.lastUpdated, @today) as lastUpdated,
							*, cc.tCase_id FROM cnmiStaging.dbo.caseSeal_conv se
							LEFT JOIN cnmiStaging.dbo.case_conv cc
							ON se.case_id = cc.id
							WHERE tCase_id IS NOT NULL
							
						]]>							
						</param>	
												
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="effectiveFrom" dest="effectiveFrom"/>
						<mapping source="effectiveTo" dest="effectiveTo"/>
						<mapping source="type" dest="type"/>
						<mapping source="tCase_id" dest="case_id"/>
						<mapping source="convId" dest="convId"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tCaseSeal"/>
				</action>
				

			</actions>
		</stage> 	
		
		<stage num="520" mode="Serial" desc="Load Case Note" enabled="false">
			<actions>
				
						
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Case Note">
					<source database="${sql.staging.db}" schema="dbo"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT 
							COALESCE(cn.createUserRealName, 'conv' ) as createUserRealName,
							COALESCE(cn.createUsername, 'conv' ) as createUsername ,
							COALESCE(cn.dateCreated, @today) as dateCreated,
							COALESCE(cn.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
							COALESCE(cn.lastUpdateUsername, 'conv') as lastUpdateUsername ,
							COALESCE(cn.lastUpdated, @today) as lastUpdated,
							*, cc.tCase_id, COALESCE(cn.noteDate, cn.lastUpdated, GETDATE()) as noteDate_ld FROM cnmiStaging.dbo.caseNote_conv cn
							LEFT JOIN cnmiStaging.dbo.case_conv cc
							ON cn.case_id = cc.id
							WHERE tCase_id IS NOT NULL 
							
						]]>							
						</param>	
												
					</params>
					<mappings>
							<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="attachedEntity" dest="attachedEntity"/>
						<mapping source="attachedId" dest="attachedId"/>
						<mapping source="color" dest="color"/>
						<mapping source="completed" dest="completed"/>
						<mapping source="content" dest="content"/>
						<mapping source="dueDate" dest="dueDate"/>
						<mapping source="noteDate_ld" dest="noteDate"/>
						<mapping source="sharedToAuthorityNames" dest="sharedToAuthorityNames"/>
						<mapping source="sharedToUsernames" dest="sharedToUsernames"/>
						<mapping source="sharingLevel" dest="sharingLevel"/>
						<mapping source="stripedContent" dest="stripedContent"/>
						<mapping source="title" dest="title"/>
						<mapping source="toDate" dest="toDate"/>
						<mapping source="type" dest="type"/>
						<mapping source="username" dest="username"/>
						<mapping source="assignedUser_id" dest="assignedUser_id"/>
						<mapping source="tCase_id" dest="case_id"/>
						<mapping source="convId" dest="convId"/>
						<mapping source="convId_table" dest="convId_table"/>
						<mapping source="cfCorrespondenceType" dest="cfCorrespondenceType"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tCaseNote"/>
				</action>
				

			</actions>
		</stage> 	
		
			
		<stage num="522" mode="Serial" desc="Load Exhibit" enabled="true">
			<actions>
				
						
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Exhibit">
					<source database="${sql.staging.db}" schema="dbo" table="exhibit_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT 
							COALESCE(e.createUserRealName, 'conv' ) as createUserRealName,
							COALESCE(e.createUsername, 'conv' ) as createUsername ,
							COALESCE(e.dateCreated, @today) as dateCreated,
							COALESCE(e.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
							COALESCE(e.lastUpdateUsername, 'conv') as lastUpdateUsername ,
							COALESCE(e.lastUpdated, @today) as lastUpdated,
							e.*, cc.tCase_id FROM cnmiStaging.dbo.exhibit_conv e
							LEFT JOIN cnmiStaging.dbo.case_conv cc
							ON e.case_id = cc.id AND e.caseNumber = cc.caseNumber
							WHERE tCase_id IS NOT NULL
							
						]]>							
						</param>
							<param name="idColumnName">texhibit_id</param>
							<param name="whereColumnName">idKey</param>						
												
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="dateReceived" dest="dateReceived"/>
						<mapping source="description" dest="description"/>
						<mapping source="disposalRequired" dest="disposalRequired"/>
						<mapping source="disposeBy" dest="disposeBy"/>
						<mapping source="disposition" dest="disposition"/>
						<mapping source="exhibitNumber" dest="exhibitNumber"/>
						<mapping source="exhibitNumberInt" dest="exhibitNumberInt"/>
						<mapping source="exhibitSubType" dest="exhibitSubType"/>
						<mapping source="exhibitType" dest="exhibitType"/>
						<mapping source="status" dest="status"/>
						<mapping source="statusDate" dest="statusDate"/>
						<mapping source="submittedBy" dest="submittedBy"/>
						<mapping source="tCase_id" dest="case_id"/>
						<mapping source="proceeding_id" dest="proceeding_id"/>
						<mapping source="subCase_id" dest="subCase_id"/>
						<mapping source="convId" dest="convId"/>
						<mapping source="notes" dest="notes"/>
						<mapping source="value" dest="value"/>
						<mapping source="dirPerson_id" dest="dirPerson_id"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tExhibit"/>
				</action>
				
							
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Exhibit Tracking">
					<source database="${sql.staging.db}" schema="dbo" table="exhibit_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT et.*, e.texhibit_id FROM cnmiStaging.dbo.exhibitTracking_conv et
							LEFT JOIN cnmiStaging.dbo.exhibit_conv e
							ON e.id = et.exhibit_id
					
							
						]]>							
						</param>
							
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="dateEntered" dest="dateEntered"/>
						<mapping source="enteredBy" dest="enteredBy"/>
						<mapping source="notes" dest="notes"/>
						<mapping source="status" dest="status"/>
						<mapping source="statusDate" dest="statusDate"/>
						<mapping source="timeEntered" dest="timeEntered"/>
						<mapping source="viewedBy" dest="viewedBy"/>
						<mapping source="viewedByFirstName" dest="viewedByFirstName"/>
						<mapping source="viewedByLastName" dest="viewedByLastName"/>
						<mapping source="texhibit_id" dest="exhibit_id"/>
						<mapping source="location_id" dest="location_id"/>
						<mapping source="convId" dest="convId"/>
						<mapping source="dirPerson_id" dest="dirPerson_id"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tExhibitTracking"/>
				</action>
				
			</actions>
		</stage> 	
		
		
		<stage num="524" mode="Serial" desc="Load Person Note" enabled="true">
			<actions>
				
						
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Person Note">
					<source database="${sql.staging.db}" schema="dbo"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT 
							COALESCE(pn.createUserRealName, 'conv' ) as createUserRealName,
							COALESCE(pn.createUsername, 'conv' ) as createUsername ,
							COALESCE(pn.dateCreated, @today) as dateCreated,
							COALESCE(pn.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
							COALESCE(pn.lastUpdateUsername, 'conv') as lastUpdateUsername ,
							COALESCE(pn.lastUpdated, @today) as lastUpdated,
							pn.*, pc.tPerson_id FROM cnmiStaging.dbo.personNote_conv pn
							LEFT JOIN cnmiStaging.dbo.person_conv pc
							ON pn.person_id = pc.id
						
							
						]]>							
						</param>	
												
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="attachedEntity" dest="attachedEntity"/>
						<mapping source="attachedId" dest="attachedId"/>
						<mapping source="color" dest="color"/>
						<mapping source="completed" dest="completed"/>
						<mapping source="content" dest="content"/>
						<mapping source="dueDate" dest="dueDate"/>
						<mapping source="noteDate" dest="noteDate"/>
						<mapping source="sharedToAuthorityNames" dest="sharedToAuthorityNames"/>
						<mapping source="sharedToUsernames" dest="sharedToUsernames"/>
						<mapping source="sharingLevel" dest="sharingLevel"/>
						<mapping source="stripedContent" dest="stripedContent"/>
						<mapping source="title" dest="title"/>
						<mapping source="toDate" dest="toDate"/>
						<mapping source="type" dest="type"/>
						<mapping source="username" dest="username"/>
						<mapping source="assignedUser_id" dest="assignedUser_id"/>
						<mapping source="tPerson_id" dest="person_id"/>
						<mapping source="convId" dest="convId"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tPersonNote"/>
				</action>
				

			</actions>
		</stage> 	
		
		
		
		<stage num="526" mode="Serial" desc="Load Case Other Number" enabled="true">
			<actions>
				
						
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Case Other Number">
					<source database="${sql.staging.db}" schema="dbo" table="caseOtherNumber_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT 
							COALESCE(con.createUserRealName, 'conv' ) as createUserRealName,
							COALESCE(con.createUsername, 'conv' ) as createUsername ,
							COALESCE(con.dateCreated, @today) as dateCreated,
							COALESCE(con.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
							COALESCE(con.lastUpdateUsername, 'conv') as lastUpdateUsername ,
							COALESCE(con.lastUpdated, @today) as lastUpdated,
							con.*, cc.tCase_id FROM cnmiStaging.dbo.caseOtherNumber_conv con
							LEFT JOIN cnmiStaging.dbo.case_conv cc
							ON con.case_id = cc.id AND con.caseKey = cc.idKey
							WHERE tCase_id IS NOT NULL
						
							
						]]>							
						</param>
						<param name="idColumnName">tCaseOtherNumber_id</param>
						<param name="whereColumnName">idKey</param>	
												
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="endDate" dest="endDate"/>
						<mapping source="number" dest="number"/>
						<mapping source="startDate" dest="startDate"/>
						<mapping source="type" dest="type"/>
						<mapping source="tCase_id" dest="case_id"/>
						<mapping source="subCase_id" dest="subCase_id"/>
						<mapping source="convId" dest="convId"/>
						<mapping source="active" dest="active"/>
						<mapping source="lead" dest="lead"/>
						<mapping source="notes" dest="notes"/>
						<mapping source="dirOrgUnit_id" dest="dirOrgUnit_id"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tCaseOtherNumber"/>
				</action>
				

			</actions>
		</stage> 	
		
		<stage num="528" mode="Serial" desc="Load Arrest" enabled="true">
			<actions>
				
						
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Case Other Number">
					<source database="${sql.staging.db}" schema="dbo"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT 
							COALESCE(a.createUserRealName, 'conv' ) as createUserRealName,
							COALESCE(a.createUsername, 'conv' ) as createUsername ,
							COALESCE(a.dateCreated, @today) as dateCreated,
							COALESCE(a.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
							COALESCE(a.lastUpdateUsername, 'conv') as lastUpdateUsername ,
							COALESCE(a.lastUpdated, @today) as lastUpdated,
							a.*, pty.tParty_id FROM cnmiStaging.dbo.arrest_conv a
							LEFT JOIN cnmiStaging.dbo.party_conv pty
							ON a.associatedParty_id = pty.id
						
						
							
						]]>							
						</param>	
												
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="arrestDate" dest="arrestDate"/>
						<mapping source="arrestTime" dest="arrestTime"/>
						<mapping source="arrestType" dest="arrestType"/>
						<mapping source="arrestingAgencyFileNumber" dest="arrestingAgencyFileNumber"/>
						<mapping source="bookingNumber" dest="bookingNumber"/>
						<mapping source="location" dest="location"/>
						<mapping source="statusDate" dest="statusDate"/>
						<mapping source="arrestingAgency_id" dest="arrestingAgency_id"/>
						<mapping source="tParty_id" dest="associatedParty_id"/>
						<mapping source="bookingAgency_id" dest="bookingAgency_id"/>
						<mapping source="officer_id" dest="officer_id"/>
						<mapping source="convId" dest="convId"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tArrest"/>
				</action>
				

			</actions>
		</stage> 	
		
		<stage num="530" mode="Serial" desc="Load Bail" enabled="true">
			<actions>
				
						
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Bail">
					<source database="${sql.staging.db}" schema="dbo"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT 
							COALESCE(b.createUserRealName, 'conv' ) as createUserRealName,
							COALESCE(b.createUsername, 'conv' ) as createUsername ,
							COALESCE(b.dateCreated, @today) as dateCreated,
							COALESCE(b.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
							COALESCE(b.lastUpdateUsername, 'conv') as lastUpdateUsername ,
							COALESCE(b.lastUpdated, @today) as lastUpdated,
							b.*, pty.tParty_id FROM cnmiStaging.dbo.bail_conv b
							LEFT JOIN cnmiStaging.dbo.party_conv pty
							ON b.associatedParty_id = pty.id
							WHERE tParty_id IS NOT NULL

						]]>							
						</param>	
												
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="bailAmountAppliedCents" dest="bailAmountAppliedCents"/>
						<mapping source="bailAmountCents" dest="bailAmountCents"/>
						<mapping source="bailType" dest="bailType"/>
						<mapping source="bondAgentAddress1" dest="bondAgentAddress1"/>
						<mapping source="bondAgentAddress2" dest="bondAgentAddress2"/>
						<mapping source="bondAgentCity" dest="bondAgentCity"/>
						<mapping source="bondAgentCountry" dest="bondAgentCountry"/>
						<mapping source="bondAgentNumber" dest="bondAgentNumber"/>
						<mapping source="bondAgentState" dest="bondAgentState"/>
						<mapping source="bondAgentZip" dest="bondAgentZip"/>
						<mapping source="bondForfeitureNumber" dest="bondForfeitureNumber"/>
						<mapping source="bondNumber" dest="bondNumber"/>
						<mapping source="bondType" dest="bondType"/>
						<mapping source="datePosted" dest="datePosted"/>
						<mapping source="effectiveFrom" dest="effectiveFrom"/>
						<mapping source="effectiveTo" dest="effectiveTo"/>
						<mapping source="bailAmountApplied" dest="bailAmountApplied"/>
						<mapping source="bailAmount" dest="bailAmount"/>
						<mapping source="orderBy" dest="orderBy"/>
						<mapping source="refundOrderNumber" dest="refundOrderNumber"/>
						<mapping source="registerNumber" dest="registerNumber"/>
						<mapping source="status" dest="status"/>
						<mapping source="statusDate" dest="statusDate"/>
						<mapping source="suretyType" dest="suretyType"/>
						<mapping source="tParty_id" dest="associatedParty_id"/>
						<mapping source="bailBondsman_id" dest="bailBondsman_id"/>
						<mapping source="bondIndemnityCompany_id" dest="bondIndemnityCompany_id"/>
						<mapping source="postedBailParty_id" dest="postedBailParty_id"/>
						<mapping source="convId" dest="convId"/>
						<mapping source="notes" dest="notes"/>
						<mapping source="cf_bailAmount" dest="cf_bailAmount"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tBail"/>
				</action>
				

			</actions>
		</stage> 	
		
		
		<stage num="532" mode="Serial" desc="Load Case Status" enabled="true">
			<actions>
				
						
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Case Status">
					<source database="${sql.staging.db}" schema="dbo"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT 
							COALESCE(cs.createUserRealName, 'conv' ) as createUserRealName,
							COALESCE(cs.createUsername, 'conv' ) as createUsername ,
							COALESCE(cs.dateCreated, @today) as dateCreated,
							COALESCE(cs.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
							COALESCE(cs.lastUpdateUsername, 'conv') as lastUpdateUsername ,
							COALESCE(cs.lastUpdated, @today) as lastUpdated,
							cs.*, cc.tCase_id FROM cnmiStaging.dbo.caseStatus_conv cs
							LEFT JOIN cnmiStaging.dbo.case_conv cc
							ON cs.case_id = cc.id
							WHERE tCase_id IS NOT NULL

						]]>							
						</param>	
												
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="optlock" dest="optlock"/>
							<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
							<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
							<mapping source="updateReason" dest="updateReason"/>
							<mapping source="beginDate" dest="beginDate"/>
							<mapping source="endDate" dest="endDate"/>
							<mapping source="value" dest="value"/>
							<mapping source="tCase_id" dest="case_id"/>
							<mapping source="convId" dest="convId"/>
							<mapping source="notes" dest="notes"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tCaseStatus"/>
				</action>
				

			</actions>
		</stage> 	
		
		<stage num="534" mode="Serial" desc="Load Case Track" enabled="true">
			<actions>
				
						
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Case Track">
					<source database="${sql.staging.db}" schema="dbo"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT 
							COALESCE(ct.createUserRealName, 'conv' ) as createUserRealName,
							COALESCE(ct.createUsername, 'conv' ) as createUsername ,
							COALESCE(ct.dateCreated, @today) as dateCreated,
							COALESCE(ct.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
							COALESCE(ct.lastUpdateUsername, 'conv') as lastUpdateUsername ,
							COALESCE(ct.lastUpdated, @today) as lastUpdated,
							ct.*, cc.tCase_id FROM cnmiStaging.dbo.caseTrack_conv ct
							LEFT JOIN cnmiStaging.dbo.case_conv cc
							ON ct.case_id = cc.id
							WHERE tCase_id IS NOT NULL

						]]>							
						</param>	
												
					</params>
					<mappings>
						<mapping source="id" dest="id"/>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="dateTracked" dest="dateTracked"/>
						<mapping source="location" dest="location"/>
						<mapping source="personName" dest="personName"/>
						<mapping source="trackingNumber" dest="trackingNumber"/>
						<mapping source="trackingType" dest="trackingType"/>
						<mapping source="tCase_id" dest="case_id"/>
						<mapping source="convId" dest="convId"/>
						<mapping source="cf_trackingLocation" dest="cf_trackingLocation"/>
						<mapping source="notes" dest="notes"/>
						<mapping source="dirPerson_id" dest="dirPerson_id"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tCaseTrack"/>
				</action>
				

			</actions>
		</stage> 	
		
		<stage num="536" mode="Serial" desc="Load Case Joinder" enabled="true">
			<actions>
				
						
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Case Joinder">
					<source database="${sql.staging.db}" schema="dbo" table="caseJoinder_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT 
							COALESCE(cj.createUserRealName, 'conv' ) as createUserRealName,
							COALESCE(cj.createUsername, 'conv' ) as createUsername ,
							COALESCE(cj.dateCreated, @today) as dateCreated,
							COALESCE(cj.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
							COALESCE(cj.lastUpdateUsername, 'conv') as lastUpdateUsername ,
							COALESCE(cj.lastUpdated, @today) as lastUpdated,
							cj.* FROM cnmiStaging.dbo.caseJoinder_conv cj
						

						]]>							
						</param>	
							<param name="idColumnName">tcaseJoinder_id</param>
							<param name="whereColumnName">idKey</param>						
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="description" dest="description"/>
						<mapping source="effectiveFrom" dest="effectiveFrom"/>
						<mapping source="effectiveTo" dest="effectiveTo"/>
						<mapping source="name" dest="name"/>
						<mapping source="orderDate" dest="orderDate"/>
						<mapping source="type" dest="type"/>
						<mapping source="convId" dest="convId"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tCaseJoinder"/>
				</action>
				

			</actions>
		</stage> 	
		
		<stage num="538" mode="Serial" desc="Load Case Joinded Item" enabled="true">
			<actions>
				
						
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading  Case Joinded Item">
					<source database="${sql.staging.db}" schema="dbo"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT 
							COALESCE(cji.createUserRealName, 'conv' ) as createUserRealName,
							COALESCE(cji.createUsername, 'conv' ) as createUsername ,
							COALESCE(cji.dateCreated, @today) as dateCreated,
							COALESCE(cji.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
							COALESCE(cji.lastUpdateUsername, 'conv') as lastUpdateUsername ,
							COALESCE(cji.lastUpdated, @today) as lastUpdated,
							cji.*, cc.tCase_id, cj.tcaseJoinder_id  FROM cnmiStaging.dbo.caseJoinedItem_conv cji
							INNER JOIN cnmiStaging.dbo.caseJoinder_conv cj
							ON cji.joinder_id = cj.id
							INNER JOIN cnmiStaging.dbo.case_conv cc
							ON cji.case_id = cc.id
						

						]]>							
						</param>						
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="effectiveFrom" dest="effectiveFrom"/>
						<mapping source="effectiveTo" dest="effectiveTo"/>
						<mapping source="primaryCase" dest="primaryCase"/>
						<mapping source="tCase_id" dest="case_id"/>
						<mapping source="tcaseJoinder_id" dest="joinder_id"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tCaseJoinedItem"/>
				</action>
				

			</actions>
		</stage> 	
		
		<stage num="540" mode="Serial" desc="Load Ce_OtherNumber" enabled="true">
			<actions>
				
						
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading  Ce_OtherNumber Item">
					<source database="${sql.staging.db}" schema="dbo"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT 
							COALESCE(ceon.createUserRealName, 'conv' ) as createUserRealName,
							COALESCE(ceon.createUsername, 'conv' ) as createUsername ,
							COALESCE(ceon.dateCreated, @today) as dateCreated,
							COALESCE(ceon.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
							COALESCE(ceon.lastUpdateUsername, 'conv') as lastUpdateUsername ,
							COALESCE(ceon.lastUpdated, @today) as lastUpdated,
							ceon.*, cc.tCase_id FROM CNMI_eCourt_full.ecourt.tCe_OtherNumber ceon
							INNER JOIN case_conv cc
							ON ceon.case_id = cc.id 
							WHERE courtNumber IS NOT NULL
						

						]]>							
						</param>						
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="courtCodeType" dest="courtCodeType"/>
						<mapping source="courtDescription" dest="courtDescription"/>
						<mapping source="courtMasterCode" dest="courtMasterCode"/>
						<mapping source="courtNumber" dest="courtNumber"/>
						<mapping source="defenseCodeType" dest="defenseCodeType"/>
						<mapping source="defenseDescription" dest="defenseDescription"/>
						<mapping source="defenseMasterCode" dest="defenseMasterCode"/>
						<mapping source="defenseNumber" dest="defenseNumber"/>
						<mapping source="lawCodeType" dest="lawCodeType"/>
						<mapping source="lawDescription" dest="lawDescription"/>
						<mapping source="lawMasterCode" dest="lawMasterCode"/>
						<mapping source="lawNumber" dest="lawNumber"/>
						<mapping source="nonAgencySpecificCodeType" dest="nonAgencySpecificCodeType"/>
						<mapping source="nonAgencySpecificDescription" dest="nonAgencySpecificDescription"/>
						<mapping source="nonAgencySpecificMasterCode" dest="nonAgencySpecificMasterCode"/>
						<mapping source="nonAgencySpecificNumber" dest="nonAgencySpecificNumber"/>
						<mapping source="probationCodeType" dest="probationCodeType"/>
						<mapping source="probationDescription" dest="probationDescription"/>
						<mapping source="probationMasterCode" dest="probationMasterCode"/>
						<mapping source="probationNumber" dest="probationNumber"/>
						<mapping source="prosecutorCodeType" dest="prosecutorCodeType"/>
						<mapping source="prosecutorDescription" dest="prosecutorDescription"/>
						<mapping source="prosecutorMasterCode" dest="prosecutorMasterCode"/>
						<mapping source="prosecutorNumber" dest="prosecutorNumber"/>
						<mapping source="tCase_id" dest="case_id"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tCe_OtherNumber"/>
				</action>
				

			</actions>
		</stage> 	
		
		<stage num="542" mode="Serial" desc="Load tCe_PersonEvent" enabled="true">
			<actions>
				
						
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading  tCe_PersonEvent">
					<source database="${sql.staging.db}" schema="dbo"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT 
							COALESCE(pe.createUserRealName, 'conv' ) as createUserRealName,
							COALESCE(pe.createUsername, 'conv' ) as createUsername ,
							COALESCE(pe.dateCreated, @today) as dateCreated,
							COALESCE(pe.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
							COALESCE(pe.lastUpdateUsername, 'conv') as lastUpdateUsername ,
							COALESCE(pe.lastUpdated, @today) as lastUpdated,
							pe.*, pc.tPerson_id FROM CNMI_eCourt_full.ecourt.tCe_PersonEvent pe
							INNER JOIN person_conv pc
							ON pe.person_id = pc.id 
						

						]]>							
						</param>						
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="endDateTime" dest="endDateTime"/>
						<mapping source="eventCategory" dest="eventCategory"/>
						<mapping source="eventStatus" dest="eventStatus"/>
						<mapping source="location" dest="location"/>
						<mapping source="notes" dest="notes"/>
						<mapping source="resultType" dest="resultType"/>
						<mapping source="startDateTime" dest="startDateTime"/>
						<mapping source="type" dest="type"/>
						<mapping source="person_id" dest="person_id"/>
						<mapping source="convId" dest="convId"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tCe_PersonEvent"/>
				</action>
				

			</actions>
		</stage> 	
		
			
		<stage num="544" mode="Serial" desc="Load tCe_PersonTracking" enabled="true">
			<actions>
				
						
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading  tCe_PersonTracking">
					<source database="${sql.staging.db}" schema="dbo"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT 
							COALESCE(pt.createUserRealName, 'conv' ) as createUserRealName,
							COALESCE(pt.createUsername, 'conv' ) as createUsername ,
							COALESCE(pt.dateCreated, @today) as dateCreated,
							COALESCE(pt.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
							COALESCE(pt.lastUpdateUsername, 'conv') as lastUpdateUsername ,
							COALESCE(pt.lastUpdated, @today) as lastUpdated,
							pt.*, pc.tPerson_id FROM CNMI_eCourt_full.ecourt.tCe_PersonTracking pt
							INNER JOIN person_conv pc
							ON pt.person_id = pc.id 
						

						]]>							
						</param>						
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="date" dest="date"/>
						<mapping source="endDate" dest="endDate"/>
						<mapping source="note" dest="note"/>
						<mapping source="startDate" dest="startDate"/>
						<mapping source="status" dest="status"/>
						<mapping source="subType" dest="subType"/>
						<mapping source="trackingContent" dest="trackingContent"/>
						<mapping source="trackingType" dest="trackingType"/>
						<mapping source="ce_PersonTracking_id" dest="ce_PersonTracking_id"/>
						<mapping source="person_id" dest="person_id"/>
						<mapping source="convId" dest="convId"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tCe_PersonTracking"/>
				</action>
				

			</actions>
		</stage> 	
		
		<stage num="546" mode="Serial" desc="Load CheckListItem" enabled="true">
			<actions>
				
						
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading  Check List Item">
					<source database="${sql.staging.db}" schema="dbo" table="checklistItem_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT 
							COALESCE(cli.createUserRealName, 'conv' ) as createUserRealName,
							COALESCE(cli.createUsername, 'conv' ) as createUsername ,
							COALESCE(cli.dateCreated, @today) as dateCreated,
							COALESCE(cli.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
							COALESCE(cli.lastUpdateUsername, 'conv') as lastUpdateUsername ,
							COALESCE(cli.lastUpdated, @today) as lastUpdated,
							cli.*, cc.tCase_id 
							FROM checklistItem_conv cli
							INNER JOIN case_conv cc
							ON cli.case_id = cc.id  AND cli.caseKey = cc.idKey
							WHERE cli.person_id IS NULL
						

						]]>							
						</param>
							<param name="idColumnName">tChecklistItem_id</param>
							<param name="whereColumnName">idKey</param>								
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="complete" dest="complete"/>
						<mapping source="completeDate" dest="completeDate"/>
						<mapping source="description" dest="description"/>
						<mapping source="dueDate" dest="dueDate"/>
						<mapping source="instructions" dest="instructions"/>
						<mapping source="startDate" dest="startDate"/>
						<mapping source="suspended" dest="suspended"/>
						<mapping source="tCase_id" dest="case_id"/>
						<mapping source="checkListItemDef_id" dest="checkListItemDef_id"/>
						<mapping source="completedBy_id" dest="completedBy_id"/>
						<mapping source="dirPerson_id_Load" dest="dirPerson_id"/>
						<mapping source="person_id" dest="person_id"/>
						<mapping source="subCase_id" dest="subCase_id"/>
						<mapping source="convId" dest="convId"/>
						<mapping source="status" dest="status"/>
						<mapping source="type" dest="type"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tCheckListItem"/>
				</action>
				

			</actions>
		</stage> 	
		
		<stage num="548" mode="Serial" desc="Load Tracking" enabled="false">
			<actions>
				
						
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading  Tracking">
					<source database="${sql.staging.db}" schema="dbo"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT 
							COALESCE(ct.createUserRealName, 'conv' ) as createUserRealName,
							COALESCE(ct.createUsername, 'conv' ) as createUsername ,
							COALESCE(ct.dateCreated, @today) as dateCreated,
							COALESCE(ct.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
							COALESCE(ct.lastUpdateUsername, 'conv') as lastUpdateUsername ,
							COALESCE(ct.lastUpdated, @today) as lastUpdated,
							ct.*, cc.tCase_id FROM CNMI_eCourt_full.ecourt.tTracking ct
							INNER JOIN case_conv cc
							ON ct.case_id = cc.id 
			

						]]>							
						</param>						
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="date" dest="date"/>
						<mapping source="status" dest="status"/>
						<mapping source="statusDate" dest="statusDate"/>
						<mapping source="subType" dest="subType"/>
						<mapping source="trackingContent" dest="trackingContent"/>
						<mapping source="trackingFrom" dest="trackingFrom"/>
						<mapping source="trackingNumber" dest="trackingNumber"/>
						<mapping source="trackingTo" dest="trackingTo"/>
						<mapping source="trackingType" dest="trackingType"/>
						<mapping source="case_id" dest="case_id"/>
						<mapping source="charge_id" dest="charge_id"/>
						<mapping source="invoice_id" dest="invoice_id"/>
						<mapping source="party_id" dest="party_id"/>
						<mapping source="paymentInvoice_id" dest="paymentInvoice_id"/>
						<mapping source="trustTransaction_id" dest="trustTransaction_id"/>
						<mapping source="convId" dest="convId"/>
						<mapping source="endDate" dest="endDate"/>
						<mapping source="note" dest="note"/>
						<mapping source="startDate" dest="startDate"/>
						<mapping source="notes" dest="notes"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tTracking"/>
				</action>
				

			</actions>
		</stage> 	
		
		<stage num="550" mode="Serial" desc="Load Person Special Status" enabled="true">
			<actions>
				
						
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading  tPersonSpecialStatus">
					<source database="${sql.staging.db}" schema="dbo"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT 
							COALESCE(pss.createUserRealName, 'conv' ) as createUserRealName,
							COALESCE(pss.createUsername, 'conv' ) as createUsername ,
							COALESCE(pss.dateCreated, @today) as dateCreated,
							COALESCE(pss.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
							COALESCE(pss.lastUpdateUsername, 'conv') as lastUpdateUsername ,
							COALESCE(pss.lastUpdated, @today) as lastUpdated,
							pss.*, pc.tPerson_id FROM CNMI_eCourt_full.ecourt.tPersonSpecialStatus pss
							INNER JOIN person_conv pc
							ON pss.associatedPerson_id = pc.id 
			

						]]>							
						</param>						
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="endDate" dest="endDate"/>
						<mapping source="issuerCountry" dest="issuerCountry"/>
						<mapping source="issuerName" dest="issuerName"/>
						<mapping source="issuerState" dest="issuerState"/>
						<mapping source="specialStatusType" dest="specialStatusType"/>
						<mapping source="startDate" dest="startDate"/>
						<mapping source="status" dest="status"/>
						<mapping source="tPerson_id" dest="associatedPerson_id"/>
						<mapping source="category" dest="category"/>
						<mapping source="value" dest="value"/>
						<mapping source="convId" dest="convId"/>
						<mapping source="alert" dest="alert"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tPersonSpecialStatus"/>
				</action>
				

			</actions>
		</stage> 	
		
		<stage num="552" mode="Serial" desc="Load tCe_NonCollectibleFinancial" enabled="true">
			<actions>
				
					
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading tCe_NonCollectibleFinancial">
					<source database="${sql.staging.db}" schema="dbo" table="tCe_NonCollectibleFinancial_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT 
							COALESCE(ncf.createUserRealName, 'conv' ) as createUserRealName,
							COALESCE(ncf.createUsername, 'conv' ) as createUsername ,
							COALESCE(ncf.dateCreated, @today) as dateCreated,
							COALESCE(ncf.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
							COALESCE(ncf.lastUpdateUsername, 'conv') as lastUpdateUsername ,
							COALESCE(ncf.lastUpdated, @today) as lastUpdated,
							ncf.*, cc.tCase_id FROM tCe_NonCollectibleFinancial_conv ncf
							INNER JOIN case_conv cc
							ON ncf.case_id = cc.id 
			

						]]>							
						</param>
						<param name="idColumnName">tCe_NonCollectibleFinancial_id</param>
						<param name="whereColumnName">idKey</param>	
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="allegedAmount" dest="allegedAmount"/>
						<mapping source="beginDate" dest="beginDate"/>
						<mapping source="category" dest="category"/>
						<mapping source="date" dest="date"/>
						<mapping source="description" dest="description"/>
						<mapping source="endDate" dest="endDate"/>
						<mapping source="location" dest="location"/>
						<mapping source="notes" dest="notes"/>
						<mapping source="orderedAmount" dest="orderedAmount"/>
						<mapping source="priority" dest="priority"/>
						<mapping source="status" dest="status"/>
						<mapping source="type" dest="type"/>
						<mapping source="tCase_id" dest="case_id"/>
						<mapping source="convId" dest="convId"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tCe_NonCollectibleFinancial"/>
				</action>
				

			</actions>
		</stage> 	
		
		<stage num="554" mode="Serial" desc="Load tCharge" enabled="true">
			<actions>
				
						
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading tCharge">
					<source database="${sql.staging.db}" schema="dbo" table="charge_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT 
							COALESCE(chg.createUserRealName, 'conv' ) as createUserRealName,
							COALESCE(chg.createUsername, 'conv' ) as createUsername ,
							COALESCE(chg.dateCreated, @today) as dateCreated,
							COALESCE(chg.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
							COALESCE(chg.lastUpdateUsername, 'conv') as lastUpdateUsername ,
							COALESCE(chg.lastUpdated, @today) as lastUpdated,
							chg.*, pty.tParty_id, st.id as StLd FROM cnmiStaging.dbo.charge_conv chg
							INNER JOIN party_conv pty
							ON chg.associatedParty_id = pty.id 
							LEFT JOIN cnmieCourtConv.ecourt.tStatute st
							ON chg.stConfigCode = st.configCode
							WHERE pty.tParty_id IS NOT NULL
			

						]]>							
						</param>
						<param name="idColumnName">tCharge_id</param>
						<param name="whereColumnName">idKey</param>								
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="optlock" dest="optlock"/>
							<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
							<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
							<mapping source="updateReason" dest="updateReason"/>
							<mapping source="actualSpeed" dest="actualSpeed"/>
							<mapping source="agency" dest="agency"/>
							<mapping source="bac" dest="bac"/>
							<mapping source="chargeAmount" dest="chargeAmount"/>
							<mapping source="chargeDate" dest="chargeDate"/>
							<mapping source="chargeDegree" dest="chargeDegree"/>
							<mapping source="chargeNumber" dest="chargeNumber"/>
							<mapping source="chargeTime" dest="chargeTime"/>
							<mapping source="chargeToDate" dest="chargeToDate"/>
							<mapping source="chargeToTime" dest="chargeToTime"/>
							<mapping source="chargeType" dest="chargeType"/>
							<mapping source="citedSpeed" dest="citedSpeed"/>
							<mapping source="condition" dest="condition"/>
							<mapping source="correctable" dest="correctable"/>
							<mapping source="counts" dest="counts"/>
							<mapping source="dateFiled" dest="dateFiled"/>
							<mapping source="declinationMemo" dest="declinationMemo"/>
							<mapping source="description" dest="description"/>
							<mapping source="dispositionDate" dest="dispositionDate"/>
							<mapping source="dispositionManner" dest="dispositionManner"/>
							<mapping source="dispositionReason" dest="dispositionReason"/>
							<mapping source="dispositionType" dest="dispositionType"/>
							<mapping source="eligible" dest="eligible"/>
							<mapping source="ivrReferenceNumber" dest="ivrReferenceNumber"/>
							<mapping source="location" dest="location"/>
							<mapping source="mustAppear" dest="mustAppear"/>
							<mapping source="offenseLevel" dest="offenseLevel"/>
							<mapping source="plea" dest="plea"/>
							<mapping source="pleaDate" dest="pleaDate"/>
							<mapping source="pleaStatus" dest="pleaStatus"/>
							<mapping source="postedSpeed" dest="postedSpeed"/>
							<mapping source="principal" dest="principal"/>
							<mapping source="sentencingCompleted" dest="sentencingCompleted"/>
							<mapping source="stageAdded" dest="stageAdded"/>
							<mapping source="status" dest="status"/>
							<mapping source="statusDate" dest="statusDate"/>
							<mapping source="ticketNumber" dest="ticketNumber"/>
							<mapping source="unitOverage" dest="unitOverage"/>
							<mapping source="weightOverage" dest="weightOverage"/>
							<mapping source="tParty_id" dest="associatedParty_id"/>
							<mapping source="StLd" dest="statute_id"/>
							<mapping source="inchoateType" dest="inchoateType"/>
							<mapping source="convId" dest="convId"/>
							<mapping source="chargeDate2" dest="chargeDate2"/>
							<mapping source="date" dest="date"/>
							<mapping source="locationJurisdiction" dest="locationJurisdiction"/>
							<mapping source="locationNotes" dest="locationNotes"/>
							<mapping source="notes" dest="notes"/>
							<mapping source="notes2" dest="notes2"/>
							<mapping source="pleaDispoNotes" dest="pleaDispoNotes"/>
							<mapping source="pleaDispoNotes2" dest="pleaDispoNotes2"/>
							<mapping source="convId_CountInvPers" dest="convId_CountInvPers"/>
							<mapping source="convId_ChargeHistory" dest="convId_ChargeHistory"/>
							<mapping source="conviction" dest="conviction"/>
							<mapping source="discount" dest="discount"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tCharge"/>
				</action>
				

			</actions>
		</stage> 	
		
		
		<stage num="556" mode="Serial" desc="Load tChargeCharateristic" enabled="true">
			<actions>
				
						
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading tCharge">
					<source database="${sql.staging.db}" schema="dbo" table="chargeCharacteristic_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT 
							COALESCE(chgc.createUserRealName, 'conv' ) as createUserRealName,
							COALESCE(chgc.createUsername, 'conv' ) as createUsername ,
							COALESCE(chgc.dateCreated, @today) as dateCreated,
							COALESCE(chgc.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
							COALESCE(chgc.lastUpdateUsername, 'conv') as lastUpdateUsername ,
							COALESCE(chgc.lastUpdated, @today) as lastUpdated,
							chgc.*, chg.tCharge_id FROM cnmiStaging.dbo.chargeCharacteristic_conv chgc
							INNER JOIN charge_conv chg
							ON chgc.charge_id = chg.id 

						]]>							
						</param>							
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="characteristic" dest="characteristic"/>
						<mapping source="status" dest="status"/>
						<mapping source="statusDate" dest="statusDate"/>
						<mapping source="type" dest="type"/>
						<mapping source="charge_id" dest="charge_id"/>
						<mapping source="convId" dest="convId"/>
						<mapping source="notes" dest="notes"/>
						<mapping source="value" dest="value"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tChargeCharacteristic"/>
				</action>
				

			</actions>
		</stage> 	
		
			
		<stage num="558" mode="Serial" desc="Load tCe_ChargeIntoxicant" enabled="true">
			<actions>
				
						
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading tCharge">
					<source database="${sql.staging.db}" schema="dbo"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT 
							COALESCE(ci.createUserRealName, 'conv' ) as createUserRealName,
							COALESCE(ci.createUsername, 'conv' ) as createUsername ,
							COALESCE(ci.dateCreated, @today) as dateCreated,
							COALESCE(ci.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
							COALESCE(ci.lastUpdateUsername, 'conv') as lastUpdateUsername ,
							COALESCE(ci.lastUpdated, @today) as lastUpdated,
							ci.*, chg.tCharge_id FROM CNMI_eCourt_full.ecourt.tCe_ChargeIntoxicant ci
							INNER JOIN charge_conv chg
							ON ci.charge_id = chg.id 

						]]>							
						</param>							
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="intoxicant" dest="intoxicant"/>
						<mapping source="level" dest="level"/>
						<mapping source="notes" dest="notes"/>
						<mapping source="charge_id" dest="charge_id"/>
						<mapping source="convId" dest="convId"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tCe_ChargeIntoxicant"/>
				</action>
				

			</actions>
		</stage> 	
		
		<stage num="560" mode="Serial" desc="Load tChargeRelated" enabled="true">
			<actions>
				
						
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading tCharge">
					<source database="${sql.staging.db}" schema="dbo"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT
							COALESCE(cr.createUserRealName, 'conv' ) as createUserRealName,
							COALESCE(cr.createUsername, 'conv' ) as createUsername ,
							COALESCE(cr.dateCreated, @today) as dateCreated,
							COALESCE(cr.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
							COALESCE(cr.lastUpdateUsername, 'conv') as lastUpdateUsername ,
							COALESCE(cr.lastUpdated, @today) as lastUpdated,							
							cr.*, cchg.tCharge_id as childCharge, pchg.tCharge_id as parentCharge FROM CNMI_eCourt_full.ecourt.tChargeRelated cr
							INNER JOIN charge_conv cchg
							ON cr.childCharge_id = cchg.id 
							INNER JOIN charge_conv pchg
							ON cr.childCharge_id = pchg.id 

						]]>							
						</param>							
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="relatedType" dest="relatedType"/>
						<mapping source="childCharge" dest="childCharge_id"/>
						<mapping source="parentCharge" dest="parentCharge_id"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tChargeRelated"/>
				</action>
				

			</actions>
		</stage> 	
		
		<stage num="562" mode="Serial" desc="Load tSentence" enabled="true">
			<actions>
				
						
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading tCharge">
					<source database="${sql.staging.db}" schema="dbo" table="sentence_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT 
							COALESCE(s.createUserRealName, 'conv' ) as createUserRealName,
							COALESCE(s.createUsername, 'conv' ) as createUsername ,
							COALESCE(s.dateCreated, @today) as dateCreated,
							COALESCE(s.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
							COALESCE(s.lastUpdateUsername, 'conv') as lastUpdateUsername ,
							COALESCE(s.lastUpdated, @today) as lastUpdated,
							s.*, chg.tCharge_id FROM cnmiStaging.dbo.sentence_conv s
							INNER JOIN cnmiStaging.dbo.charge_conv chg
							ON s.associatedCharge_id = chg.id
							
							
						]]>							
						</param>
						<param name="idColumnName">tSentence_id</param>
						<param name="whereColumnName">idKey</param>						
					</params>
					<mappings>
						<mapping source="id" dest="id"/>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="optlock" dest="optlock"/>
							<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
							<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
							<mapping source="updateReason" dest="updateReason"/>
							<mapping source="amount" dest="amount"/>
							<mapping source="amountReducedTo" dest="amountReducedTo"/>
							<mapping source="amountSuspended" dest="amountSuspended"/>
							<mapping source="completeBy" dest="completeBy"/>
							<mapping source="creditDays" dest="creditDays"/>
							<mapping source="description" dest="description"/>
							<mapping source="length" dest="length"/>
							<mapping source="length2" dest="length2"/>
							<mapping source="length3" dest="length3"/>
							<mapping source="length4" dest="length4"/>
							<mapping source="lengthPeriod" dest="lengthPeriod"/>
							<mapping source="lengthUnit" dest="lengthUnit"/>
							<mapping source="lengthUnit2" dest="lengthUnit2"/>
							<mapping source="lengthUnit3" dest="lengthUnit3"/>
							<mapping source="lengthUnit4" dest="lengthUnit4"/>
							<mapping source="liabilityType" dest="liabilityType"/>
							<mapping source="redeemableLength" dest="redeemableLength"/>
							<mapping source="sentenceBeginDate" dest="sentenceBeginDate"/>
							<mapping source="sentenceCompliance" dest="sentenceCompliance"/>
							<mapping source="sentenceDate" dest="sentenceDate"/>
							<mapping source="sentenceEndDate" dest="sentenceEndDate"/>
							<mapping source="sentenceType" dest="sentenceType"/>
							<mapping source="serviceMethod" dest="serviceMethod"/>
							<mapping source="status" dest="status"/>
							<mapping source="statusDate" dest="statusDate"/>
							<mapping source="statusEndDate" dest="statusEndDate"/>
							<mapping source="tCharge_id" dest="associatedCharge_id"/>
							<mapping source="official_id" dest="official_id"/>
							<mapping source="convId" dest="convId"/>
							<mapping source="creditAmountFromDesc" dest="creditAmountFromDesc"/>
							<mapping source="creditAmountToDesc" dest="creditAmountToDesc"/>
							<mapping source="creditDurationDesc" dest="creditDurationDesc"/>
							<mapping source="creditNotes" dest="creditNotes"/>
							<mapping source="notes" dest="notes"/>
							<mapping source="sentenceAmountFromDesc" dest="sentenceAmountFromDesc"/>
							<mapping source="sentenceAmountToDesc" dest="sentenceAmountToDesc"/>
							<mapping source="sentenceDurationDesc" dest="sentenceDurationDesc"/>
							<mapping source="sentenceLocation" dest="sentenceLocation"/>
							<mapping source="sentenceSubType" dest="sentenceSubType"/>
							<mapping source="suspendAmountFromDesc" dest="suspendAmountFromDesc"/>
							<mapping source="suspendAmountToDesc" dest="suspendAmountToDesc"/>
							<mapping source="suspendDays" dest="suspendDays"/>
							<mapping source="suspendDurationDesc" dest="suspendDurationDesc"/>
							<mapping source="suspendNotes" dest="suspendNotes"/>
							<mapping source="convId_ObligationID" dest="convId_ObligationID"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tSentence"/>
				</action>
				

			</actions>
		</stage> 	
		
			
		<stage num="564" mode="Serial" desc="Load tSentenceCondition" enabled="true">
			<actions>
				
						
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading tSentenceCodition">
					<source database="${sql.staging.db}" schema="dbo"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT
							COALESCE(sc.createUserRealName, 'conv' ) as createUserRealName,
							COALESCE(sc.createUsername, 'conv' ) as createUsername ,
							COALESCE(sc.dateCreated, @today) as dateCreated,
							COALESCE(sc.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
							COALESCE(sc.lastUpdateUsername, 'conv') as lastUpdateUsername ,
							COALESCE(sc.lastUpdated, @today) as lastUpdated,
							sc.*, s.tSentence_id FROM cnmiStaging.dbo.sentenceCondition_conv sc
							INNER JOIN cnmiStaging.dbo.sentence_conv s
							ON sc.associatedSentence_id = s.id
							WHERE tSentence_id IS NOT NULL
					
						]]>							
						</param>							
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="amount" dest="amount"/>
						<mapping source="length" dest="length"/>
						<mapping source="lengthUnit" dest="lengthUnit"/>
						<mapping source="sentenceConditionBeginDate" dest="sentenceConditionBeginDate"/>
						<mapping source="sentenceConditionDate" dest="sentenceConditionDate"/>
						<mapping source="sentenceConditionEndDate" dest="sentenceConditionEndDate"/>
						<mapping source="sentenceConditionType" dest="sentenceConditionType"/>
						<mapping source="status" dest="status"/>
						<mapping source="statusDate" dest="statusDate"/>
						<mapping source="tSentence_id" dest="associatedSentence_id"/>
						<mapping source="convId" dest="convId"/>
						<mapping source="amount2" dest="amount2"/>
						<mapping source="description" dest="description"/>
						<mapping source="length2" dest="length2"/>
						<mapping source="lengthUnit2" dest="lengthUnit2"/>
						<mapping source="notes" dest="notes"/>
						<mapping source="sentenceConditionAmtFromDesc" dest="sentenceConditionAmtFromDesc"/>
						<mapping source="sentenceConditionAmtToDesc" dest="sentenceConditionAmtToDesc"/>
						<mapping source="sentenceConditionDurDesc" dest="sentenceConditionDurDesc"/>
						<mapping source="sentenceConditionSubType" dest="sentenceConditionSubType"/>
						<mapping source="sentenceConditionLocation" dest="sentenceConditionLocation"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tSentenceCondition"/>
				</action>
				

			</actions>
		</stage> 	
		
				
		<stage num="566" mode="Serial" desc="Load Case Assignment" enabled="true">
			<actions>
				
						
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading PI - Case Assignment">
					<source database="${sql.staging.db}" schema="dbo" table="caseAssignment_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						DECLARE @today datetime; SET @today = GETDATE();
								

						SELECT
						
						
						'0' as optlock,
						'conv' as createUserRealName,
						'conv' as createUsername,
						'conv' as lastUpdateUserRealName,
						'conv' as lastUpdateUsername,
						@today as dateCreated,
						@today as lastUpdated,
						idKey
						FROM caseAssignment_conv ca
					
						
						]]>							
						</param>
						<param name="idColumnName">tPID</param>
						<param name="whereColumnName">idKey</param>
												
					</params>
					<mappings>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tPersonIdentifier"/>
				</action>
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading person  - Case Assignment">
					<source database="${sql.staging.db}" schema="dbo" table="caseAssignment_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						DECLARE @today datetime; SET @today = GETDATE();
								

						SELECT
						
						
						'0' as optlock,
						'conv' as createUserRealName,
						'conv' as createUsername,
						'conv' as lastUpdateUserRealName,
						'conv' as lastUpdateUsername,
						@today as dateCreated,
						@today as lastUpdated,
						firstName,
						lastName,
						middleName,
						tPID,
						idKey,
						de.id as personId
			 
						FROM caseAssignment_conv ca
						LEFT JOIN cnmieCourtConv.ecourt.tDirEntry de
						ON ca.dirEntryCode = de.code
			
						]]>							
						</param>
						<param name="idColumnName">tPerson_id</param>
						<param name="whereColumnName">idKey</param>
												
					</params>
					<mappings>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						
						<mapping source="firstName" dest="firstName"/>
						<mapping source="middleName" dest="middleName"/>
						<mapping source="lastName" dest="lastName"/>
						<mapping source="tPID" dest="personIdentifier_id"/>
						<mapping source="personId" dest="personId"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tPerson"/>
				</action>
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Case Assignment  - Case Assignment">
					<source database="${sql.staging.db}" schema="dbo" table="caseAssignment_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						DECLARE @today datetime; SET @today = GETDATE();
								

						SELECT
						
						
						'0' as optlock,
						'conv' as createUserRealName,
						'conv' as createUsername,
						'conv' as lastUpdateUserRealName,
						'conv' as lastUpdateUsername,
						@today as dateCreated,
						@today as lastUpdated,
						ca.*,
						cc.tCase_id
						FROM caseAssignment_conv ca
						INNER JOIN case_conv cc
						ON ca.case_id = cc.id AND ca.caseKey = cc.idKey
			
						]]>							
						</param>
						<param name="idColumnName">tCaseAssignment_id</param>
						<param name="whereColumnName">idKey</param>
												
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="allowPublicAccess" dest="allowPublicAccess"/>
						<mapping source="assignmentGroup" dest="assignmentGroup"/>
						<mapping source="assignmentKey" dest="assignmentKey"/>
						<mapping source="assignmentKeyComments" dest="assignmentKeyComments"/>
						<mapping source="assignmentMethod" dest="assignmentMethod"/>
						<mapping source="assignmentRole" dest="assignmentRole"/>
						<mapping source="assignmentWeight" dest="assignmentWeight"/>
						<mapping source="assignmentWeightTotal" dest="assignmentWeightTotal"/>
						<mapping source="dateAssigned" dest="dateAssigned"/>
						<mapping source="dateOrdered" dest="dateOrdered"/>
						<mapping source="dateRemoved" dest="dateRemoved"/>
						<mapping source="dissenting" dest="dissenting"/>
						<mapping source="locationCode" dest="locationCode"/>
						<mapping source="locationId" dest="locationId"/>
						<mapping source="locationName" dest="locationName"/>
						<mapping source="parentLocationCode" dest="parentLocationCode"/>
						<mapping source="parentLocationId" dest="parentLocationId"/>
						<mapping source="parentLocationName" dest="parentLocationName"/>
						<mapping source="parentOrgUnitCode" dest="parentOrgUnitCode"/>
						<mapping source="parentOrgUnitId" dest="parentOrgUnitId"/>
						<mapping source="parentOrgUnitName" dest="parentOrgUnitName"/>
						<mapping source="reassignmentWeight" dest="reassignmentWeight"/>
						<mapping source="removalReason" dest="removalReason"/>
						<mapping source="removalReasonSubType" dest="removalReasonSubType"/>
						<mapping source="removalRequestedBy" dest="removalRequestedBy"/>
						<mapping source="representing" dest="representing"/>
						<mapping source="status" dest="status"/>
						<mapping source="statusDate" dest="statusDate"/>
						<mapping source="writing" dest="writing"/>
						<mapping source="tCase_id" dest="case_id"/>
					<!--	<mapping source="directoryPerson_id" dest="directoryPerson_id"/> -->
						<mapping source="tPerson_id" dest="person_id"/>
					<!--	<mapping source="subCase_id" dest="subCase_id"/> -->
						<mapping source="assignmentSubRole" dest="assignmentSubRole"/>
						<mapping source="victim" dest="victim"/>
						<mapping source="convId" dest="convId"/>
						<mapping source="flag1" dest="flag1"/>
						<mapping source="flag2" dest="flag2"/>
						<mapping source="flag3" dest="flag3"/>
						<mapping source="flag4" dest="flag4"/>
						<mapping source="flag5" dest="flag5"/>
						<mapping source="notes" dest="notes"/>
						<mapping source="notification" dest="notification"/>
						<mapping source="cmsReferenceId" dest="cmsReferenceId"/>
						<mapping source="efmReferenceId" dest="efmReferenceId"/>
						<mapping source="dirOrgUnit_id_Load" dest="dirOrgUnit_id"/> 
						<mapping source="associatedADR_id" dest="associatedADR_id"/>
						<mapping source="eventInvPersConvId" dest="eventInvPersConvId"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tCaseAssignment"/>
				</action>
				

			</actions>
		</stage> 	
		
					
		<stage num="568" mode="Serial" desc="Load Case Assignment - Events" enabled="true">
			<actions>

				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel=" Events - Case Assignment">
					<source database="${sql.staging.db}" schema="dbo" table="caseAssignment_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						DECLARE @today datetime; SET @today = GETDATE();
								

						SELECT se.tScheduledEvent_id as events_id, cas.tCaseAssignment_id as assignments_id, sea.convId  FROM CNMI_eCourt_full.ecourt.tScheduledEvent_assignments sea
						INNER JOIN  cnmiStaging.dbo.scheduledEvent_conv se
						ON sea.events_id = se.id
						INNER JOIN cnmiStaging.dbo.caseAssignment_conv cas
						ON sea.assignments_id = cas.id AND se.caseKey =cas.caseKey
					

						]]>							
						</param>					
					</params>
					<mappings>
						<mapping source="events_id" dest="events_id"/>
						<mapping source="assignments_id" dest="assignments_id"/>
						<mapping source="convId" dest="convId"/>		
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tScheduledEvent_assignments"/>
				</action>
			
			</actions>
		</stage> 

		<stage num="570" mode="Serial" desc="Load Parties - Events" enabled="true">
			<actions>

				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel=" Events - Party">
					<source database="${sql.staging.db}" schema="dbo" table="caseAssignment_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						DECLARE @today datetime; SET @today = GETDATE();
								

						SELECT se.tScheduledEvent_id , pty.tParty_id  as parties_id, sea.convId  FROM CNMI_eCourt_full.ecourt.tScheduledEvent_parties sea
						INNER JOIN  cnmiStaging.dbo.scheduledEvent_conv se
						ON sea.tScheduledEvent_id = se.id
						INNER JOIN cnmiStaging.dbo.party_conv pty
						ON sea.parties_id = pty.id AND se.caseKey = pty.caseKey
						WHERE tParty_id IS NOT NULL

						]]>							
						</param>					
					</params>
					<mappings>
						<mapping source="tScheduledEvent_id" dest="tScheduledEvent_id"/>
						<mapping source="parties_id" dest="parties_id"/>
						<mapping source="convId" dest="convId"/>	
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tScheduledEvent_parties"/>
				</action>
			
			</actions>
		</stage> 			
		
		<stage num="572" mode="Serial" desc="Load Case Joinders - Split Cases" enabled="true">
			<actions>
			
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Case Joinder">
					<source database="${sql.staging.db}" schema="dbo" table="case_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT 
							'conv'  as createUserRealName,
							'conv'  as createUsername ,
							@today as dateCreated,
							'conv'  as lastUpdateUserRealName,
							'conv' as lastUpdateUsername ,
							@today as lastUpdated,
							'CODC' as type,
							'Co-Defendant Cases' as name,
							GETDATE() as effectiveFrom,
							id
							FROM cnmiStaging.dbo.case_conv cc
							GROUP BY id 
							HAVING count(1) > 1
						

						]]>							
						</param>	
							<param name="idColumnName">tcaseJoinder_id</param>
							<param name="whereColumnName">id</param>						
					</params>
					<mappings>
						
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="name" dest="description"/>
						<mapping source="effectiveFrom" dest="effectiveFrom"/>
						<mapping source="name" dest="name"/>
						<mapping source="type" dest="type"/>
						
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tCaseJoinder"/>
				</action>
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading  Case Joinded Item">
					<source database="${sql.staging.db}" schema="dbo"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT 
							COALESCE(cc.createUserRealName, 'conv' ) as createUserRealName,
							COALESCE(cc.createUsername, 'conv' ) as createUsername ,
							COALESCE(cc.dateCreated, @today) as dateCreated,
							COALESCE(cc.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
							COALESCE(cc.lastUpdateUsername, 'conv') as lastUpdateUsername ,
							COALESCE(cc.lastUpdated, @today) as lastUpdated,
							*,
							primaryCase =
							CASE
								WHEN RIGHT(caseNumber,5) NOT LIKE '%--%' THEN 1
								ELSE 0
							END,
							GETDATE() as effectiveFrom
							FROM case_conv cc
							WHERE tcaseJoinder_id IS NOT NULL
						

						]]>							
						</param>						
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="effectiveFrom" dest="effectiveFrom"/>
						<mapping source="primaryCase" dest="primaryCase"/>
						<mapping source="tCase_id" dest="case_id"/>
						<mapping source="tcaseJoinder_id" dest="joinder_id"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tCaseJoinedItem"/>
				</action>
				
			
			
			</actions>
		</stage> 			
		
		
		<stage num="574" mode="Serial" desc="Load Case Disposition - Charge Dispositions" enabled="true">
			<actions>
			
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Case Dispo">
					<source database="${sql.staging.db}" schema="dbo" table="caseDisposition_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT 
							'conv'  as createUserRealName,
							'conv'  as createUsername ,
							@today as dateCreated,
							'conv'  as lastUpdateUserRealName,
							'conv' as lastUpdateUsername ,
							@today as lastUpdated,
							0 as optlock,
							cd.*,
							cc.tCase_id
							FROM cnmiStaging.dbo.caseDisposition_conv cd
							INNER JOIN cnmiStaging.dbo.case_conv cc
							ON cd.caseKey = cc.idKey
						

						]]>							
						</param>	
							<param name="idColumnName">tCaseDisposition_id</param>
							<param name="whereColumnName">idKey</param>						
					</params>
					<mappings>
						
						<mapping source="optlock" dest="optlock"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="dispositionType" dest="dispositionType"/>
						<mapping source="dispositionDate" dest="dispositionDate"/>
						<mapping source="tCase_id" dest="case_id"/>
					
						
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tCaseDisposition"/>
				</action>
			
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Case Dispo - XREF">
					<source database="${sql.staging.db}" schema="dbo" table="caseDisposition_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT 
							'conv'  as createUserRealName,
							'conv'  as createUsername ,
							@today as dateCreated,
							'conv'  as lastUpdateUserRealName,
							'conv' as lastUpdateUsername ,
							@today as lastUpdated,
							0 as optlock,
							tCaseDisposition_id as lid,
							'com.sustain.cases.model.CaseDisposition' as lEntity,
							tParty_id as rid,
							'com.sustain.cases.model.Party' as rEntity,
							'REL' as type,
							tCase_id as associatedCase_id
							FROM cnmiStaging.dbo.caseDisposition_conv cd
							LEFT JOIN cnmiStaging.dbo.party_conv pc
							ON cd.partyId = pc.id
							LEFT JOIN cnmiStaging.dbo.Case_conv cc
							ON cd.caseKey = cc.idKey 

						]]>							
						</param>						
					</params>
					<mappings>
						
						<mapping source="optlock" dest="optlock"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="lid" dest="lid"/>
						<mapping source="lEntity" dest="lEntity"/>
						<mapping source="rid" dest="rid"/>
						<mapping source="rEntity" dest="rEntity"/>
						<mapping source="associatedCase_id" dest="associatedCase_id"/>
				
					
						
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tCaseCrossReference"/>
				</action>
			
			
			</actions>
		</stage> 			
		
			
		<stage num="576" mode="Serial" desc="Load Judgment" enabled="true">
			<actions>
			
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Judgment" enabled="true">
					<source database="${sql.staging.db}" schema="dbo" table="judgmentSnt_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT *, cc.tCase_id FROM 
							(SELECT 
							'conv'  as createUserRealName,
							'conv'  as createUsername ,
							@today as dateCreated,
							'conv'  as lastUpdateUserRealName,
							'conv' as lastUpdateUsername ,
							@today as lastUpdated,
							0 as optlock, 
							COALESCE(sentenceDate, GETDATE()) as judgmentDate,
							'CONV' as judgmentType,
							caseKy,
							j.idKey,
							'CONV' as status,
							ROW_NUMBER() OVER(PARTITION BY cfAdditionalInfo, caseKy ORDER BY j.idKey) rnk
							FROM cnmiStaging.dbo.judgmentSnt_conv j) t1
							INNER JOIN cnmiStaging.dbo.case_conv cc
							ON t1.caseKy = cc.idKey
							WHERE rnk = 1 
						
						
						
						

						]]>							
						</param>	
							<param name="idColumnName">tJudgment_id</param>
							<param name="whereColumnName">idKey</param>						
					</params>
					<mappings>
						
						<mapping source="optlock" dest="optlock"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="judgmentType" dest="judgmentType"/>
						<mapping source="judgmentDate" dest="judgmentDate"/>
						<mapping source="status" dest="status"/>
						<mapping source="tCase_id" dest="case_id"/>
					
						
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tJudgment"/>
				</action>
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Judgment">
					<source database="${sql.staging.db}" schema="dbo" table="judgmentSnt_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
							DECLARE @today datetime; SET @today = GETDATE();
							SELECT * FROM 
							
							(SELECT 
							'conv'  as createUserRealName,
							'conv'  as createUsername ,
							@today as dateCreated,
							'conv'  as lastUpdateUserRealName,
							'conv' as lastUpdateUsername ,
							@today as lastUpdated,
							0 as optlock,
							LEFT(cfAdditionalInfo, 512) as memo,
							tJudgment_id,
							j.id,
							j.idKey,
							ROW_NUMBER() OVER(PARTITION BY cfAdditionalInfo, caseKy ORDER BY j.idKey) rnk 
							FROM cnmiStaging.dbo.judgmentSnt_conv j) t1
							WHERE rnk = 1 and tJudgment_id IS NOT NULL
						
						

						]]>							
						</param>	
							<param name="idColumnName">tJudgmentAward_id</param>
							<param name="whereColumnName">idKey</param>						
					</params>
					<mappings>
						
						<mapping source="optlock" dest="optlock"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="tJudgment_id" dest="judgment_id"/>
				
					
						
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tJudgmentAward"/>
				</action>
			
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Judgment">
					<source database="${sql.staging.db}" schema="dbo" table="judgmentSnt_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						
						SELECT pj.tJudgment_id as tJudgmentAward_id, cj.tJudgmentAward_id as childAwards_id FROM cnmiStaging.dbo.judgmentSnt_conv pj
						INNER JOIN cnmiStaging.dbo.judgmentSnt_conv cj
						ON pj.id = cj.sentenceId
						WHERE pj.tJudgment_id IS NOT NULL AND cj.tJudgmentAward_id IS NOT NULL


						

						]]>							
						</param>						
					</params>
					<mappings>
						
						
						<mapping source="tJudgmentAward_id" dest="tJudgmentAward_id"/>
						<mapping source="childAwards_id" dest="childAwards_id"/>
				
					
						
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tJudgmentAward_tJudgmentAward"/>
				</action>
			
			
			</actions>
		</stage> 			
		
			
		<stage num="578" mode="Serial" desc="Load Case Special Status" enabled="true">
			<actions>
			
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Case Special Status" enabled="true">
					<source database="${sql.staging.db}" schema="dbo" table="specialStatus_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						
						
						SELECT ss.*, cc.tCase_id FROM cnmiStaging.dbo.specialStatus_conv ss
						INNER JOIN cnmiStaging.dbo.case_conv cc
						ON ss.case_id = cc.id
						

						]]>							
						</param>	
											
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="category" dest="category"/>
						<mapping source="endDate" dest="endDate"/>
						<mapping source="startDate" dest="startDate"/>
						<mapping source="status" dest="status"/>
						<mapping source="tCase_id" dest="case_id"/>
						<mapping source="convId" dest="convId"/>
						<mapping source="value" dest="value"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tSpecialStatus"/>
				</action>
				
			
			</actions>
		</stage> 			
		
			
		<stage num="580" mode="Serial" desc="Load Seal" enabled="true">
			<actions>
			
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Case Seal" enabled="true">
					<source database="${sql.staging.db}" schema="dbo" table="specialStatus_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						
						
						DECLARE @today datetime; SET @today = GETDATE();
						SELECT 
						'conv'  as createUserRealName,
						'conv'  as createUsername ,
						@today as dateCreated,
						'conv'  as lastUpdateUserRealName,
						'conv' as lastUpdateUsername ,
						@today as lastUpdated,
						0 as optlock,
						cs.*, cc.tCase_id FROM caseSeal2_conv cs
						INNER JOIN case_conv cc
						ON cs.case_id = cc.id
						

						]]>							
						</param>						
					</params>
					<mappings>
						
						<mapping source="optlock" dest="optlock"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="effectiveFrom" dest="effectiveFrom"/>
						<mapping source="effectiveTo" dest="effectiveTo"/>
						<mapping source="type" dest="type"/>
						<mapping source="tCase_id" dest="case_id"/>
					
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tCaseSeal"/>
				</action>
				
			
			</actions>
		</stage> 			
		
		<stage num="582" mode="Serial" desc="Load AKA" enabled="true">
			<actions>
			
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading AKA" enabled="true">
					<source database="${sql.staging.db}" schema="dbo" table="specialStatus_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						
						
						DECLARE @today datetime; SET @today = GETDATE();
						SELECT 
						COALESCE('conv', pr.createUserRealName)  as createUserRealName,
						COALESCE('conv', pr.createUsername) as createUsername ,
						COALESCE(@today, pr.dateCreated) as dateCreated,
						COALESCE('conv', pr.lastUpdateUserRealName) as lastUpdateUserRealName,
						COALESCE('conv', pr.lastUpdateUsername) as lastUpdateUsername ,
						COALESCE(@today, pr.lastUpdated) as lastUpdated,
						0 as optlock,
						pr.*,
						pc.tPerson_id
						FROM personRelationship_conv pr
						INNER JOIN person_conv pc
						ON pr.person_id = pc.id
						

						]]>							
						</param>						
					</params>
					<mappings>
						
						<mapping source="optlock" dest="optlock"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
				
						<mapping source="akaType" dest="akaType"/>
						<mapping source="tPerson_id" dest="associatedPerson_id"/>
						<mapping source="firstName" dest="firstName"/>
						<mapping source="middleName" dest="middleName"/>
						<mapping source="lastName" dest="lastName"/>
		
					
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tPersonAKA"/>
				</action>
				
			
			</actions>
		</stage> 			
		
		<stage num="584" mode="Serial" desc="Load Person Special Status" enabled="false">
			<actions>
			
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Person Special Status" enabled="true">
					<source database="${sql.staging.db}" schema="dbo" table="personSpecialStatus_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						
						
						DECLARE @today datetime; SET @today = GETDATE();
						SELECT 
						COALESCE(pss.createUserRealName, 'conv')  as createUserRealName,
						COALESCE(pss.createUsername, 'conv') as createUsername ,
						COALESCE(pss.dateCreated, @today) as dateCreated,
						COALESCE(pss.lastUpdateUserRealName, 'conv') as lastUpdateUserRealName,
						COALESCE(pss.lastUpdateUsername, 'conv') as lastUpdateUsername ,
						COALESCE(pss.lastUpdated, @today) as lastUpdated,
						0 as optlock,
						startDate = GETDATE(),
						pss.*,
						pc.tPerson_id
						FROM personSpecialStatus_conv pss
						INNER JOIN person_conv pc
						ON pss.associatedPerson_id = pc.id
						

						]]>							
						</param>						
					</params>
					<mappings>
						
					<mapping source="id" dest="id"/>
					<mapping source="accessLevel" dest="accessLevel"/>
					<mapping source="createUserRealName" dest="createUserRealName"/>
					<mapping source="createUsername" dest="createUsername"/>
					<mapping source="dateCreated" dest="dateCreated"/>
					<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
					<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
					<mapping source="lastUpdated" dest="lastUpdated"/>
					<mapping source="memo" dest="memo"/>
					<mapping source="optlock" dest="optlock"/>
					<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
					<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
					<mapping source="updateReason" dest="updateReason"/>
					<mapping source="endDate" dest="endDate"/>
					<mapping source="issuerCountry" dest="issuerCountry"/>
					<mapping source="issuerName" dest="issuerName"/>
					<mapping source="issuerState" dest="issuerState"/>
					<mapping source="specialStatusType" dest="specialStatusType"/>
					<mapping source="startDate" dest="startDate"/>
					<mapping source="status" dest="status"/>
					<mapping source="tPerson_id" dest="associatedPerson_id"/>
					<mapping source="category" dest="category"/>
					<mapping source="value" dest="value"/>
					<mapping source="convId" dest="convId"/>
					<mapping source="alert" dest="alert"/>
		
					
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tPersonSpecialStatus"/>
				</action>
				
			
			</actions>
		</stage> 			
		
		<stage num="586" mode="Serial" desc="Load Vehicle" enabled="true">
			<actions>
			
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Vehicle" enabled="true">
					<source database="${sql.staging.db}" schema="dbo" table="vehicle_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						
						
						DECLARE @today datetime; SET @today = GETDATE();
						SELECT 
						'conv' as createUserRealName,
						'conv' as createUsername,
						@today as dateCreated,
						'conv' as lastUpdateUserRealName,
						'conv' as lastUpdateUsername,
						@today as lastUpdated,
						0 as optlock,
						v.*,
						cc.tCase_id
						FROM vehicle_conv v
						INNER JOIN person_conv pc
						ON v.person_id = pc.id
						INNER JOIN case_conv cc
						ON pc.case_id = cc.id
						

						]]>							
						</param>						
					</params>
					<mappings>
						
					<mapping source="createUserRealName" dest="createUserRealName"/>
					<mapping source="createUsername" dest="createUsername"/>
					<mapping source="dateCreated" dest="dateCreated"/>
					<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
					<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
					<mapping source="lastUpdated" dest="lastUpdated"/>
					<mapping source="optlock" dest="optlock"/>
					
					<mapping source="vehicleType" dest="vehicleType"/>
					<mapping source="licensePlate" dest="licensePlate"/>
					<mapping source="model" dest="model"/>
					<mapping source="make" dest="make"/>
					<mapping source="color" dest="color"/>
					<mapping source="cfColor2" dest="cfColor2"/>
					<mapping source="registeredState" dest="registeredState"/>
					<mapping source="year" dest="year"/>
					<mapping source="tCase_id" dest="case_id"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tVehicle"/>
				</action>
				
			
			</actions>
		</stage> 			
		
		<stage num="588" mode="Serial" desc="Load Warrant" enabled="true">
			<actions>
			
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Warrant" enabled="true">
					<source database="${sql.staging.db}" schema="dbo" table="warrant_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						
						
						DECLARE @today datetime; SET @today = GETDATE();
						SELECT 
						'conv' as createUserRealName,
						'conv' as createUsername,
						@today as dateCreated,
						'conv' as lastUpdateUserRealName,
						'conv' as lastUpdateUsername,
						@today as lastUpdated,
						0 as optlock,
						statusDate as startDate,
						'BW' as status,
						cc.tCase_id
						FROM case_conv cc
						WHERE status = 'BW'

						]]>							
						</param>						
					</params>
					<mappings>
						
					<mapping source="createUserRealName" dest="createUserRealName"/>
					<mapping source="createUsername" dest="createUsername"/>
					<mapping source="dateCreated" dest="dateCreated"/>
					<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
					<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
					<mapping source="lastUpdated" dest="lastUpdated"/>
					<mapping source="optlock" dest="optlock"/>
					
					<mapping source="startDate" dest="startDate"/>
					<mapping source="status" dest="status"/>
					<mapping source="tCase_id" dest="case_id"/>
				
					
		
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tSpecialStatus"/>
				</action>
				
			
			</actions>
		</stage> 			
		
		
		<stage num="598" mode="Serial" desc="Load Case Note" enabled="false">
				<actions>
				
					<action handler="SqlServer.Raw" desc="Update AttachedId" progresslabel="Update AttachedId" enabled="false">
					<source database="${sql.staging.db}" schema="dbo">
						<task handler="SqlServer.Script" desc="Update CaseNumber">
						<![CDATA[
						
						UPDATE cn 
						SET AttachedIdLd = tCaseAssignment_id
						FROM dbo.caseNote_conv cn
						LEFT JOIN dbo.caseAssignment_conv cas
						ON cn.attachedId = cas.id AND cs.caseKey = cn.caseKy;
						
						UPDATE cn 
						SET AttachedIdLd = tParty_id
						FROM dbo.caseNote_conv cn
						LEFT JOIN dbo.party_conv pty
						ON cn.attachedId = pty.id AND pty.caseKey = cn.caseKy;
						
						UPDATE cn 
						SET AttachedIdLd = tScheduledEvent_id
						FROM dbo.caseNote_conv cn
						LEFT JOIN dbo.scheduledEvent_conv se
						ON cn.attachedId = se.id AND se.caseKey = cn.caseKy;
					
						
						UPDATE cn 
						SET AttachedIdLd = tScheduledEvent_id
						FROM dbo.caseNote_conv cn
						LEFT JOIN dbo.checklistItem_conv cli
						ON cn.attachedId = cli.id AND cli.caseKey = cn.caseKy;
						
						UPDATE cn 
						SET AttachedIdLd = tDocument_id
						FROM dbo.caseNote_conv cn
						LEFT JOIN dbo.document_conv d
						ON cn.attachedId = d.id AND d.caseKey = cn.caseKy;
						
			
						
						
						
						
							
						]]>
						
						</task>
						
					</source>
				</action>
					

					
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Load Case Note">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	

							SELECT
							cn.*, cn.lastUpdated as noteDateLd, cc.tCase_id
							FROM cnmiStaging.dbo.caseNote_conv cn
							INNER JOIN cnmiStaging.dbo.case_conv cc
							ON cn.case_id = cc.id AND cn.caseKy = cc.idKey
							WHERE  attachedEntity <> 'com.sustain.cases.model.Tracking'

							
								
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="optlock" dest="optlock"/>
							<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
							<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
							<mapping source="updateReason" dest="updateReason"/>
							<mapping source="attachedEntity" dest="attachedEntity"/>
							<mapping source="attachedId" dest="attachedId"/>
							<mapping source="color" dest="color"/>
							<mapping source="completed" dest="completed"/>
							<mapping source="content" dest="content"/>
							<mapping source="dueDate" dest="dueDate"/>
							<mapping source="noteDateLd" dest="noteDate"/>
							<mapping source="sharedToAuthorityNames" dest="sharedToAuthorityNames"/>
							<mapping source="sharedToUsernames" dest="sharedToUsernames"/>
							<mapping source="sharingLevel" dest="sharingLevel"/>
							<mapping source="stripedContent" dest="stripedContent"/>
							<mapping source="title" dest="title"/>
							<mapping source="toDate" dest="toDate"/>
							<mapping source="type" dest="type"/>
							<mapping source="username" dest="username"/>
							<mapping source="assignedUser_id" dest="assignedUser_id"/>
							<mapping source="tCase_id" dest="case_id"/>
							<mapping source="convId" dest="convId"/>
							<mapping source="convId_table" dest="convId_table"/>
						</mappings>
						<destination database="${sql.ecourt.db}" schema="ecourt" table="tCaseNote"/>
					</action>
					
						
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Case Note - Tracking" enabled = "false">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	

							SELECT
							cn.*, cc.tCase_id 
							FROM cnmistaging.dbo.caseNote_conv cn
							LEFT JOIN cnmiStaging.dbo.case_conv cc
							ON cn.case_id = cc.id 
							WHERE attachedEntity = 'com.sustain.cases.model.Tracking'
					
				
							

							
								
							]]>
							</param>
						</params>
						<mappings>
			
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="optlock" dest="optlock"/>
							<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
							<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
							<mapping source="updateReason" dest="updateReason"/>
							<mapping source="attachedEntity" dest="attachedEntity"/>
							<mapping source="attachedId" dest="attachedId"/>
							<mapping source="color" dest="color"/>
							<mapping source="completed" dest="completed"/>
							<mapping source="content" dest="content"/>
							<mapping source="dueDate" dest="dueDate"/>
							<mapping source="noteDate" dest="noteDate"/>
							<mapping source="sharedToAuthorityNames" dest="sharedToAuthorityNames"/>
							<mapping source="sharedToUsernames" dest="sharedToUsernames"/>
							<mapping source="sharingLevel" dest="sharingLevel"/>
							<mapping source="stripedContent" dest="stripedContent"/>
							<mapping source="title" dest="title"/>
							<mapping source="toDate" dest="toDate"/>
							<mapping source="type" dest="type"/>
							<mapping source="username" dest="username"/>
							<mapping source="assignedUser_id" dest="assignedUser_id"/>
							<mapping source="tCase_id" dest="case_id"/>
							<mapping source="convId" dest="convId"/>
							<mapping source="convId_table" dest="convId_table"/>
							<mapping source="cfCorrespondenceType" dest="cfCorrespondenceType"/>
						</mappings>
						<destination database="${sql.ecourt.db}" schema="ecourt" table="tCaseNote"/>
					</action>-
			
					
				</actions>
			</stage> 
			
		
		<stage num="599" mode="Serial" desc="Load Case Cross Reference" enabled="true">
			<actions>
				
						
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Case Assignment - OtherNumber">
					<source database="${sql.staging.db}" schema="dbo" table="caseAssignment_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						SELECT 
						type = 'REL',
						COALESCE(xr.createUserRealName, 'conv' ) as createUserRealName,
						COALESCE(xr.createUsername, 'conv' ) as createUsername ,
						COALESCE(xr.dateCreated, GETDATE()) as dateCreated,
						COALESCE(xr.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
						COALESCE(xr.lastUpdateUsername, 'conv') as lastUpdateUsername ,
						COALESCE(xr.lastUpdated, GETDATE()) as lastUpdated,
						*, le.tCaseAssignment_id, re.tCaseOtherNumber_id,
						cc.tCase_id		
						FROM CNMI_eCourt_full.ecourt.tCaseCrossReference xr
						LEFT JOIN cnmiStaging.dbo.caseAssignment_conv le
						ON xr.lid = le.id AND xr.associatedCase_id = le.case_id
						LEFT JOIN cnmiStaging.dbo.caseOtherNumber_conv re
						ON xr.rid = re.id AND xr.associatedCase_id = re.case_id
						LEFT JOIN cnmistaging.dbo.case_conv cc
						ON xr.associatedCase_id = cc.id 
						WHERE lEntity = 'com.sustain.cases.model.CaseAssignment' AND rentity = 'com.sustain.cases.model.OtherCaseNumber'
						
					
						]]>							
						</param>
				
												
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="date" dest="date"/>
						<mapping source="lEntity" dest="lEntity"/>
						<mapping source="tCaseAssignment_id" dest="lid"/>
						<mapping source="rEntity" dest="rEntity"/>
						<mapping source="tCaseOtherNumber_id" dest="rid"/>
						<mapping source="type" dest="type"/>
						<mapping source="tCase_id" dest="associatedCase_id"/>
						<mapping source="convId" dest="convId"/>
						<mapping source="convId_table" dest="convId_table"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tCaseCrossReference"/>
				</action>
				
					
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Case Assignment - Party">
					<source database="${sql.staging.db}" schema="dbo" table="caseAssignment_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						SELECT 
						type = 'REL',
						COALESCE(xr.createUserRealName, 'conv' ) as createUserRealName,
						COALESCE(xr.createUsername, 'conv' ) as createUsername ,
						COALESCE(xr.dateCreated, GETDATE()) as dateCreated,
						COALESCE(xr.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
						COALESCE(xr.lastUpdateUsername, 'conv') as lastUpdateUsername ,
						COALESCE(xr.lastUpdated, GETDATE()) as lastUpdated,
						*, le.tCaseAssignment_id, re.tParty_id,
						cc.tCase_id
						FROM CNMI_eCourt_full.ecourt.tCaseCrossReference xr
						LEFT JOIN cnmiStaging.dbo.caseAssignment_conv le
						ON xr.lid = le.id AND xr.associatedCase_id = le.case_id 
						LEFT JOIN cnmiStaging.dbo.party_conv re
						ON xr.rid = re.id AND xr.associatedCase_id = re.case_id
						LEFT JOIN cnmistaging.dbo.case_conv cc
						ON xr.associatedCase_id = cc.id 
						
						WHERE lEntity = 'com.sustain.cases.model.CaseAssignment' AND rentity = 'com.sustain.cases.model.Party'
					
					
						]]>							
						</param>
				
												
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="date" dest="date"/>
						<mapping source="lEntity" dest="lEntity"/>
						<mapping source="tCaseAssignment_id" dest="lid"/>
						<mapping source="rEntity" dest="rEntity"/>
						<mapping source="tParty_id" dest="rid"/>
						<mapping source="type" dest="type"/>
						<mapping source="tCase_id" dest="associatedCase_id"/>
						<mapping source="convId" dest="convId"/>
						<mapping source="convId_table" dest="convId_table"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tCaseCrossReference"/>
				</action>
				
							
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Charge-CaseAssignment">
					<source database="${sql.staging.db}" schema="dbo" table="caseAssignment_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						SELECT 
						type = 'REL',
						COALESCE(xr.createUserRealName, 'conv' ) as createUserRealName,
						COALESCE(xr.createUsername, 'conv' ) as createUsername ,
						COALESCE(xr.dateCreated, GETDATE()) as dateCreated,
						COALESCE(xr.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
						COALESCE(xr.lastUpdateUsername, 'conv') as lastUpdateUsername ,
						COALESCE(xr.lastUpdated, GETDATE()) as lastUpdated,
						*, le.tCharge_id, re.tCaseAssignment_id,
						cc.tCase_id
						FROM CNMI_eCourt_full.ecourt.tCaseCrossReference xr
						LEFT JOIN cnmiStaging.dbo.charge_conv le
						ON xr.lid = le.id AND xr.associatedCase_id = le.case_id
						LEFT JOIN cnmiStaging.dbo.caseAssignment_conv re
						ON xr.rid = re.id AND xr.associatedCase_id = re.case_id
						LEFT JOIN cnmistaging.dbo.case_conv cc
						ON xr.associatedCase_id = cc.id 
						WHERE lEntity = 'com.sustain.cases.model.Charge' AND rentity = 'com.sustain.cases.model.CaseAssignment'
						
					
						]]>							
						</param>
				
												
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="date" dest="date"/>
						<mapping source="lEntity" dest="lEntity"/>
						<mapping source="tCharge_id" dest="lid"/>
						<mapping source="rEntity" dest="rEntity"/>
						<mapping source="tCaseAssignment_id" dest="rid"/>
						<mapping source="type" dest="type"/>
						<mapping source="tCase_id" dest="associatedCase_id"/>
						<mapping source="convId" dest="convId"/>
						<mapping source="convId_table" dest="convId_table"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tCaseCrossReference"/>
				</action>
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Charge-Party">
					<source database="${sql.staging.db}" schema="dbo" table="caseAssignment_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						SELECT
						type = 'REL',
						cc.tCase_id,
						COALESCE(xr.createUserRealName, 'conv' ) as createUserRealName,
						COALESCE(xr.createUsername, 'conv' ) as createUsername ,
						COALESCE(xr.dateCreated, GETDATE()) as dateCreated,
						COALESCE(xr.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
						COALESCE(xr.lastUpdateUsername, 'conv') as lastUpdateUsername ,
						COALESCE(xr.lastUpdated, GETDATE()) as lastUpdated,
						*, le.tCharge_id, re.tParty_id FROM CNMI_eCourt_full.ecourt.tCaseCrossReference xr
						LEFT JOIN cnmiStaging.dbo.charge_conv le
						ON xr.lid = le.id AND xr.associatedCase_id = le.case_id
						LEFT JOIN cnmiStaging.dbo.party_conv re
						ON xr.rid = re.id AND xr.associatedCase_id = re.case_id
						LEFT JOIN cnmistaging.dbo.case_conv cc
						ON xr.associatedCase_id = cc.id 
						WHERE lEntity = 'com.sustain.cases.model.Charge' AND rentity = 'com.sustain.cases.model.Party'
						
					
						]]>							
						</param>
				
												
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="date" dest="date"/>
						<mapping source="lEntity" dest="lEntity"/>
						<mapping source="tCharge_id" dest="lid"/>
						<mapping source="rEntity" dest="rEntity"/>
						<mapping source="tParty_id" dest="rid"/>
						<mapping source="type" dest="type"/>
						<mapping source="tCase_id" dest="associatedCase_id"/>
						<mapping source="convId" dest="convId"/>
						<mapping source="convId_table" dest="convId_table"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tCaseCrossReference"/>
				</action>
				
					
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="OtherCaseNumber-Charge">
					<source database="${sql.staging.db}" schema="dbo" table="caseAssignment_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						SELECT 
						type = 'REL',
						cc.tCase_id,
						COALESCE(xr.createUserRealName, 'conv' ) as createUserRealName,
						COALESCE(xr.createUsername, 'conv' ) as createUsername ,
						COALESCE(xr.dateCreated, GETDATE()) as dateCreated,
						COALESCE(xr.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
						COALESCE(xr.lastUpdateUsername, 'conv') as lastUpdateUsername ,
						COALESCE(xr.lastUpdated, GETDATE()) as lastUpdated,
						*, le.tCaseOtherNumber_id, re.tCharge_id FROM CNMI_eCourt_full.ecourt.tCaseCrossReference xr
						LEFT JOIN cnmiStaging.dbo.caseOtherNumber_conv le
						ON xr.lid = le.id AND xr.associatedCase_id = le.case_id
						LEFT JOIN cnmiStaging.dbo.charge_conv re
						ON xr.rid = re.id AND xr.associatedCase_id = re.case_id
						LEFT JOIN cnmistaging.dbo.case_conv cc
						ON xr.associatedCase_id = cc.id 
						WHERE lEntity = 'com.sustain.cases.model.OtherCaseNumber' AND rentity = 'com.sustain.cases.model.Charge'
						
					
						]]>							
						</param>
				
												
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="date" dest="date"/>
						<mapping source="lEntity" dest="lEntity"/>
						<mapping source="tCaseOtherNumber_id" dest="lid"/>
						<mapping source="rEntity" dest="rEntity"/>
						<mapping source="tCharge_id" dest="rid"/>
						<mapping source="type" dest="type"/>
						<mapping source="tCase_id" dest="associatedCase_id"/>
						<mapping source="convId" dest="convId"/>
						<mapping source="convId_table" dest="convId_table"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tCaseCrossReference"/>
				</action>
				
							
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Party-Party">
					<source database="${sql.staging.db}" schema="dbo" table="caseAssignment_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						SELECT
						type = 'REL',
						cc.tCase_id,
						COALESCE(xr.createUserRealName, 'conv' ) as createUserRealName,
						COALESCE(xr.createUsername, 'conv' ) as createUsername ,
						COALESCE(xr.dateCreated, GETDATE()) as dateCreated,
						COALESCE(xr.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
						COALESCE(xr.lastUpdateUsername, 'conv') as lastUpdateUsername ,
						COALESCE(xr.lastUpdated, GETDATE()) as lastUpdated,
						*, le.tParty_id, re.tParty_id FROM CNMI_eCourt_full.ecourt.tCaseCrossReference xr
						LEFT JOIN cnmiStaging.dbo.party_conv le
						ON xr.lid = le.id AND xr.associatedCase_id = le.case_id
						LEFT JOIN cnmiStaging.dbo.party_conv re
						ON xr.rid = re.id AND xr.associatedCase_id = re.case_id
						LEFT JOIN cnmistaging.dbo.case_conv cc
						ON xr.associatedCase_id = cc.id 
						WHERE lEntity = 'com.sustain.cases.model.Party' AND rentity = 'com.sustain.cases.model.Party'
						
					
						]]>							
						</param>
				
												
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="date" dest="date"/>
						<mapping source="lEntity" dest="lEntity"/>
						<mapping source="tParty_id" dest="lid"/>
						<mapping source="rEntity" dest="rEntity"/>
						<mapping source="tParty_id" dest="rid"/>
						<mapping source="type" dest="type"/>
						<mapping source="tCase_id" dest="associatedCase_id"/>
						<mapping source="convId" dest="convId"/>
						<mapping source="convId_table" dest="convId_table"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tCaseCrossReference"/>
				</action>
				
									
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Ce_NonCollectibleFinancial-CaseAssignment">
					<source database="${sql.staging.db}" schema="dbo" table="caseAssignment_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						SELECT 
						type = 'REL',
						cc.tCase_id,
						COALESCE(xr.createUserRealName, 'conv' ) as createUserRealName,
						COALESCE(xr.createUsername, 'conv' ) as createUsername ,
						COALESCE(xr.dateCreated, GETDATE()) as dateCreated,
						COALESCE(xr.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
						COALESCE(xr.lastUpdateUsername, 'conv') as lastUpdateUsername ,
						COALESCE(xr.lastUpdated, GETDATE()) as lastUpdated,
						*, le.tCe_NonCollectibleFinancial_id, re.tCaseAssignment_id FROM CNMI_eCourt_full.ecourt.tCaseCrossReference xr
						LEFT JOIN cnmiStaging.dbo.tCe_NonCollectibleFinancial_conv le
						ON xr.lid = le.id AND xr.associatedCase_id = le.case_id
						LEFT JOIN cnmiStaging.dbo.caseAssignment_conv re
						ON xr.rid = re.id AND xr.associatedCase_id = re.case_id
						LEFT JOIN cnmistaging.dbo.case_conv cc
						ON xr.associatedCase_id = cc.id 
						WHERE lEntity = 'com.sustain.entities.custom.Ce_NonCollectibleFinancial' AND rentity = 'com.sustain.cases.model.CaseAssignment'
						
					
						]]>							
						</param>
				
												
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="date" dest="date"/>
						<mapping source="lEntity" dest="lEntity"/>
						<mapping source="tCe_NonCollectibleFinancial_id" dest="lid"/>
						<mapping source="rEntity" dest="rEntity"/>
						<mapping source="tCaseAssignment_id" dest="rid"/>
						<mapping source="type" dest="type"/>
						<mapping source="tCase_id" dest="associatedCase_id"/>
						<mapping source="convId" dest="convId"/>
						<mapping source="convId_table" dest="convId_table"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tCaseCrossReference"/>
				</action>
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Ce_NonCollectibleFinancial-Party">
					<source database="${sql.staging.db}" schema="dbo" table="caseAssignment_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						SELECT 
						type = 'REL',
						COALESCE(xr.createUserRealName, 'conv' ) as createUserRealName,
						COALESCE(xr.createUsername, 'conv' ) as createUsername ,
						COALESCE(xr.dateCreated, GETDATE()) as dateCreated,
						COALESCE(xr.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
						COALESCE(xr.lastUpdateUsername, 'conv') as lastUpdateUsername ,
						COALESCE(xr.lastUpdated, GETDATE()) as lastUpdated,
						*, le.tCe_NonCollectibleFinancial_id, re.tParty_id FROM CNMI_eCourt_full.ecourt.tCaseCrossReference xr
						LEFT JOIN cnmiStaging.dbo.tCe_NonCollectibleFinancial_conv le
						ON xr.lid = le.id AND xr.associatedCase_id = le.case_id
						LEFT JOIN cnmiStaging.dbo.party_conv re
						ON xr.rid = re.id AND xr.associatedCase_id = re.case_id
						WHERE lEntity = 'com.sustain.entities.custom.Ce_NonCollectibleFinancial' AND rentity = 'com.sustain.cases.model.Party'
						
					
						]]>							
						</param>
				
												
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="date" dest="date"/>
						<mapping source="lEntity" dest="lEntity"/>
						<mapping source="tCe_NonCollectibleFinancial_id" dest="lid"/>
						<mapping source="rEntity" dest="rEntity"/>
						<mapping source="tParty_id" dest="rid"/>
						<mapping source="type" dest="type"/>
						<mapping source="associatedCase_id" dest="associatedCase_id"/>
						<mapping source="convId" dest="convId"/>
						<mapping source="convId_table" dest="convId_table"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tCaseCrossReference"/>
				</action>
				
				
			</actions>
		</stage> 	
	
		<stage num="700" mode="Serial" desc="Load DocumetFolder" enabled="true">
			<actions>
			
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Document Folder" enabled="true">
					<source database="${sql.staging.db}" schema="dbo" table="documentFolder_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						
						
						DECLARE @today datetime; SET @today = GETDATE();
						SELECT 
						COALESCE(df.createUserRealName, 'conv' ) as createUserRealName,
						COALESCE(df.createUsername, 'conv' ) as createUsername ,
						COALESCE(df.dateCreated, @today) as dateCreated,
						COALESCE(df.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
						COALESCE(df.lastUpdateUsername, 'conv') as lastUpdateUsername ,
						COALESCE(df.lastUpdated, @today) as lastUpdated,
						0 as optlock,
						df.*,
						p.tPerson_id
						FROM documentFolder_conv df
						INNER JOIN person_conv p 
						ON df.person_id = p.id AND df.personKy = p.idKey

						]]>							
						</param>
						<param name="idColumnName">tDocumentFolder_id</param>
						<param name="whereColumnName">idKey</param>	
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="name" dest="name"/>
						<mapping source="case_id" dest="case_id"/>
						<mapping source="parentFolder_id" dest="parentFolder_id"/>
						<mapping source="tPerson_id" dest="person_id"/>
						<mapping source="subCase_id" dest="subCase_id"/>
						<mapping source="convId" dest="convId"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tDocumentFolder"/>
				</action>
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Document Folder" enabled="true">
					<source database="${sql.staging.db}" schema="dbo" table="documentFolder_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						
						
						DECLARE @today datetime; SET @today = GETDATE();
						SELECT 
						COALESCE(df.createUserRealName, 'conv' ) as createUserRealName,
						COALESCE(df.createUsername, 'conv' ) as createUsername ,
						COALESCE(df.dateCreated, @today) as dateCreated,
						COALESCE(df.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
						COALESCE(df.lastUpdateUsername, 'conv') as lastUpdateUsername ,
						COALESCE(df.lastUpdated, @today) as lastUpdated,
						0 as optlock,
						df.*,
						c.tCase_id
						FROM documentFolder_conv df
						INNER JOIN case_conv c
						ON df.case_id = c.id AND df.caseKy = c.idKey
					

						]]>							
						</param>
						<param name="idColumnName">tDocumentFolder_id</param>
						<param name="whereColumnName">idKey</param>	
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="name" dest="name"/>
						<mapping source="tCase_id" dest="case_id"/>
						<mapping source="parentFolder_id" dest="parentFolder_id"/>
					<!--	<mapping source="tPerson_id" dest="person_id"/> -->
						<mapping source="subCase_id" dest="subCase_id"/>
						<mapping source="convId" dest="convId"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tDocumentFolder"/>
				</action>
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Document Folder" enabled="true">
					<source database="${sql.staging.db}" schema="dbo" table="documentFolder_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						
						
						DECLARE @today datetime; SET @today = GETDATE();
						SELECT 
						COALESCE(df.createUserRealName, 'conv' ) as createUserRealName,
						COALESCE(df.createUsername, 'conv' ) as createUsername ,
						COALESCE(df.dateCreated, @today) as dateCreated,
						COALESCE(df.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
						COALESCE(df.lastUpdateUsername, 'conv') as lastUpdateUsername ,
						COALESCE(df.lastUpdated, @today) as lastUpdated,
						0 as optlock,
						df.*,
						pf.tDocumentFolder_id as parentFolder
						FROM documentFolder_conv df
						INNER JOIN documentFolder_conv pf
						ON df.parentFolder_id = pf.id 
					

						]]>							
						</param>
						<param name="idColumnName">tDocumentFolder_id</param>
						<param name="whereColumnName">idKey</param>	
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="name" dest="name"/>
				<!---		<mapping source="tCase_id" dest="case_id"/> -->
						<mapping source="parentFolder" dest="parentFolder_id"/>
			<!--			<mapping source="tPerson_id" dest="person_id"/> -->
						<mapping source="subCase_id" dest="subCase_id"/>
						<mapping source="convId" dest="convId"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tDocumentFolder"/>
				</action>
				
			
			</actions>
		</stage> 			
		
		
		<stage num="702" mode="Serial" desc="Load Document" enabled="true">
			<actions>
			
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Document Folder" enabled="true">
					<source database="${sql.staging.db}" schema="dbo" table="document_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						
						
						DECLARE @today datetime; SET @today = GETDATE();
						SELECT 
						COALESCE(d.createUserRealName, 'conv' ) as createUserRealName,
						COALESCE(d.createUsername, 'conv' ) as createUsername ,
						COALESCE(d.dateCreated, @today) as dateCreated,
						COALESCE(d.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
						COALESCE(d.lastUpdateUsername, 'conv') as lastUpdateUsername ,
						COALESCE(d.lastUpdated, @today) as lastUpdated,
						0 as optlock,
						'COMPLETE' as storageStatusLd,
						's3-idm' as storageTypeLd,
						docDefLd = 
						CASE
						WHEN ddf.id IS NOT NULL THEN ddf.id
						ELSE (SELECT id FROM  cnmieCourtConv.ecourt.tDocDef WHERE number = 'UND1')
						END,
						d.*,
						cc.tCase_id,
						df.tDocumentFolder_id
						FROM document_conv d
						INNER JOIN case_conv cc
						ON d.case_id = cc.id AND cc.idKey = d.caseKey
						LEFT JOIN cnmieCourtConv.ecourt.tDocDef ddf
						ON d.docNumber = ddf.number
						LEFT JOIN documentFolder_conv df
						ON d.folder_id = df.id AND d.caseKey = df.caseKy

						]]>							
						</param>
						<param name="idColumnName">tDocument_id</param>
						<param name="whereColumnName">idKey</param>							
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="attachmentMethod" dest="attachmentMethod"/>
						<mapping source="batch" dest="batch"/>
						<mapping source="batchSource" dest="batchSource"/>
						<mapping source="customDocPropsStatus" dest="customDocPropsStatus"/>
						<mapping source="dateFiled" dest="dateFiled"/>
						<mapping source="dateReceived" dest="dateReceived"/>
						<mapping source="dispositionDate" dest="dispositionDate"/>
						<mapping source="dispositionType" dest="dispositionType"/>
						<mapping source="effectiveStatus" dest="effectiveStatus"/>
						<mapping source="effectiveStatusDate" dest="effectiveStatusDate"/>
						<mapping source="exParte" dest="exParte"/>
						<mapping source="favorite" dest="favorite"/>
						<mapping source="filedByMethod" dest="filedByMethod"/>
						<mapping source="filedByName" dest="filedByName"/>
						<mapping source="filedByText" dest="filedByText"/>
						<mapping source="filedByType" dest="filedByType"/>
						<mapping source="indexPublishFailedCount" dest="indexPublishFailedCount"/>
						<mapping source="indexPublishFailedError" dest="indexPublishFailedError"/>
						<mapping source="indexPublished" dest="indexPublished"/>
						<mapping source="intendedToAmend" dest="intendedToAmend"/>
						<mapping source="mailingDate" dest="mailingDate"/>
						<mapping source="nameExact" dest="nameExact"/>
						<mapping source="nameExtension" dest="nameExtension"/>
						<mapping source="numberOfPages" dest="numberOfPages"/>
						<mapping source="numberOfUnits" dest="numberOfUnits"/>
						<mapping source="numberOfVolumes" dest="numberOfVolumes"/>
						<mapping source="onDemand" dest="onDemand"/>
						<mapping source="originalFileName" dest="originalFileName"/>
						<mapping source="partNumber" dest="partNumber"/>
						<mapping source="reason" dest="reason"/>
						<mapping source="redactedOn" dest="redactedOn"/>
						<mapping source="referenceDocId" dest="referenceDocId"/>
						<mapping source="refersToText" dest="refersToText"/>
						<mapping source="relatedHearingText" dest="relatedHearingText"/>
						<mapping source="relatedToText" dest="relatedToText"/>
						<mapping source="reportCode" dest="reportCode"/>
						<mapping source="requiresService" dest="requiresService"/>
						<mapping source="reservationReceiptNumber" dest="reservationReceiptNumber"/>
						<mapping source="reviewStatus" dest="reviewStatus"/>
						<mapping source="reviewStatusDate" dest="reviewStatusDate"/>
						<mapping source="scanId" dest="scanId"/>
						<mapping source="searchable" dest="searchable"/>
						<mapping source="serviceCost" dest="serviceCost"/>
						<mapping source="serviceDue" dest="serviceDue"/>
						<mapping source="serviceStatus" dest="serviceStatus"/>
						<mapping source="serviceStatusDate" dest="serviceStatusDate"/>
						<mapping source="serviceType" dest="serviceType"/>
						<mapping source="signedByName" dest="signedByName"/>
						<mapping source="status" dest="status"/>
						<mapping source="statusDate" dest="statusDate"/>
						<mapping source="storageId" dest="storageId"/>
						<mapping source="storageMimeType" dest="storageMimeType"/>
						<mapping source="storagePageCount" dest="storagePageCount"/>
						<mapping source="storageRev" dest="storageRev"/>
						<mapping source="storageSize" dest="storageSize"/>
						<mapping source="storageStatusLd" dest="storageStatus"/>
						<mapping source="storageTypeLd" dest="storageType"/>
						<mapping source="task" dest="task"/>
						<mapping source="type" dest="type"/>
						<mapping source="unitType" dest="unitType"/>
						<mapping source="untimely" dest="untimely"/>
						<mapping source="wordPropsError" dest="wordPropsError"/>
						<mapping source="workQueueStatus" dest="workQueueStatus"/>
						<mapping source="tCase_id" dest="case_id"/>
						<mapping source="docDefLd" dest="docDef_id"/>
						<mapping source="documentEFilingData_id" dest="documentEFilingData_id"/>
						<mapping source="exhibit_id" dest="exhibit_id"/>
						<mapping source="feeWaiver_id" dest="feeWaiver_id"/>
						<mapping source="tDocumentFolder_id" dest="folder_id"/>
						<mapping source="subCase_id" dest="subCase_id"/>
						<mapping source="submission_id" dest="submission_id"/>
						<mapping source="convId" dest="convId"/>
						<mapping source="amount1" dest="amount1"/>
						<mapping source="amount2" dest="amount2"/>
						<mapping source="category" dest="category"/>
						<mapping source="location" dest="location"/>
						<mapping source="notes" dest="notes"/>
						<mapping source="priority" dest="priority"/>
						<mapping source="availableOnline" dest="availableOnline"/>
						<mapping source="joinStatus" dest="joinStatus"/>
						<mapping source="reminder" dest="reminder"/>
						<mapping source="expirationDate" dest="expirationDate"/>
						<mapping source="submissionDate" dest="submissionDate"/>
						<mapping source="submissionMethod" dest="submissionMethod"/>
						<mapping source="printEndorsementChecked" dest="printEndorsementChecked"/>
						<mapping source="externalReferenceId" dest="externalReferenceId"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tDocument"/>
				</action>
				
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Document Folder" enabled="true">
					<source database="${sql.staging.db}" schema="dbo" table="document_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						DECLARE @today datetime; SET @today = GETDATE();
						SELECT
						COALESCE('conv', ds.createUserRealName)  as createUserRealName,
						COALESCE('conv', ds.createUsername) as createUsername ,
						COALESCE(@today, ds.dateCreated) as dateCreated,
						COALESCE('conv', ds.lastUpdateUserRealName) as lastUpdateUserRealName,
						COALESCE('conv', ds.lastUpdateUsername) as lastUpdateUsername ,
						COALESCE(@today, ds.lastUpdated) as lastUpdated,
						ds.*,
						d.tDocument_id
						FROM CNMI_ecourt_full.ecourt.tDocumentSeal ds
						INNER JOIN cnmiStaging.dbo.document_conv d 
						ON ds.sealedDocument_id = d.id

						]]>							
						</param>
											
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="effectiveFrom" dest="effectiveFrom"/>
						<mapping source="effectiveTo" dest="effectiveTo"/>
						<mapping source="type" dest="type"/>
						<mapping source="tDocument_id" dest="sealedDocument_id"/>
						<mapping source="convId" dest="convId"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tDocumentSeal"/>
				</action>
				
			
			</actions>
		</stage> 			
		
		<stage num="704" mode="Serial" desc="Load Person Document" enabled="true">
			<actions>
			
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Person Document" enabled="false">
					<source database="${sql.staging.db}" schema="dbo" table="documentPerson_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						
						
						DECLARE @today datetime; SET @today = GETDATE();
						SELECT 
						COALESCE(pd.createUserRealName, 'conv' ) as createUserRealName,
						COALESCE(pd.createUsername, 'conv' ) as createUsername ,
						COALESCE(pd.dateCreated, @today) as dateCreated,
						COALESCE(pd.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
						COALESCE(pd.lastUpdateUsername, 'conv') as lastUpdateUsername ,
						COALESCE(pd.lastUpdated, @today) as lastUpdated,
						0 as optlock,
						docDefLd = 
						CASE
						WHEN ddf.id IS NOT NULL THEN ddf.id
						ELSE (SELECT id FROM  cnmieCourtConv.ecourt.tDocDef WHERE number = 'UND1')
						END,
						pd.* 
						FROM cnmiStaging.dbo.documentPerson_conv pd
						LEFT JOIN cnmieCourtConv.ecourt.tDocDef ddf
						ON pd.docNumber = ddf.number
						INNER JOIN (SELECT tPerson_id, id, ROW_NUMBER OVER(PARTITION BY id ORDER BY tPerson_id ASC) rnk FROM cnmiStaging.dbo.person_conv) p 
						ON pd.person_id = p.id AND p.rnk =1 
						 
						]]>							
						</param>
												
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="attachmentMethod" dest="attachmentMethod"/>
						<mapping source="dateFiled" dest="dateFiled"/>
						<mapping source="dateReceived" dest="dateReceived"/>
						<mapping source="filedByType" dest="filedByType"/>
						<mapping source="intendedToAmend" dest="intendedToAmend"/>
						<mapping source="mailingDate" dest="mailingDate"/>
						<mapping source="nameExact" dest="nameExact"/>
						<mapping source="nameExtension" dest="nameExtension"/>
						<mapping source="originalFileName" dest="originalFileName"/>
						<mapping source="scanId" dest="scanId"/>
						<mapping source="serviceType" dest="serviceType"/>
						<mapping source="status" dest="status"/>
						<mapping source="statusDate" dest="statusDate"/>
						<mapping source="storageId" dest="storageId"/>
						<mapping source="storageMimeType" dest="storageMimeType"/>
						<mapping source="storageRev" dest="storageRev"/>
						<mapping source="storageSize" dest="storageSize"/>
						<mapping source="storageStatus" dest="storageStatus"/>
						<mapping source="storageType" dest="storageType"/>
						<mapping source="type" dest="type"/>
						<mapping source="docDefLd" dest="docDef_id"/>
						<mapping source="folder_id" dest="folder_id"/>
						<mapping source="person_id" dest="person_id"/>
						<mapping source="category" dest="category"/>
						<mapping source="notes" dest="notes"/>
						<mapping source="convId" dest="convId"/>
						<mapping source="amount1" dest="amount1"/>
						<mapping source="amount2" dest="amount2"/>
						<mapping source="location" dest="location"/>
						<mapping source="priority" dest="priority"/>
						<mapping source="sealed" dest="sealed"/>
						<mapping source="customDocPropsStatus" dest="customDocPropsStatus"/>
						<mapping source="redactedOn" dest="redactedOn"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tPersonDocument"/>
				</action>
			</actions>	
			
		</stage> 		
		
			
		<stage num="706" mode="Serial" desc="Load Person Image" enabled="true">
			<actions>
			
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Person Document" enabled="true">
					<source database="${sql.staging.db}" schema="dbo" table="personImage_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						
						
						DECLARE @today datetime; SET @today = GETDATE();
						SELECT 
						COALESCE(pri.createUserRealName, 'conv' ) as createUserRealName,
						COALESCE(pri.createUsername, 'conv' ) as createUsername ,
						COALESCE(pri.dateCreated, @today) as dateCreated,
						COALESCE(pri.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
						COALESCE(pri.lastUpdateUsername, 'conv') as lastUpdateUsername ,
						COALESCE(pri.lastUpdated, @today) as lastUpdated,
						0 as optlock,
						pri.* 
						FROM cnmiStaging.dbo.personImage_conv pri
					

						]]>							
						</param>
												
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="optlock" dest="optlock"/>
						<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
						<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
						<mapping source="updateReason" dest="updateReason"/>
						<mapping source="dateTaken" dest="dateTaken"/>
						<mapping source="description" dest="description"/>
						<mapping source="image" dest="image"/>
						<mapping source="imageFileName" dest="imageFileName"/>
						<mapping source="source" dest="source"/>
						<mapping source="type" dest="type"/>
						<mapping source="associatedPerson_id" dest="associatedPerson_id"/>
						<mapping source="convId" dest="convId"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tPersonImage"/>
				</action>
			</actions>	
			
		</stage> 		
		
		<stage num="708" mode="Serial" desc="Load Person Document" enabled="true">
			<actions>
			
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading Person Document" enabled="true">
					<source database="${sql.staging.db}" schema="dbo" table="personDocument_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						
						
						DECLARE @today datetime; SET @today = GETDATE();
						SELECT 
						COALESCE(pd.createUserRealName, 'conv' ) as createUserRealName,
						COALESCE(pd.createUsername, 'conv' ) as createUsername ,
						COALESCE(pd.dateCreated, @today) as dateCreated,
						COALESCE(pd.lastUpdateUserRealName, 'conv' ) as lastUpdateUserRealName,
						COALESCE(pd.lastUpdateUsername, 'conv') as lastUpdateUsername ,
						COALESCE(pd.lastUpdated, @today) as lastUpdated,
						0 as optlock,
						storageTypeLd = 's3-idm',
						storageStatusLd = 'COMPLETE',
						pd.*, t1.tPerson_id  
						FROM cnmiStaging.dbo.documentPerson_conv pd
						INNER JOIN (SELECT  ROW_NUMBER() OVER(PARTITION BY pc.id ORDER BY pc.tPerson_id) rnk, pc.id, pc.tPerson_id FROM cnmiStaging.dbo.person_conv pc LEFT JOIN cnmiStaging.dbo.case_conv cc ON pc.case_id = cc.id ) t1
						ON pd.person_id = t1.id AND rnk =1
					

						]]>							
						</param>
							<param name="idColumnName">tPersonDocument_id</param>
							<param name="whereColumnName">idKey</param>	
					</params>
					<mappings>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
							<mapping source="memo" dest="memo"/>
							<mapping source="optlock" dest="optlock"/>
							<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
							<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
							<mapping source="updateReason" dest="updateReason"/>
							<mapping source="attachmentMethod" dest="attachmentMethod"/>
							<mapping source="dateFiled" dest="dateFiled"/>
							<mapping source="dateReceived" dest="dateReceived"/>
							<mapping source="filedByType" dest="filedByType"/>
							<mapping source="intendedToAmend" dest="intendedToAmend"/>
							<mapping source="mailingDate" dest="mailingDate"/>
							<mapping source="nameExact" dest="nameExact"/>
							<mapping source="nameExtension" dest="nameExtension"/>
							<mapping source="originalFileName" dest="originalFileName"/>
							<mapping source="scanId" dest="scanId"/>
							<mapping source="serviceType" dest="serviceType"/>
							<mapping source="status" dest="status"/>
							<mapping source="statusDate" dest="statusDate"/>
							<mapping source="storageId" dest="storageId"/>
							<mapping source="storageMimeType" dest="storageMimeType"/>
							<mapping source="storageRev" dest="storageRev"/>
							<mapping source="storageSize" dest="storageSize"/>
							<mapping source="storageStatusLd" dest="storageStatus"/>
							<mapping source="storageTypeLd" dest="storageType"/>
							<mapping source="type" dest="type"/>
							<mapping source="docDef_id" dest="docDef_id"/>
						<!--	<mapping source="folder_id" dest="folder_id"/> -->
							<mapping source="tPerson_id" dest="person_id"/>
							<mapping source="category" dest="category"/>
							<mapping source="notes" dest="notes"/>
							<mapping source="convId" dest="convId"/>
							<mapping source="amount1" dest="amount1"/>
							<mapping source="amount2" dest="amount2"/>
							<mapping source="location" dest="location"/>
							<mapping source="priority" dest="priority"/>
							<mapping source="sealed" dest="sealed"/>
							<mapping source="customDocPropsStatus" dest="customDocPropsStatus"/>
							<mapping source="redactedOn" dest="redactedOn"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tPersonDocument"/>
				</action>
			</actions>	
			
		</stage> 		
		
		<stage num="799" mode="Serial" desc="Load Case Note" enabled="true">
				<actions>
				
					<action handler="SqlServer.Raw" desc="Update AttachedId" progresslabel="Update AttachedId" enabled="true">
					<source database="${sql.staging.db}" schema="dbo">
						<task handler="SqlServer.Script" desc="Update CaseNumber">
						<![CDATA[
						
						UPDATE cn 
						SET AttachedIdLd = tCaseAssignment_id
						FROM dbo.caseNote_conv cn
						LEFT JOIN dbo.caseAssignment_conv cas
						ON cn.attachedId = cas.id AND cas.caseKey = cn.caseKy
						WHERE attachedEntity = 'com.sustain.cases.model.CaseAssignment'
						
						UPDATE cn 
						SET AttachedIdLd = tParty_id
						FROM dbo.caseNote_conv cn
						LEFT JOIN dbo.party_conv pty
						ON cn.attachedId = pty.id AND pty.caseKey = cn.caseKy
						WHERE attachedEntity = 'com.sustain.cases.model.Party';
						
						UPDATE cn 
						SET AttachedIdLd = tScheduledEvent_id
						FROM dbo.caseNote_conv cn
						LEFT JOIN dbo.scheduledEvent_conv se
						ON cn.attachedId = se.id AND se.caseKey = cn.caseKy
						WHERE attachedEntity = 'com.sustain.calendar.model.ScheduledEvent'
						;
					
						
						UPDATE cn 
						SET AttachedIdLd = tCheckListItem_id
						FROM dbo.caseNote_conv cn
						LEFT JOIN dbo.checklistItem_conv cli
						ON cn.attachedId = cli.id AND cli.caseKey = cn.caseKy
						WHERE attachedEntity = 'com.sustain.checklist.model.CheckListItem';
						
						
						
						UPDATE cn 
						SET AttachedIdLd = tDocument_id
						FROM dbo.caseNote_conv cn
						LEFT JOIN dbo.document_conv d
						ON cn.attachedId = d.id AND d.caseKey = cn.caseKy
						WHERE attachedEntity = 'com.sustain.document.model.Document'
						;
						
							
						--UPDATE cn 
						--SET noteDate = tr.startDate
						--FROM  dbo.caseNote_conv cn
						--LEFT JOIN CNMI_eCourt_full.ecourt.tTracking tr
						--ON cn.attachedId = tr.id ;
						
						UPDATE cn 
						SET noteDate = se.startDateTime
						FROM  dbo.caseNote_conv cn
						LEFT JOIN CNMI_eCourt_full.ecourt.tScheduledEvent se
						ON cn.attachedId = se.id
						WHERE attachedEntity = 'com.sustain.calendar.model.ScheduledEvent';
						
						
							
						UPDATE cnmieCourtConv.ecourt.tDocument
						SET
						storageMimeType =
						CASE
							WHEN extension IN ('png', 'jpeg', 'gif', 'jpg', 'bmp') THEN 'image' 
							WHEN extension IN ('pdf', 'PDF') THEN  'application/pdf'
							WHEN extension IN ('TIF', 'tif', 'tiff', 'TIFF') THEN 'image/tiff' 
							WHEN extension IN ('rtf', 'RTF') THEN 'application/rtf' 
							WHEN extension IN ('doc', 'dot', 'DOC', 'DOT') THEN 'application/msword' 
							WHEN extension IN ('docx', 'DOCX') THEN 'application/vnd.openxmlformats-officedocument.wordprocessingml.document' 
							WHEN extension IN ('dotx', 'DOTX') THEN 'application/vnd.openxmlformats-officedocument.wordprocessingml.template'
							WHEN extension IN ('docm', 'DOCM', 'dotm', 'DOTM') THEN 'application/vnd.ms-word.document.macroEnabled.12' 
							WHEN extension IN ('xls', 'xlt', 'xla', 'XLS', 'XLT', 'XLA') THEN 'application/vnd.ms-excel'
							WHEN extension IN ('xlsx', 'XLSX') THEN 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'
							WHEN extension IN ('xltx', 'XLTX') THEN 'application/vnd.openxmlformats-officedocument.spreadsheetml.template' 
							WHEN extension IN ('xlsm', 'XLSM') THEN 'application/vnd.ms-excel.sheet.macroEnabled.12' 
							WHEN extension IN ('xltm', 'XLTM') THEN 'application/vnd.ms-excel.template.macroEnabled.12' 
							WHEN extension IN ('xlam', 'XLAM') THEN 'application/vnd.ms-excel.addin.macroEnabled.12' 
							WHEN extension IN ('xlsb', 'XLSB') THEN 'application/vnd.ms-excel.sheet.binary.macroEnabled.12'
							WHEN extension IN ('ppt', 'pot', 'pps', 'ppa', 'PPT', 'POT', 'PPS', 'PPA') THEN 'application/vnd.ms-powerpoint'
							WHEN extension IN ('pptx', 'PPTX') THEN 'application/vnd.openxmlformats-officedocument.presentationml.presentation' 
							WHEN extension IN ('potx', 'POTX') THEN 'application/vnd.openxmlformats-officedocument.presentationml.template'
							WHEN extension IN ('ppsx', 'PPSX') THEN 'application/vnd.openxmlformats-officedocument.presentationml.slideshow'
							WHEN extension IN ('ppam', 'PPAM') THEN 'application/vnd.ms-powerpoint.addin.macroEnabled.12'
							WHEN extension IN ('pptm', 'PPTM') THEN 'application/vnd.ms-powerpoint.presentation.macroEnabled.12'
							WHEN extension IN ('potm', 'POTM') THEN 'application/vnd.ms-powerpoint.template.macroEnabled.12'
							WHEN extension IN ('ppsm', 'PPSM') THEN 'application/vnd.ms-powerpoint.slideshow.macroEnabled.12'
							WHEN extension IN ('msg', 'MSG') THEN 'application/vnd.ms-outlook' 
							WHEN extension IN ('MP4', 'mp4') THEN 'video/mp4'
							WHEN extension IN ('WEBM', 'web') THEN 'video/webm'
							WHEN extension IN ('mp3') THEN 'audio/mpeg'
							WHEN extension IN ('wma', 'WMA') THEN 'audio/x-ms-wma'
							WHEN extension IN ('flv', 'FLV') THEN 'video/flv'
							WHEN extension IN ('wav', 'WAV') THEN 'audio/x-wav'
							WHEN extension IN ('MPG', 'mpg') THEN 'video/mpeg'
							WHEN extension IN ('csv', 'CSV') THEN 'text/csv'
							WHEN extension IN ('zip', 'ZIP') THEN 'application/zip'
							WHEN extension IN ('wmv', 'WMV') THEN 'video/x-generic'
							WHEN extension IN ('avi', 'AVI') THEN 'video/x-msvideo'
							WHEN extension IN ('mov', 'MOV') THEN 'video/x-generic'
							WHEN extension IN ('M4A', 'm4a') THEN 'application/octet-stream'
							ELSE NULL
						END
						FROM
						cnmieCourtConv.ecourt.tDocument d
						INNER JOIN
						(SELECT id, case_id, storageId, storageMimeType,
						extension =
						CASE
						WHEN CHARINDEX('.', REVERSE(storageId)) > 0 THEN REVERSE(LEFT(REVERSE(storageID),CHARINDEX('.',REVERSE(storageId)) -1))
						ELSE CONCAT(storageID, ': ', CHARINDEX('.', REVERSE(storageId)))
						END
						FROM cnmieCourtConv.ecourt.tDocument
						--WHERE createUsername = 'CONV' and storageMimeType IS NULL
						) t1
						ON t1.id = d.id
						INNER JOIN cnmieCourtConv.ecourt.tCase cs
						ON t1.case_id = cs.id;
						
															
						UPDATE cnmieCourtConv.ecourt.tPersonDocument
						SET
						storageMimeType =
						CASE
							WHEN extension IN ('png', 'jpeg', 'gif', 'jpg', 'bmp') THEN 'image' 
							WHEN extension IN ('pdf', 'PDF') THEN  'application/pdf'
							WHEN extension IN ('TIF', 'tif', 'tiff', 'TIFF') THEN 'image/tiff' 
							WHEN extension IN ('rtf', 'RTF') THEN 'application/rtf' 
							WHEN extension IN ('doc', 'dot', 'DOC', 'DOT') THEN 'application/msword' 
							WHEN extension IN ('docx', 'DOCX') THEN 'application/vnd.openxmlformats-officedocument.wordprocessingml.document' 
							WHEN extension IN ('dotx', 'DOTX') THEN 'application/vnd.openxmlformats-officedocument.wordprocessingml.template'
							WHEN extension IN ('docm', 'DOCM', 'dotm', 'DOTM') THEN 'application/vnd.ms-word.document.macroEnabled.12' 
							WHEN extension IN ('xls', 'xlt', 'xla', 'XLS', 'XLT', 'XLA') THEN 'application/vnd.ms-excel'
							WHEN extension IN ('xlsx', 'XLSX') THEN 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'
							WHEN extension IN ('xltx', 'XLTX') THEN 'application/vnd.openxmlformats-officedocument.spreadsheetml.template' 
							WHEN extension IN ('xlsm', 'XLSM') THEN 'application/vnd.ms-excel.sheet.macroEnabled.12' 
							WHEN extension IN ('xltm', 'XLTM') THEN 'application/vnd.ms-excel.template.macroEnabled.12' 
							WHEN extension IN ('xlam', 'XLAM') THEN 'application/vnd.ms-excel.addin.macroEnabled.12' 
							WHEN extension IN ('xlsb', 'XLSB') THEN 'application/vnd.ms-excel.sheet.binary.macroEnabled.12'
							WHEN extension IN ('ppt', 'pot', 'pps', 'ppa', 'PPT', 'POT', 'PPS', 'PPA') THEN 'application/vnd.ms-powerpoint'
							WHEN extension IN ('pptx', 'PPTX') THEN 'application/vnd.openxmlformats-officedocument.presentationml.presentation' 
							WHEN extension IN ('potx', 'POTX') THEN 'application/vnd.openxmlformats-officedocument.presentationml.template'
							WHEN extension IN ('ppsx', 'PPSX') THEN 'application/vnd.openxmlformats-officedocument.presentationml.slideshow'
							WHEN extension IN ('ppam', 'PPAM') THEN 'application/vnd.ms-powerpoint.addin.macroEnabled.12'
							WHEN extension IN ('pptm', 'PPTM') THEN 'application/vnd.ms-powerpoint.presentation.macroEnabled.12'
							WHEN extension IN ('potm', 'POTM') THEN 'application/vnd.ms-powerpoint.template.macroEnabled.12'
							WHEN extension IN ('ppsm', 'PPSM') THEN 'application/vnd.ms-powerpoint.slideshow.macroEnabled.12'
							WHEN extension IN ('msg', 'MSG') THEN 'application/vnd.ms-outlook' 
							WHEN extension IN ('MP4', 'mp4') THEN 'video/mp4'
							WHEN extension IN ('WEBM', 'web') THEN 'video/webm'
							WHEN extension IN ('mp3') THEN 'audio/mpeg'
							WHEN extension IN ('wma', 'WMA') THEN 'audio/x-ms-wma'
							WHEN extension IN ('flv', 'FLV') THEN 'video/flv'
							WHEN extension IN ('wav', 'WAV') THEN 'audio/x-wav'
							WHEN extension IN ('MPG', 'mpg') THEN 'video/mpeg'
							WHEN extension IN ('csv', 'CSV') THEN 'text/csv'
							WHEN extension IN ('zip', 'ZIP') THEN 'application/zip'
							WHEN extension IN ('wmv', 'WMV') THEN 'video/x-generic'
							WHEN extension IN ('avi', 'AVI') THEN 'video/x-msvideo'
							WHEN extension IN ('mov', 'MOV') THEN 'video/x-generic'
							WHEN extension IN ('M4A', 'm4a') THEN 'application/octet-stream'
							ELSE NULL
						END
						FROM
						cnmieCourtConv.ecourt.tPersonDocument d
						INNER JOIN
						(SELECT id, person_id, storageId, storageMimeType,
						extension =
						CASE
						WHEN CHARINDEX('.', REVERSE(storageId)) > 0 THEN REVERSE(LEFT(REVERSE(storageID),CHARINDEX('.',REVERSE(storageId)) -1))
						ELSE CONCAT(storageID, ': ', CHARINDEX('.', REVERSE(storageId)))
						END
						FROM cnmieCourtConv.ecourt.tPersonDocument
						--WHERE createUsername = 'CONV' and storageMimeType IS NULL
						) t1
						ON t1.id = d.id
						
						
						
						
						
							
						]]>
						
						</task>
						
					</source>
				</action>
					

					
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Load Case Note">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	

							SELECT
							cn.*, cn.lastUpdated as noteDateLd, cc.tCase_id, CAST(cn.id as varchar(255)) as memoLd,
							type_ld = COALESCE(type, 'CN')
							FROM cnmiStaging.dbo.caseNote_conv cn
							INNER JOIN cnmiStaging.dbo.case_conv cc
							ON cn.case_id = cc.id AND cn.caseKy = cc.idKey
							WHERE  srcTbl IS NULL

							
								
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="memoLd" dest="memo"/>
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
						<!--	<mapping source="memo" dest="memo"/> -->
							<mapping source="optlock" dest="optlock"/>
							<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
							<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
							<mapping source="updateReason" dest="updateReason"/>
							<mapping source="attachedEntity" dest="attachedEntity"/>
							<mapping source="AttachedIdLd" dest="attachedId"/>
							<mapping source="color" dest="color"/>
							<mapping source="completed" dest="completed"/>
							<mapping source="content" dest="content"/>
							<mapping source="dueDate" dest="dueDate"/>
							<mapping source="noteDateLd" dest="noteDate"/>
							<mapping source="sharedToAuthorityNames" dest="sharedToAuthorityNames"/>
							<mapping source="sharedToUsernames" dest="sharedToUsernames"/>
							<mapping source="sharingLevel" dest="sharingLevel"/>
							<mapping source="stripedContent" dest="stripedContent"/>
							<mapping source="title" dest="title"/>
							<mapping source="toDate" dest="toDate"/>
							<mapping source="type_ld" dest="type"/>
							<mapping source="username" dest="username"/>
							<mapping source="assignedUser_id" dest="assignedUser_id"/>
							<mapping source="tCase_id" dest="case_id"/>
							<mapping source="convId" dest="convId"/>
							<mapping source="convId_table" dest="convId_table"/>
						</mappings>
						<destination database="${sql.ecourt.db}" schema="ecourt" table="tCaseNote"/>
					</action>
					
						
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Case Note - Tracking">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	

							SELECT
							 'CT' as noteTypeld,
							cn.*, cc.tCase_id, CAST(cn.id as varchar(255)) as memoLd
							FROM cnmistaging.dbo.caseNote_conv cn
							LEFT JOIN cnmiStaging.dbo.case_conv cc
							ON cn.case_id = cc.id
							WHERE srcTbl = 'Tracking'
							
					
				
							

							
								
							]]>
							</param>
						</params>
						<mappings>
			
							<mapping source="accessLevel" dest="accessLevel"/>
							<mapping source="memoLd" dest="memo"/>
							<mapping source="createUserRealName" dest="createUserRealName"/>
							<mapping source="createUsername" dest="createUsername"/>
							<mapping source="dateCreated" dest="dateCreated"/>
							<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
							<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
							<mapping source="lastUpdated" dest="lastUpdated"/>
					<!--		<mapping source="memo" dest="memo"/> -->
							<mapping source="optlock" dest="optlock"/>
							<mapping source="roaAccessLevel" dest="roaAccessLevel"/>
							<mapping source="sourceCaseNumber" dest="sourceCaseNumber"/>
							<mapping source="updateReason" dest="updateReason"/>
					<!--		<mapping source="attachedEntity" dest="attachedEntity"/>
							<mapping source="attachedId" dest="attachedId"/> -->
							<mapping source="color" dest="color"/>
							<mapping source="completed" dest="completed"/>
							<mapping source="content" dest="content"/>
							<mapping source="dueDate" dest="dueDate"/>
							<mapping source="noteDate" dest="noteDate"/>
							<mapping source="sharedToAuthorityNames" dest="sharedToAuthorityNames"/>
							<mapping source="sharedToUsernames" dest="sharedToUsernames"/>
							<mapping source="sharingLevel" dest="sharingLevel"/>
							<mapping source="stripedContent" dest="stripedContent"/>
							<mapping source="title" dest="title"/>
							<mapping source="toDate" dest="toDate"/>
							<mapping source="noteTypeld" dest="type"/>
							<mapping source="username" dest="username"/>
							<mapping source="assignedUser_id" dest="assignedUser_id"/>
							<mapping source="tCase_id" dest="case_id"/>
							<mapping source="convId" dest="convId"/>
							<mapping source="convId_table" dest="convId_table"/>
							<mapping source="cfCorrespondenceType" dest="cfCorrespondenceType"/>
						</mappings>
						<destination database="${sql.ecourt.db}" schema="ecourt" table="tCaseNote"/>
					</action>-
			
					
				</actions>
			</stage> 
			
		<stage num="800" mode="Serial" desc="Load tblAccount" enabled="true">
			<actions>
			
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading tblAccount" enabled="true">
					<source database="${sql.staging.db}" schema="dbo" table="tblAccount_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						
						
						DECLARE @today datetime; SET @today = GETDATE();
						SELECT *
						
						FROM cnmiStaging.dbo.tblAccount_conv ta
					

						]]>							
						</param>
						<param name="idColumnName">tAccount_id</param>
						<param name="whereColumnName">idKey</param>						
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="balance" dest="balance"/>
						<mapping source="masterCodeAccountType" dest="masterCodeAccountType"/>
						<mapping source="name" dest="name"/>
						<mapping source="number" dest="number"/>
						<mapping source="status" dest="status"/>
						<mapping source="type" dest="type"/>
						<!--<mapping source="dirOrgUnit_id" dest="dirOrgUnit_id"/> -->
						<mapping source="convId" dest="convId"/>
						<!--<mapping source="dirPerson_id" dest="dirPerson_id"/>-->
						<!--<mapping source="person_id" dest="person_id"/>-->
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tTblAccount"/>
				</action>
			</actions>	
			
		</stage> 	

		<stage num="802" mode="Serial" desc="Load tblObligation" enabled="true">
			<actions>
			
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading tblObligation" enabled="true">
					<source database="${sql.staging.db}" schema="dbo" table="tblObligation_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						
						
						DECLARE @today datetime; SET @today = GETDATE();
						SELECT tobl.*, cc.tCase_id, taFrom.tAccount_id as fromAccount_id_Ld, taTo.tAccount_id as toAccount_id_Ld,
						tPerson_id as payee_id_ld
						FROM cnmiStaging.dbo.tblObligation_conv tobl
						INNER JOIN cnmiStaging.dbo.case_conv cc
						ON tobl.case_id = cc.id
						LEFT JOIN cnmiStaging.dbo.tblAccount_conv taFrom
						ON tobl.fromAccount_id = taFrom.id
						LEFT JOIN cnmiStaging.dbo.tblAccount_conv taTo
						ON tobl.toAccount_id = taTo.id
						LEFT JOIN person_conv pr
						ON tobl.case_id = pr.case_id and tobl.payee_id = pr.id

						]]>							
						</param>
						<param name="idColumnName">tObligation_id</param>
						<param name="whereColumnName">idKey</param>				
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="accountNumber" dest="accountNumber"/>
						<mapping source="adjustedAmount" dest="adjustedAmount"/>
						<mapping source="amount" dest="amount"/>
						<mapping source="bank" dest="bank"/>
						<mapping source="dateDue" dest="dateDue"/>
						<mapping source="dateReceived" dest="dateReceived"/>
						<mapping source="dateWritten" dest="dateWritten"/>
						<mapping source="fromAccountEntryType" dest="fromAccountEntryType"/>
						<mapping source="isJointAndSeveral" dest="isJointAndSeveral"/>
						<mapping source="notes" dest="notes"/>
						<mapping source="referenceNumber" dest="referenceNumber"/>
						<mapping source="routingNumber" dest="routingNumber"/>
						<mapping source="toAccountEntryType" dest="toAccountEntryType"/>
						<mapping source="type" dest="type"/>
						<mapping source="unallocAmount" dest="unallocAmount"/>
						<mapping source="tCase_id" dest="case_id"/>
					<!--	<mapping source="dirOrgUnity_id" dest="dirOrgUnity_id"/> -->
						<mapping source="fromAccount_id_Ld" dest="fromAccount_id"/>
						<mapping source="payee_id_ld" dest="payee_id"/> 
						<mapping source="toAccount_id_Ld" dest="toAccount_id"/>
						<mapping source="convId" dest="convId"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tTblObligation"/>
				</action>
			</actions>	
			
		</stage> 	
		
		
		<stage num="804" mode="Serial" desc="Load tblPayment" enabled="true">
			<actions>
			
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading tblPayment" enabled="true">
					<source database="${sql.staging.db}" schema="dbo" table="tblPayment_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						
						
						DECLARE @today datetime; SET @today = GETDATE();
						SELECT py.*, tPerson_id 
						
						FROM cnmiStaging.dbo.tblPayment_conv py
						LEFT JOIN 
						(SELECT id, tPerson_id, ROW_NUMBER() OVER(PARTITION BY id ORDER BY tPerson_id) rnk FROM cnmiStaging.dbo.person_conv) t1
						ON py.payer_id = t1.id AND rnk = 1
						]]>							
						</param>
						<param name="idColumnName">tPayment_id</param>
						<param name="whereColumnName">idKey</param>				
					</params>
					<mappings>
						<mapping source="id" dest="id"/>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="amount" dest="amount"/>
						<mapping source="checkCount" dest="checkCount"/>
						<mapping source="dateReceived" dest="dateReceived"/>
						<mapping source="notes" dest="notes"/>
						<mapping source="receiptNumber" dest="receiptNumber"/>
						<mapping source="referenceNumber" dest="referenceNumber"/>
						<mapping source="status" dest="status"/>
						<mapping source="type" dest="type"/>
						<mapping source="tPerson_id" dest="payer_id"/> 
						<mapping source="tPerson_id" dest="person_id"/> 
					<!--	<mapping source="receivedBy_id" dest="receivedBy_id"/> -->
						<mapping source="convId" dest="convId"/>
					<!--	<mapping source="deposit_id" dest="deposit_id"/> -->
					<!--	<mapping source="dirOrgUnit_id" dest="dirOrgUnit_id"/> -->
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tTblPayment"/>
				</action>
			</actions>	
			
		</stage> 	
		
		<stage num="806" mode="Serial" desc="Load tblPaymentSchedule" enabled="true">
			<actions>
			
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading tblPaymentSchedule_conv" enabled="true">
					<source database="${sql.staging.db}" schema="dbo" table="tblPaymentSchedule_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						
						
						DECLARE @today datetime; SET @today = GETDATE();
						SELECT pys.*
						
						FROM cnmiStaging.dbo.tblPaymentSchedule_conv pys

						]]>							
						</param>
						<param name="idColumnName">tPaymentSchedule_id</param>
						<param name="whereColumnName">idKey</param>				
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="amount" dest="amount"/>
						<mapping source="day1" dest="day1"/>
						<mapping source="day2" dest="day2"/>
						<mapping source="dayOfWeek" dest="dayOfWeek"/>
						<mapping source="dayOfWeek2" dest="dayOfWeek2"/>
						<mapping source="description" dest="description"/>
						<mapping source="endDt" dest="endDt"/>
						<mapping source="endType" dest="endType"/>
						<mapping source="nextPaymentAmount" dest="nextPaymentAmount"/>
						<mapping source="nextPaymentDate" dest="nextPaymentDate"/>
						<mapping source="numPayments" dest="numPayments"/>
						<mapping source="origScheduleDesc" dest="origScheduleDesc"/>
						<mapping source="priority" dest="priority"/>
						<mapping source="scheduleType" dest="scheduleType"/>
						<mapping source="startDate" dest="startDate"/>
						<mapping source="subType" dest="subType"/>
					<!--	<mapping source="dirOrgUnit_id" dest="dirOrgUnit_id"/> -->
					<!--	<mapping source="person_id" dest="person_id"/> -->
						<mapping source="convId" dest="convId"/>
						<mapping source="amountDue" dest="amountDue"/>
						<mapping source="expectedFinalPaymentDt" dest="expectedFinalPaymentDt"/>
						<mapping source="expectedFinalPaymentDtAsDate" dest="expectedFinalPaymentDtAsDate"/>
						<mapping source="outstandingBalance" dest="outstandingBalance"/>
						<mapping source="scheduleDescription" dest="scheduleDescription"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tTblPaymentSchedule"/>
				</action>
			</actions>	
			
		</stage> 	
		
		<stage num="808" mode="Serial" desc="Load tblBond" enabled="true">
			<actions>
			
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading tblBond" enabled="true">
					<source database="${sql.staging.db}" schema="dbo" table="tblBond_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						
						
						DECLARE @today datetime; SET @today = GETDATE();
						SELECT b.*, ta.tAccount_id, c.tCase_id
						
						FROM cnmiStaging.dbo.tblBond_conv b
						INNER JOIN cnmiStaging.dbo.case_conv c
						ON b.case_id = c.id
						LEFT JOIN cnmiStaging.dbo.tblAccount_conv ta
						ON b.account_id = ta.id 
						]]>							
						</param>
						<param name="idColumnName">tBond_id</param>
						<param name="whereColumnName">idKey</param>				
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="amount" dest="amount"/>
						<mapping source="amountDue" dest="amountDue"/>
						<mapping source="bondStatus" dest="bondStatus"/>
						<mapping source="bondType" dest="bondType"/>
						<mapping source="notes" dest="notes"/>
						<mapping source="percentage" dest="percentage"/>
						<mapping source="postedDt" dest="postedDt"/>
						<mapping source="setDt" dest="setDt"/>
						<mapping source="tCase_id" dest="case_id"/>
					<!--	<mapping source="dirOrgUnit_id" dest="dirOrgUnit_id"/> -->
					<!--	<mapping source="party_id" dest="party_id"/> -->
					<!--	<mapping source="person_id" dest="person_id"/> -->
						<mapping source="tAccount_id" dest="account_id"/>
						<mapping source="convId" dest="convId"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tTblbond"/>
				</action>
			</actions>	
			
		</stage> 	
		
		<stage num="810" mode="Serial" desc="Load tblVoucher" enabled="true">
			<actions>
			
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading tblVoucher" enabled="true">
					<source database="${sql.staging.db}" schema="dbo" table="tblVoucher_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						
						
						DECLARE @today datetime; SET @today = GETDATE();
						SELECT * 
						FROM cnmiStaging.dbo.tblVoucher_conv v
						LEFT JOIN
						(SELECT id, tPerson_id, ROW_NUMBER() OVER(PARTITION BY id ORDER BY tPerson_id) rnk FROM cnmiStaging.dbo.person_conv) t1
						ON v.person_id = t1.id AND rnk = 1
					
						]]>							
						</param>
						<param name="idColumnName">tVoucher_id</param>
						<param name="whereColumnName">idKey</param>				
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="amount" dest="amount"/>
						<mapping source="dateWritten" dest="dateWritten"/>
						<mapping source="notes" dest="notes"/>
						<mapping source="referenceNumber" dest="referenceNumber"/>
						<mapping source="status" dest="status"/>
						<mapping source="type" dest="type"/>
						<!--<mapping source="dirOrgUnit_id" dest="dirOrgUnit_id"/> -->
						<mapping source="tPerson_id" dest="person_id"/> -->
						<!--<mapping source="writtenBy_id" dest="writtenBy_id"/> -->
						<mapping source="convId" dest="convId"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tTblVoucher"/>
				</action>
			</actions>	
			
		</stage> 	
		
		
		<stage num="812" mode="Serial" desc="Load tblTransfer" enabled="true">
			<actions>
			
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading tblTransfer_conv" enabled="true">
					<source database="${sql.staging.db}" schema="dbo" table="tblTransfer_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						
						
						DECLARE @today datetime; SET @today = GETDATE();
						SELECT tt.*, cc.tCase_id, ta.tAccount_id as toAccount, fa.tAccount_id as fromAccount, obl.tObligation_id,  py.tPayment_id,  ps.tPaymentSchedule_id, ta.tAccount_id as toAccount, fa.tAccount_id as fromAccount,  b.tBond_id
						
						FROM cnmiStaging.dbo.tblTransfer_conv tt 
						LEFT JOIN cnmiStaging.dbo.tblPayment_conv py
						ON tt.payment_id = py.id
						LEFT JOIN cnmiStaging.dbo.tblObligation_conv obl
						ON tt.obligation_id = obl.id
						LEFT JOIN cnmiStaging.dbo.tblPaymentSchedule_conv ps
						ON tt.paymentSchedule_id = ps.id
						LEFT JOIN cnmiStaging.dbo.tblAccount_conv ta
						ON tt.toAccount_id = ta.id 
						LEFT JOIN cnmiStaging.dbo.tblAccount_conv fa
						ON tt.fromAccount_id = fa.id 
						LEFT JOIN cnmiStaging.dbo.case_conv cc
						ON tt.case_id = cc.id 
						LEFT JOIN cnmiStaging.dbo.tblBond_conv b
						ON tt.bond_id = b.id
						WHERE nonCasePayment_id IS NULL
						

						]]>							
						</param>			
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="amount" dest="amount"/>
						<mapping source="codeTypePaymentType" dest="codeTypePaymentType"/>
						<mapping source="fromAccountEntryType" dest="fromAccountEntryType"/>
						<mapping source="masterCodePaymentStatus" dest="masterCodePaymentStatus"/>
						<mapping source="notes" dest="notes"/>
						<mapping source="payerPayment" dest="payerPayment"/>
						<mapping source="psAmtDueOld" dest="psAmtDueOld"/>
						<mapping source="psDueDateNew" dest="psDueDateNew"/>
						<mapping source="psDueDateOld" dest="psDueDateOld"/>
						<mapping source="toAccountEntryType" dest="toAccountEntryType"/>
						<mapping source="type" dest="type"/>
						<mapping source="void" dest="void"/>
						<mapping source="tBond_id" dest="bond_id"/>
						<mapping source="tCase_id" dest="case_id"/> -->
						<mapping source="fromAccount" dest="fromAccount_id"/>
					<!--	<mapping source="nonCasePayment_id" dest="nonCasePayment_id"/> -->
						<mapping source="tObligation_id" dest="obligation_id"/> 
						<mapping source="tPayment_id" dest="payment_id"/> -->
						<mapping source="tPaymentSchedule_id" dest="paymentSchedule_id"/> -->
						<mapping source="toAccount" dest="toAccount_id"/>
						<mapping source="voucher_id" dest="voucher_id"/>
						<mapping source="convId" dest="convId"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tTblTransfer"/>
				</action>
			</actions>	
			
		</stage> 	
		
		<stage num="814" mode="Serial" desc="Load tblBondAmend" enabled="true">
			<actions>
			
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading tblondAmend_conv" enabled="true">
					<source database="${sql.staging.db}" schema="dbo" table="tblTransfer_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						
						
						DECLARE @today datetime; SET @today = GETDATE();
						SELECT ba.*, b.tBond_id, ta.tAccount_id
						
						FROM cnmiStaging.dbo.tblBondAmend_conv ba
						LEFT JOIN cnmiStaging.dbo.tblBond_conv b
						ON ba.bond_id = b.id
						LEFT JOIN cnmiStaging.dbo.tblAccount_conv ta
						ON ba.account_id = ta.id
						
						
						

						]]>							
						</param>			
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="amendDt" dest="amendDt"/>
						<mapping source="amount" dest="amount"/>
						<mapping source="amountDue" dest="amountDue"/>
						<mapping source="bondStatus" dest="bondStatus"/>
						<mapping source="bondType" dest="bondType"/>
						<mapping source="notes" dest="notes"/>
						<mapping source="percentage" dest="percentage"/>
						<mapping source="postedDt" dest="postedDt"/>
						<mapping source="setDt" dest="setDt"/>
						<mapping source="tAccount_id" dest="account_id"/>
						<mapping source="tBond_id" dest="bond_id"/>
					<!--	<mapping source="dirOrgUnit_id" dest="dirOrgUnit_id"/> -->
					<!--	<mapping source="party_id" dest="party_id"/> -->
					<!--	<mapping source="person_id" dest="person_id"/> -->
						<mapping source="convId" dest="convId"/>
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tTblBondAmend"/>
				</action>
			</actions>	
			
		</stage> 	
		
				
		<stage num="816" mode="Serial" desc="Transform StagingInvoices" enabled="true">
			<actions>
				
				<action handler="SqlServer.Raw" desc="Creating StagingInvoices" progresslabel="Creating  StagingInvoices" enabled="true">
						<source database="${sql.staging.db}" schema="dbo">
							<task handler="SqlServer.Script" desc="Create StagingInvoices">
							IF OBJECT_ID('StagingInvoices', 'U') IS NOT NULL 
							DROP TABLE [dbo].[StagingInvoices];

				
							</task>
							
							<task handler="SqlServer.Script" desc="Create StagingInvoices table">
							<![CDATA[

							CREATE TABLE [dbo].[StagingInvoices](
								[id] numeric(19, 0) IDENTITY(1,1) NOT NULL,	
								[tInvoice_id] numeric(19, 0) NULL,			
								[tParty_id] numeric(19, 0) NULL,				
								[tAssessmentGroup_id] numeric(19, 0) NULL,	
								[assessmentMap] varchar(255) NULL,														
								[rescindCode] varchar(255) NULL,				
								[description] varchar(255) NULL,				
								[createdDate] datetime NULL,					
								[dueDate] datetime NULL,						
								[error] varchar(max) NULL						
							);
							
						
						
							]]>
							
							</task>
							
						</source>
					</action>
				
					
					<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Transform Staging Invoices">
						<source database="${sql.migrated.db}" schema="dbo"/>
						<params>
							<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
							<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
							<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
							<param name="select">
							<![CDATA[	
						
							SELECT assessmentMap = CONCAT(assessment_id,':',amount), pty.tParty_id, si.* FROM ecourt.tStagingInvoices si
							LEFT JOIN cnmiStaging.dbo.party_conv pty
							ON si.party_id = pty.id
							
							]]>
							</param>
						</params>
						<mappings>
							<mapping source="assessmentMap" dest="assessmentMap"/>
							<mapping source="tParty_id" dest="tParty_id"/>
							<mapping source="assessmentGroup_id" dest="tAssessmentGroup_id"/>
							<mapping source="dateCreated" dest="createdDate"/>
							<mapping source="description" dest="description"/>
				
						</mappings>
						<destination database="${sql.staging.db}" schema="dbo" table="StagingInvoices"/>
					</action>
			
			
				</actions>
			</stage> 
		
			
		<stage num="850" mode="Serial" desc="Load StagingInvoices" enabled="false">
			<actions>
			
							
			
			
			
				<action handler="SqlServer.BulkCopyToSqlServer_DRC" progresslabel="Loading StagingInvoices" enabled="true">
					<source database="${sql.staging.db}" schema="dbo" table="tblTransfer_conv"/>
					<params>
						<param desc="report progress after this many records (0 is no reporting)" name="notifybatch">0</param>
						<param desc="bc stream batch size (0 is all at once)" name="batch">${batch}</param>
						<param desc="bc stream batch size (0 is alll at once)" name="stream" >${stream}</param>
						<param name="select">
						<![CDATA[	
						
						
						DECLARE @today datetime; SET @today = GETDATE();
						SELECT si.*, pty.tParty_id, assessmentMapLd = CONCAT(assessment_id,':',amount)
						FROM CNMI_eCourt_full.ecourt.tStagingInvoices si
						LEFT JOIN cnmiStaging.dbo.party_conv pty
						ON si.party_id = pty.id
						
						
						
						

						]]>							
						</param>			
					</params>
					<mappings>
						<mapping source="accessLevel" dest="accessLevel"/>
						<mapping source="createUserRealName" dest="createUserRealName"/>
						<mapping source="createUsername" dest="createUsername"/>
						<mapping source="dateCreated" dest="dateCreated"/>
						<mapping source="lastUpdateUserRealName" dest="lastUpdateUserRealName"/>
						<mapping source="lastUpdateUsername" dest="lastUpdateUsername"/>
						<mapping source="lastUpdated" dest="lastUpdated"/>
						<mapping source="memo" dest="memo"/>
						<mapping source="assessmentMapLd" dest="assessmentMap"/>
						<mapping source="convId" dest="convId"/>
						<mapping source="description" dest="description"/>
						<mapping source="dueDate" dest="dueDate"/>
						<mapping source="error" dest="error"/>
						<mapping source="rescindCode" dest="rescindCode"/>
						<mapping source="assessmentGroup_id" dest="assessmentGroup_id"/>
						<mapping source="invoice_id" dest="invoice_id"/>
						<mapping source="tParty_id" dest="party_id"/>
						<mapping source="amount" dest="amount"/>
						<mapping source="assessment_id" dest="assessment_id"/>
						<mapping source="obligationType" dest="obligationType"/>
					
					</mappings>
					<destination database="${sql.ecourt.db}" schema="ecourt" table="tStagingInvoices"/>
				</action>
			</actions>	
			
		</stage> 	
		
		
		
	<!-- Financial Processing -->
	
	
		
		<stage num="9999" desc="Set Versioning - Part I" mode="Serial" enabled = "true">
			<actions>
			
				

				<action handler="Ecourt.CreateVersionRecords" desc="populate version tables" verbose="true" progresslabel="create version records">
					<source database="${sql.ecourt.db}"/>
						<params>
						<param name="revquery">SELECT MIN(id) FROM ecourt.tAuditLog</param>
						<!-- <resource desc="REV (tAuditLog.id) value for version records" name="rev"></resource> -->
						<param name="revtype" desc="REVTYPE values for version records (0,1,2)">0</param>
						<param name="mode" desc="(optional, parallel is default) processing mode"></param>
						<param name="workers" desc="(optional, 8 is default) number of parallel threads to use (1-10)">10</param>
						<param name="tables" desc="comma separated list of tables">tCaseOtherNumber,tTracking,tSubCase,tBail,tCaseSeal,tCaseStatus,tCaseTrack,tScheduledEvent,tScheduledEvent_assignments,tIdentification,tScheduledEvent_parties,tCe_ChargeIntoxicant,tCe_NonCollectibleFinancial,tCe_PersonEvent,tCe_PersonTracking,tPerson,tExhibit,tCharge,tExhibitTracking,tAddress,tChargeCharacteristic,tJudgment,tJudgmentAward,tPersonAKA,tChargeRelated,tTelephone,tCase,tSentence,tSentenceCondition,tPersonIdentifier,tCheckListItem,tSpecialStatus,tArrest,tCaseAssignment,tCaseContact,tPersonNote,tVehicle,tCaseCrossReference,tCaseDisposition,tCaseJoinder,tPersonProfile,tCaseJoinedItem,tPersonSpecialStatus,tParty,tCaseNote</param>
						<param name="prefix" desc="(optional, V_ is default) version table prefix">V_</param>
						<param name="findstartid" desc="(optional, false is default) indicates to find the starting id in the version table (because we only want to add records that aren't already there)">true</param>
						<param name="handler" desc="(optional, defaults to SqlServer.BulkCopyToSqlServer) indicates the bulkcopy action handler to use">SqlServer.BulkCopyToSqlServer_DRC</param>
						</params>
					<destination database="${sql.ecourt.db}"/>
				</action>
				
				<action handler="SqlServer.Raw" desc="Get final ecourt row counts for all tables" progresslabel="final table counts" enabled="false">
					<source database="${sql.ecourt.db}">
						<task handler="SqlServer.TableCounts"><args savePath="${log.folder}\endingCounts.xml"/></task>
					</source>
				</action>
				
				<action handler="SqlServer.Raw" desc="Create final counts report" progresslabel="compare counts" enabled="false"> 
					<source database="${sql.ecourt.db}">
						<task handler="SqlServer.TableCountComparison">
							<args 
								reportPath1="${log.folder}\startingCounts.xml" 
								reportPath2="${log.folder}\endingCounts.xml" 
								savePath="${log.folder}\save\load summary{0:M-d-yyyy_hhmmss}.xml"/><!-- special save location and date formatted filename prevent overwrite/loss -->
						</task>
					</source>
				</action>

				
			
				
				
			</actions>	
		</stage>

	</stages>
  <post>
		<actions> 
		

		
			<action handler="DCU.WriteLogFile" desc="write log" progresslabel="write log file">
				<params>
					<param name="logfolder">${log.folder}</param>
				</params>
			</action>
			
			
			<action handler="Comm.Slack" progresslabel="Send a Slack message" enabled="false">
				<params>
					<param name="url">${slack.url}</param>
					<param name="from">DCU</param>
					<param name="message">$[conv.result]: [$[conv.filename]] script finished running.\r\nStart: $[conv.start:MM-dd-yyyy hh:mm:ss tt]\r\nEnd: $[conv.end:MM-dd-yyyy hh:mm:ss tt]\r\nElapsed time: $[conv.duration]</param>
				</params>
			</action>
			
				
			<action handler="DCU.TaskHost" desc="Restart SQL" progresslabel="Restart SQL" enabled="false">
					<source>
						<task handler="DCU.RestartService">
							<args service="${sql.service.name}" timeout="600"></args>
						</task>
					</source>
			</action>
			
		
			
		</actions>		
	</post>
</conversion>			

			